;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 11/19/2018 7:35:07 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x1B3F940C  	JMP        _main
0x0004	0x0000940C  	JMP        0
0x0008	0x0000940C  	JMP        0
0x000C	0x0000940C  	JMP        0
0x0010	0x0000940C  	JMP        0
0x0014	0x0000940C  	JMP        0
0x0018	0x0000940C  	JMP        0
0x001C	0x0000940C  	JMP        0
0x0020	0x0000940C  	JMP        0
0x0024	0x0000940C  	JMP        0
0x0028	0x0000940C  	JMP        0
0x002C	0x0000940C  	JMP        0
0x0030	0x0000940C  	JMP        0
0x0034	0x0000940C  	JMP        0
0x0038	0x0000940C  	JMP        0
0x003C	0x0000940C  	JMP        0
0x0040	0x0000940C  	JMP        0
0x0044	0x0000940C  	JMP        0
0x0048	0x0000940C  	JMP        0
0x004C	0x0000940C  	JMP        0
0x0050	0x0000940C  	JMP        0
_main:
0x367E	0xE5BF    	LDI        R27, 95
0x3680	0xBFBD    	OUT        SPL+0, R27
0x3682	0xE0B8    	LDI        R27, 8
0x3684	0xBFBE    	OUT        SPL+1, R27
0x3686	0x1C93940E  	CALL       7315
;Click_FM_AVR.c,492 :: 		void main( )
;Click_FM_AVR.c,494 :: 		systemInit( );
0x368A	0xDF27    	RCALL      _systemInit+0
;Click_FM_AVR.c,495 :: 		applicationInit( );
0x368C	0xDFC0    	RCALL      _applicationInit+0
;Click_FM_AVR.c,497 :: 		while (1)
L_main67:
;Click_FM_AVR.c,499 :: 		applicationTask( );
0x368E	0xDF65    	RCALL      _applicationTask+0
;Click_FM_AVR.c,500 :: 		}
0x3690	0xCFFE    	RJMP       L_main67
;Click_FM_AVR.c,501 :: 		}
L_end_main:
L__main_end_loop:
0x3692	0xCFFF    	RJMP       L__main_end_loop
; end of _main
_systemInit:
;Click_FM_AVR.c,369 :: 		void systemInit( )
;Click_FM_AVR.c,371 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_AN_PIN,  _GPIO_INPUT );
0x34DA	0x922F    	PUSH       R2
0x34DC	0x923F    	PUSH       R3
0x34DE	0x924F    	PUSH       R4
0x34E0	0x925F    	PUSH       R5
0x34E2	0x926F    	PUSH       R6
0x34E4	0x2444    	CLR        R4
0x34E6	0x2433    	CLR        R3
0x34E8	0x2422    	CLR        R2
0x34EA	0xDD15    	RCALL      _mikrobus_gpioInit+0
;Click_FM_AVR.c,372 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_RST_PIN, _GPIO_OUTPUT );
0x34EC	0xE0B1    	LDI        R27, 1
0x34EE	0x2E4B    	MOV        R4, R27
0x34F0	0xE0B1    	LDI        R27, 1
0x34F2	0x2E3B    	MOV        R3, R27
0x34F4	0x2422    	CLR        R2
0x34F6	0xDD0F    	RCALL      _mikrobus_gpioInit+0
;Click_FM_AVR.c,373 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_CS_PIN,  _GPIO_OUTPUT );
0x34F8	0xE0B1    	LDI        R27, 1
0x34FA	0x2E4B    	MOV        R4, R27
0x34FC	0xE0B2    	LDI        R27, 2
0x34FE	0x2E3B    	MOV        R3, R27
0x3500	0x2422    	CLR        R2
0x3502	0xDD09    	RCALL      _mikrobus_gpioInit+0
;Click_FM_AVR.c,374 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_INT_PIN, _GPIO_INPUT );
0x3504	0x2444    	CLR        R4
0x3506	0xE0B7    	LDI        R27, 7
0x3508	0x2E3B    	MOV        R3, R27
0x350A	0x2422    	CLR        R2
0x350C	0xDD04    	RCALL      _mikrobus_gpioInit+0
;Click_FM_AVR.c,376 :: 		mikrobus_i2cInit( _MIKROBUS1, &_FM_I2C_CFG[0] );
0x350E	0xE202    	LDI        R16, lo_addr(__FM_I2C_CFG+0)
0x3510	0xE319    	LDI        R17, hi_addr(__FM_I2C_CFG+0)
0x3512	0x2E30    	MOV        R3, R16
0x3514	0x2E41    	MOV        R4, R17
0x3516	0x2422    	CLR        R2
0x3518	0xDC5F    	RCALL      _mikrobus_i2cInit+0
;Click_FM_AVR.c,378 :: 		mikrobus_logInit( _LOG_USBUART, 9600 );
0x351A	0xE8B0    	LDI        R27, 128
0x351C	0x2E3B    	MOV        R3, R27
0x351E	0xE2B5    	LDI        R27, 37
0x3520	0x2E4B    	MOV        R4, R27
0x3522	0xE0B0    	LDI        R27, 0
0x3524	0x2E5B    	MOV        R5, R27
0x3526	0x2E6B    	MOV        R6, R27
0x3528	0xE1B0    	LDI        R27, 16
0x352A	0x2E2B    	MOV        R2, R27
0x352C	0xDD5A    	RCALL      _mikrobus_logInit+0
;Click_FM_AVR.c,380 :: 		Delay_ms(100);
0x352E	0xE025    	LDI        R18, 5
0x3530	0xE01F    	LDI        R17, 15
0x3532	0xEF02    	LDI        R16, 242
L_systemInit48:
0x3534	0x950A    	DEC        R16
0x3536	0xF7F1    	BRNE       L_systemInit48
0x3538	0x951A    	DEC        R17
0x353A	0xF7E1    	BRNE       L_systemInit48
0x353C	0x952A    	DEC        R18
0x353E	0xF7D1    	BRNE       L_systemInit48
;Click_FM_AVR.c,382 :: 		mikrobus_logWrite( "system init done", _LOG_LINE );
0x3540	0xE0B2    	LDI        R27, 2
0x3542	0x2E4B    	MOV        R4, R27
0x3544	0xEDBA    	LDI        R27, lo_addr(?lstr50_Click_FM_AVR+0)
0x3546	0x2E2B    	MOV        R2, R27
0x3548	0xE0B0    	LDI        R27, hi_addr(?lstr50_Click_FM_AVR+0)
0x354A	0x2E3B    	MOV        R3, R27
0x354C	0xDF56    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,383 :: 		}
L_end_systemInit:
0x354E	0x906F    	POP        R6
0x3550	0x905F    	POP        R5
0x3552	0x904F    	POP        R4
0x3554	0x903F    	POP        R3
0x3556	0x902F    	POP        R2
0x3558	0x9508    	RET
; end of _systemInit
_mikrobus_gpioInit:
;easyavr_v7_ATMEGA32.c,162 :: 		T_mikrobus_ret mikrobus_gpioInit(T_mikrobus_soc bus, T_mikrobus_pin pin, T_gpio_dir direction)
;easyavr_v7_ATMEGA32.c,164 :: 		switch( bus )
0x2F16	0x922F    	PUSH       R2
0x2F18	0x923F    	PUSH       R3
0x2F1A	0xC011    	RJMP       L_mikrobus_gpioInit82
;easyavr_v7_ATMEGA32.c,167 :: 		case _MIKROBUS1 : return _gpioInit_1(pin, direction);
L_mikrobus_gpioInit84:
0x2F1C	0x2C23    	MOV        R2, R3
0x2F1E	0x2C34    	MOV        R3, R4
0x2F20	0x0BCE940E  	CALL       easyavr_v7_ATMEGA32__gpioInit_1+0
0x2F24	0xC016    	RJMP       L_end_mikrobus_gpioInit
;easyavr_v7_ATMEGA32.c,170 :: 		case _MIKROBUS2 : return _gpioInit_2(pin, direction);
L_mikrobus_gpioInit85:
0x2F26	0x2C23    	MOV        R2, R3
0x2F28	0x2C34    	MOV        R3, R4
0x2F2A	0x0A6A940E  	CALL       easyavr_v7_ATMEGA32__gpioInit_2+0
0x2F2E	0xC011    	RJMP       L_end_mikrobus_gpioInit
;easyavr_v7_ATMEGA32.c,173 :: 		case _MIKROBUS3 : return _gpioInit_3(pin, direction);
L_mikrobus_gpioInit86:
0x2F30	0x2C23    	MOV        R2, R3
0x2F32	0x2C34    	MOV        R3, R4
0x2F34	0x06A4940E  	CALL       easyavr_v7_ATMEGA32__gpioInit_3+0
0x2F38	0xC00C    	RJMP       L_end_mikrobus_gpioInit
;easyavr_v7_ATMEGA32.c,184 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_gpioInit87:
0x2F3A	0xE001    	LDI        R16, 1
0x2F3C	0xC00A    	RJMP       L_end_mikrobus_gpioInit
;easyavr_v7_ATMEGA32.c,185 :: 		}
L_mikrobus_gpioInit82:
0x2F3E	0xE0B0    	LDI        R27, 0
0x2F40	0x162B    	CP         R2, R27
0x2F42	0xF361    	BREQ       L_mikrobus_gpioInit84
L__mikrobus_gpioInit275:
0x2F44	0xE0B1    	LDI        R27, 1
0x2F46	0x162B    	CP         R2, R27
0x2F48	0xF371    	BREQ       L_mikrobus_gpioInit85
L__mikrobus_gpioInit276:
0x2F4A	0xE0B2    	LDI        R27, 2
0x2F4C	0x162B    	CP         R2, R27
0x2F4E	0xF381    	BREQ       L_mikrobus_gpioInit86
L__mikrobus_gpioInit277:
0x2F50	0xCFF4    	RJMP       L_mikrobus_gpioInit87
;easyavr_v7_ATMEGA32.c,187 :: 		}
L_end_mikrobus_gpioInit:
0x2F52	0x903F    	POP        R3
0x2F54	0x902F    	POP        R2
0x2F56	0x9508    	RET
; end of _mikrobus_gpioInit
easyavr_v7_ATMEGA32__gpioInit_1:
;__ea_atmega32_gpio.c,106 :: 		static T_mikrobus_ret _gpioInit_1(T_mikrobus_pin pin, T_gpio_dir dir)
;__ea_atmega32_gpio.c,108 :: 		switch( pin )
0x179C	0xC03E    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_10
;__ea_atmega32_gpio.c,110 :: 		case _MIKROBUS_AN_PIN    : DDA7_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_12:
0x179E	0xFA30    	BST        R3, 0
0x17A0	0xB3BA    	IN         R27, DDA7_bit+0
0x17A2	0xF9B7    	BLD        R27, 7
0x17A4	0xBBBA    	OUT        DDA7_bit+0, R27
0x17A6	0xC060    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_11
;__ea_atmega32_gpio.c,111 :: 		case _MIKROBUS_RST_PIN   : DDA6_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_13:
0x17A8	0xFA30    	BST        R3, 0
0x17AA	0xB3BA    	IN         R27, DDA6_bit+0
0x17AC	0xF9B6    	BLD        R27, 6
0x17AE	0xBBBA    	OUT        DDA6_bit+0, R27
0x17B0	0xC05B    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_11
;__ea_atmega32_gpio.c,112 :: 		case _MIKROBUS_CS_PIN    : DDA5_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_14:
0x17B2	0xFA30    	BST        R3, 0
0x17B4	0xB3BA    	IN         R27, DDA5_bit+0
0x17B6	0xF9B5    	BLD        R27, 5
0x17B8	0xBBBA    	OUT        DDA5_bit+0, R27
0x17BA	0xC056    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_11
;__ea_atmega32_gpio.c,113 :: 		case _MIKROBUS_SCK_PIN   : DDB7_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_15:
0x17BC	0xFA30    	BST        R3, 0
0x17BE	0xB3B7    	IN         R27, DDB7_bit+0
0x17C0	0xF9B7    	BLD        R27, 7
0x17C2	0xBBB7    	OUT        DDB7_bit+0, R27
0x17C4	0xC051    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_11
;__ea_atmega32_gpio.c,114 :: 		case _MIKROBUS_MISO_PIN  : DDB6_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_16:
0x17C6	0xFA30    	BST        R3, 0
0x17C8	0xB3B7    	IN         R27, DDB6_bit+0
0x17CA	0xF9B6    	BLD        R27, 6
0x17CC	0xBBB7    	OUT        DDB6_bit+0, R27
0x17CE	0xC04C    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_11
;__ea_atmega32_gpio.c,115 :: 		case _MIKROBUS_MOSI_PIN  : DDB5_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_17:
0x17D0	0xFA30    	BST        R3, 0
0x17D2	0xB3B7    	IN         R27, DDB5_bit+0
0x17D4	0xF9B5    	BLD        R27, 5
0x17D6	0xBBB7    	OUT        DDB5_bit+0, R27
0x17D8	0xC047    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_11
;__ea_atmega32_gpio.c,116 :: 		case _MIKROBUS_PWM_PIN   : DDD4_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_18:
0x17DA	0xFA30    	BST        R3, 0
0x17DC	0xB3B1    	IN         R27, DDD4_bit+0
0x17DE	0xF9B4    	BLD        R27, 4
0x17E0	0xBBB1    	OUT        DDD4_bit+0, R27
0x17E2	0xC042    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_11
;__ea_atmega32_gpio.c,117 :: 		case _MIKROBUS_INT_PIN   : DDD2_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_19:
0x17E4	0xFA30    	BST        R3, 0
0x17E6	0xB3B1    	IN         R27, DDD2_bit+0
0x17E8	0xF9B2    	BLD        R27, 2
0x17EA	0xBBB1    	OUT        DDD2_bit+0, R27
0x17EC	0xC03D    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_11
;__ea_atmega32_gpio.c,118 :: 		case _MIKROBUS_RX_PIN    : DDD0_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_110:
0x17EE	0xFA30    	BST        R3, 0
0x17F0	0xB3B1    	IN         R27, DDD0_bit+0
0x17F2	0xF9B0    	BLD        R27, 0
0x17F4	0xBBB1    	OUT        DDD0_bit+0, R27
0x17F6	0xC038    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_11
;__ea_atmega32_gpio.c,119 :: 		case _MIKROBUS_TX_PIN    : DDD1_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_111:
0x17F8	0xFA30    	BST        R3, 0
0x17FA	0xB3B1    	IN         R27, DDD1_bit+0
0x17FC	0xF9B1    	BLD        R27, 1
0x17FE	0xBBB1    	OUT        DDD1_bit+0, R27
0x1800	0xC033    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_11
;__ea_atmega32_gpio.c,120 :: 		case _MIKROBUS_SCL_PIN   : DDC0_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_112:
0x1802	0xFA30    	BST        R3, 0
0x1804	0xB3B4    	IN         R27, DDC0_bit+0
0x1806	0xF9B0    	BLD        R27, 0
0x1808	0xBBB4    	OUT        DDC0_bit+0, R27
0x180A	0xC02E    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_11
;__ea_atmega32_gpio.c,121 :: 		case _MIKROBUS_SDA_PIN   : DDC1_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_113:
0x180C	0xFA30    	BST        R3, 0
0x180E	0xB3B4    	IN         R27, DDC1_bit+0
0x1810	0xF9B1    	BLD        R27, 1
0x1812	0xBBB4    	OUT        DDC1_bit+0, R27
0x1814	0xC029    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_11
;__ea_atmega32_gpio.c,122 :: 		default                  : return _MIKROBUS_ERR_PIN;
L_easyavr_v7_ATMEGA32__gpioInit_114:
0x1816	0xE001    	LDI        R16, 1
0x1818	0xC028    	RJMP       L_end__gpioInit_1
;__ea_atmega32_gpio.c,123 :: 		}
L_easyavr_v7_ATMEGA32__gpioInit_10:
0x181A	0xE0B0    	LDI        R27, 0
0x181C	0x162B    	CP         R2, R27
0x181E	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__gpioInit_1184
0x1820	0xCFBE    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_12
L_easyavr_v7_ATMEGA32__gpioInit_1184:
0x1822	0xE0B1    	LDI        R27, 1
0x1824	0x162B    	CP         R2, R27
0x1826	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__gpioInit_1185
0x1828	0xCFBF    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_13
L_easyavr_v7_ATMEGA32__gpioInit_1185:
0x182A	0xE0B2    	LDI        R27, 2
0x182C	0x162B    	CP         R2, R27
0x182E	0xF209    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_14
L_easyavr_v7_ATMEGA32__gpioInit_1186:
0x1830	0xE0B3    	LDI        R27, 3
0x1832	0x162B    	CP         R2, R27
0x1834	0xF219    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_15
L_easyavr_v7_ATMEGA32__gpioInit_1187:
0x1836	0xE0B4    	LDI        R27, 4
0x1838	0x162B    	CP         R2, R27
0x183A	0xF229    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_16
L_easyavr_v7_ATMEGA32__gpioInit_1188:
0x183C	0xE0B5    	LDI        R27, 5
0x183E	0x162B    	CP         R2, R27
0x1840	0xF239    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_17
L_easyavr_v7_ATMEGA32__gpioInit_1189:
0x1842	0xE0B6    	LDI        R27, 6
0x1844	0x162B    	CP         R2, R27
0x1846	0xF249    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_18
L_easyavr_v7_ATMEGA32__gpioInit_1190:
0x1848	0xE0B7    	LDI        R27, 7
0x184A	0x162B    	CP         R2, R27
0x184C	0xF259    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_19
L_easyavr_v7_ATMEGA32__gpioInit_1191:
0x184E	0xE0B8    	LDI        R27, 8
0x1850	0x162B    	CP         R2, R27
0x1852	0xF269    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_110
L_easyavr_v7_ATMEGA32__gpioInit_1192:
0x1854	0xE0B9    	LDI        R27, 9
0x1856	0x162B    	CP         R2, R27
0x1858	0xF279    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_111
L_easyavr_v7_ATMEGA32__gpioInit_1193:
0x185A	0xE0BA    	LDI        R27, 10
0x185C	0x162B    	CP         R2, R27
0x185E	0xF289    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_112
L_easyavr_v7_ATMEGA32__gpioInit_1194:
0x1860	0xE0BB    	LDI        R27, 11
0x1862	0x162B    	CP         R2, R27
0x1864	0xF299    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_113
L_easyavr_v7_ATMEGA32__gpioInit_1195:
0x1866	0xCFD7    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_114
L_easyavr_v7_ATMEGA32__gpioInit_11:
;__ea_atmega32_gpio.c,124 :: 		return _MIKROBUS_OK;
0x1868	0xE000    	LDI        R16, 0
;__ea_atmega32_gpio.c,125 :: 		}
L_end__gpioInit_1:
0x186A	0x9508    	RET
; end of easyavr_v7_ATMEGA32__gpioInit_1
easyavr_v7_ATMEGA32__gpioInit_2:
;__ea_atmega32_gpio.c,127 :: 		static T_mikrobus_ret _gpioInit_2(T_mikrobus_pin pin, T_gpio_dir dir)
;__ea_atmega32_gpio.c,129 :: 		switch( pin )
0x14D4	0xC03E    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_215
;__ea_atmega32_gpio.c,131 :: 		case _MIKROBUS_AN_PIN    : DDA0_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_217:
0x14D6	0xFA30    	BST        R3, 0
0x14D8	0xB3BA    	IN         R27, DDA0_bit+0
0x14DA	0xF9B0    	BLD        R27, 0
0x14DC	0xBBBA    	OUT        DDA0_bit+0, R27
0x14DE	0xC060    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_216
;__ea_atmega32_gpio.c,132 :: 		case _MIKROBUS_RST_PIN   : DDA1_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_218:
0x14E0	0xFA30    	BST        R3, 0
0x14E2	0xB3BA    	IN         R27, DDA1_bit+0
0x14E4	0xF9B1    	BLD        R27, 1
0x14E6	0xBBBA    	OUT        DDA1_bit+0, R27
0x14E8	0xC05B    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_216
;__ea_atmega32_gpio.c,133 :: 		case _MIKROBUS_CS_PIN    : DDA3_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_219:
0x14EA	0xFA30    	BST        R3, 0
0x14EC	0xB3BA    	IN         R27, DDA3_bit+0
0x14EE	0xF9B3    	BLD        R27, 3
0x14F0	0xBBBA    	OUT        DDA3_bit+0, R27
0x14F2	0xC056    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_216
;__ea_atmega32_gpio.c,134 :: 		case _MIKROBUS_SCK_PIN   : DDB7_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_220:
0x14F4	0xFA30    	BST        R3, 0
0x14F6	0xB3B7    	IN         R27, DDB7_bit+0
0x14F8	0xF9B7    	BLD        R27, 7
0x14FA	0xBBB7    	OUT        DDB7_bit+0, R27
0x14FC	0xC051    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_216
;__ea_atmega32_gpio.c,135 :: 		case _MIKROBUS_MISO_PIN  : DDB6_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_221:
0x14FE	0xFA30    	BST        R3, 0
0x1500	0xB3B7    	IN         R27, DDB6_bit+0
0x1502	0xF9B6    	BLD        R27, 6
0x1504	0xBBB7    	OUT        DDB6_bit+0, R27
0x1506	0xC04C    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_216
;__ea_atmega32_gpio.c,136 :: 		case _MIKROBUS_MOSI_PIN  : DDB5_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_222:
0x1508	0xFA30    	BST        R3, 0
0x150A	0xB3B7    	IN         R27, DDB5_bit+0
0x150C	0xF9B5    	BLD        R27, 5
0x150E	0xBBB7    	OUT        DDB5_bit+0, R27
0x1510	0xC047    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_216
;__ea_atmega32_gpio.c,137 :: 		case _MIKROBUS_PWM_PIN   : DDD5_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_223:
0x1512	0xFA30    	BST        R3, 0
0x1514	0xB3B1    	IN         R27, DDD5_bit+0
0x1516	0xF9B5    	BLD        R27, 5
0x1518	0xBBB1    	OUT        DDD5_bit+0, R27
0x151A	0xC042    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_216
;__ea_atmega32_gpio.c,138 :: 		case _MIKROBUS_INT_PIN   : DDD3_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_224:
0x151C	0xFA30    	BST        R3, 0
0x151E	0xB3B1    	IN         R27, DDD3_bit+0
0x1520	0xF9B3    	BLD        R27, 3
0x1522	0xBBB1    	OUT        DDD3_bit+0, R27
0x1524	0xC03D    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_216
;__ea_atmega32_gpio.c,139 :: 		case _MIKROBUS_RX_PIN    : DDD0_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_225:
0x1526	0xFA30    	BST        R3, 0
0x1528	0xB3B1    	IN         R27, DDD0_bit+0
0x152A	0xF9B0    	BLD        R27, 0
0x152C	0xBBB1    	OUT        DDD0_bit+0, R27
0x152E	0xC038    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_216
;__ea_atmega32_gpio.c,140 :: 		case _MIKROBUS_TX_PIN    : DDD1_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_226:
0x1530	0xFA30    	BST        R3, 0
0x1532	0xB3B1    	IN         R27, DDD1_bit+0
0x1534	0xF9B1    	BLD        R27, 1
0x1536	0xBBB1    	OUT        DDD1_bit+0, R27
0x1538	0xC033    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_216
;__ea_atmega32_gpio.c,141 :: 		case _MIKROBUS_SCL_PIN   : DDC0_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_227:
0x153A	0xFA30    	BST        R3, 0
0x153C	0xB3B4    	IN         R27, DDC0_bit+0
0x153E	0xF9B0    	BLD        R27, 0
0x1540	0xBBB4    	OUT        DDC0_bit+0, R27
0x1542	0xC02E    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_216
;__ea_atmega32_gpio.c,142 :: 		case _MIKROBUS_SDA_PIN   : DDC1_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_228:
0x1544	0xFA30    	BST        R3, 0
0x1546	0xB3B4    	IN         R27, DDC1_bit+0
0x1548	0xF9B1    	BLD        R27, 1
0x154A	0xBBB4    	OUT        DDC1_bit+0, R27
0x154C	0xC029    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_216
;__ea_atmega32_gpio.c,143 :: 		default                  : return _MIKROBUS_ERR_PIN;
L_easyavr_v7_ATMEGA32__gpioInit_229:
0x154E	0xE001    	LDI        R16, 1
0x1550	0xC028    	RJMP       L_end__gpioInit_2
;__ea_atmega32_gpio.c,144 :: 		}
L_easyavr_v7_ATMEGA32__gpioInit_215:
0x1552	0xE0B0    	LDI        R27, 0
0x1554	0x162B    	CP         R2, R27
0x1556	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__gpioInit_2197
0x1558	0xCFBE    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_217
L_easyavr_v7_ATMEGA32__gpioInit_2197:
0x155A	0xE0B1    	LDI        R27, 1
0x155C	0x162B    	CP         R2, R27
0x155E	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__gpioInit_2198
0x1560	0xCFBF    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_218
L_easyavr_v7_ATMEGA32__gpioInit_2198:
0x1562	0xE0B2    	LDI        R27, 2
0x1564	0x162B    	CP         R2, R27
0x1566	0xF209    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_219
L_easyavr_v7_ATMEGA32__gpioInit_2199:
0x1568	0xE0B3    	LDI        R27, 3
0x156A	0x162B    	CP         R2, R27
0x156C	0xF219    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_220
L_easyavr_v7_ATMEGA32__gpioInit_2200:
0x156E	0xE0B4    	LDI        R27, 4
0x1570	0x162B    	CP         R2, R27
0x1572	0xF229    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_221
L_easyavr_v7_ATMEGA32__gpioInit_2201:
0x1574	0xE0B5    	LDI        R27, 5
0x1576	0x162B    	CP         R2, R27
0x1578	0xF239    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_222
L_easyavr_v7_ATMEGA32__gpioInit_2202:
0x157A	0xE0B6    	LDI        R27, 6
0x157C	0x162B    	CP         R2, R27
0x157E	0xF249    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_223
L_easyavr_v7_ATMEGA32__gpioInit_2203:
0x1580	0xE0B7    	LDI        R27, 7
0x1582	0x162B    	CP         R2, R27
0x1584	0xF259    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_224
L_easyavr_v7_ATMEGA32__gpioInit_2204:
0x1586	0xE0B8    	LDI        R27, 8
0x1588	0x162B    	CP         R2, R27
0x158A	0xF269    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_225
L_easyavr_v7_ATMEGA32__gpioInit_2205:
0x158C	0xE0B9    	LDI        R27, 9
0x158E	0x162B    	CP         R2, R27
0x1590	0xF279    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_226
L_easyavr_v7_ATMEGA32__gpioInit_2206:
0x1592	0xE0BA    	LDI        R27, 10
0x1594	0x162B    	CP         R2, R27
0x1596	0xF289    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_227
L_easyavr_v7_ATMEGA32__gpioInit_2207:
0x1598	0xE0BB    	LDI        R27, 11
0x159A	0x162B    	CP         R2, R27
0x159C	0xF299    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_228
L_easyavr_v7_ATMEGA32__gpioInit_2208:
0x159E	0xCFD7    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_229
L_easyavr_v7_ATMEGA32__gpioInit_216:
;__ea_atmega32_gpio.c,145 :: 		return _MIKROBUS_OK;
0x15A0	0xE000    	LDI        R16, 0
;__ea_atmega32_gpio.c,146 :: 		}
L_end__gpioInit_2:
0x15A2	0x9508    	RET
; end of easyavr_v7_ATMEGA32__gpioInit_2
easyavr_v7_ATMEGA32__gpioInit_3:
;__ea_atmega32_gpio.c,148 :: 		static T_mikrobus_ret _gpioInit_3(T_mikrobus_pin pin, T_gpio_dir dir)
;__ea_atmega32_gpio.c,150 :: 		switch( pin )
0x0D48	0xC03E    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_330
;__ea_atmega32_gpio.c,152 :: 		case _MIKROBUS_AN_PIN    : DDA4_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_332:
0x0D4A	0xFA30    	BST        R3, 0
0x0D4C	0xB3BA    	IN         R27, DDA4_bit+0
0x0D4E	0xF9B4    	BLD        R27, 4
0x0D50	0xBBBA    	OUT        DDA4_bit+0, R27
0x0D52	0xC060    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_331
;__ea_atmega32_gpio.c,153 :: 		case _MIKROBUS_RST_PIN   : DDB0_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_333:
0x0D54	0xFA30    	BST        R3, 0
0x0D56	0xB3B7    	IN         R27, DDB0_bit+0
0x0D58	0xF9B0    	BLD        R27, 0
0x0D5A	0xBBB7    	OUT        DDB0_bit+0, R27
0x0D5C	0xC05B    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_331
;__ea_atmega32_gpio.c,154 :: 		case _MIKROBUS_CS_PIN    : DDB4_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_334:
0x0D5E	0xFA30    	BST        R3, 0
0x0D60	0xB3B7    	IN         R27, DDB4_bit+0
0x0D62	0xF9B4    	BLD        R27, 4
0x0D64	0xBBB7    	OUT        DDB4_bit+0, R27
0x0D66	0xC056    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_331
;__ea_atmega32_gpio.c,155 :: 		case _MIKROBUS_SCK_PIN   : DDB7_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_335:
0x0D68	0xFA30    	BST        R3, 0
0x0D6A	0xB3B7    	IN         R27, DDB7_bit+0
0x0D6C	0xF9B7    	BLD        R27, 7
0x0D6E	0xBBB7    	OUT        DDB7_bit+0, R27
0x0D70	0xC051    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_331
;__ea_atmega32_gpio.c,156 :: 		case _MIKROBUS_MISO_PIN  : DDB6_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_336:
0x0D72	0xFA30    	BST        R3, 0
0x0D74	0xB3B7    	IN         R27, DDB6_bit+0
0x0D76	0xF9B6    	BLD        R27, 6
0x0D78	0xBBB7    	OUT        DDB6_bit+0, R27
0x0D7A	0xC04C    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_331
;__ea_atmega32_gpio.c,157 :: 		case _MIKROBUS_MOSI_PIN  : DDB5_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_337:
0x0D7C	0xFA30    	BST        R3, 0
0x0D7E	0xB3B7    	IN         R27, DDB5_bit+0
0x0D80	0xF9B5    	BLD        R27, 5
0x0D82	0xBBB7    	OUT        DDB5_bit+0, R27
0x0D84	0xC047    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_331
;__ea_atmega32_gpio.c,158 :: 		case _MIKROBUS_PWM_PIN   : DDB3_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_338:
0x0D86	0xFA30    	BST        R3, 0
0x0D88	0xB3B7    	IN         R27, DDB3_bit+0
0x0D8A	0xF9B3    	BLD        R27, 3
0x0D8C	0xBBB7    	OUT        DDB3_bit+0, R27
0x0D8E	0xC042    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_331
;__ea_atmega32_gpio.c,159 :: 		case _MIKROBUS_INT_PIN   : DDB2_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_339:
0x0D90	0xFA30    	BST        R3, 0
0x0D92	0xB3B7    	IN         R27, DDB2_bit+0
0x0D94	0xF9B2    	BLD        R27, 2
0x0D96	0xBBB7    	OUT        DDB2_bit+0, R27
0x0D98	0xC03D    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_331
;__ea_atmega32_gpio.c,160 :: 		case _MIKROBUS_RX_PIN    : DDD2_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_340:
0x0D9A	0xFA30    	BST        R3, 0
0x0D9C	0xB3B1    	IN         R27, DDD2_bit+0
0x0D9E	0xF9B2    	BLD        R27, 2
0x0DA0	0xBBB1    	OUT        DDD2_bit+0, R27
0x0DA2	0xC038    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_331
;__ea_atmega32_gpio.c,161 :: 		case _MIKROBUS_TX_PIN    : DDD3_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_341:
0x0DA4	0xFA30    	BST        R3, 0
0x0DA6	0xB3B1    	IN         R27, DDD3_bit+0
0x0DA8	0xF9B3    	BLD        R27, 3
0x0DAA	0xBBB1    	OUT        DDD3_bit+0, R27
0x0DAC	0xC033    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_331
;__ea_atmega32_gpio.c,162 :: 		case _MIKROBUS_SCL_PIN   : DDC0_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_342:
0x0DAE	0xFA30    	BST        R3, 0
0x0DB0	0xB3B4    	IN         R27, DDC0_bit+0
0x0DB2	0xF9B0    	BLD        R27, 0
0x0DB4	0xBBB4    	OUT        DDC0_bit+0, R27
0x0DB6	0xC02E    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_331
;__ea_atmega32_gpio.c,163 :: 		case _MIKROBUS_SDA_PIN   : DDC1_bit = dir; break;
L_easyavr_v7_ATMEGA32__gpioInit_343:
0x0DB8	0xFA30    	BST        R3, 0
0x0DBA	0xB3B4    	IN         R27, DDC1_bit+0
0x0DBC	0xF9B1    	BLD        R27, 1
0x0DBE	0xBBB4    	OUT        DDC1_bit+0, R27
0x0DC0	0xC029    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_331
;__ea_atmega32_gpio.c,164 :: 		default                  : return _MIKROBUS_ERR_PIN;
L_easyavr_v7_ATMEGA32__gpioInit_344:
0x0DC2	0xE001    	LDI        R16, 1
0x0DC4	0xC028    	RJMP       L_end__gpioInit_3
;__ea_atmega32_gpio.c,165 :: 		}
L_easyavr_v7_ATMEGA32__gpioInit_330:
0x0DC6	0xE0B0    	LDI        R27, 0
0x0DC8	0x162B    	CP         R2, R27
0x0DCA	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__gpioInit_3210
0x0DCC	0xCFBE    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_332
L_easyavr_v7_ATMEGA32__gpioInit_3210:
0x0DCE	0xE0B1    	LDI        R27, 1
0x0DD0	0x162B    	CP         R2, R27
0x0DD2	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__gpioInit_3211
0x0DD4	0xCFBF    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_333
L_easyavr_v7_ATMEGA32__gpioInit_3211:
0x0DD6	0xE0B2    	LDI        R27, 2
0x0DD8	0x162B    	CP         R2, R27
0x0DDA	0xF209    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_334
L_easyavr_v7_ATMEGA32__gpioInit_3212:
0x0DDC	0xE0B3    	LDI        R27, 3
0x0DDE	0x162B    	CP         R2, R27
0x0DE0	0xF219    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_335
L_easyavr_v7_ATMEGA32__gpioInit_3213:
0x0DE2	0xE0B4    	LDI        R27, 4
0x0DE4	0x162B    	CP         R2, R27
0x0DE6	0xF229    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_336
L_easyavr_v7_ATMEGA32__gpioInit_3214:
0x0DE8	0xE0B5    	LDI        R27, 5
0x0DEA	0x162B    	CP         R2, R27
0x0DEC	0xF239    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_337
L_easyavr_v7_ATMEGA32__gpioInit_3215:
0x0DEE	0xE0B6    	LDI        R27, 6
0x0DF0	0x162B    	CP         R2, R27
0x0DF2	0xF249    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_338
L_easyavr_v7_ATMEGA32__gpioInit_3216:
0x0DF4	0xE0B7    	LDI        R27, 7
0x0DF6	0x162B    	CP         R2, R27
0x0DF8	0xF259    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_339
L_easyavr_v7_ATMEGA32__gpioInit_3217:
0x0DFA	0xE0B8    	LDI        R27, 8
0x0DFC	0x162B    	CP         R2, R27
0x0DFE	0xF269    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_340
L_easyavr_v7_ATMEGA32__gpioInit_3218:
0x0E00	0xE0B9    	LDI        R27, 9
0x0E02	0x162B    	CP         R2, R27
0x0E04	0xF279    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_341
L_easyavr_v7_ATMEGA32__gpioInit_3219:
0x0E06	0xE0BA    	LDI        R27, 10
0x0E08	0x162B    	CP         R2, R27
0x0E0A	0xF289    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_342
L_easyavr_v7_ATMEGA32__gpioInit_3220:
0x0E0C	0xE0BB    	LDI        R27, 11
0x0E0E	0x162B    	CP         R2, R27
0x0E10	0xF299    	BREQ       L_easyavr_v7_ATMEGA32__gpioInit_343
L_easyavr_v7_ATMEGA32__gpioInit_3221:
0x0E12	0xCFD7    	RJMP       L_easyavr_v7_ATMEGA32__gpioInit_344
L_easyavr_v7_ATMEGA32__gpioInit_331:
;__ea_atmega32_gpio.c,166 :: 		return _MIKROBUS_OK;
0x0E14	0xE000    	LDI        R16, 0
;__ea_atmega32_gpio.c,167 :: 		}
L_end__gpioInit_3:
0x0E16	0x9508    	RET
; end of easyavr_v7_ATMEGA32__gpioInit_3
_mikrobus_i2cInit:
;easyavr_v7_ATMEGA32.c,222 :: 		T_mikrobus_ret mikrobus_i2cInit(T_mikrobus_soc bus, const uint32_t *cfg)
;easyavr_v7_ATMEGA32.c,224 :: 		switch( bus )
0x2DD8	0x922F    	PUSH       R2
0x2DDA	0x923F    	PUSH       R3
0x2DDC	0x924F    	PUSH       R4
0x2DDE	0xC00F    	RJMP       L_mikrobus_i2cInit88
;easyavr_v7_ATMEGA32.c,227 :: 		case _MIKROBUS1 : return _i2cInit_1( cfg );
L_mikrobus_i2cInit90:
0x2DE0	0x2C23    	MOV        R2, R3
0x2DE2	0x2C34    	MOV        R3, R4
0x2DE4	0x065D940E  	CALL       easyavr_v7_ATMEGA32__i2cInit_1+0
0x2DE8	0xC014    	RJMP       L_end_mikrobus_i2cInit
;easyavr_v7_ATMEGA32.c,230 :: 		case _MIKROBUS2 : return _i2cInit_2( cfg );
L_mikrobus_i2cInit91:
0x2DEA	0x2C23    	MOV        R2, R3
0x2DEC	0x2C34    	MOV        R3, R4
0x2DEE	0xD883    	RCALL      easyavr_v7_ATMEGA32__i2cInit_2+0
0x2DF0	0xC010    	RJMP       L_end_mikrobus_i2cInit
;easyavr_v7_ATMEGA32.c,233 :: 		case _MIKROBUS3 : return _i2cInit_3( cfg );
L_mikrobus_i2cInit92:
0x2DF2	0x2C23    	MOV        R2, R3
0x2DF4	0x2C34    	MOV        R3, R4
0x2DF6	0xD80A    	RCALL      easyavr_v7_ATMEGA32__i2cInit_3+0
0x2DF8	0xC00C    	RJMP       L_end_mikrobus_i2cInit
;easyavr_v7_ATMEGA32.c,244 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_i2cInit93:
0x2DFA	0xE001    	LDI        R16, 1
0x2DFC	0xC00A    	RJMP       L_end_mikrobus_i2cInit
;easyavr_v7_ATMEGA32.c,245 :: 		}
L_mikrobus_i2cInit88:
0x2DFE	0xE0B0    	LDI        R27, 0
0x2E00	0x162B    	CP         R2, R27
0x2E02	0xF371    	BREQ       L_mikrobus_i2cInit90
L__mikrobus_i2cInit279:
0x2E04	0xE0B1    	LDI        R27, 1
0x2E06	0x162B    	CP         R2, R27
0x2E08	0xF381    	BREQ       L_mikrobus_i2cInit91
L__mikrobus_i2cInit280:
0x2E0A	0xE0B2    	LDI        R27, 2
0x2E0C	0x162B    	CP         R2, R27
0x2E0E	0xF389    	BREQ       L_mikrobus_i2cInit92
L__mikrobus_i2cInit281:
0x2E10	0xCFF4    	RJMP       L_mikrobus_i2cInit93
;easyavr_v7_ATMEGA32.c,248 :: 		}
L_end_mikrobus_i2cInit:
0x2E12	0x904F    	POP        R4
0x2E14	0x903F    	POP        R3
0x2E16	0x902F    	POP        R2
0x2E18	0x9508    	RET
; end of _mikrobus_i2cInit
easyavr_v7_ATMEGA32__i2cInit_1:
0x0CBA	0x93CF    	PUSH       R28
0x0CBC	0x93DF    	PUSH       R29
0x0CBE	0xB7CD    	IN         R28, SPL+0
0x0CC0	0xB7DE    	IN         R29, SPL+1
0x0CC2	0x9722    	SBIW       R28, 2
0x0CC4	0xBFCD    	OUT        SPL+0, R28
0x0CC6	0xBFDE    	OUT        SPL+1, R29
0x0CC8	0x9621    	ADIW       R28, 1
;__ea_atmega32_i2c.c,36 :: 		static T_mikrobus_ret _i2cInit_1(const uint32_t* cfg)
;__ea_atmega32_i2c.c,38 :: 		switch( cfg[0] )
0x0CCA	0x922F    	PUSH       R2
0x0CCC	0x923F    	PUSH       R3
0x0CCE	0x0181    	MOVW       R16, R2
0x0CD0	0x8308    	STD        Y+0, R16
0x0CD2	0x8319    	STD        Y+1, R17
0x0CD4	0xC013    	RJMP       L_easyavr_v7_ATMEGA32__i2cInit_145
;__ea_atmega32_i2c.c,40 :: 		case 100000 : TWI_Init( 100000 ); break;
L_easyavr_v7_ATMEGA32__i2cInit_147:
0x0CD6	0xB1B1    	IN         R27, TWPS0_bit+0
0x0CD8	0x7FBE    	CBR        R27, 1
0x0CDA	0xB9B1    	OUT        TWPS0_bit+0, R27
0x0CDC	0xB1B1    	IN         R27, TWPS1_bit+0
0x0CDE	0x7FBD    	CBR        R27, 2
0x0CE0	0xB9B1    	OUT        TWPS1_bit+0, R27
0x0CE2	0xE2B0    	LDI        R27, 32
0x0CE4	0xB9B0    	OUT        TWBR+0, R27
0x0CE6	0xDE01    	RCALL      _TWI_Init+0
0x0CE8	0xC026    	RJMP       L_easyavr_v7_ATMEGA32__i2cInit_146
;__ea_atmega32_i2c.c,42 :: 		case 0 : { TWI_Start(  ); TWI_Write(0x00); TWI_Read(0x00); TWI_Stop(  ); break; }
L_easyavr_v7_ATMEGA32__i2cInit_148:
0x0CEA	0xDD32    	RCALL      _TWI_Start+0
0x0CEC	0x2422    	CLR        R2
0x0CEE	0xDC87    	RCALL      _TWI_Write+0
0x0CF0	0x2422    	CLR        R2
0x0CF2	0xDEB8    	RCALL      _TWI_Read+0
0x0CF4	0xDE92    	RCALL      _TWI_Stop+0
0x0CF6	0xC01F    	RJMP       L_easyavr_v7_ATMEGA32__i2cInit_146
;__ea_atmega32_i2c.c,43 :: 		default     : return _MIKROBUS_ERR_I2C;
L_easyavr_v7_ATMEGA32__i2cInit_149:
0x0CF8	0xE004    	LDI        R16, 4
0x0CFA	0xC01E    	RJMP       L_end__i2cInit_1
;__ea_atmega32_i2c.c,44 :: 		}
L_easyavr_v7_ATMEGA32__i2cInit_145:
0x0CFC	0x8148    	LDD        R20, Y+0
0x0CFE	0x8159    	LDD        R21, Y+1
0x0D00	0x01FA    	MOVW       R30, R20
0x0D02	0x9105    	LPM        R16, Z+
0x0D04	0x9115    	LPM        R17, Z+
0x0D06	0x9125    	LPM        R18, Z+
0x0D08	0x9135    	LPM        R19, Z+
0x0D0A	0x3030    	CPI        R19, 0
0x0D0C	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__i2cInit_1223
0x0D0E	0x3021    	CPI        R18, 1
0x0D10	0xF419    	BRNE       L_easyavr_v7_ATMEGA32__i2cInit_1223
0x0D12	0x3816    	CPI        R17, 134
0x0D14	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__i2cInit_1223
0x0D16	0x3A00    	CPI        R16, 160
L_easyavr_v7_ATMEGA32__i2cInit_1223:
0x0D18	0xF2F1    	BREQ       L_easyavr_v7_ATMEGA32__i2cInit_147
L_easyavr_v7_ATMEGA32__i2cInit_1224:
0x0D1A	0x01FA    	MOVW       R30, R20
0x0D1C	0x9105    	LPM        R16, Z+
0x0D1E	0x9115    	LPM        R17, Z+
0x0D20	0x9125    	LPM        R18, Z+
0x0D22	0x9135    	LPM        R19, Z+
0x0D24	0x3030    	CPI        R19, 0
0x0D26	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__i2cInit_1225
0x0D28	0x3020    	CPI        R18, 0
0x0D2A	0xF419    	BRNE       L_easyavr_v7_ATMEGA32__i2cInit_1225
0x0D2C	0x3010    	CPI        R17, 0
0x0D2E	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__i2cInit_1225
0x0D30	0x3000    	CPI        R16, 0
L_easyavr_v7_ATMEGA32__i2cInit_1225:
0x0D32	0xF2D9    	BREQ       L_easyavr_v7_ATMEGA32__i2cInit_148
L_easyavr_v7_ATMEGA32__i2cInit_1226:
0x0D34	0xCFE1    	RJMP       L_easyavr_v7_ATMEGA32__i2cInit_149
L_easyavr_v7_ATMEGA32__i2cInit_146:
;__ea_atmega32_i2c.c,45 :: 		return _MIKROBUS_OK;
0x0D36	0xE000    	LDI        R16, 0
;__ea_atmega32_i2c.c,46 :: 		}
;__ea_atmega32_i2c.c,45 :: 		return _MIKROBUS_OK;
;__ea_atmega32_i2c.c,46 :: 		}
L_end__i2cInit_1:
0x0D38	0x903F    	POP        R3
0x0D3A	0x902F    	POP        R2
0x0D3C	0x9621    	ADIW       R28, 1
0x0D3E	0xBFCD    	OUT        SPL+0, R28
0x0D40	0xBFDE    	OUT        SPL+1, R29
0x0D42	0x91DF    	POP        R29
0x0D44	0x91CF    	POP        R28
0x0D46	0x9508    	RET
; end of easyavr_v7_ATMEGA32__i2cInit_1
_TWI_Start:
;__Lib_TWI.c,95 :: 		
;__Lib_TWI.c,98 :: 		
0x0750	0x922F    	PUSH       R2
; timeout start address is: 20 (R20)
0x0752	0x01699140  	LDS        R20, __Lib_TWI__TWI_TIMEOUT+0
0x0756	0x016A9150  	LDS        R21, __Lib_TWI__TWI_TIMEOUT+1
0x075A	0x016B9160  	LDS        R22, __Lib_TWI__TWI_TIMEOUT+2
0x075E	0x016C9170  	LDS        R23, __Lib_TWI__TWI_TIMEOUT+3
;__Lib_TWI.c,100 :: 		
0x0762	0xEAB4    	LDI        R27, 164
0x0764	0xBFB6    	OUT        TWCR+0, R27
; timeout end address is: 20 (R20)
;__Lib_TWI.c,101 :: 		
L_TWI_Start0:
; timeout start address is: 20 (R20)
0x0766	0xB7B6    	IN         R27, TWINT_bit+0
0x0768	0xFDB7    	SBRC       R27, 7
0x076A	0xC025    	RJMP       L_TWI_Start1
;__Lib_TWI.c,103 :: 		
0x076C	0x01699100  	LDS        R16, __Lib_TWI__TWI_TIMEOUT+0
0x0770	0x016A9110  	LDS        R17, __Lib_TWI__TWI_TIMEOUT+1
0x0774	0x016B9120  	LDS        R18, __Lib_TWI__TWI_TIMEOUT+2
0x0778	0x016C9130  	LDS        R19, __Lib_TWI__TWI_TIMEOUT+3
0x077C	0x2FB0    	MOV        R27, R16
0x077E	0x2BB1    	OR         R27, R17
0x0780	0x2BB2    	OR         R27, R18
0x0782	0x2BB3    	OR         R27, R19
0x0784	0xF0B9    	BREQ       L__TWI_Start12
L__TWI_Start22:
;__Lib_TWI.c,105 :: 		
0x0786	0x2FB4    	MOV        R27, R20
0x0788	0x2BB5    	OR         R27, R21
0x078A	0x2BB6    	OR         R27, R22
0x078C	0x2BB7    	OR         R27, R23
0x078E	0xF449    	BRNE       L_TWI_Start3
L__TWI_Start23:
; timeout end address is: 20 (R20)
;__Lib_TWI.c,107 :: 		
0x0790	0xE0B5    	LDI        R27, 5
0x0792	0x2E2B    	MOV        R2, R27
0x0794	0x02CD91E0  	LDS        R30, _TWI_Timeout_Ptr+0
0x0798	0x02CE91F0  	LDS        R31, _TWI_Timeout_Ptr+1
0x079C	0x9509    	ICALL
;__Lib_TWI.c,108 :: 		
0x079E	0xE001    	LDI        R16, 1
0x07A0	0xC010    	RJMP       L_end_TWI_Start
;__Lib_TWI.c,109 :: 		
L_TWI_Start3:
;__Lib_TWI.c,110 :: 		
; timeout start address is: 20 (R20)
0x07A2	0x018A    	MOVW       R16, R20
0x07A4	0x019B    	MOVW       R18, R22
0x07A6	0x5001    	SUBI       R16, 1
0x07A8	0x4010    	SBCI       R17, 0
0x07AA	0x4020    	SBCI       R18, 0
0x07AC	0x4030    	SBCI       R19, 0
0x07AE	0x01A8    	MOVW       R20, R16
0x07B0	0x01B9    	MOVW       R22, R18
; timeout end address is: 20 (R20)
;__Lib_TWI.c,111 :: 		
0x07B2	0xC000    	RJMP       L_TWI_Start2
L__TWI_Start12:
;__Lib_TWI.c,103 :: 		
;__Lib_TWI.c,111 :: 		
L_TWI_Start2:
;__Lib_TWI.c,112 :: 		
; timeout start address is: 20 (R20)
; timeout end address is: 20 (R20)
0x07B4	0xCFD8    	RJMP       L_TWI_Start0
L_TWI_Start1:
;__Lib_TWI.c,113 :: 		
0x07B6	0xDF20    	RCALL      _TWI_Status+0
0x07B8	0x3008    	CPI        R16, 8
0x07BA	0xE0B0    	LDI        R27, 0
0x07BC	0xF009    	BREQ       L__TWI_Start24
0x07BE	0xE0B1    	LDI        R27, 1
L__TWI_Start24:
0x07C0	0x2F0B    	MOV        R16, R27
;__Lib_TWI.c,114 :: 		
;__Lib_TWI.c,113 :: 		
;__Lib_TWI.c,114 :: 		
L_end_TWI_Start:
0x07C2	0x902F    	POP        R2
0x07C4	0x9508    	RET
; end of _TWI_Start
_UART1_Write:
;__Lib_UART_d01_ursel.c,58 :: 		
;__Lib_UART_d01_ursel.c,59 :: 		
L_UART1_Write0:
0x0668	0xB1BB    	IN         R27, UDRE0_bit+0
0x066A	0xFDB5    	SBRC       R27, 5
0x066C	0xC001    	RJMP       L_UART1_Write1
;__Lib_UART_d01_ursel.c,60 :: 		
0x066E	0xCFFC    	RJMP       L_UART1_Write0
L_UART1_Write1:
;__Lib_UART_d01_ursel.c,61 :: 		
0x0670	0xB1BB    	IN         R27, TXC0_bit+0
0x0672	0xFFB6    	SBRS       R27, 6
0x0674	0xC003    	RJMP       L_UART1_Write2
;__Lib_UART_d01_ursel.c,62 :: 		
0x0676	0xB1BB    	IN         R27, TXC0_bit+0
0x0678	0x64B0    	SBR        R27, 64
0x067A	0xB9BB    	OUT        TXC0_bit+0, R27
L_UART1_Write2:
;__Lib_UART_d01_ursel.c,63 :: 		
0x067C	0xB82C    	OUT        UDR0+0, R2
;__Lib_UART_d01_ursel.c,64 :: 		
L_end_UART1_Write:
0x067E	0x9508    	RET
; end of _UART1_Write
_TWI_Write:
;__Lib_TWI.c,120 :: 		
;__Lib_TWI.c,123 :: 		
0x05FE	0x922F    	PUSH       R2
; timeout start address is: 20 (R20)
0x0600	0x01699140  	LDS        R20, __Lib_TWI__TWI_TIMEOUT+0
0x0604	0x016A9150  	LDS        R21, __Lib_TWI__TWI_TIMEOUT+1
0x0608	0x016B9160  	LDS        R22, __Lib_TWI__TWI_TIMEOUT+2
0x060C	0x016C9170  	LDS        R23, __Lib_TWI__TWI_TIMEOUT+3
;__Lib_TWI.c,125 :: 		
0x0610	0xB823    	OUT        TWDR+0, R2
;__Lib_TWI.c,126 :: 		
0x0612	0xE8B4    	LDI        R27, 132
0x0614	0xBFB6    	OUT        TWCR+0, R27
; timeout end address is: 20 (R20)
;__Lib_TWI.c,127 :: 		
L_TWI_Write4:
; timeout start address is: 20 (R20)
0x0616	0xB7B6    	IN         R27, TWINT_bit+0
0x0618	0xFDB7    	SBRC       R27, 7
0x061A	0xC024    	RJMP       L_TWI_Write5
;__Lib_TWI.c,129 :: 		
0x061C	0x01699100  	LDS        R16, __Lib_TWI__TWI_TIMEOUT+0
0x0620	0x016A9110  	LDS        R17, __Lib_TWI__TWI_TIMEOUT+1
0x0624	0x016B9120  	LDS        R18, __Lib_TWI__TWI_TIMEOUT+2
0x0628	0x016C9130  	LDS        R19, __Lib_TWI__TWI_TIMEOUT+3
0x062C	0x2FB0    	MOV        R27, R16
0x062E	0x2BB1    	OR         R27, R17
0x0630	0x2BB2    	OR         R27, R18
0x0632	0x2BB3    	OR         R27, R19
0x0634	0xF0B1    	BREQ       L__TWI_Write13
L__TWI_Write27:
;__Lib_TWI.c,131 :: 		
0x0636	0x2FB4    	MOV        R27, R20
0x0638	0x2BB5    	OR         R27, R21
0x063A	0x2BB6    	OR         R27, R22
0x063C	0x2BB7    	OR         R27, R23
0x063E	0xF441    	BRNE       L_TWI_Write7
L__TWI_Write28:
; timeout end address is: 20 (R20)
;__Lib_TWI.c,133 :: 		
0x0640	0xE0B4    	LDI        R27, 4
0x0642	0x2E2B    	MOV        R2, R27
0x0644	0x02CD91E0  	LDS        R30, _TWI_Timeout_Ptr+0
0x0648	0x02CE91F0  	LDS        R31, _TWI_Timeout_Ptr+1
0x064C	0x9509    	ICALL
;__Lib_TWI.c,134 :: 		
0x064E	0xC00A    	RJMP       L_end_TWI_Write
;__Lib_TWI.c,135 :: 		
L_TWI_Write7:
;__Lib_TWI.c,136 :: 		
; timeout start address is: 20 (R20)
0x0650	0x018A    	MOVW       R16, R20
0x0652	0x019B    	MOVW       R18, R22
0x0654	0x5001    	SUBI       R16, 1
0x0656	0x4010    	SBCI       R17, 0
0x0658	0x4020    	SBCI       R18, 0
0x065A	0x4030    	SBCI       R19, 0
0x065C	0x01A8    	MOVW       R20, R16
0x065E	0x01B9    	MOVW       R22, R18
; timeout end address is: 20 (R20)
;__Lib_TWI.c,137 :: 		
0x0660	0xC000    	RJMP       L_TWI_Write6
L__TWI_Write13:
;__Lib_TWI.c,129 :: 		
;__Lib_TWI.c,137 :: 		
L_TWI_Write6:
;__Lib_TWI.c,138 :: 		
; timeout start address is: 20 (R20)
; timeout end address is: 20 (R20)
0x0662	0xCFD9    	RJMP       L_TWI_Write4
L_TWI_Write5:
;__Lib_TWI.c,139 :: 		
L_end_TWI_Write:
0x0664	0x902F    	POP        R2
0x0666	0x9508    	RET
; end of _TWI_Write
easyavr_v7_ATMEGA32__setAN_1:
;__ea_atmega32_gpio.c,43 :: 		static void _setAN_1  (uint8_t value) 	{ PORTA7_bit = value; }
0x02CA	0xFA20    	BST        R2, 0
0x02CC	0xB3BB    	IN         R27, PORTA7_bit+0
0x02CE	0xF9B7    	BLD        R27, 7
0x02D0	0xBBBB    	OUT        PORTA7_bit+0, R27
L_end__setAN_1:
0x02D2	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setAN_1
easyavr_v7_ATMEGA32__setRST_1:
;__ea_atmega32_gpio.c,44 :: 		static void _setRST_1 (uint8_t value) 	{ PORTA6_bit = value; }
0x01F4	0xFA20    	BST        R2, 0
0x01F6	0xB3BB    	IN         R27, PORTA6_bit+0
0x01F8	0xF9B6    	BLD        R27, 6
0x01FA	0xBBBB    	OUT        PORTA6_bit+0, R27
L_end__setRST_1:
0x01FC	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setRST_1
easyavr_v7_ATMEGA32__setCS_1:
;__ea_atmega32_gpio.c,45 :: 		static void _setCS_1  (uint8_t value) 	{ PORTA5_bit = value; }
0x01D6	0xFA20    	BST        R2, 0
0x01D8	0xB3BB    	IN         R27, PORTA5_bit+0
0x01DA	0xF9B5    	BLD        R27, 5
0x01DC	0xBBBB    	OUT        PORTA5_bit+0, R27
L_end__setCS_1:
0x01DE	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setCS_1
easyavr_v7_ATMEGA32__setSCK_1:
;__ea_atmega32_gpio.c,46 :: 		static void _setSCK_1 (uint8_t value) 	{ PORTB7_bit = value; }
0x01CC	0xFA20    	BST        R2, 0
0x01CE	0xB3B8    	IN         R27, PORTB7_bit+0
0x01D0	0xF9B7    	BLD        R27, 7
0x01D2	0xBBB8    	OUT        PORTB7_bit+0, R27
L_end__setSCK_1:
0x01D4	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setSCK_1
easyavr_v7_ATMEGA32__setMISO_1:
;__ea_atmega32_gpio.c,47 :: 		static void _setMISO_1(uint8_t value) 	{ PORTB6_bit = value; }
0x01EA	0xFA20    	BST        R2, 0
0x01EC	0xB3B8    	IN         R27, PORTB6_bit+0
0x01EE	0xF9B6    	BLD        R27, 6
0x01F0	0xBBB8    	OUT        PORTB6_bit+0, R27
L_end__setMISO_1:
0x01F2	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setMISO_1
easyavr_v7_ATMEGA32__setMOSI_1:
;__ea_atmega32_gpio.c,48 :: 		static void _setMOSI_1(uint8_t value) 	{ PORTB5_bit = value; }
0x01E0	0xFA20    	BST        R2, 0
0x01E2	0xB3B8    	IN         R27, PORTB5_bit+0
0x01E4	0xF9B5    	BLD        R27, 5
0x01E6	0xBBB8    	OUT        PORTB5_bit+0, R27
L_end__setMOSI_1:
0x01E8	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setMOSI_1
easyavr_v7_ATMEGA32__setPWM_1:
;__ea_atmega32_gpio.c,49 :: 		static void _setPWM_1 (uint8_t value) 	{ PORTD4_bit = value; }
0x033A	0xFA20    	BST        R2, 0
0x033C	0xB3B2    	IN         R27, PORTD4_bit+0
0x033E	0xF9B4    	BLD        R27, 4
0x0340	0xBBB2    	OUT        PORTD4_bit+0, R27
L_end__setPWM_1:
0x0342	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setPWM_1
easyavr_v7_ATMEGA32__setINT_1:
;__ea_atmega32_gpio.c,50 :: 		static void _setINT_1 (uint8_t value) 	{ PORTD2_bit = value; }
0x0330	0xFA20    	BST        R2, 0
0x0332	0xB3B2    	IN         R27, PORTD2_bit+0
0x0334	0xF9B2    	BLD        R27, 2
0x0336	0xBBB2    	OUT        PORTD2_bit+0, R27
L_end__setINT_1:
0x0338	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setINT_1
easyavr_v7_ATMEGA32__setRX_1:
;__ea_atmega32_gpio.c,51 :: 		static void _setRX_1  (uint8_t value) 	{ PORTD0_bit = value; }
0x0344	0xFA20    	BST        R2, 0
0x0346	0xB3B2    	IN         R27, PORTD0_bit+0
0x0348	0xF9B0    	BLD        R27, 0
0x034A	0xBBB2    	OUT        PORTD0_bit+0, R27
L_end__setRX_1:
0x034C	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setRX_1
easyavr_v7_ATMEGA32__setTX_1:
;__ea_atmega32_gpio.c,52 :: 		static void _setTX_1  (uint8_t value) 	{ PORTD1_bit = value; }
0x034E	0xFA20    	BST        R2, 0
0x0350	0xB3B2    	IN         R27, PORTD1_bit+0
0x0352	0xF9B1    	BLD        R27, 1
0x0354	0xBBB2    	OUT        PORTD1_bit+0, R27
L_end__setTX_1:
0x0356	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setTX_1
easyavr_v7_ATMEGA32__setSCL_1:
;__ea_atmega32_gpio.c,53 :: 		static void _setSCL_1 (uint8_t value) 	{ PORTC0_bit = value; }
0x0326	0xFA20    	BST        R2, 0
0x0328	0xB3B5    	IN         R27, PORTC0_bit+0
0x032A	0xF9B0    	BLD        R27, 0
0x032C	0xBBB5    	OUT        PORTC0_bit+0, R27
L_end__setSCL_1:
0x032E	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setSCL_1
easyavr_v7_ATMEGA32__setSDA_1:
;__ea_atmega32_gpio.c,54 :: 		static void _setSDA_1 (uint8_t value) 	{ PORTC1_bit = value; }
0x0308	0xFA20    	BST        R2, 0
0x030A	0xB3B5    	IN         R27, PORTC1_bit+0
0x030C	0xF9B1    	BLD        R27, 1
0x030E	0xBBB5    	OUT        PORTC1_bit+0, R27
L_end__setSDA_1:
0x0310	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setSDA_1
easyavr_v7_ATMEGA32__setAN_2:
;__ea_atmega32_gpio.c,68 :: 		static void _setAN_2  (uint8_t value)   { PORTA0_bit = value; }
0x02FE	0xFA20    	BST        R2, 0
0x0300	0xB3BB    	IN         R27, PORTA0_bit+0
0x0302	0xF9B0    	BLD        R27, 0
0x0304	0xBBBB    	OUT        PORTA0_bit+0, R27
L_end__setAN_2:
0x0306	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setAN_2
easyavr_v7_ATMEGA32__setRST_2:
;__ea_atmega32_gpio.c,69 :: 		static void _setRST_2 (uint8_t value)   { PORTA1_bit = value; }
0x0312	0xFA20    	BST        R2, 0
0x0314	0xB3BB    	IN         R27, PORTA1_bit+0
0x0316	0xF9B1    	BLD        R27, 1
0x0318	0xBBBB    	OUT        PORTA1_bit+0, R27
L_end__setRST_2:
0x031A	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setRST_2
easyavr_v7_ATMEGA32__setCS_2:
;__ea_atmega32_gpio.c,70 :: 		static void _setCS_2  (uint8_t value)   { PORTA3_bit = value; }
0x031C	0xFA20    	BST        R2, 0
0x031E	0xB3BB    	IN         R27, PORTA3_bit+0
0x0320	0xF9B3    	BLD        R27, 3
0x0322	0xBBBB    	OUT        PORTA3_bit+0, R27
L_end__setCS_2:
0x0324	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setCS_2
easyavr_v7_ATMEGA32__setSCK_2:
;__ea_atmega32_gpio.c,71 :: 		static void _setSCK_2 (uint8_t value)   { PORTB7_bit = value; }
0x01C2	0xFA20    	BST        R2, 0
0x01C4	0xB3B8    	IN         R27, PORTB7_bit+0
0x01C6	0xF9B7    	BLD        R27, 7
0x01C8	0xBBB8    	OUT        PORTB7_bit+0, R27
L_end__setSCK_2:
0x01CA	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setSCK_2
easyavr_v7_ATMEGA32__setMISO_2:
;__ea_atmega32_gpio.c,72 :: 		static void _setMISO_2(uint8_t value)   { PORTB6_bit = value; }
0x00D2	0xFA20    	BST        R2, 0
0x00D4	0xB3B8    	IN         R27, PORTB6_bit+0
0x00D6	0xF9B6    	BLD        R27, 6
0x00D8	0xBBB8    	OUT        PORTB6_bit+0, R27
L_end__setMISO_2:
0x00DA	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setMISO_2
easyavr_v7_ATMEGA32__setMOSI_2:
;__ea_atmega32_gpio.c,73 :: 		static void _setMOSI_2(uint8_t value)   { PORTB5_bit = value; }
0x00C8	0xFA20    	BST        R2, 0
0x00CA	0xB3B8    	IN         R27, PORTB5_bit+0
0x00CC	0xF9B5    	BLD        R27, 5
0x00CE	0xBBB8    	OUT        PORTB5_bit+0, R27
L_end__setMOSI_2:
0x00D0	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setMOSI_2
easyavr_v7_ATMEGA32__setPWM_2:
;__ea_atmega32_gpio.c,74 :: 		static void _setPWM_2 (uint8_t value)   { PORTD5_bit = value; }
0x00BE	0xFA20    	BST        R2, 0
0x00C0	0xB3B2    	IN         R27, PORTD5_bit+0
0x00C2	0xF9B5    	BLD        R27, 5
0x00C4	0xBBB2    	OUT        PORTD5_bit+0, R27
L_end__setPWM_2:
0x00C6	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setPWM_2
easyavr_v7_ATMEGA32__setINT_2:
;__ea_atmega32_gpio.c,75 :: 		static void _setINT_2 (uint8_t value)   { PORTD3_bit = value; }
0x00F0	0xFA20    	BST        R2, 0
0x00F2	0xB3B2    	IN         R27, PORTD3_bit+0
0x00F4	0xF9B3    	BLD        R27, 3
0x00F6	0xBBB2    	OUT        PORTD3_bit+0, R27
L_end__setINT_2:
0x00F8	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setINT_2
easyavr_v7_ATMEGA32__setRX_2:
;__ea_atmega32_gpio.c,76 :: 		static void _setRX_2  (uint8_t value)   { PORTD0_bit = value; }
0x00E6	0xFA20    	BST        R2, 0
0x00E8	0xB3B2    	IN         R27, PORTD0_bit+0
0x00EA	0xF9B0    	BLD        R27, 0
0x00EC	0xBBB2    	OUT        PORTD0_bit+0, R27
L_end__setRX_2:
0x00EE	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setRX_2
easyavr_v7_ATMEGA32__setTX_2:
;__ea_atmega32_gpio.c,77 :: 		static void _setTX_2  (uint8_t value)   { PORTD1_bit = value; }
0x00DC	0xFA20    	BST        R2, 0
0x00DE	0xB3B2    	IN         R27, PORTD1_bit+0
0x00E0	0xF9B1    	BLD        R27, 1
0x00E2	0xBBB2    	OUT        PORTD1_bit+0, R27
L_end__setTX_2:
0x00E4	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setTX_2
easyavr_v7_ATMEGA32__setSCL_2:
;__ea_atmega32_gpio.c,78 :: 		static void _setSCL_2 (uint8_t value)   { PORTC0_bit = value; }
0x00B4	0xFA20    	BST        R2, 0
0x00B6	0xB3B5    	IN         R27, PORTC0_bit+0
0x00B8	0xF9B0    	BLD        R27, 0
0x00BA	0xBBB5    	OUT        PORTC0_bit+0, R27
L_end__setSCL_2:
0x00BC	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setSCL_2
easyavr_v7_ATMEGA32__setSDA_2:
;__ea_atmega32_gpio.c,79 :: 		static void _setSDA_2 (uint8_t value)   { PORTC1_bit = value; }
0x008C	0xFA20    	BST        R2, 0
0x008E	0xB3B5    	IN         R27, PORTC1_bit+0
0x0090	0xF9B1    	BLD        R27, 1
0x0092	0xBBB5    	OUT        PORTC1_bit+0, R27
L_end__setSDA_2:
0x0094	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setSDA_2
easyavr_v7_ATMEGA32__setAN_3:
;__ea_atmega32_gpio.c,93 :: 		static void _setAN_3  (uint8_t value)   { PORTA4_bit = value; }
0x00AA	0xFA20    	BST        R2, 0
0x00AC	0xB3BB    	IN         R27, PORTA4_bit+0
0x00AE	0xF9B4    	BLD        R27, 4
0x00B0	0xBBBB    	OUT        PORTA4_bit+0, R27
L_end__setAN_3:
0x00B2	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setAN_3
easyavr_v7_ATMEGA32__setRST_3:
;__ea_atmega32_gpio.c,94 :: 		static void _setRST_3 (uint8_t value)   { PORTB0_bit = value; }
0x00A0	0xFA20    	BST        R2, 0
0x00A2	0xB3B8    	IN         R27, PORTB0_bit+0
0x00A4	0xF9B0    	BLD        R27, 0
0x00A6	0xBBB8    	OUT        PORTB0_bit+0, R27
L_end__setRST_3:
0x00A8	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setRST_3
easyavr_v7_ATMEGA32__setCS_3:
;__ea_atmega32_gpio.c,95 :: 		static void _setCS_3  (uint8_t value)   { PORTB4_bit = value; }
0x0096	0xFA20    	BST        R2, 0
0x0098	0xB3B8    	IN         R27, PORTB4_bit+0
0x009A	0xF9B4    	BLD        R27, 4
0x009C	0xBBB8    	OUT        PORTB4_bit+0, R27
L_end__setCS_3:
0x009E	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setCS_3
easyavr_v7_ATMEGA32__setSCK_3:
;__ea_atmega32_gpio.c,96 :: 		static void _setSCK_3 (uint8_t value)   { PORTB7_bit = value; }
0x019A	0xFA20    	BST        R2, 0
0x019C	0xB3B8    	IN         R27, PORTB7_bit+0
0x019E	0xF9B7    	BLD        R27, 7
0x01A0	0xBBB8    	OUT        PORTB7_bit+0, R27
L_end__setSCK_3:
0x01A2	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setSCK_3
easyavr_v7_ATMEGA32__setMISO_3:
;__ea_atmega32_gpio.c,97 :: 		static void _setMISO_3(uint8_t value)   { PORTB6_bit = value; }
0x0190	0xFA20    	BST        R2, 0
0x0192	0xB3B8    	IN         R27, PORTB6_bit+0
0x0194	0xF9B6    	BLD        R27, 6
0x0196	0xBBB8    	OUT        PORTB6_bit+0, R27
L_end__setMISO_3:
0x0198	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setMISO_3
easyavr_v7_ATMEGA32__setMOSI_3:
;__ea_atmega32_gpio.c,98 :: 		static void _setMOSI_3(uint8_t value)   { PORTB5_bit = value; }
0x01A4	0xFA20    	BST        R2, 0
0x01A6	0xB3B8    	IN         R27, PORTB5_bit+0
0x01A8	0xF9B5    	BLD        R27, 5
0x01AA	0xBBB8    	OUT        PORTB5_bit+0, R27
L_end__setMOSI_3:
0x01AC	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setMOSI_3
easyavr_v7_ATMEGA32__setPWM_3:
;__ea_atmega32_gpio.c,99 :: 		static void _setPWM_3 (uint8_t value)   { PORTB3_bit = value; }
0x01B8	0xFA20    	BST        R2, 0
0x01BA	0xB3B8    	IN         R27, PORTB3_bit+0
0x01BC	0xF9B3    	BLD        R27, 3
0x01BE	0xBBB8    	OUT        PORTB3_bit+0, R27
L_end__setPWM_3:
0x01C0	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setPWM_3
easyavr_v7_ATMEGA32__setINT_3:
;__ea_atmega32_gpio.c,100 :: 		static void _setINT_3 (uint8_t value)   { PORTB2_bit = value; }
0x01AE	0xFA20    	BST        R2, 0
0x01B0	0xB3B8    	IN         R27, PORTB2_bit+0
0x01B2	0xF9B2    	BLD        R27, 2
0x01B4	0xBBB8    	OUT        PORTB2_bit+0, R27
L_end__setINT_3:
0x01B6	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setINT_3
easyavr_v7_ATMEGA32__setRX_3:
;__ea_atmega32_gpio.c,101 :: 		static void _setRX_3  (uint8_t value)   { PORTD2_bit = value; }
0x0186	0xFA20    	BST        R2, 0
0x0188	0xB3B2    	IN         R27, PORTD2_bit+0
0x018A	0xF9B2    	BLD        R27, 2
0x018C	0xBBB2    	OUT        PORTD2_bit+0, R27
L_end__setRX_3:
0x018E	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setRX_3
easyavr_v7_ATMEGA32__setTX_3:
;__ea_atmega32_gpio.c,102 :: 		static void _setTX_3  (uint8_t value)   { PORTD3_bit = value; }
0x0104	0xFA20    	BST        R2, 0
0x0106	0xB3B2    	IN         R27, PORTD3_bit+0
0x0108	0xF9B3    	BLD        R27, 3
0x010A	0xBBB2    	OUT        PORTD3_bit+0, R27
L_end__setTX_3:
0x010C	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setTX_3
easyavr_v7_ATMEGA32__setSCL_3:
;__ea_atmega32_gpio.c,103 :: 		static void _setSCL_3 (uint8_t value)   { PORTC0_bit = value; }
0x00FA	0xFA20    	BST        R2, 0
0x00FC	0xB3B5    	IN         R27, PORTC0_bit+0
0x00FE	0xF9B0    	BLD        R27, 0
0x0100	0xBBB5    	OUT        PORTC0_bit+0, R27
L_end__setSCL_3:
0x0102	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setSCL_3
easyavr_v7_ATMEGA32__setSDA_3:
;__ea_atmega32_gpio.c,104 :: 		static void _setSDA_3 (uint8_t value)   { PORTC1_bit = value; }
0x010E	0xFA20    	BST        R2, 0
0x0110	0xB3B5    	IN         R27, PORTC1_bit+0
0x0112	0xF9B1    	BLD        R27, 1
0x0114	0xBBB5    	OUT        PORTC1_bit+0, R27
L_end__setSDA_3:
0x0116	0x9508    	RET
; end of easyavr_v7_ATMEGA32__setSDA_3
_TWI_Status:
;__Lib_TWI.c,89 :: 		
;__Lib_TWI.c,90 :: 		
0x05F8	0xB101    	IN         R16, TWSR+0
0x05FA	0x7F08    	ANDI       R16, 248
;__Lib_TWI.c,93 :: 		
L_end_TWI_Status:
0x05FC	0x9508    	RET
; end of _TWI_Status
_TWI_Read:
;__Lib_TWI.c,141 :: 		
;__Lib_TWI.c,144 :: 		
0x0A64	0x922F    	PUSH       R2
; timeout start address is: 20 (R20)
0x0A66	0x01699140  	LDS        R20, __Lib_TWI__TWI_TIMEOUT+0
0x0A6A	0x016A9150  	LDS        R21, __Lib_TWI__TWI_TIMEOUT+1
0x0A6E	0x016B9160  	LDS        R22, __Lib_TWI__TWI_TIMEOUT+2
0x0A72	0x016C9170  	LDS        R23, __Lib_TWI__TWI_TIMEOUT+3
;__Lib_TWI.c,146 :: 		
0x0A76	0xE8B4    	LDI        R27, 132
0x0A78	0xBFB6    	OUT        TWCR+0, R27
;__Lib_TWI.c,147 :: 		
0x0A7A	0xFA20    	BST        R2, 0
0x0A7C	0xB7B6    	IN         R27, TWEA_bit+0
0x0A7E	0xF9B6    	BLD        R27, 6
0x0A80	0xBFB6    	OUT        TWEA_bit+0, R27
; timeout end address is: 20 (R20)
;__Lib_TWI.c,148 :: 		
L_TWI_Read8:
; timeout start address is: 20 (R20)
0x0A82	0xB7B6    	IN         R27, TWINT_bit+0
0x0A84	0xFDB7    	SBRC       R27, 7
0x0A86	0xC025    	RJMP       L_TWI_Read9
;__Lib_TWI.c,150 :: 		
0x0A88	0x01699100  	LDS        R16, __Lib_TWI__TWI_TIMEOUT+0
0x0A8C	0x016A9110  	LDS        R17, __Lib_TWI__TWI_TIMEOUT+1
0x0A90	0x016B9120  	LDS        R18, __Lib_TWI__TWI_TIMEOUT+2
0x0A94	0x016C9130  	LDS        R19, __Lib_TWI__TWI_TIMEOUT+3
0x0A98	0x2FB0    	MOV        R27, R16
0x0A9A	0x2BB1    	OR         R27, R17
0x0A9C	0x2BB2    	OR         R27, R18
0x0A9E	0x2BB3    	OR         R27, R19
0x0AA0	0xF0B9    	BREQ       L__TWI_Read14
L__TWI_Read30:
;__Lib_TWI.c,152 :: 		
0x0AA2	0x2FB4    	MOV        R27, R20
0x0AA4	0x2BB5    	OR         R27, R21
0x0AA6	0x2BB6    	OR         R27, R22
0x0AA8	0x2BB7    	OR         R27, R23
0x0AAA	0xF449    	BRNE       L_TWI_Read11
L__TWI_Read31:
; timeout end address is: 20 (R20)
;__Lib_TWI.c,154 :: 		
0x0AAC	0xE0B3    	LDI        R27, 3
0x0AAE	0x2E2B    	MOV        R2, R27
0x0AB0	0x02CD91E0  	LDS        R30, _TWI_Timeout_Ptr+0
0x0AB4	0x02CE91F0  	LDS        R31, _TWI_Timeout_Ptr+1
0x0AB8	0x9509    	ICALL
;__Lib_TWI.c,155 :: 		
0x0ABA	0xE001    	LDI        R16, 1
0x0ABC	0xC00B    	RJMP       L_end_TWI_Read
;__Lib_TWI.c,156 :: 		
L_TWI_Read11:
;__Lib_TWI.c,157 :: 		
; timeout start address is: 20 (R20)
0x0ABE	0x018A    	MOVW       R16, R20
0x0AC0	0x019B    	MOVW       R18, R22
0x0AC2	0x5001    	SUBI       R16, 1
0x0AC4	0x4010    	SBCI       R17, 0
0x0AC6	0x4020    	SBCI       R18, 0
0x0AC8	0x4030    	SBCI       R19, 0
0x0ACA	0x01A8    	MOVW       R20, R16
0x0ACC	0x01B9    	MOVW       R22, R18
; timeout end address is: 20 (R20)
;__Lib_TWI.c,158 :: 		
0x0ACE	0xC000    	RJMP       L_TWI_Read10
L__TWI_Read14:
;__Lib_TWI.c,150 :: 		
;__Lib_TWI.c,158 :: 		
L_TWI_Read10:
;__Lib_TWI.c,159 :: 		
; timeout start address is: 20 (R20)
; timeout end address is: 20 (R20)
0x0AD0	0xCFD8    	RJMP       L_TWI_Read8
L_TWI_Read9:
;__Lib_TWI.c,160 :: 		
0x0AD2	0xB103    	IN         R16, TWDR+0
;__Lib_TWI.c,161 :: 		
;__Lib_TWI.c,160 :: 		
;__Lib_TWI.c,161 :: 		
L_end_TWI_Read:
0x0AD4	0x902F    	POP        R2
0x0AD6	0x9508    	RET
; end of _TWI_Read
_TWI_Stop:
;__Lib_TWI.c,116 :: 		
;__Lib_TWI.c,117 :: 		
0x0A1A	0xE9B4    	LDI        R27, 148
0x0A1C	0xBFB6    	OUT        TWCR+0, R27
;__Lib_TWI.c,118 :: 		
L_end_TWI_Stop:
0x0A1E	0x9508    	RET
; end of _TWI_Stop
_TWI_Init:
;__Lib_TWI.c,78 :: 		
;__Lib_TWI.c,79 :: 		
0x08EA	0xE3B0    	LDI        R27, 48
0x08EC	0xB9B1    	OUT        TWSR+0, R27
;__Lib_TWI.c,81 :: 		
0x08EE	0xE0B4    	LDI        R27, 4
0x08F0	0xBFB6    	OUT        TWCR+0, R27
;__Lib_TWI.c,82 :: 		
L_end_TWI_Init:
0x08F2	0x9508    	RET
; end of _TWI_Init
easyavr_v7_ATMEGA32__i2cInit_2:
0x1EF6	0x93CF    	PUSH       R28
0x1EF8	0x93DF    	PUSH       R29
0x1EFA	0xB7CD    	IN         R28, SPL+0
0x1EFC	0xB7DE    	IN         R29, SPL+1
0x1EFE	0x9722    	SBIW       R28, 2
0x1F00	0xBFCD    	OUT        SPL+0, R28
0x1F02	0xBFDE    	OUT        SPL+1, R29
0x1F04	0x9621    	ADIW       R28, 1
;__ea_atmega32_i2c.c,48 :: 		static T_mikrobus_ret _i2cInit_2(const uint32_t* cfg)
;__ea_atmega32_i2c.c,50 :: 		switch( cfg[0] )
0x1F06	0x922F    	PUSH       R2
0x1F08	0x923F    	PUSH       R3
0x1F0A	0x0181    	MOVW       R16, R2
0x1F0C	0x8308    	STD        Y+0, R16
0x1F0E	0x8319    	STD        Y+1, R17
0x1F10	0xC018    	RJMP       L_easyavr_v7_ATMEGA32__i2cInit_250
;__ea_atmega32_i2c.c,52 :: 		case 100000 : TWI_Init( 100000 ); break;
L_easyavr_v7_ATMEGA32__i2cInit_252:
0x1F12	0xB1B1    	IN         R27, TWPS0_bit+0
0x1F14	0x7FBE    	CBR        R27, 1
0x1F16	0xB9B1    	OUT        TWPS0_bit+0, R27
0x1F18	0xB1B1    	IN         R27, TWPS1_bit+0
0x1F1A	0x7FBD    	CBR        R27, 2
0x1F1C	0xB9B1    	OUT        TWPS1_bit+0, R27
0x1F1E	0xE2B0    	LDI        R27, 32
0x1F20	0xB9B0    	OUT        TWBR+0, R27
0x1F22	0x0475940E  	CALL       _TWI_Init+0
0x1F26	0xC02A    	RJMP       L_easyavr_v7_ATMEGA32__i2cInit_251
;__ea_atmega32_i2c.c,54 :: 		case 0 : { TWI_Start(  ); TWI_Write(0x00); TWI_Read(0x00); TWI_Stop(  ); break; }
L_easyavr_v7_ATMEGA32__i2cInit_253:
0x1F28	0x03A8940E  	CALL       _TWI_Start+0
0x1F2C	0x2422    	CLR        R2
0x1F2E	0x02FF940E  	CALL       _TWI_Write+0
0x1F32	0x2422    	CLR        R2
0x1F34	0x0532940E  	CALL       _TWI_Read+0
0x1F38	0x050D940E  	CALL       _TWI_Stop+0
0x1F3C	0xC01F    	RJMP       L_easyavr_v7_ATMEGA32__i2cInit_251
;__ea_atmega32_i2c.c,55 :: 		default     : return _MIKROBUS_ERR_I2C;
L_easyavr_v7_ATMEGA32__i2cInit_254:
0x1F3E	0xE004    	LDI        R16, 4
0x1F40	0xC01E    	RJMP       L_end__i2cInit_2
;__ea_atmega32_i2c.c,56 :: 		}
L_easyavr_v7_ATMEGA32__i2cInit_250:
0x1F42	0x8148    	LDD        R20, Y+0
0x1F44	0x8159    	LDD        R21, Y+1
0x1F46	0x01FA    	MOVW       R30, R20
0x1F48	0x9105    	LPM        R16, Z+
0x1F4A	0x9115    	LPM        R17, Z+
0x1F4C	0x9125    	LPM        R18, Z+
0x1F4E	0x9135    	LPM        R19, Z+
0x1F50	0x3030    	CPI        R19, 0
0x1F52	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__i2cInit_2228
0x1F54	0x3021    	CPI        R18, 1
0x1F56	0xF419    	BRNE       L_easyavr_v7_ATMEGA32__i2cInit_2228
0x1F58	0x3816    	CPI        R17, 134
0x1F5A	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__i2cInit_2228
0x1F5C	0x3A00    	CPI        R16, 160
L_easyavr_v7_ATMEGA32__i2cInit_2228:
0x1F5E	0xF2C9    	BREQ       L_easyavr_v7_ATMEGA32__i2cInit_252
L_easyavr_v7_ATMEGA32__i2cInit_2229:
0x1F60	0x01FA    	MOVW       R30, R20
0x1F62	0x9105    	LPM        R16, Z+
0x1F64	0x9115    	LPM        R17, Z+
0x1F66	0x9125    	LPM        R18, Z+
0x1F68	0x9135    	LPM        R19, Z+
0x1F6A	0x3030    	CPI        R19, 0
0x1F6C	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__i2cInit_2230
0x1F6E	0x3020    	CPI        R18, 0
0x1F70	0xF419    	BRNE       L_easyavr_v7_ATMEGA32__i2cInit_2230
0x1F72	0x3010    	CPI        R17, 0
0x1F74	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__i2cInit_2230
0x1F76	0x3000    	CPI        R16, 0
L_easyavr_v7_ATMEGA32__i2cInit_2230:
0x1F78	0xF2B9    	BREQ       L_easyavr_v7_ATMEGA32__i2cInit_253
L_easyavr_v7_ATMEGA32__i2cInit_2231:
0x1F7A	0xCFE1    	RJMP       L_easyavr_v7_ATMEGA32__i2cInit_254
L_easyavr_v7_ATMEGA32__i2cInit_251:
;__ea_atmega32_i2c.c,57 :: 		return _MIKROBUS_OK;
0x1F7C	0xE000    	LDI        R16, 0
;__ea_atmega32_i2c.c,58 :: 		}
;__ea_atmega32_i2c.c,57 :: 		return _MIKROBUS_OK;
;__ea_atmega32_i2c.c,58 :: 		}
L_end__i2cInit_2:
0x1F7E	0x903F    	POP        R3
0x1F80	0x902F    	POP        R2
0x1F82	0x9621    	ADIW       R28, 1
0x1F84	0xBFCD    	OUT        SPL+0, R28
0x1F86	0xBFDE    	OUT        SPL+1, R29
0x1F88	0x91DF    	POP        R29
0x1F8A	0x91CF    	POP        R28
0x1F8C	0x9508    	RET
; end of easyavr_v7_ATMEGA32__i2cInit_2
easyavr_v7_ATMEGA32__i2cInit_3:
;__ea_atmega32_i2c.c,60 :: 		static T_mikrobus_ret _i2cInit_3(const uint32_t* cfg)
;__ea_atmega32_i2c.c,62 :: 		return _MIKROBUS_ERR_I2C;
0x1E0C	0xE004    	LDI        R16, 4
;__ea_atmega32_i2c.c,63 :: 		}
L_end__i2cInit_3:
0x1E0E	0x9508    	RET
; end of easyavr_v7_ATMEGA32__i2cInit_3
_mikrobus_logInit:
;easyavr_v7_ATMEGA32.c,283 :: 		T_mikrobus_ret mikrobus_logInit(T_log_bus port, const uint32_t baud)
;easyavr_v7_ATMEGA32.c,285 :: 		switch( port )
0x2FE2	0x922F    	PUSH       R2
0x2FE4	0x923F    	PUSH       R3
0x2FE6	0x924F    	PUSH       R4
0x2FE8	0x925F    	PUSH       R5
0x2FEA	0x926F    	PUSH       R6
0x2FEC	0xC01D    	RJMP       L_mikrobus_logInit94
;easyavr_v7_ATMEGA32.c,288 :: 		case _MIKROBUS1 : return _log_init1( baud );
L_mikrobus_logInit96:
0x2FEE	0x2C23    	MOV        R2, R3
0x2FF0	0x2C34    	MOV        R3, R4
0x2FF2	0x2C45    	MOV        R4, R5
0x2FF4	0x2C56    	MOV        R5, R6
0x2FF6	0x0DF4940E  	CALL       easyavr_v7_ATMEGA32__log_init1+0
0x2FFA	0xC023    	RJMP       L_end_mikrobus_logInit
;easyavr_v7_ATMEGA32.c,291 :: 		case _MIKROBUS2: return _log_init2( baud );
L_mikrobus_logInit97:
0x2FFC	0x2C23    	MOV        R2, R3
0x2FFE	0x2C34    	MOV        R3, R4
0x3000	0x2C45    	MOV        R4, R5
0x3002	0x2C56    	MOV        R5, R6
0x3004	0x0E7C940E  	CALL       easyavr_v7_ATMEGA32__log_init2+0
0x3008	0xC01C    	RJMP       L_end_mikrobus_logInit
;easyavr_v7_ATMEGA32.c,294 :: 		case _MIKROBUS3: return _log_init3( baud );
L_mikrobus_logInit98:
0x300A	0x2C23    	MOV        R2, R3
0x300C	0x2C34    	MOV        R3, R4
0x300E	0x2C45    	MOV        R4, R5
0x3010	0x2C56    	MOV        R5, R6
0x3012	0x0F04940E  	CALL       easyavr_v7_ATMEGA32__log_init3+0
0x3016	0xC015    	RJMP       L_end_mikrobus_logInit
;easyavr_v7_ATMEGA32.c,306 :: 		case _LOG_USBUART : return _log_initUart( baud );
L_mikrobus_logInit99:
0x3018	0x2C23    	MOV        R2, R3
0x301A	0x2C34    	MOV        R3, R4
0x301C	0x2C45    	MOV        R4, R5
0x301E	0x2C56    	MOV        R5, R6
0x3020	0xD81C    	RCALL      easyavr_v7_ATMEGA32__log_initUart+0
0x3022	0xC00F    	RJMP       L_end_mikrobus_logInit
;easyavr_v7_ATMEGA32.c,314 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_logInit100:
0x3024	0xE001    	LDI        R16, 1
0x3026	0xC00D    	RJMP       L_end_mikrobus_logInit
;easyavr_v7_ATMEGA32.c,315 :: 		}
L_mikrobus_logInit94:
0x3028	0xE0B0    	LDI        R27, 0
0x302A	0x162B    	CP         R2, R27
0x302C	0xF301    	BREQ       L_mikrobus_logInit96
L__mikrobus_logInit283:
0x302E	0xE0B1    	LDI        R27, 1
0x3030	0x162B    	CP         R2, R27
0x3032	0xF321    	BREQ       L_mikrobus_logInit97
L__mikrobus_logInit284:
0x3034	0xE0B2    	LDI        R27, 2
0x3036	0x162B    	CP         R2, R27
0x3038	0xF341    	BREQ       L_mikrobus_logInit98
L__mikrobus_logInit285:
0x303A	0xE1B0    	LDI        R27, 16
0x303C	0x162B    	CP         R2, R27
0x303E	0xF361    	BREQ       L_mikrobus_logInit99
L__mikrobus_logInit286:
0x3040	0xCFF1    	RJMP       L_mikrobus_logInit100
;easyavr_v7_ATMEGA32.c,317 :: 		}
L_end_mikrobus_logInit:
0x3042	0x906F    	POP        R6
0x3044	0x905F    	POP        R5
0x3046	0x904F    	POP        R4
0x3048	0x903F    	POP        R3
0x304A	0x902F    	POP        R2
0x304C	0x9508    	RET
; end of _mikrobus_logInit
easyavr_v7_ATMEGA32__log_init1:
;__ea_atmega32_log.c,23 :: 		static T_mikrobus_ret _log_init1(uint32_t baud)
;__ea_atmega32_log.c,25 :: 		switch( baud )
0x1BE8	0xC031    	RJMP       L_easyavr_v7_ATMEGA32__log_init155
;__ea_atmega32_log.c,27 :: 		case 4800   : UART1_Init(4800);   break;
L_easyavr_v7_ATMEGA32__log_init157:
0x1BEA	0xE6B7    	LDI        R27, 103
0x1BEC	0xB9B9    	OUT        UBRRL+0, R27
0x1BEE	0xE0B0    	LDI        R27, 0
0x1BF0	0xBDB0    	OUT        UBRRH+0, R27
0x1BF2	0x0373940E  	CALL       _UART1_Init+0
0x1BF6	0xC078    	RJMP       L_easyavr_v7_ATMEGA32__log_init156
;__ea_atmega32_log.c,28 :: 		case 9600   : UART1_Init(9600);   break;
L_easyavr_v7_ATMEGA32__log_init158:
0x1BF8	0xE3B3    	LDI        R27, 51
0x1BFA	0xB9B9    	OUT        UBRRL+0, R27
0x1BFC	0xE0B0    	LDI        R27, 0
0x1BFE	0xBDB0    	OUT        UBRRH+0, R27
0x1C00	0x0373940E  	CALL       _UART1_Init+0
0x1C04	0xC071    	RJMP       L_easyavr_v7_ATMEGA32__log_init156
;__ea_atmega32_log.c,29 :: 		case 19200  : UART1_Init(19200);  break;
L_easyavr_v7_ATMEGA32__log_init159:
0x1C06	0xE1B9    	LDI        R27, 25
0x1C08	0xB9B9    	OUT        UBRRL+0, R27
0x1C0A	0xE0B0    	LDI        R27, 0
0x1C0C	0xBDB0    	OUT        UBRRH+0, R27
0x1C0E	0x0373940E  	CALL       _UART1_Init+0
0x1C12	0xC06A    	RJMP       L_easyavr_v7_ATMEGA32__log_init156
;__ea_atmega32_log.c,30 :: 		case 38400  : UART1_Init(38400);  break;
L_easyavr_v7_ATMEGA32__log_init160:
0x1C14	0xE0BC    	LDI        R27, 12
0x1C16	0xB9B9    	OUT        UBRRL+0, R27
0x1C18	0xE0B0    	LDI        R27, 0
0x1C1A	0xBDB0    	OUT        UBRRH+0, R27
0x1C1C	0x0373940E  	CALL       _UART1_Init+0
0x1C20	0xC063    	RJMP       L_easyavr_v7_ATMEGA32__log_init156
;__ea_atmega32_log.c,31 :: 		case 57600  : UART1_Init(57600);  break;
L_easyavr_v7_ATMEGA32__log_init161:
0x1C22	0xB1BB    	IN         R27, U2X_bit+0
0x1C24	0x60B2    	SBR        R27, 2
0x1C26	0xB9BB    	OUT        U2X_bit+0, R27
0x1C28	0xE1B0    	LDI        R27, 16
0x1C2A	0xB9B9    	OUT        UBRRL+0, R27
0x1C2C	0xE0B0    	LDI        R27, 0
0x1C2E	0xBDB0    	OUT        UBRRH+0, R27
0x1C30	0x0373940E  	CALL       _UART1_Init+0
0x1C34	0xC059    	RJMP       L_easyavr_v7_ATMEGA32__log_init156
;__ea_atmega32_log.c,32 :: 		case 115200 : UART1_Init(115200); break;
L_easyavr_v7_ATMEGA32__log_init162:
0x1C36	0xB1BB    	IN         R27, U2X_bit+0
0x1C38	0x60B2    	SBR        R27, 2
0x1C3A	0xB9BB    	OUT        U2X_bit+0, R27
0x1C3C	0xE0B8    	LDI        R27, 8
0x1C3E	0xB9B9    	OUT        UBRRL+0, R27
0x1C40	0xE0B0    	LDI        R27, 0
0x1C42	0xBDB0    	OUT        UBRRH+0, R27
0x1C44	0x0373940E  	CALL       _UART1_Init+0
0x1C48	0xC04F    	RJMP       L_easyavr_v7_ATMEGA32__log_init156
;__ea_atmega32_log.c,33 :: 		default     : _MIKROBUS_ERR_LOG;
L_easyavr_v7_ATMEGA32__log_init163:
;__ea_atmega32_log.c,34 :: 		}
0x1C4A	0xC04E    	RJMP       L_easyavr_v7_ATMEGA32__log_init156
L_easyavr_v7_ATMEGA32__log_init155:
0x1C4C	0xE0B0    	LDI        R27, 0
0x1C4E	0x165B    	CP         R5, R27
0x1C50	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init1235
0x1C52	0xE0B0    	LDI        R27, 0
0x1C54	0x164B    	CP         R4, R27
0x1C56	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init1235
0x1C58	0xE1B2    	LDI        R27, 18
0x1C5A	0x163B    	CP         R3, R27
0x1C5C	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init1235
0x1C5E	0xECB0    	LDI        R27, 192
0x1C60	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init1235:
0x1C62	0xF219    	BREQ       L_easyavr_v7_ATMEGA32__log_init157
L_easyavr_v7_ATMEGA32__log_init1236:
0x1C64	0xE0B0    	LDI        R27, 0
0x1C66	0x165B    	CP         R5, R27
0x1C68	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init1237
0x1C6A	0xE0B0    	LDI        R27, 0
0x1C6C	0x164B    	CP         R4, R27
0x1C6E	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init1237
0x1C70	0xE2B5    	LDI        R27, 37
0x1C72	0x163B    	CP         R3, R27
0x1C74	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init1237
0x1C76	0xE8B0    	LDI        R27, 128
0x1C78	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init1237:
0x1C7A	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_init1238
0x1C7C	0xCFBD    	RJMP       L_easyavr_v7_ATMEGA32__log_init158
L_easyavr_v7_ATMEGA32__log_init1238:
0x1C7E	0xE0B0    	LDI        R27, 0
0x1C80	0x165B    	CP         R5, R27
0x1C82	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init1239
0x1C84	0xE0B0    	LDI        R27, 0
0x1C86	0x164B    	CP         R4, R27
0x1C88	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init1239
0x1C8A	0xE4BB    	LDI        R27, 75
0x1C8C	0x163B    	CP         R3, R27
0x1C8E	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init1239
0x1C90	0xE0B0    	LDI        R27, 0
0x1C92	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init1239:
0x1C94	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_init1240
0x1C96	0xCFB7    	RJMP       L_easyavr_v7_ATMEGA32__log_init159
L_easyavr_v7_ATMEGA32__log_init1240:
0x1C98	0xE0B0    	LDI        R27, 0
0x1C9A	0x165B    	CP         R5, R27
0x1C9C	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init1241
0x1C9E	0xE0B0    	LDI        R27, 0
0x1CA0	0x164B    	CP         R4, R27
0x1CA2	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init1241
0x1CA4	0xE9B6    	LDI        R27, 150
0x1CA6	0x163B    	CP         R3, R27
0x1CA8	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init1241
0x1CAA	0xE0B0    	LDI        R27, 0
0x1CAC	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init1241:
0x1CAE	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_init1242
0x1CB0	0xCFB1    	RJMP       L_easyavr_v7_ATMEGA32__log_init160
L_easyavr_v7_ATMEGA32__log_init1242:
0x1CB2	0xE0B0    	LDI        R27, 0
0x1CB4	0x165B    	CP         R5, R27
0x1CB6	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init1243
0x1CB8	0xE0B0    	LDI        R27, 0
0x1CBA	0x164B    	CP         R4, R27
0x1CBC	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init1243
0x1CBE	0xEEB1    	LDI        R27, 225
0x1CC0	0x163B    	CP         R3, R27
0x1CC2	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init1243
0x1CC4	0xE0B0    	LDI        R27, 0
0x1CC6	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init1243:
0x1CC8	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_init1244
0x1CCA	0xCFAB    	RJMP       L_easyavr_v7_ATMEGA32__log_init161
L_easyavr_v7_ATMEGA32__log_init1244:
0x1CCC	0xE0B0    	LDI        R27, 0
0x1CCE	0x165B    	CP         R5, R27
0x1CD0	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init1245
0x1CD2	0xE0B1    	LDI        R27, 1
0x1CD4	0x164B    	CP         R4, R27
0x1CD6	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init1245
0x1CD8	0xECB2    	LDI        R27, 194
0x1CDA	0x163B    	CP         R3, R27
0x1CDC	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init1245
0x1CDE	0xE0B0    	LDI        R27, 0
0x1CE0	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init1245:
0x1CE2	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_init1246
0x1CE4	0xCFA8    	RJMP       L_easyavr_v7_ATMEGA32__log_init162
L_easyavr_v7_ATMEGA32__log_init1246:
0x1CE6	0xCFB1    	RJMP       L_easyavr_v7_ATMEGA32__log_init163
L_easyavr_v7_ATMEGA32__log_init156:
;__ea_atmega32_log.c,35 :: 		logger = UART1_Write;
0x1CE8	0xE3B4    	LDI        R27, lo_addr(_UART1_Write+0)
0x1CEA	0x02BC93B0  	STS        _logger+0, R27
0x1CEE	0xE0B3    	LDI        R27, hi_addr(_UART1_Write+0)
0x1CF0	0x02BD93B0  	STS        _logger+1, R27
;__ea_atmega32_log.c,36 :: 		return 0;
0x1CF4	0xE000    	LDI        R16, 0
;__ea_atmega32_log.c,37 :: 		}
L_end__log_init1:
0x1CF6	0x9508    	RET
; end of easyavr_v7_ATMEGA32__log_init1
_UART1_Init:
;__Lib_UART_d01_ursel.c,31 :: 		
;__Lib_UART_d01_ursel.c,32 :: 		
0x06E6	0xE3B4    	LDI        R27, lo_addr(_UART1_Write+0)
0x06E8	0x02CB93B0  	STS        _UART_Wr_Ptr+0, R27
0x06EC	0xE0B3    	LDI        R27, hi_addr(_UART1_Write+0)
0x06EE	0x02CC93B0  	STS        _UART_Wr_Ptr+1, R27
;__Lib_UART_d01_ursel.c,33 :: 		
0x06F2	0xEFB0    	LDI        R27, lo_addr(_UART1_Read+0)
0x06F4	0x030F93B0  	STS        _UART_Rd_Ptr+0, R27
0x06F8	0xE0B2    	LDI        R27, hi_addr(_UART1_Read+0)
0x06FA	0x031093B0  	STS        _UART_Rd_Ptr+1, R27
;__Lib_UART_d01_ursel.c,34 :: 		
0x06FE	0xEFB2    	LDI        R27, lo_addr(_UART1_Data_Ready+0)
0x0700	0x031193B0  	STS        _UART_Rdy_Ptr+0, R27
0x0704	0xE0B2    	LDI        R27, hi_addr(_UART1_Data_Ready+0)
0x0706	0x031293B0  	STS        _UART_Rdy_Ptr+1, R27
;__Lib_UART_d01_ursel.c,35 :: 		
0x070A	0xEFB7    	LDI        R27, lo_addr(_UART1_Tx_Idle+0)
0x070C	0x02C993B0  	STS        _UART_Tx_Idle_Ptr+0, R27
0x0710	0xE0B2    	LDI        R27, hi_addr(_UART1_Tx_Idle+0)
0x0712	0x02CA93B0  	STS        _UART_Tx_Idle_Ptr+1, R27
;__Lib_UART_d01_ursel.c,37 :: 		
0x0716	0xB3B1    	IN         R27, DDRD+0
0x0718	0x7FBE    	CBR        R27, 1
0x071A	0xBBB1    	OUT        DDRD+0, R27
;__Lib_UART_d01_ursel.c,38 :: 		
0x071C	0xB3B1    	IN         R27, DDRD+0
0x071E	0x60B2    	SBR        R27, 2
0x0720	0xBBB1    	OUT        DDRD+0, R27
;__Lib_UART_d01_ursel.c,40 :: 		
0x0722	0xB10A    	IN         R16, UCSR0B+0
0x0724	0x6108    	ORI        R16, 24
0x0726	0xB90A    	OUT        UCSR0B+0, R16
;__Lib_UART_d01_ursel.c,41 :: 		
0x0728	0xE8B6    	LDI        R27, 134
0x072A	0xBDB0    	OUT        UCSR0C+0, R27
;__Lib_UART_d01_ursel.c,42 :: 		
L_end_UART1_Init:
0x072C	0x9508    	RET
; end of _UART1_Init
easyavr_v7_ATMEGA32__log_init2:
;__ea_atmega32_log.c,39 :: 		static T_mikrobus_ret _log_init2(uint32_t baud)
;__ea_atmega32_log.c,41 :: 		switch( baud )
0x1CF8	0xC031    	RJMP       L_easyavr_v7_ATMEGA32__log_init264
;__ea_atmega32_log.c,43 :: 		case 4800   : UART1_Init(4800);   break;
L_easyavr_v7_ATMEGA32__log_init266:
0x1CFA	0xE6B7    	LDI        R27, 103
0x1CFC	0xB9B9    	OUT        UBRRL+0, R27
0x1CFE	0xE0B0    	LDI        R27, 0
0x1D00	0xBDB0    	OUT        UBRRH+0, R27
0x1D02	0x0373940E  	CALL       _UART1_Init+0
0x1D06	0xC078    	RJMP       L_easyavr_v7_ATMEGA32__log_init265
;__ea_atmega32_log.c,44 :: 		case 9600   : UART1_Init(9600);   break;
L_easyavr_v7_ATMEGA32__log_init267:
0x1D08	0xE3B3    	LDI        R27, 51
0x1D0A	0xB9B9    	OUT        UBRRL+0, R27
0x1D0C	0xE0B0    	LDI        R27, 0
0x1D0E	0xBDB0    	OUT        UBRRH+0, R27
0x1D10	0x0373940E  	CALL       _UART1_Init+0
0x1D14	0xC071    	RJMP       L_easyavr_v7_ATMEGA32__log_init265
;__ea_atmega32_log.c,45 :: 		case 19200  : UART1_Init(19200);  break;
L_easyavr_v7_ATMEGA32__log_init268:
0x1D16	0xE1B9    	LDI        R27, 25
0x1D18	0xB9B9    	OUT        UBRRL+0, R27
0x1D1A	0xE0B0    	LDI        R27, 0
0x1D1C	0xBDB0    	OUT        UBRRH+0, R27
0x1D1E	0x0373940E  	CALL       _UART1_Init+0
0x1D22	0xC06A    	RJMP       L_easyavr_v7_ATMEGA32__log_init265
;__ea_atmega32_log.c,46 :: 		case 38400  : UART1_Init(38400);  break;
L_easyavr_v7_ATMEGA32__log_init269:
0x1D24	0xE0BC    	LDI        R27, 12
0x1D26	0xB9B9    	OUT        UBRRL+0, R27
0x1D28	0xE0B0    	LDI        R27, 0
0x1D2A	0xBDB0    	OUT        UBRRH+0, R27
0x1D2C	0x0373940E  	CALL       _UART1_Init+0
0x1D30	0xC063    	RJMP       L_easyavr_v7_ATMEGA32__log_init265
;__ea_atmega32_log.c,47 :: 		case 57600  : UART1_Init(57600);  break;
L_easyavr_v7_ATMEGA32__log_init270:
0x1D32	0xB1BB    	IN         R27, U2X_bit+0
0x1D34	0x60B2    	SBR        R27, 2
0x1D36	0xB9BB    	OUT        U2X_bit+0, R27
0x1D38	0xE1B0    	LDI        R27, 16
0x1D3A	0xB9B9    	OUT        UBRRL+0, R27
0x1D3C	0xE0B0    	LDI        R27, 0
0x1D3E	0xBDB0    	OUT        UBRRH+0, R27
0x1D40	0x0373940E  	CALL       _UART1_Init+0
0x1D44	0xC059    	RJMP       L_easyavr_v7_ATMEGA32__log_init265
;__ea_atmega32_log.c,48 :: 		case 115200 : UART1_Init(115200); break;
L_easyavr_v7_ATMEGA32__log_init271:
0x1D46	0xB1BB    	IN         R27, U2X_bit+0
0x1D48	0x60B2    	SBR        R27, 2
0x1D4A	0xB9BB    	OUT        U2X_bit+0, R27
0x1D4C	0xE0B8    	LDI        R27, 8
0x1D4E	0xB9B9    	OUT        UBRRL+0, R27
0x1D50	0xE0B0    	LDI        R27, 0
0x1D52	0xBDB0    	OUT        UBRRH+0, R27
0x1D54	0x0373940E  	CALL       _UART1_Init+0
0x1D58	0xC04F    	RJMP       L_easyavr_v7_ATMEGA32__log_init265
;__ea_atmega32_log.c,49 :: 		default     : _MIKROBUS_ERR_LOG;
L_easyavr_v7_ATMEGA32__log_init272:
;__ea_atmega32_log.c,50 :: 		}
0x1D5A	0xC04E    	RJMP       L_easyavr_v7_ATMEGA32__log_init265
L_easyavr_v7_ATMEGA32__log_init264:
0x1D5C	0xE0B0    	LDI        R27, 0
0x1D5E	0x165B    	CP         R5, R27
0x1D60	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init2248
0x1D62	0xE0B0    	LDI        R27, 0
0x1D64	0x164B    	CP         R4, R27
0x1D66	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init2248
0x1D68	0xE1B2    	LDI        R27, 18
0x1D6A	0x163B    	CP         R3, R27
0x1D6C	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init2248
0x1D6E	0xECB0    	LDI        R27, 192
0x1D70	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init2248:
0x1D72	0xF219    	BREQ       L_easyavr_v7_ATMEGA32__log_init266
L_easyavr_v7_ATMEGA32__log_init2249:
0x1D74	0xE0B0    	LDI        R27, 0
0x1D76	0x165B    	CP         R5, R27
0x1D78	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init2250
0x1D7A	0xE0B0    	LDI        R27, 0
0x1D7C	0x164B    	CP         R4, R27
0x1D7E	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init2250
0x1D80	0xE2B5    	LDI        R27, 37
0x1D82	0x163B    	CP         R3, R27
0x1D84	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init2250
0x1D86	0xE8B0    	LDI        R27, 128
0x1D88	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init2250:
0x1D8A	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_init2251
0x1D8C	0xCFBD    	RJMP       L_easyavr_v7_ATMEGA32__log_init267
L_easyavr_v7_ATMEGA32__log_init2251:
0x1D8E	0xE0B0    	LDI        R27, 0
0x1D90	0x165B    	CP         R5, R27
0x1D92	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init2252
0x1D94	0xE0B0    	LDI        R27, 0
0x1D96	0x164B    	CP         R4, R27
0x1D98	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init2252
0x1D9A	0xE4BB    	LDI        R27, 75
0x1D9C	0x163B    	CP         R3, R27
0x1D9E	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init2252
0x1DA0	0xE0B0    	LDI        R27, 0
0x1DA2	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init2252:
0x1DA4	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_init2253
0x1DA6	0xCFB7    	RJMP       L_easyavr_v7_ATMEGA32__log_init268
L_easyavr_v7_ATMEGA32__log_init2253:
0x1DA8	0xE0B0    	LDI        R27, 0
0x1DAA	0x165B    	CP         R5, R27
0x1DAC	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init2254
0x1DAE	0xE0B0    	LDI        R27, 0
0x1DB0	0x164B    	CP         R4, R27
0x1DB2	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init2254
0x1DB4	0xE9B6    	LDI        R27, 150
0x1DB6	0x163B    	CP         R3, R27
0x1DB8	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init2254
0x1DBA	0xE0B0    	LDI        R27, 0
0x1DBC	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init2254:
0x1DBE	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_init2255
0x1DC0	0xCFB1    	RJMP       L_easyavr_v7_ATMEGA32__log_init269
L_easyavr_v7_ATMEGA32__log_init2255:
0x1DC2	0xE0B0    	LDI        R27, 0
0x1DC4	0x165B    	CP         R5, R27
0x1DC6	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init2256
0x1DC8	0xE0B0    	LDI        R27, 0
0x1DCA	0x164B    	CP         R4, R27
0x1DCC	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init2256
0x1DCE	0xEEB1    	LDI        R27, 225
0x1DD0	0x163B    	CP         R3, R27
0x1DD2	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init2256
0x1DD4	0xE0B0    	LDI        R27, 0
0x1DD6	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init2256:
0x1DD8	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_init2257
0x1DDA	0xCFAB    	RJMP       L_easyavr_v7_ATMEGA32__log_init270
L_easyavr_v7_ATMEGA32__log_init2257:
0x1DDC	0xE0B0    	LDI        R27, 0
0x1DDE	0x165B    	CP         R5, R27
0x1DE0	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_init2258
0x1DE2	0xE0B1    	LDI        R27, 1
0x1DE4	0x164B    	CP         R4, R27
0x1DE6	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_init2258
0x1DE8	0xECB2    	LDI        R27, 194
0x1DEA	0x163B    	CP         R3, R27
0x1DEC	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_init2258
0x1DEE	0xE0B0    	LDI        R27, 0
0x1DF0	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_init2258:
0x1DF2	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_init2259
0x1DF4	0xCFA8    	RJMP       L_easyavr_v7_ATMEGA32__log_init271
L_easyavr_v7_ATMEGA32__log_init2259:
0x1DF6	0xCFB1    	RJMP       L_easyavr_v7_ATMEGA32__log_init272
L_easyavr_v7_ATMEGA32__log_init265:
;__ea_atmega32_log.c,51 :: 		logger = UART1_Write;
0x1DF8	0xE3B4    	LDI        R27, lo_addr(_UART1_Write+0)
0x1DFA	0x02BC93B0  	STS        _logger+0, R27
0x1DFE	0xE0B3    	LDI        R27, hi_addr(_UART1_Write+0)
0x1E00	0x02BD93B0  	STS        _logger+1, R27
;__ea_atmega32_log.c,52 :: 		return 0;
0x1E04	0xE000    	LDI        R16, 0
;__ea_atmega32_log.c,53 :: 		}
L_end__log_init2:
0x1E06	0x9508    	RET
; end of easyavr_v7_ATMEGA32__log_init2
easyavr_v7_ATMEGA32__log_init3:
;__ea_atmega32_log.c,55 :: 		static T_mikrobus_ret _log_init3(uint32_t baud)
;__ea_atmega32_log.c,57 :: 		return _MIKROBUS_ERR_LOG;
0x1E08	0xE006    	LDI        R16, 6
;__ea_atmega32_log.c,58 :: 		}
L_end__log_init3:
0x1E0A	0x9508    	RET
; end of easyavr_v7_ATMEGA32__log_init3
easyavr_v7_ATMEGA32__log_initUart:
;__ea_atmega32_log.c,60 :: 		static T_mikrobus_ret _log_initUart(uint32_t baud)
;__ea_atmega32_log.c,62 :: 		switch( baud )
0x205A	0xC031    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart73
;__ea_atmega32_log.c,64 :: 		case 4800   : UART1_Init(4800);   break;
L_easyavr_v7_ATMEGA32__log_initUart75:
0x205C	0xE6B7    	LDI        R27, 103
0x205E	0xB9B9    	OUT        UBRRL+0, R27
0x2060	0xE0B0    	LDI        R27, 0
0x2062	0xBDB0    	OUT        UBRRH+0, R27
0x2064	0x0373940E  	CALL       _UART1_Init+0
0x2068	0xC078    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart74
;__ea_atmega32_log.c,65 :: 		case 9600   : UART1_Init(9600);   break;
L_easyavr_v7_ATMEGA32__log_initUart76:
0x206A	0xE3B3    	LDI        R27, 51
0x206C	0xB9B9    	OUT        UBRRL+0, R27
0x206E	0xE0B0    	LDI        R27, 0
0x2070	0xBDB0    	OUT        UBRRH+0, R27
0x2072	0x0373940E  	CALL       _UART1_Init+0
0x2076	0xC071    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart74
;__ea_atmega32_log.c,66 :: 		case 19200  : UART1_Init(19200);  break;
L_easyavr_v7_ATMEGA32__log_initUart77:
0x2078	0xE1B9    	LDI        R27, 25
0x207A	0xB9B9    	OUT        UBRRL+0, R27
0x207C	0xE0B0    	LDI        R27, 0
0x207E	0xBDB0    	OUT        UBRRH+0, R27
0x2080	0x0373940E  	CALL       _UART1_Init+0
0x2084	0xC06A    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart74
;__ea_atmega32_log.c,67 :: 		case 38400  : UART1_Init(38400);  break;
L_easyavr_v7_ATMEGA32__log_initUart78:
0x2086	0xE0BC    	LDI        R27, 12
0x2088	0xB9B9    	OUT        UBRRL+0, R27
0x208A	0xE0B0    	LDI        R27, 0
0x208C	0xBDB0    	OUT        UBRRH+0, R27
0x208E	0x0373940E  	CALL       _UART1_Init+0
0x2092	0xC063    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart74
;__ea_atmega32_log.c,68 :: 		case 57600  : UART1_Init(57600);  break;
L_easyavr_v7_ATMEGA32__log_initUart79:
0x2094	0xB1BB    	IN         R27, U2X_bit+0
0x2096	0x60B2    	SBR        R27, 2
0x2098	0xB9BB    	OUT        U2X_bit+0, R27
0x209A	0xE1B0    	LDI        R27, 16
0x209C	0xB9B9    	OUT        UBRRL+0, R27
0x209E	0xE0B0    	LDI        R27, 0
0x20A0	0xBDB0    	OUT        UBRRH+0, R27
0x20A2	0x0373940E  	CALL       _UART1_Init+0
0x20A6	0xC059    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart74
;__ea_atmega32_log.c,69 :: 		case 115200 : UART1_Init(115200); break;
L_easyavr_v7_ATMEGA32__log_initUart80:
0x20A8	0xB1BB    	IN         R27, U2X_bit+0
0x20AA	0x60B2    	SBR        R27, 2
0x20AC	0xB9BB    	OUT        U2X_bit+0, R27
0x20AE	0xE0B8    	LDI        R27, 8
0x20B0	0xB9B9    	OUT        UBRRL+0, R27
0x20B2	0xE0B0    	LDI        R27, 0
0x20B4	0xBDB0    	OUT        UBRRH+0, R27
0x20B6	0x0373940E  	CALL       _UART1_Init+0
0x20BA	0xC04F    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart74
;__ea_atmega32_log.c,70 :: 		default     : _MIKROBUS_ERR_LOG;
L_easyavr_v7_ATMEGA32__log_initUart81:
;__ea_atmega32_log.c,71 :: 		}
0x20BC	0xC04E    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart74
L_easyavr_v7_ATMEGA32__log_initUart73:
0x20BE	0xE0B0    	LDI        R27, 0
0x20C0	0x165B    	CP         R5, R27
0x20C2	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart262
0x20C4	0xE0B0    	LDI        R27, 0
0x20C6	0x164B    	CP         R4, R27
0x20C8	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart262
0x20CA	0xE1B2    	LDI        R27, 18
0x20CC	0x163B    	CP         R3, R27
0x20CE	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart262
0x20D0	0xECB0    	LDI        R27, 192
0x20D2	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_initUart262:
0x20D4	0xF219    	BREQ       L_easyavr_v7_ATMEGA32__log_initUart75
L_easyavr_v7_ATMEGA32__log_initUart263:
0x20D6	0xE0B0    	LDI        R27, 0
0x20D8	0x165B    	CP         R5, R27
0x20DA	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart264
0x20DC	0xE0B0    	LDI        R27, 0
0x20DE	0x164B    	CP         R4, R27
0x20E0	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart264
0x20E2	0xE2B5    	LDI        R27, 37
0x20E4	0x163B    	CP         R3, R27
0x20E6	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart264
0x20E8	0xE8B0    	LDI        R27, 128
0x20EA	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_initUart264:
0x20EC	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart265
0x20EE	0xCFBD    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart76
L_easyavr_v7_ATMEGA32__log_initUart265:
0x20F0	0xE0B0    	LDI        R27, 0
0x20F2	0x165B    	CP         R5, R27
0x20F4	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart266
0x20F6	0xE0B0    	LDI        R27, 0
0x20F8	0x164B    	CP         R4, R27
0x20FA	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart266
0x20FC	0xE4BB    	LDI        R27, 75
0x20FE	0x163B    	CP         R3, R27
0x2100	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart266
0x2102	0xE0B0    	LDI        R27, 0
0x2104	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_initUart266:
0x2106	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart267
0x2108	0xCFB7    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart77
L_easyavr_v7_ATMEGA32__log_initUart267:
0x210A	0xE0B0    	LDI        R27, 0
0x210C	0x165B    	CP         R5, R27
0x210E	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart268
0x2110	0xE0B0    	LDI        R27, 0
0x2112	0x164B    	CP         R4, R27
0x2114	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart268
0x2116	0xE9B6    	LDI        R27, 150
0x2118	0x163B    	CP         R3, R27
0x211A	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart268
0x211C	0xE0B0    	LDI        R27, 0
0x211E	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_initUart268:
0x2120	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart269
0x2122	0xCFB1    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart78
L_easyavr_v7_ATMEGA32__log_initUart269:
0x2124	0xE0B0    	LDI        R27, 0
0x2126	0x165B    	CP         R5, R27
0x2128	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart270
0x212A	0xE0B0    	LDI        R27, 0
0x212C	0x164B    	CP         R4, R27
0x212E	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart270
0x2130	0xEEB1    	LDI        R27, 225
0x2132	0x163B    	CP         R3, R27
0x2134	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart270
0x2136	0xE0B0    	LDI        R27, 0
0x2138	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_initUart270:
0x213A	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart271
0x213C	0xCFAB    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart79
L_easyavr_v7_ATMEGA32__log_initUart271:
0x213E	0xE0B0    	LDI        R27, 0
0x2140	0x165B    	CP         R5, R27
0x2142	0xF441    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart272
0x2144	0xE0B1    	LDI        R27, 1
0x2146	0x164B    	CP         R4, R27
0x2148	0xF429    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart272
0x214A	0xECB2    	LDI        R27, 194
0x214C	0x163B    	CP         R3, R27
0x214E	0xF411    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart272
0x2150	0xE0B0    	LDI        R27, 0
0x2152	0x162B    	CP         R2, R27
L_easyavr_v7_ATMEGA32__log_initUart272:
0x2154	0xF409    	BRNE       L_easyavr_v7_ATMEGA32__log_initUart273
0x2156	0xCFA8    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart80
L_easyavr_v7_ATMEGA32__log_initUart273:
0x2158	0xCFB1    	RJMP       L_easyavr_v7_ATMEGA32__log_initUart81
L_easyavr_v7_ATMEGA32__log_initUart74:
;__ea_atmega32_log.c,72 :: 		logger = UART1_Write;
0x215A	0xE3B4    	LDI        R27, lo_addr(_UART1_Write+0)
0x215C	0x02BC93B0  	STS        _logger+0, R27
0x2160	0xE0B3    	LDI        R27, hi_addr(_UART1_Write+0)
0x2162	0x02BD93B0  	STS        _logger+1, R27
;__ea_atmega32_log.c,73 :: 		return 0;
0x2166	0xE000    	LDI        R16, 0
;__ea_atmega32_log.c,74 :: 		}
L_end__log_initUart:
0x2168	0x9508    	RET
; end of easyavr_v7_ATMEGA32__log_initUart
_mikrobus_logWrite:
0x33FA	0x93CF    	PUSH       R28
0x33FC	0x93DF    	PUSH       R29
0x33FE	0xB7CD    	IN         R28, SPL+0
0x3400	0xB7DE    	IN         R29, SPL+1
0x3402	0x9722    	SBIW       R28, 2
0x3404	0xBFCD    	OUT        SPL+0, R28
0x3406	0xBFDE    	OUT        SPL+1, R29
0x3408	0x9621    	ADIW       R28, 1
;easyavr_v7_ATMEGA32.c,319 :: 		T_mikrobus_ret mikrobus_logWrite(uint8_t* data_, T_log_format format)
;easyavr_v7_ATMEGA32.c,321 :: 		uint8_t *ptr = data_;
0x340A	0x922F    	PUSH       R2
0x340C	0x923F    	PUSH       R3
; ptr start address is: 16 (R16)
0x340E	0x0181    	MOVW       R16, R2
;easyavr_v7_ATMEGA32.c,322 :: 		uint8_t row = 13;
0x3410	0xE0BD    	LDI        R27, 13
0x3412	0x83B8    	STD        Y+0, R27
0x3414	0xE0BA    	LDI        R27, 10
0x3416	0x83B9    	STD        Y+1, R27
;easyavr_v7_ATMEGA32.c,323 :: 		uint8_t line = 10;
;easyavr_v7_ATMEGA32.c,324 :: 		switch( format )
0x3418	0xC046    	RJMP       L_mikrobus_logWrite101
;easyavr_v7_ATMEGA32.c,326 :: 		case _LOG_BYTE :
L_mikrobus_logWrite103:
;easyavr_v7_ATMEGA32.c,327 :: 		_log_write( ptr );
0x341A	0x0118    	MOVW       R2, R16
; ptr end address is: 16 (R16)
0x341C	0x10B5940E  	CALL       easyavr_v7_ATMEGA32__log_write+0
;easyavr_v7_ATMEGA32.c,328 :: 		break;
0x3420	0xC04E    	RJMP       L_mikrobus_logWrite102
;easyavr_v7_ATMEGA32.c,329 :: 		case _LOG_TEXT :
L_mikrobus_logWrite104:
;easyavr_v7_ATMEGA32.c,330 :: 		while( *ptr )
; ptr start address is: 16 (R16)
0x3422	0x0198    	MOVW       R18, R16
L_mikrobus_logWrite105:
; ptr end address is: 16 (R16)
; ptr start address is: 18 (R18)
0x3424	0x01F9    	MOVW       R30, R18
0x3426	0x8100    	LD         R16, Z
0x3428	0x2300    	TST        R16
0x342A	0xF091    	BREQ       L_mikrobus_logWrite106
L__mikrobus_logWrite288:
;easyavr_v7_ATMEGA32.c,332 :: 		_log_write( ptr );
0x342C	0x933F    	PUSH       R19
0x342E	0x932F    	PUSH       R18
0x3430	0x924F    	PUSH       R4
0x3432	0x923F    	PUSH       R3
0x3434	0x922F    	PUSH       R2
0x3436	0x0119    	MOVW       R2, R18
0x3438	0x10B5940E  	CALL       easyavr_v7_ATMEGA32__log_write+0
0x343C	0x902F    	POP        R2
0x343E	0x903F    	POP        R3
0x3440	0x904F    	POP        R4
0x3442	0x912F    	POP        R18
0x3444	0x913F    	POP        R19
;easyavr_v7_ATMEGA32.c,333 :: 		ptr++;
0x3446	0x0189    	MOVW       R16, R18
0x3448	0x5F0F    	SUBI       R16, 255
0x344A	0x4F1F    	SBCI       R17, 255
0x344C	0x0198    	MOVW       R18, R16
;easyavr_v7_ATMEGA32.c,334 :: 		}
; ptr end address is: 18 (R18)
0x344E	0xCFEA    	RJMP       L_mikrobus_logWrite105
L_mikrobus_logWrite106:
;easyavr_v7_ATMEGA32.c,335 :: 		break;
0x3450	0xC036    	RJMP       L_mikrobus_logWrite102
;easyavr_v7_ATMEGA32.c,336 :: 		case _LOG_LINE :
L_mikrobus_logWrite107:
;easyavr_v7_ATMEGA32.c,337 :: 		while( *ptr )
; ptr start address is: 16 (R16)
0x3452	0x0198    	MOVW       R18, R16
L_mikrobus_logWrite108:
; ptr end address is: 16 (R16)
; ptr start address is: 18 (R18)
0x3454	0x01F9    	MOVW       R30, R18
0x3456	0x8100    	LD         R16, Z
0x3458	0x2300    	TST        R16
0x345A	0xF091    	BREQ       L_mikrobus_logWrite109
L__mikrobus_logWrite289:
;easyavr_v7_ATMEGA32.c,339 :: 		_log_write( ptr );
0x345C	0x933F    	PUSH       R19
0x345E	0x932F    	PUSH       R18
0x3460	0x924F    	PUSH       R4
0x3462	0x923F    	PUSH       R3
0x3464	0x922F    	PUSH       R2
0x3466	0x0119    	MOVW       R2, R18
0x3468	0x10B5940E  	CALL       easyavr_v7_ATMEGA32__log_write+0
0x346C	0x902F    	POP        R2
0x346E	0x903F    	POP        R3
0x3470	0x904F    	POP        R4
0x3472	0x912F    	POP        R18
0x3474	0x913F    	POP        R19
;easyavr_v7_ATMEGA32.c,340 :: 		ptr++;
0x3476	0x0189    	MOVW       R16, R18
0x3478	0x5F0F    	SUBI       R16, 255
0x347A	0x4F1F    	SBCI       R17, 255
0x347C	0x0198    	MOVW       R18, R16
;easyavr_v7_ATMEGA32.c,341 :: 		}
; ptr end address is: 18 (R18)
0x347E	0xCFEA    	RJMP       L_mikrobus_logWrite108
L_mikrobus_logWrite109:
;easyavr_v7_ATMEGA32.c,342 :: 		_log_write( &row );
0x3480	0x018E    	MOVW       R16, R28
0x3482	0x924F    	PUSH       R4
0x3484	0x923F    	PUSH       R3
0x3486	0x922F    	PUSH       R2
0x3488	0x0118    	MOVW       R2, R16
0x348A	0x10B5940E  	CALL       easyavr_v7_ATMEGA32__log_write+0
;easyavr_v7_ATMEGA32.c,343 :: 		_log_write( &line );
0x348E	0x018E    	MOVW       R16, R28
0x3490	0x5F0F    	SUBI       R16, 255
0x3492	0x4F1F    	SBCI       R17, 255
0x3494	0x0118    	MOVW       R2, R16
0x3496	0x10B5940E  	CALL       easyavr_v7_ATMEGA32__log_write+0
0x349A	0x902F    	POP        R2
0x349C	0x903F    	POP        R3
0x349E	0x904F    	POP        R4
;easyavr_v7_ATMEGA32.c,344 :: 		break;
0x34A0	0xC00E    	RJMP       L_mikrobus_logWrite102
;easyavr_v7_ATMEGA32.c,345 :: 		default :
L_mikrobus_logWrite110:
;easyavr_v7_ATMEGA32.c,346 :: 		return _MIKROBUS_ERR_LOG;
0x34A2	0xE006    	LDI        R16, 6
0x34A4	0xC00D    	RJMP       L_end_mikrobus_logWrite
;easyavr_v7_ATMEGA32.c,347 :: 		}
L_mikrobus_logWrite101:
; ptr start address is: 16 (R16)
0x34A6	0xE0B0    	LDI        R27, 0
0x34A8	0x164B    	CP         R4, R27
0x34AA	0xF409    	BRNE       L__mikrobus_logWrite290
0x34AC	0xCFB6    	RJMP       L_mikrobus_logWrite103
L__mikrobus_logWrite290:
0x34AE	0xE0B1    	LDI        R27, 1
0x34B0	0x164B    	CP         R4, R27
0x34B2	0xF409    	BRNE       L__mikrobus_logWrite291
0x34B4	0xCFB6    	RJMP       L_mikrobus_logWrite104
L__mikrobus_logWrite291:
0x34B6	0xE0B2    	LDI        R27, 2
0x34B8	0x164B    	CP         R4, R27
0x34BA	0xF259    	BREQ       L_mikrobus_logWrite107
L__mikrobus_logWrite292:
; ptr end address is: 16 (R16)
0x34BC	0xCFF2    	RJMP       L_mikrobus_logWrite110
L_mikrobus_logWrite102:
;easyavr_v7_ATMEGA32.c,348 :: 		return 0;
0x34BE	0xE000    	LDI        R16, 0
;easyavr_v7_ATMEGA32.c,349 :: 		}
;easyavr_v7_ATMEGA32.c,348 :: 		return 0;
;easyavr_v7_ATMEGA32.c,349 :: 		}
L_end_mikrobus_logWrite:
0x34C0	0x903F    	POP        R3
0x34C2	0x902F    	POP        R2
0x34C4	0x9621    	ADIW       R28, 1
0x34C6	0xBFCD    	OUT        SPL+0, R28
0x34C8	0xBFDE    	OUT        SPL+1, R29
0x34CA	0x91DF    	POP        R29
0x34CC	0x91CF    	POP        R28
0x34CE	0x9508    	RET
; end of _mikrobus_logWrite
easyavr_v7_ATMEGA32__log_write:
;__ea_atmega32_log.c,17 :: 		static T_mikrobus_ret _log_write(uint8_t *data_)
;__ea_atmega32_log.c,19 :: 		logger( *data_ );
0x216A	0x922F    	PUSH       R2
0x216C	0x923F    	PUSH       R3
0x216E	0x01F1    	MOVW       R30, R2
0x2170	0x8100    	LD         R16, Z
0x2172	0x2E20    	MOV        R2, R16
0x2174	0x02BC91E0  	LDS        R30, _logger+0
0x2178	0x02BD91F0  	LDS        R31, _logger+1
0x217C	0x9509    	ICALL
;__ea_atmega32_log.c,20 :: 		return 0;
0x217E	0xE000    	LDI        R16, 0
;__ea_atmega32_log.c,21 :: 		}
;__ea_atmega32_log.c,20 :: 		return 0;
;__ea_atmega32_log.c,21 :: 		}
L_end__log_write:
0x2180	0x903F    	POP        R3
0x2182	0x902F    	POP        R2
0x2184	0x9508    	RET
; end of easyavr_v7_ATMEGA32__log_write
_applicationInit:
;Click_FM_AVR.c,385 :: 		void applicationInit( )
;Click_FM_AVR.c,387 :: 		fm_i2cDriverInit( (T_FM_P)&_MIKROBUS1_GPIO, (T_FM_P)&_MIKROBUS1_I2C, 0x10 );
0x360E	0x922F    	PUSH       R2
0x3610	0x923F    	PUSH       R3
0x3612	0x924F    	PUSH       R4
0x3614	0x925F    	PUSH       R5
0x3616	0x926F    	PUSH       R6
0x3618	0xE1B0    	LDI        R27, 16
0x361A	0x2E6B    	MOV        R6, R27
0x361C	0xE1BA    	LDI        R27, lo_addr(__MIKROBUS1_I2C+0)
0x361E	0x2E4B    	MOV        R4, R27
0x3620	0xE3B9    	LDI        R27, hi_addr(__MIKROBUS1_I2C+0)
0x3622	0x2E5B    	MOV        R5, R27
0x3624	0xEEBA    	LDI        R27, lo_addr(__MIKROBUS1_GPIO+0)
0x3626	0x2E2B    	MOV        R2, R27
0x3628	0xE3B8    	LDI        R27, hi_addr(__MIKROBUS1_GPIO+0)
0x362A	0x2E3B    	MOV        R3, R27
0x362C	0xD848    	RCALL      _fm_i2cDriverInit+0
;Click_FM_AVR.c,389 :: 		Delay_ms(500);
0x362E	0xE125    	LDI        R18, 21
0x3630	0xE41B    	LDI        R17, 75
0x3632	0xEB0F    	LDI        R16, 191
L_applicationInit50:
0x3634	0x950A    	DEC        R16
0x3636	0xF7F1    	BRNE       L_applicationInit50
0x3638	0x951A    	DEC        R17
0x363A	0xF7E1    	BRNE       L_applicationInit50
0x363C	0x952A    	DEC        R18
0x363E	0xF7D1    	BRNE       L_applicationInit50
0x3640	0x0000    	NOP
;Click_FM_AVR.c,391 :: 		fm_powerUp( );
0x3642	0x12F0940E  	CALL       _fm_powerup+0
;Click_FM_AVR.c,393 :: 		fm_basicSettings( );
0x3646	0xD9F0    	RCALL      _fm_basicSettings+0
;Click_FM_AVR.c,395 :: 		fm_setVolume( volumeLevel_ );
0x3648	0x02139020  	LDS        R2, _volumeLevel_+0
0x364C	0xD842    	RCALL      _fm_setVolume+0
;Click_FM_AVR.c,397 :: 		fm_setSnrThreshold( snrThreshold_ );
0x364E	0x020F9020  	LDS        R2, _snrThreshold_+0
0x3652	0xDD58    	RCALL      _fm_setSnrThreshold+0
;Click_FM_AVR.c,399 :: 		fm_setSeekThreshold( seekThreshold_ );
0x3654	0x02109020  	LDS        R2, _seekThreshold_+0
0x3658	0x02119030  	LDS        R3, _seekThreshold_+1
0x365C	0xDCF8    	RCALL      _fm_setSeekThreshold+0
;Click_FM_AVR.c,401 :: 		fm_setSeekImpulseDetectionThreshold( impulseDetectionThreshold_ );
0x365E	0x02129020  	LDS        R2, _impulseDetectionThreshold_+0
0x3662	0xDC88    	RCALL      _fm_setSeekImpulseDetectionThreshold+0
;Click_FM_AVR.c,403 :: 		mikrobus_logWrite( "application init done", _LOG_LINE );
0x3664	0xE0B2    	LDI        R27, 2
0x3666	0x2E4B    	MOV        R4, R27
0x3668	0xE3B9    	LDI        R27, lo_addr(?lstr51_Click_FM_AVR+0)
0x366A	0x2E2B    	MOV        R2, R27
0x366C	0xE0B2    	LDI        R27, hi_addr(?lstr51_Click_FM_AVR+0)
0x366E	0x2E3B    	MOV        R3, R27
0x3670	0xDEC4    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,404 :: 		}
L_end_applicationInit:
0x3672	0x906F    	POP        R6
0x3674	0x905F    	POP        R5
0x3676	0x904F    	POP        R4
0x3678	0x903F    	POP        R3
0x367A	0x902F    	POP        R2
0x367C	0x9508    	RET
; end of _applicationInit
_fm_i2cDriverInit:
;__fm_Driver.c,208 :: 		void fm_i2cDriverInit(T_FM_P gpioObj, T_FM_P i2cObj, uint8_t slave)
;__fm_Driver.c,210 :: 		_slaveAddress = slave;
0x26BE	0x02C69260  	STS        __fm_Driver__slaveAddress+0, R6
;__fm_Driver.c,211 :: 		hal_i2cMap( (T_HAL_P)i2cObj );
0x26C2	0x923F    	PUSH       R3
0x26C4	0x922F    	PUSH       R2
0x26C6	0x0112    	MOVW       R2, R4
0x26C8	0xDCA8    	RCALL      __fm_Driver_hal_i2cMap+0
0x26CA	0x902F    	POP        R2
0x26CC	0x903F    	POP        R3
;__fm_Driver.c,212 :: 		hal_gpioMap( (T_HAL_P)gpioObj );
0x26CE	0xDC5F    	RCALL      __fm_Driver_hal_gpioMap+0
;__fm_Driver.c,216 :: 		}
L_end_fm_i2cDriverInit:
0x26D0	0x9508    	RET
; end of _fm_i2cDriverInit
__fm_Driver_hal_i2cMap:
;__hal_avr.c,92 :: 		static void hal_i2cMap(T_HAL_P i2cObj)
;__hal_avr.c,96 :: 		fp_i2cStart    = tmp->i2cStart;
0x201A	0x01F1    	MOVW       R30, R2
0x201C	0x9105    	LPM        R16, Z+
0x201E	0x9115    	LPM        R17, Z+
0x2020	0x02BE9300  	STS        __fm_Driver_fp_i2cStart+0, R16
0x2024	0x02BF9310  	STS        __fm_Driver_fp_i2cStart+1, R17
;__hal_avr.c,97 :: 		fp_i2cStop     = tmp->i2cStop;
0x2028	0x01F1    	MOVW       R30, R2
0x202A	0x9632    	ADIW       R30, 2
0x202C	0x9105    	LPM        R16, Z+
0x202E	0x9115    	LPM        R17, Z+
0x2030	0x02B89300  	STS        __fm_Driver_fp_i2cStop+0, R16
0x2034	0x02B99310  	STS        __fm_Driver_fp_i2cStop+1, R17
;__hal_avr.c,98 :: 		fp_i2cWrite    = tmp->i2cWrite;
0x2038	0x01F1    	MOVW       R30, R2
0x203A	0x9634    	ADIW       R30, 4
0x203C	0x9105    	LPM        R16, Z+
0x203E	0x9115    	LPM        R17, Z+
0x2040	0x02B69300  	STS        __fm_Driver_fp_i2cWrite+0, R16
0x2044	0x02B79310  	STS        __fm_Driver_fp_i2cWrite+1, R17
;__hal_avr.c,99 :: 		fp_i2cRead     = tmp->i2cRead;
0x2048	0x01F1    	MOVW       R30, R2
0x204A	0x9636    	ADIW       R30, 6
0x204C	0x9105    	LPM        R16, Z+
0x204E	0x9115    	LPM        R17, Z+
0x2050	0x02BA9300  	STS        __fm_Driver_fp_i2cRead+0, R16
0x2054	0x02BB9310  	STS        __fm_Driver_fp_i2cRead+1, R17
;__hal_avr.c,100 :: 		}
L_end_hal_i2cMap:
0x2058	0x9508    	RET
; end of __fm_Driver_hal_i2cMap
__fm_Driver_hal_gpioMap:
;__fm_hal.c,321 :: 		static void hal_gpioMap(T_HAL_P gpioObj)
;__fm_hal.c,326 :: 		hal_gpio_anGet = tmp->gpioGet[ __AN_PIN_INPUT__ ];
0x1F8E	0x0191    	MOVW       R18, R2
0x1F90	0x5E28    	SUBI       R18, 232
0x1F92	0x4F3F    	SBCI       R19, 255
0x1F94	0x01F9    	MOVW       R30, R18
0x1F96	0x9105    	LPM        R16, Z+
0x1F98	0x9115    	LPM        R17, Z+
0x1F9A	0x02C49300  	STS        __fm_Driver_hal_gpio_anGet+0, R16
0x1F9E	0x02C59310  	STS        __fm_Driver_hal_gpio_anGet+1, R17
;__fm_hal.c,347 :: 		hal_gpio_intGet = tmp->gpioGet[ __INT_PIN_INPUT__ ];
0x1FA2	0x01F9    	MOVW       R30, R18
0x1FA4	0x963E    	ADIW       R30, 14
0x1FA6	0x9105    	LPM        R16, Z+
0x1FA8	0x9115    	LPM        R17, Z+
0x1FAA	0x02C79300  	STS        __fm_Driver_hal_gpio_intGet+0, R16
0x1FAE	0x02C89310  	STS        __fm_Driver_hal_gpio_intGet+1, R17
;__fm_hal.c,365 :: 		hal_gpio_csSet = tmp->gpioSet[ __CS_PIN_OUTPUT__ ];
0x1FB2	0x01F1    	MOVW       R30, R2
0x1FB4	0x9634    	ADIW       R30, 4
0x1FB6	0x9105    	LPM        R16, Z+
0x1FB8	0x9115    	LPM        R17, Z+
0x1FBA	0x02C09300  	STS        __fm_Driver_hal_gpio_csSet+0, R16
0x1FBE	0x02C19310  	STS        __fm_Driver_hal_gpio_csSet+1, R17
;__fm_hal.c,368 :: 		hal_gpio_rstSet = tmp->gpioSet[ __RST_PIN_OUTPUT__ ];
0x1FC2	0x01F1    	MOVW       R30, R2
0x1FC4	0x9632    	ADIW       R30, 2
0x1FC6	0x9105    	LPM        R16, Z+
0x1FC8	0x9115    	LPM        R17, Z+
0x1FCA	0x02C29300  	STS        __fm_Driver_hal_gpio_rstSet+0, R16
0x1FCE	0x02C39310  	STS        __fm_Driver_hal_gpio_rstSet+1, R17
;__fm_hal.c,397 :: 		}
L_end_hal_gpioMap:
0x1FD2	0x9508    	RET
; end of __fm_Driver_hal_gpioMap
_fm_powerup:
0x25E0	0x93CF    	PUSH       R28
0x25E2	0x93DF    	PUSH       R29
0x25E4	0xB7CD    	IN         R28, SPL+0
0x25E6	0xB7DE    	IN         R29, SPL+1
0x25E8	0x97A0    	SBIW       R28, 32
0x25EA	0xBFCD    	OUT        SPL+0, R28
0x25EC	0xBFDE    	OUT        SPL+1, R29
0x25EE	0x9621    	ADIW       R28, 1
;__fm_Driver.c,535 :: 		void fm_powerup( void )
;__fm_Driver.c,539 :: 		fm_modeSelect( );
0x25F0	0x922F    	PUSH       R2
0x25F2	0x923F    	PUSH       R3
0x25F4	0x924F    	PUSH       R4
0x25F6	0x925F    	PUSH       R5
0x25F8	0x926F    	PUSH       R6
0x25FA	0x927F    	PUSH       R7
0x25FC	0x928F    	PUSH       R8
0x25FE	0x929F    	PUSH       R9
0x2600	0xDCE9    	RCALL      __fm_Driver_fm_modeSelect+0
;__fm_Driver.c,541 :: 		Delay_100ms( );    /* wait for device to settle */
0x2602	0xDD01    	RCALL      _Delay_100ms+0
;__fm_Driver.c,543 :: 		fm_readRegisters( regBuffer );
0x2604	0x018E    	MOVW       R16, R28
0x2606	0x0118    	MOVW       R2, R16
0x2608	0xDDBE    	RCALL      _fm_readRegisters+0
;__fm_Driver.c,545 :: 		fm_setBits( regBuffer,   _FM_TEST_1,   _FM_AUDIO_HIGH_Z_MASK,        _FM_AUDIO_HIGH_Z_DISABLE );
0x260A	0x018E    	MOVW       R16, R28
0x260C	0x2488    	CLR        R8
0x260E	0x2499    	CLR        R9
0x2610	0xEFBF    	LDI        R27, 255
0x2612	0x2E6B    	MOV        R6, R27
0x2614	0xEBBF    	LDI        R27, 191
0x2616	0x2E7B    	MOV        R7, R27
0x2618	0xE0B5    	LDI        R27, 5
0x261A	0x2E4B    	MOV        R4, R27
0x261C	0xE0B0    	LDI        R27, 0
0x261E	0x2E5B    	MOV        R5, R27
0x2620	0x0118    	MOVW       R2, R16
0x2622	0xDC4C    	RCALL      _fm_setBits+0
;__fm_Driver.c,546 :: 		fm_setBits( regBuffer,   _FM_TEST_1,   _FM_CRYSTAL_OSCYLATOR_MASK,   _FM_CRYSTAL_OSCYLATOR_ENABLE );
0x2624	0x018E    	MOVW       R16, R28
0x2626	0xE0B0    	LDI        R27, 0
0x2628	0x2E8B    	MOV        R8, R27
0x262A	0xE8B0    	LDI        R27, 128
0x262C	0x2E9B    	MOV        R9, R27
0x262E	0xEFBF    	LDI        R27, 255
0x2630	0x2E6B    	MOV        R6, R27
0x2632	0xE7BF    	LDI        R27, 127
0x2634	0x2E7B    	MOV        R7, R27
0x2636	0xE0B5    	LDI        R27, 5
0x2638	0x2E4B    	MOV        R4, R27
0x263A	0xE0B0    	LDI        R27, 0
0x263C	0x2E5B    	MOV        R5, R27
0x263E	0x0118    	MOVW       R2, R16
0x2640	0xDC3D    	RCALL      _fm_setBits+0
;__fm_Driver.c,548 :: 		fm_writeRegisters( regBuffer );
0x2642	0x018E    	MOVW       R16, R28
0x2644	0x0118    	MOVW       R2, R16
0x2646	0xDBE4    	RCALL      _fm_writeRegisters+0
;__fm_Driver.c,550 :: 		Delay_1sec( );     /* waiting for crystal oscylator to settle -- minimum 500 ms */
0x2648	0xDE42    	RCALL      _Delay_1sec+0
;__fm_Driver.c,552 :: 		fm_readRegisters( regBuffer );
0x264A	0x018E    	MOVW       R16, R28
0x264C	0x0118    	MOVW       R2, R16
0x264E	0xDD9B    	RCALL      _fm_readRegisters+0
;__fm_Driver.c,554 :: 		fm_setBits( regBuffer,   _FM_POWER_CONFIGURATION,   _FM_POWERUP_ENABLE_MASK,    _FM_POWERUP_ENABLE_HIGH );
0x2650	0x018E    	MOVW       R16, R28
0x2652	0xE0B1    	LDI        R27, 1
0x2654	0x2E8B    	MOV        R8, R27
0x2656	0xE0B0    	LDI        R27, 0
0x2658	0x2E9B    	MOV        R9, R27
0x265A	0xEFBE    	LDI        R27, 254
0x265C	0x2E6B    	MOV        R6, R27
0x265E	0xEFBF    	LDI        R27, 255
0x2660	0x2E7B    	MOV        R7, R27
0x2662	0x2444    	CLR        R4
0x2664	0x2455    	CLR        R5
0x2666	0x0118    	MOVW       R2, R16
0x2668	0xDC29    	RCALL      _fm_setBits+0
;__fm_Driver.c,555 :: 		fm_setBits( regBuffer,   _FM_POWER_CONFIGURATION,   _FM_POWERUP_DISABLE_MASK,   _FM_POWERUP_DISABLE_LOW );
0x266A	0x018E    	MOVW       R16, R28
0x266C	0x2488    	CLR        R8
0x266E	0x2499    	CLR        R9
0x2670	0xEBBF    	LDI        R27, 191
0x2672	0x2E6B    	MOV        R6, R27
0x2674	0xEFBF    	LDI        R27, 255
0x2676	0x2E7B    	MOV        R7, R27
0x2678	0x2444    	CLR        R4
0x267A	0x2455    	CLR        R5
0x267C	0x0118    	MOVW       R2, R16
0x267E	0xDC1E    	RCALL      _fm_setBits+0
;__fm_Driver.c,556 :: 		fm_setBits( regBuffer,   _FM_POWER_CONFIGURATION,   _FM_MUTE_MASK,              _FM_MUTE_DISABLE );
0x2680	0x018E    	MOVW       R16, R28
0x2682	0xE0B0    	LDI        R27, 0
0x2684	0x2E8B    	MOV        R8, R27
0x2686	0xE4B0    	LDI        R27, 64
0x2688	0x2E9B    	MOV        R9, R27
0x268A	0xEFBF    	LDI        R27, 255
0x268C	0x2E6B    	MOV        R6, R27
0x268E	0xEBBF    	LDI        R27, 191
0x2690	0x2E7B    	MOV        R7, R27
0x2692	0x2444    	CLR        R4
0x2694	0x2455    	CLR        R5
0x2696	0x0118    	MOVW       R2, R16
0x2698	0xDC11    	RCALL      _fm_setBits+0
;__fm_Driver.c,558 :: 		fm_writeRegisters( regBuffer );
0x269A	0x018E    	MOVW       R16, R28
0x269C	0x0118    	MOVW       R2, R16
0x269E	0xDBB8    	RCALL      _fm_writeRegisters+0
;__fm_Driver.c,560 :: 		Delay_100ms( );    /* waiting for device to powerup */
0x26A0	0xDCB2    	RCALL      _Delay_100ms+0
;__fm_Driver.c,561 :: 		}
L_end_fm_powerup:
0x26A2	0x909F    	POP        R9
0x26A4	0x908F    	POP        R8
0x26A6	0x907F    	POP        R7
0x26A8	0x906F    	POP        R6
0x26AA	0x905F    	POP        R5
0x26AC	0x904F    	POP        R4
0x26AE	0x903F    	POP        R3
0x26B0	0x902F    	POP        R2
0x26B2	0x966F    	ADIW       R28, 31
0x26B4	0xBFCD    	OUT        SPL+0, R28
0x26B6	0xBFDE    	OUT        SPL+1, R29
0x26B8	0x91DF    	POP        R29
0x26BA	0x91CF    	POP        R28
0x26BC	0x9508    	RET
; end of _fm_powerup
__fm_Driver_fm_modeSelect:
;__fm_Driver.c,182 :: 		static void fm_modeSelect( void )
;__fm_Driver.c,184 :: 		hal_gpio_rstSet(0);
0x1FD4	0x922F    	PUSH       R2
0x1FD6	0x2422    	CLR        R2
0x1FD8	0x02C291E0  	LDS        R30, __fm_Driver_hal_gpio_rstSet+0
0x1FDC	0x02C391F0  	LDS        R31, __fm_Driver_hal_gpio_rstSet+1
0x1FE0	0x9509    	ICALL
;__fm_Driver.c,186 :: 		hal_gpio_csSet(1);
0x1FE2	0xE0B1    	LDI        R27, 1
0x1FE4	0x2E2B    	MOV        R2, R27
0x1FE6	0x02C091E0  	LDS        R30, __fm_Driver_hal_gpio_csSet+0
0x1FEA	0x02C191F0  	LDS        R31, __fm_Driver_hal_gpio_csSet+1
0x1FEE	0x9509    	ICALL
;__fm_Driver.c,187 :: 		Delay_10ms( );
0x1FF0	0x052B940E  	CALL       _Delay_10ms+0
;__fm_Driver.c,189 :: 		hal_gpio_rstSet(1);
0x1FF4	0xE0B1    	LDI        R27, 1
0x1FF6	0x2E2B    	MOV        R2, R27
0x1FF8	0x02C291E0  	LDS        R30, __fm_Driver_hal_gpio_rstSet+0
0x1FFC	0x02C391F0  	LDS        R31, __fm_Driver_hal_gpio_rstSet+1
0x2000	0x9509    	ICALL
;__fm_Driver.c,190 :: 		}
L_end_fm_modeSelect:
0x2002	0x902F    	POP        R2
0x2004	0x9508    	RET
; end of __fm_Driver_fm_modeSelect
_Delay_10ms:
;__Lib_Delays.c,50 :: 		void Delay_10ms() {
;__Lib_Delays.c,51 :: 		Delay_ms(10);
0x0A56	0xE618    	LDI        R17, 104
0x0A58	0xEE05    	LDI        R16, 229
L_Delay_10ms22:
0x0A5A	0x950A    	DEC        R16
0x0A5C	0xF7F1    	BRNE       L_Delay_10ms22
0x0A5E	0x951A    	DEC        R17
0x0A60	0xF7E1    	BRNE       L_Delay_10ms22
;__Lib_Delays.c,52 :: 		}
L_end_Delay_10ms:
0x0A62	0x9508    	RET
; end of _Delay_10ms
_Delay_100ms:
;__Lib_Delays.c,46 :: 		void Delay_100ms() {
;__Lib_Delays.c,47 :: 		Delay_ms(100);
0x2006	0xE025    	LDI        R18, 5
0x2008	0xE01F    	LDI        R17, 15
0x200A	0xEF02    	LDI        R16, 242
L_Delay_100ms20:
0x200C	0x950A    	DEC        R16
0x200E	0xF7F1    	BRNE       L_Delay_100ms20
0x2010	0x951A    	DEC        R17
0x2012	0xF7E1    	BRNE       L_Delay_100ms20
0x2014	0x952A    	DEC        R18
0x2016	0xF7D1    	BRNE       L_Delay_100ms20
;__Lib_Delays.c,48 :: 		}
L_end_Delay_100ms:
0x2018	0x9508    	RET
; end of _Delay_100ms
_fm_readRegisters:
0x2186	0x93CF    	PUSH       R28
0x2188	0x93DF    	PUSH       R29
0x218A	0xB7CD    	IN         R28, SPL+0
0x218C	0xB7DE    	IN         R29, SPL+1
0x218E	0x54C0    	SUBI       R28, 64
0x2190	0x40D0    	SBCI       R29, 0
0x2192	0xBFCD    	OUT        SPL+0, R28
0x2194	0xBFDE    	OUT        SPL+1, R29
0x2196	0x9621    	ADIW       R28, 1
;__fm_Driver.c,234 :: 		void fm_readRegisters( uint16_t *registerBuffer )
;__fm_Driver.c,242 :: 		hal_i2cStart( );
0x2198	0x924F    	PUSH       R4
0x219A	0x925F    	PUSH       R5
0x219C	0x926F    	PUSH       R6
0x219E	0x927F    	PUSH       R7
0x21A0	0x923F    	PUSH       R3
0x21A2	0x922F    	PUSH       R2
0x21A4	0x0510940E  	CALL       __fm_Driver_hal_i2cStart+0
;__fm_Driver.c,243 :: 		hal_i2cRead( _slaveAddress, auxBuffer1, 32, END_MODE_STOP );
0x21A8	0x018E    	MOVW       R16, R28
0x21AA	0x2477    	CLR        R7
0x21AC	0xE2B0    	LDI        R27, 32
0x21AE	0x2E5B    	MOV        R5, R27
0x21B0	0xE0B0    	LDI        R27, 0
0x21B2	0x2E6B    	MOV        R6, R27
0x21B4	0x2E30    	MOV        R3, R16
0x21B6	0x2E41    	MOV        R4, R17
0x21B8	0x02C69020  	LDS        R2, __fm_Driver__slaveAddress+0
0x21BC	0x047A940E  	CALL       __fm_Driver_hal_i2cRead+0
0x21C0	0x902F    	POP        R2
0x21C2	0x903F    	POP        R3
;__fm_Driver.c,245 :: 		for (i = 0; i < 16; i++)
; i start address is: 20 (R20)
0x21C4	0xE040    	LDI        R20, 0
; i end address is: 20 (R20)
L_fm_readRegisters8:
; i start address is: 20 (R20)
0x21C6	0x3140    	CPI        R20, 16
0x21C8	0xF4A8    	BRSH       L_fm_readRegisters9
L__fm_readRegisters107:
;__fm_Driver.c,247 :: 		auxBuffer2[ i + 16 ] = auxBuffer1[ i ];
0x21CA	0x2F24    	MOV        R18, R20
0x21CC	0xE030    	LDI        R19, 0
0x21CE	0x5F20    	SUBI       R18, 240
0x21D0	0x4F3F    	SBCI       R19, 255
0x21D2	0x018E    	MOVW       R16, R28
0x21D4	0x5E00    	SUBI       R16, 224
0x21D6	0x4F1F    	SBCI       R17, 255
0x21D8	0x0F20    	ADD        R18, R16
0x21DA	0x1F31    	ADC        R19, R17
0x21DC	0x018E    	MOVW       R16, R28
0x21DE	0x0F04    	ADD        R16, R20
0x21E0	0xE0B0    	LDI        R27, 0
0x21E2	0x1F1B    	ADC        R17, R27
0x21E4	0x01F8    	MOVW       R30, R16
0x21E6	0x8100    	LD         R16, Z
0x21E8	0x01F9    	MOVW       R30, R18
0x21EA	0x8300    	ST         Z, R16
;__fm_Driver.c,245 :: 		for (i = 0; i < 16; i++)
0x21EC	0x2F04    	MOV        R16, R20
0x21EE	0x5F0F    	SUBI       R16, 255
0x21F0	0x2F40    	MOV        R20, R16
;__fm_Driver.c,248 :: 		}
; i end address is: 20 (R20)
0x21F2	0xCFE9    	RJMP       L_fm_readRegisters8
L_fm_readRegisters9:
;__fm_Driver.c,249 :: 		for (i = 0; i < 16; i++)
; i start address is: 22 (R22)
0x21F4	0xE060    	LDI        R22, 0
; i end address is: 22 (R22)
L_fm_readRegisters11:
; i start address is: 22 (R22)
0x21F6	0x3160    	CPI        R22, 16
0x21F8	0xF4B0    	BRSH       L_fm_readRegisters12
L__fm_readRegisters108:
;__fm_Driver.c,251 :: 		auxBuffer2[ i ] = auxBuffer1[ i + 16 ];
0x21FA	0x018E    	MOVW       R16, R28
0x21FC	0x5E00    	SUBI       R16, 224
0x21FE	0x4F1F    	SBCI       R17, 255
0x2200	0x2F46    	MOV        R20, R22
0x2202	0xE050    	LDI        R21, 0
0x2204	0x0F40    	ADD        R20, R16
0x2206	0x1F51    	ADC        R21, R17
0x2208	0x2F26    	MOV        R18, R22
0x220A	0xE030    	LDI        R19, 0
0x220C	0x5F20    	SUBI       R18, 240
0x220E	0x4F3F    	SBCI       R19, 255
0x2210	0x018E    	MOVW       R16, R28
0x2212	0x0F02    	ADD        R16, R18
0x2214	0x1F13    	ADC        R17, R19
0x2216	0x01F8    	MOVW       R30, R16
0x2218	0x8100    	LD         R16, Z
0x221A	0x01FA    	MOVW       R30, R20
0x221C	0x8300    	ST         Z, R16
;__fm_Driver.c,249 :: 		for (i = 0; i < 16; i++)
0x221E	0x2F06    	MOV        R16, R22
0x2220	0x5F0F    	SUBI       R16, 255
0x2222	0x2F60    	MOV        R22, R16
;__fm_Driver.c,252 :: 		}
; i end address is: 22 (R22)
0x2224	0xCFE8    	RJMP       L_fm_readRegisters11
L_fm_readRegisters12:
;__fm_Driver.c,254 :: 		j = 0;
; j start address is: 20 (R20)
0x2226	0xE040    	LDI        R20, 0
;__fm_Driver.c,256 :: 		for (i = 0; i < 16; i ++)
; i start address is: 21 (R21)
0x2228	0xE050    	LDI        R21, 0
; j end address is: 20 (R20)
; i end address is: 21 (R21)
L_fm_readRegisters14:
; i start address is: 21 (R21)
; j start address is: 20 (R20)
0x222A	0x3150    	CPI        R21, 16
0x222C	0xF008    	BRLO       L__fm_readRegisters109
0x222E	0xC045    	RJMP       L_fm_readRegisters15
L__fm_readRegisters109:
;__fm_Driver.c,258 :: 		registerBuffer[ i ] = auxBuffer2[ j ];
0x2230	0x2F05    	MOV        R16, R21
0x2232	0xE010    	LDI        R17, 0
0x2234	0x0F00    	LSL        R16
0x2236	0x1F11    	ROL        R17
0x2238	0x0198    	MOVW       R18, R16
0x223A	0x0D22    	ADD        R18, R2
0x223C	0x1D33    	ADC        R19, R3
0x223E	0x018E    	MOVW       R16, R28
0x2240	0x5E00    	SUBI       R16, 224
0x2242	0x4F1F    	SBCI       R17, 255
0x2244	0x0F04    	ADD        R16, R20
0x2246	0xE0B0    	LDI        R27, 0
0x2248	0x1F1B    	ADC        R17, R27
0x224A	0x01F8    	MOVW       R30, R16
0x224C	0x8100    	LD         R16, Z
0x224E	0x01F9    	MOVW       R30, R18
0x2250	0x9301    	ST         Z+, R16
0x2252	0xE0B0    	LDI        R27, 0
0x2254	0x93B1    	ST         Z+, R27
;__fm_Driver.c,259 :: 		registerBuffer[ i ] <<= 8;
0x2256	0x2F05    	MOV        R16, R21
0x2258	0xE010    	LDI        R17, 0
0x225A	0x0F00    	LSL        R16
0x225C	0x1F11    	ROL        R17
0x225E	0x0198    	MOVW       R18, R16
0x2260	0x0D22    	ADD        R18, R2
0x2262	0x1D33    	ADC        R19, R3
0x2264	0x01F9    	MOVW       R30, R18
0x2266	0x9101    	LD         R16, Z+
0x2268	0x9111    	LD         R17, Z+
0x226A	0x2F10    	MOV        R17, R16
0x226C	0x2700    	CLR        R16
0x226E	0x01F9    	MOVW       R30, R18
0x2270	0x9301    	ST         Z+, R16
0x2272	0x9311    	ST         Z+, R17
;__fm_Driver.c,260 :: 		j += 1;
0x2274	0x2F24    	MOV        R18, R20
0x2276	0x5F2F    	SUBI       R18, 255
; j end address is: 20 (R20)
; j start address is: 22 (R22)
0x2278	0x2F62    	MOV        R22, R18
;__fm_Driver.c,261 :: 		registerBuffer[ i ] |= auxBuffer2[ j ];
0x227A	0x2F05    	MOV        R16, R21
0x227C	0xE010    	LDI        R17, 0
0x227E	0x0F00    	LSL        R16
0x2280	0x1F11    	ROL        R17
0x2282	0x2F30    	MOV        R19, R16
0x2284	0x2F41    	MOV        R20, R17
0x2286	0x0D32    	ADD        R19, R2
0x2288	0x1D43    	ADC        R20, R3
0x228A	0x018E    	MOVW       R16, R28
0x228C	0x5E00    	SUBI       R16, 224
0x228E	0x4F1F    	SBCI       R17, 255
0x2290	0x0F02    	ADD        R16, R18
0x2292	0xE0B0    	LDI        R27, 0
0x2294	0x1F1B    	ADC        R17, R27
0x2296	0x01F8    	MOVW       R30, R16
0x2298	0x8120    	LD         R18, Z
0x229A	0x2FE3    	MOV        R30, R19
0x229C	0x2FF4    	MOV        R31, R20
0x229E	0x9101    	LD         R16, Z+
0x22A0	0x9111    	LD         R17, Z+
0x22A2	0x2B02    	OR         R16, R18
0x22A4	0x2FE3    	MOV        R30, R19
0x22A6	0x2FF4    	MOV        R31, R20
0x22A8	0x9301    	ST         Z+, R16
0x22AA	0x9311    	ST         Z+, R17
;__fm_Driver.c,262 :: 		j += 1;
0x22AC	0x2F06    	MOV        R16, R22
0x22AE	0x5F0F    	SUBI       R16, 255
; j end address is: 22 (R22)
; j start address is: 20 (R20)
0x22B0	0x2F40    	MOV        R20, R16
;__fm_Driver.c,256 :: 		for (i = 0; i < 16; i ++)
0x22B2	0x2F05    	MOV        R16, R21
0x22B4	0x5F0F    	SUBI       R16, 255
0x22B6	0x2F50    	MOV        R21, R16
;__fm_Driver.c,263 :: 		}
; j end address is: 20 (R20)
; i end address is: 21 (R21)
0x22B8	0xCFB8    	RJMP       L_fm_readRegisters14
L_fm_readRegisters15:
;__fm_Driver.c,264 :: 		}
L_end_fm_readRegisters:
0x22BA	0x907F    	POP        R7
0x22BC	0x906F    	POP        R6
0x22BE	0x905F    	POP        R5
0x22C0	0x904F    	POP        R4
0x22C2	0x96EF    	ADIW       R28, 63
0x22C4	0xBFCD    	OUT        SPL+0, R28
0x22C6	0xBFDE    	OUT        SPL+1, R29
0x22C8	0x91DF    	POP        R29
0x22CA	0x91CF    	POP        R28
0x22CC	0x9508    	RET
; end of _fm_readRegisters
__fm_Driver_hal_i2cStart:
0x0A20	0x93CF    	PUSH       R28
0x0A22	0x93DF    	PUSH       R29
0x0A24	0xB7CD    	IN         R28, SPL+0
0x0A26	0xB7DE    	IN         R29, SPL+1
0x0A28	0x9722    	SBIW       R28, 2
0x0A2A	0xBFCD    	OUT        SPL+0, R28
0x0A2C	0xBFDE    	OUT        SPL+1, R29
0x0A2E	0x9621    	ADIW       R28, 1
;__hal_avr.c,102 :: 		static int hal_i2cStart()
;__hal_avr.c,104 :: 		int res = 0;
0x0A30	0xE0B0    	LDI        R27, 0
0x0A32	0x83B8    	STD        Y+0, R27
0x0A34	0x83B9    	STD        Y+1, R27
;__hal_avr.c,105 :: 		res |= fp_i2cStart();
0x0A36	0x02BE91E0  	LDS        R30, __fm_Driver_fp_i2cStart+0
0x0A3A	0x02BF91F0  	LDS        R31, __fm_Driver_fp_i2cStart+1
0x0A3E	0x9509    	ICALL
0x0A40	0x8128    	LDD        R18, Y+0
0x0A42	0x8139    	LDD        R19, Y+1
0x0A44	0xE010    	LDI        R17, 0
0x0A46	0x2B02    	OR         R16, R18
0x0A48	0x2B13    	OR         R17, R19
;__hal_avr.c,106 :: 		return res;
;__hal_avr.c,107 :: 		}
L_end_hal_i2cStart:
0x0A4A	0x9621    	ADIW       R28, 1
0x0A4C	0xBFCD    	OUT        SPL+0, R28
0x0A4E	0xBFDE    	OUT        SPL+1, R29
0x0A50	0x91DF    	POP        R29
0x0A52	0x91CF    	POP        R28
0x0A54	0x9508    	RET
; end of __fm_Driver_hal_i2cStart
_UART1_Read:
;__Lib_UART_d01_ursel.c,70 :: 		
;__Lib_UART_d01_ursel.c,71 :: 		
0x05E0	0xB10C    	IN         R16, UDR0+0
;__Lib_UART_d01_ursel.c,72 :: 		
L_end_UART1_Read:
0x05E2	0x9508    	RET
; end of _UART1_Read
_UART1_Data_Ready:
;__Lib_UART_d01_ursel.c,66 :: 		
;__Lib_UART_d01_ursel.c,67 :: 		
0x05E4	0xB00B    	IN         R0, RXC0_bit+0
0x05E6	0x2700    	CLR        R16
0x05E8	0xFC07    	SBRC       R0, 7
0x05EA	0x9503    	INC        R16
;__Lib_UART_d01_ursel.c,68 :: 		
L_end_UART1_Data_Ready:
0x05EC	0x9508    	RET
; end of _UART1_Data_Ready
_UART1_Tx_Idle:
;__Lib_UART_d01_ursel.c,74 :: 		
;__Lib_UART_d01_ursel.c,75 :: 		
0x05EE	0xB00B    	IN         R0, TXC0_bit+0
0x05F0	0x2700    	CLR        R16
0x05F2	0xFC06    	SBRC       R0, 6
0x05F4	0x9503    	INC        R16
;__Lib_UART_d01_ursel.c,76 :: 		
L_end_UART1_Tx_Idle:
0x05F6	0x9508    	RET
; end of _UART1_Tx_Idle
easyavr_v7_ATMEGA32__getAN_1:
;__ea_atmega32_gpio.c,31 :: 		static uint8_t _getAN_1  () 			{ return PINA7_bit;   }
0x069E	0xB209    	IN         R0, PINA7_bit+0
0x06A0	0x2700    	CLR        R16
0x06A2	0xFC07    	SBRC       R0, 7
0x06A4	0x9503    	INC        R16
L_end__getAN_1:
0x06A6	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getAN_1
easyavr_v7_ATMEGA32__getRST_1:
;__ea_atmega32_gpio.c,32 :: 		static uint8_t _getRST_1 () 			{ return PINA6_bit;   }
0x06A8	0xB209    	IN         R0, PINA6_bit+0
0x06AA	0x2700    	CLR        R16
0x06AC	0xFC06    	SBRC       R0, 6
0x06AE	0x9503    	INC        R16
L_end__getRST_1:
0x06B0	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getRST_1
easyavr_v7_ATMEGA32__getCS_1:
;__ea_atmega32_gpio.c,33 :: 		static uint8_t _getCS_1  () 			{ return PINA5_bit;   }
0x06B2	0xB209    	IN         R0, PINA5_bit+0
0x06B4	0x2700    	CLR        R16
0x06B6	0xFC05    	SBRC       R0, 5
0x06B8	0x9503    	INC        R16
L_end__getCS_1:
0x06BA	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getCS_1
easyavr_v7_ATMEGA32__getSCK_1:
;__ea_atmega32_gpio.c,34 :: 		static uint8_t _getSCK_1 () 			{ return PINB7_bit;   }
0x0680	0xB206    	IN         R0, PINB7_bit+0
0x0682	0x2700    	CLR        R16
0x0684	0xFC07    	SBRC       R0, 7
0x0686	0x9503    	INC        R16
L_end__getSCK_1:
0x0688	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getSCK_1
easyavr_v7_ATMEGA32__getMISO_1:
;__ea_atmega32_gpio.c,35 :: 		static uint8_t _getMISO_1() 			{ return PINB6_bit;   }
0x068A	0xB206    	IN         R0, PINB6_bit+0
0x068C	0x2700    	CLR        R16
0x068E	0xFC06    	SBRC       R0, 6
0x0690	0x9503    	INC        R16
L_end__getMISO_1:
0x0692	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getMISO_1
easyavr_v7_ATMEGA32__getMOSI_1:
;__ea_atmega32_gpio.c,36 :: 		static uint8_t _getMOSI_1() 			{ return PINB5_bit;   }
0x0694	0xB206    	IN         R0, PINB5_bit+0
0x0696	0x2700    	CLR        R16
0x0698	0xFC05    	SBRC       R0, 5
0x069A	0x9503    	INC        R16
L_end__getMOSI_1:
0x069C	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getMOSI_1
easyavr_v7_ATMEGA32__getPWM_1:
;__ea_atmega32_gpio.c,37 :: 		static uint8_t _getPWM_1 () 			{ return PIND4_bit;   }
0x03C6	0xB200    	IN         R0, PIND4_bit+0
0x03C8	0x2700    	CLR        R16
0x03CA	0xFC04    	SBRC       R0, 4
0x03CC	0x9503    	INC        R16
L_end__getPWM_1:
0x03CE	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getPWM_1
easyavr_v7_ATMEGA32__getINT_1:
;__ea_atmega32_gpio.c,38 :: 		static uint8_t _getINT_1 () 			{ return PIND2_bit;   }
0x03D0	0xB200    	IN         R0, PIND2_bit+0
0x03D2	0x2700    	CLR        R16
0x03D4	0xFC02    	SBRC       R0, 2
0x03D6	0x9503    	INC        R16
L_end__getINT_1:
0x03D8	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getINT_1
easyavr_v7_ATMEGA32__getRX_1:
;__ea_atmega32_gpio.c,39 :: 		static uint8_t _getRX_1  () 			{ return PIND0_bit;   }
0x03B2	0xB200    	IN         R0, PIND0_bit+0
0x03B4	0x2700    	CLR        R16
0x03B6	0xFC00    	SBRC       R0, 0
0x03B8	0x9503    	INC        R16
L_end__getRX_1:
0x03BA	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getRX_1
easyavr_v7_ATMEGA32__getTX_1:
;__ea_atmega32_gpio.c,40 :: 		static uint8_t _getTX_1  () 			{ return PIND1_bit;   }
0x03BC	0xB200    	IN         R0, PIND1_bit+0
0x03BE	0x2700    	CLR        R16
0x03C0	0xFC01    	SBRC       R0, 1
0x03C2	0x9503    	INC        R16
L_end__getTX_1:
0x03C4	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getTX_1
easyavr_v7_ATMEGA32__getSCL_1:
;__ea_atmega32_gpio.c,41 :: 		static uint8_t _getSCL_1 () 			{ return PINC0_bit;   }
0x03EE	0xB203    	IN         R0, PINC0_bit+0
0x03F0	0x2700    	CLR        R16
0x03F2	0xFC00    	SBRC       R0, 0
0x03F4	0x9503    	INC        R16
L_end__getSCL_1:
0x03F6	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getSCL_1
easyavr_v7_ATMEGA32__getSDA_1:
;__ea_atmega32_gpio.c,42 :: 		static uint8_t _getSDA_1 () 			{ return PINC1_bit;   }
0x03F8	0xB203    	IN         R0, PINC1_bit+0
0x03FA	0x2700    	CLR        R16
0x03FC	0xFC01    	SBRC       R0, 1
0x03FE	0x9503    	INC        R16
L_end__getSDA_1:
0x0400	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getSDA_1
easyavr_v7_ATMEGA32__getAN_2:
;__ea_atmega32_gpio.c,56 :: 		static uint8_t _getAN_2  ()             { return PINA0_bit;   }
0x03DA	0xB209    	IN         R0, PINA0_bit+0
0x03DC	0x2700    	CLR        R16
0x03DE	0xFC00    	SBRC       R0, 0
0x03E0	0x9503    	INC        R16
L_end__getAN_2:
0x03E2	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getAN_2
easyavr_v7_ATMEGA32__getRST_2:
;__ea_atmega32_gpio.c,57 :: 		static uint8_t _getRST_2 ()             { return PINA1_bit;   }
0x03E4	0xB209    	IN         R0, PINA1_bit+0
0x03E6	0x2700    	CLR        R16
0x03E8	0xFC01    	SBRC       R0, 1
0x03EA	0x9503    	INC        R16
L_end__getRST_2:
0x03EC	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getRST_2
easyavr_v7_ATMEGA32__getCS_2:
;__ea_atmega32_gpio.c,58 :: 		static uint8_t _getCS_2  ()             { return PINA3_bit;   }
0x03A8	0xB209    	IN         R0, PINA3_bit+0
0x03AA	0x2700    	CLR        R16
0x03AC	0xFC03    	SBRC       R0, 3
0x03AE	0x9503    	INC        R16
L_end__getCS_2:
0x03B0	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getCS_2
easyavr_v7_ATMEGA32__getSCK_2:
;__ea_atmega32_gpio.c,59 :: 		static uint8_t _getSCK_2 ()             { return PINB7_bit;   }
0x036C	0xB206    	IN         R0, PINB7_bit+0
0x036E	0x2700    	CLR        R16
0x0370	0xFC07    	SBRC       R0, 7
0x0372	0x9503    	INC        R16
L_end__getSCK_2:
0x0374	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getSCK_2
easyavr_v7_ATMEGA32__getMISO_2:
;__ea_atmega32_gpio.c,60 :: 		static uint8_t _getMISO_2()             { return PINB6_bit;   }
0x0376	0xB206    	IN         R0, PINB6_bit+0
0x0378	0x2700    	CLR        R16
0x037A	0xFC06    	SBRC       R0, 6
0x037C	0x9503    	INC        R16
L_end__getMISO_2:
0x037E	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getMISO_2
easyavr_v7_ATMEGA32__getMOSI_2:
;__ea_atmega32_gpio.c,61 :: 		static uint8_t _getMOSI_2()             { return PINB5_bit;   }
0x0362	0xB206    	IN         R0, PINB5_bit+0
0x0364	0x2700    	CLR        R16
0x0366	0xFC05    	SBRC       R0, 5
0x0368	0x9503    	INC        R16
L_end__getMOSI_2:
0x036A	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getMOSI_2
easyavr_v7_ATMEGA32__getPWM_2:
;__ea_atmega32_gpio.c,62 :: 		static uint8_t _getPWM_2 ()             { return PIND5_bit;   }
0x0358	0xB200    	IN         R0, PIND5_bit+0
0x035A	0x2700    	CLR        R16
0x035C	0xFC05    	SBRC       R0, 5
0x035E	0x9503    	INC        R16
L_end__getPWM_2:
0x0360	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getPWM_2
easyavr_v7_ATMEGA32__getINT_2:
;__ea_atmega32_gpio.c,63 :: 		static uint8_t _getINT_2 ()             { return PIND3_bit;   }
0x0394	0xB200    	IN         R0, PIND3_bit+0
0x0396	0x2700    	CLR        R16
0x0398	0xFC03    	SBRC       R0, 3
0x039A	0x9503    	INC        R16
L_end__getINT_2:
0x039C	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getINT_2
easyavr_v7_ATMEGA32__getRX_2:
;__ea_atmega32_gpio.c,64 :: 		static uint8_t _getRX_2  ()             { return PIND0_bit;   }
0x039E	0xB200    	IN         R0, PIND0_bit+0
0x03A0	0x2700    	CLR        R16
0x03A2	0xFC00    	SBRC       R0, 0
0x03A4	0x9503    	INC        R16
L_end__getRX_2:
0x03A6	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getRX_2
easyavr_v7_ATMEGA32__getTX_2:
;__ea_atmega32_gpio.c,65 :: 		static uint8_t _getTX_2  ()             { return PIND1_bit;   }
0x0380	0xB200    	IN         R0, PIND1_bit+0
0x0382	0x2700    	CLR        R16
0x0384	0xFC01    	SBRC       R0, 1
0x0386	0x9503    	INC        R16
L_end__getTX_2:
0x0388	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getTX_2
easyavr_v7_ATMEGA32__getSCL_2:
;__ea_atmega32_gpio.c,66 :: 		static uint8_t _getSCL_2 ()             { return PINC0_bit;   }
0x038A	0xB203    	IN         R0, PINC0_bit+0
0x038C	0x2700    	CLR        R16
0x038E	0xFC00    	SBRC       R0, 0
0x0390	0x9503    	INC        R16
L_end__getSCL_2:
0x0392	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getSCL_2
easyavr_v7_ATMEGA32__getSDA_2:
;__ea_atmega32_gpio.c,67 :: 		static uint8_t _getSDA_2 ()             { return PINC1_bit;   }
0x0402	0xB203    	IN         R0, PINC1_bit+0
0x0404	0x2700    	CLR        R16
0x0406	0xFC01    	SBRC       R0, 1
0x0408	0x9503    	INC        R16
L_end__getSDA_2:
0x040A	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getSDA_2
easyavr_v7_ATMEGA32__getAN_3:
;__ea_atmega32_gpio.c,81 :: 		static uint8_t _getAN_3  ()             { return PINA4_bit;   }
0x05A4	0xB209    	IN         R0, PINA4_bit+0
0x05A6	0x2700    	CLR        R16
0x05A8	0xFC04    	SBRC       R0, 4
0x05AA	0x9503    	INC        R16
L_end__getAN_3:
0x05AC	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getAN_3
easyavr_v7_ATMEGA32__getRST_3:
;__ea_atmega32_gpio.c,82 :: 		static uint8_t _getRST_3 ()             { return PINB0_bit;   }
0x05AE	0xB206    	IN         R0, PINB0_bit+0
0x05B0	0x2700    	CLR        R16
0x05B2	0xFC00    	SBRC       R0, 0
0x05B4	0x9503    	INC        R16
L_end__getRST_3:
0x05B6	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getRST_3
easyavr_v7_ATMEGA32__getCS_3:
;__ea_atmega32_gpio.c,83 :: 		static uint8_t _getCS_3  ()             { return PINB4_bit;   }
0x0590	0xB206    	IN         R0, PINB4_bit+0
0x0592	0x2700    	CLR        R16
0x0594	0xFC04    	SBRC       R0, 4
0x0596	0x9503    	INC        R16
L_end__getCS_3:
0x0598	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getCS_3
easyavr_v7_ATMEGA32__getSCK_3:
;__ea_atmega32_gpio.c,84 :: 		static uint8_t _getSCK_3 ()             { return PINB7_bit;   }
0x059A	0xB206    	IN         R0, PINB7_bit+0
0x059C	0x2700    	CLR        R16
0x059E	0xFC07    	SBRC       R0, 7
0x05A0	0x9503    	INC        R16
L_end__getSCK_3:
0x05A2	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getSCK_3
easyavr_v7_ATMEGA32__getMISO_3:
;__ea_atmega32_gpio.c,85 :: 		static uint8_t _getMISO_3()             { return PINB6_bit;   }
0x05CC	0xB206    	IN         R0, PINB6_bit+0
0x05CE	0x2700    	CLR        R16
0x05D0	0xFC06    	SBRC       R0, 6
0x05D2	0x9503    	INC        R16
L_end__getMISO_3:
0x05D4	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getMISO_3
easyavr_v7_ATMEGA32__getMOSI_3:
;__ea_atmega32_gpio.c,86 :: 		static uint8_t _getMOSI_3()             { return PINB5_bit;   }
0x05D6	0xB206    	IN         R0, PINB5_bit+0
0x05D8	0x2700    	CLR        R16
0x05DA	0xFC05    	SBRC       R0, 5
0x05DC	0x9503    	INC        R16
L_end__getMOSI_3:
0x05DE	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getMOSI_3
easyavr_v7_ATMEGA32__getPWM_3:
;__ea_atmega32_gpio.c,87 :: 		static uint8_t _getPWM_3 ()             { return PINB3_bit;   }
0x05B8	0xB206    	IN         R0, PINB3_bit+0
0x05BA	0x2700    	CLR        R16
0x05BC	0xFC03    	SBRC       R0, 3
0x05BE	0x9503    	INC        R16
L_end__getPWM_3:
0x05C0	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getPWM_3
easyavr_v7_ATMEGA32__getINT_3:
;__ea_atmega32_gpio.c,88 :: 		static uint8_t _getINT_3 ()             { return PINB2_bit;   }
0x05C2	0xB206    	IN         R0, PINB2_bit+0
0x05C4	0x2700    	CLR        R16
0x05C6	0xFC02    	SBRC       R0, 2
0x05C8	0x9503    	INC        R16
L_end__getINT_3:
0x05CA	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getINT_3
easyavr_v7_ATMEGA32__getRX_3:
;__ea_atmega32_gpio.c,89 :: 		static uint8_t _getRX_3  ()             { return PIND2_bit;   }
0x0586	0xB200    	IN         R0, PIND2_bit+0
0x0588	0x2700    	CLR        R16
0x058A	0xFC02    	SBRC       R0, 2
0x058C	0x9503    	INC        R16
L_end__getRX_3:
0x058E	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getRX_3
easyavr_v7_ATMEGA32__getTX_3:
;__ea_atmega32_gpio.c,90 :: 		static uint8_t _getTX_3  ()             { return PIND3_bit;   }
0x042A	0xB200    	IN         R0, PIND3_bit+0
0x042C	0x2700    	CLR        R16
0x042E	0xFC03    	SBRC       R0, 3
0x0430	0x9503    	INC        R16
L_end__getTX_3:
0x0432	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getTX_3
easyavr_v7_ATMEGA32__getSCL_3:
;__ea_atmega32_gpio.c,91 :: 		static uint8_t _getSCL_3 ()             { return PINC0_bit;   }
0x0434	0xB203    	IN         R0, PINC0_bit+0
0x0436	0x2700    	CLR        R16
0x0438	0xFC00    	SBRC       R0, 0
0x043A	0x9503    	INC        R16
L_end__getSCL_3:
0x043C	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getSCL_3
easyavr_v7_ATMEGA32__getSDA_3:
;__ea_atmega32_gpio.c,92 :: 		static uint8_t _getSDA_3 ()             { return PINC1_bit;   }
0x040C	0xB203    	IN         R0, PINC1_bit+0
0x040E	0x2700    	CLR        R16
0x0410	0xFC01    	SBRC       R0, 1
0x0412	0x9503    	INC        R16
L_end__getSDA_3:
0x0414	0x9508    	RET
; end of easyavr_v7_ATMEGA32__getSDA_3
__fm_Driver_hal_i2cRead:
0x08F4	0x93CF    	PUSH       R28
0x08F6	0x93DF    	PUSH       R29
0x08F8	0xB7CD    	IN         R28, SPL+0
0x08FA	0xB7DE    	IN         R29, SPL+1
0x08FC	0x9724    	SBIW       R28, 4
0x08FE	0xBFCD    	OUT        SPL+0, R28
0x0900	0xBFDE    	OUT        SPL+1, R29
0x0902	0x9621    	ADIW       R28, 1
;__hal_avr.c,123 :: 		static int hal_i2cRead(uint8_t slaveAddress, uint8_t *pBuf, uint16_t nBytes, uint8_t endMode)
;__hal_avr.c,125 :: 		int res = 0;
0x0904	0x922F    	PUSH       R2
0x0906	0xE0B0    	LDI        R27, 0
0x0908	0x83BA    	STD        Y+2, R27
0x090A	0x83BB    	STD        Y+3, R27
;__hal_avr.c,126 :: 		uint8_t *ptr = pBuf;
0x090C	0x8238    	STD        Y+0, R3
0x090E	0x8249    	STD        Y+1, R4
;__hal_avr.c,127 :: 		fp_i2cWrite((slaveAddress << 1) | 1);
0x0910	0x2D02    	MOV        R16, R2
0x0912	0x0F00    	LSL        R16
0x0914	0x6001    	ORI        R16, 1
0x0916	0x927F    	PUSH       R7
0x0918	0x926F    	PUSH       R6
0x091A	0x925F    	PUSH       R5
0x091C	0x2E20    	MOV        R2, R16
0x091E	0x02B691E0  	LDS        R30, __fm_Driver_fp_i2cWrite+0
0x0922	0x02B791F0  	LDS        R31, __fm_Driver_fp_i2cWrite+1
0x0926	0x9509    	ICALL
0x0928	0x905F    	POP        R5
0x092A	0x906F    	POP        R6
0x092C	0x907F    	POP        R7
;__hal_avr.c,128 :: 		while(--nBytes) *ptr++ =
L___fm_Driver_hal_i2cRead4:
0x092E	0x2D05    	MOV        R16, R5
0x0930	0x2D16    	MOV        R17, R6
0x0932	0x5001    	SUBI       R16, 1
0x0934	0x4010    	SBCI       R17, 0
0x0936	0x2E50    	MOV        R5, R16
0x0938	0x2E61    	MOV        R6, R17
0x093A	0x2FB0    	MOV        R27, R16
0x093C	0x2BB1    	OR         R27, R17
0x093E	0xF0E9    	BREQ       L___fm_Driver_hal_i2cRead5
L___fm_Driver_hal_i2cRead101:
;__hal_avr.c,129 :: 		fp_i2cRead(ACK_BIT);
0x0940	0x927F    	PUSH       R7
0x0942	0x926F    	PUSH       R6
0x0944	0x925F    	PUSH       R5
0x0946	0x924F    	PUSH       R4
0x0948	0x923F    	PUSH       R3
0x094A	0x922F    	PUSH       R2
0x094C	0xE0B1    	LDI        R27, 1
0x094E	0x2E2B    	MOV        R2, R27
0x0950	0x02BA91E0  	LDS        R30, __fm_Driver_fp_i2cRead+0
0x0954	0x02BB91F0  	LDS        R31, __fm_Driver_fp_i2cRead+1
0x0958	0x9509    	ICALL
0x095A	0x902F    	POP        R2
0x095C	0x903F    	POP        R3
0x095E	0x904F    	POP        R4
0x0960	0x905F    	POP        R5
0x0962	0x906F    	POP        R6
0x0964	0x907F    	POP        R7
0x0966	0x81E8    	LDD        R30, Y+0
0x0968	0x81F9    	LDD        R31, Y+1
0x096A	0x8300    	ST         Z, R16
0x096C	0x8108    	LDD        R16, Y+0
0x096E	0x8119    	LDD        R17, Y+1
0x0970	0x5F0F    	SUBI       R16, 255
0x0972	0x4F1F    	SBCI       R17, 255
0x0974	0x8308    	STD        Y+0, R16
0x0976	0x8319    	STD        Y+1, R17
0x0978	0xCFDA    	RJMP       L___fm_Driver_hal_i2cRead4
L___fm_Driver_hal_i2cRead5:
;__hal_avr.c,130 :: 		*ptr = fp_i2cRead(NACK_BIT);
0x097A	0x927F    	PUSH       R7
0x097C	0x926F    	PUSH       R6
0x097E	0x925F    	PUSH       R5
0x0980	0x924F    	PUSH       R4
0x0982	0x923F    	PUSH       R3
0x0984	0x922F    	PUSH       R2
0x0986	0x2422    	CLR        R2
0x0988	0x02BA91E0  	LDS        R30, __fm_Driver_fp_i2cRead+0
0x098C	0x02BB91F0  	LDS        R31, __fm_Driver_fp_i2cRead+1
0x0990	0x9509    	ICALL
0x0992	0x902F    	POP        R2
0x0994	0x903F    	POP        R3
0x0996	0x904F    	POP        R4
0x0998	0x905F    	POP        R5
0x099A	0x906F    	POP        R6
0x099C	0x907F    	POP        R7
0x099E	0x81E8    	LDD        R30, Y+0
0x09A0	0x81F9    	LDD        R31, Y+1
0x09A2	0x8300    	ST         Z, R16
;__hal_avr.c,131 :: 		if(endMode == END_MODE_STOP)
0x09A4	0xE0B0    	LDI        R27, 0
0x09A6	0x167B    	CP         R7, R27
0x09A8	0xF489    	BRNE       L___fm_Driver_hal_i2cRead6
L___fm_Driver_hal_i2cRead102:
;__hal_avr.c,132 :: 		fp_i2cStop();
0x09AA	0x927F    	PUSH       R7
0x09AC	0x926F    	PUSH       R6
0x09AE	0x925F    	PUSH       R5
0x09B0	0x924F    	PUSH       R4
0x09B2	0x923F    	PUSH       R3
0x09B4	0x922F    	PUSH       R2
0x09B6	0x02B891E0  	LDS        R30, __fm_Driver_fp_i2cStop+0
0x09BA	0x02B991F0  	LDS        R31, __fm_Driver_fp_i2cStop+1
0x09BE	0x9509    	ICALL
0x09C0	0x902F    	POP        R2
0x09C2	0x903F    	POP        R3
0x09C4	0x904F    	POP        R4
0x09C6	0x905F    	POP        R5
0x09C8	0x906F    	POP        R6
0x09CA	0x907F    	POP        R7
L___fm_Driver_hal_i2cRead6:
;__hal_avr.c,133 :: 		if(endMode == END_MODE_RESTART)
0x09CC	0xE0B1    	LDI        R27, 1
0x09CE	0x167B    	CP         R7, R27
0x09D0	0xF489    	BRNE       L___fm_Driver_hal_i2cRead7
L___fm_Driver_hal_i2cRead103:
;__hal_avr.c,134 :: 		fp_i2cStart();
0x09D2	0x927F    	PUSH       R7
0x09D4	0x926F    	PUSH       R6
0x09D6	0x925F    	PUSH       R5
0x09D8	0x924F    	PUSH       R4
0x09DA	0x923F    	PUSH       R3
0x09DC	0x922F    	PUSH       R2
0x09DE	0x02BE91E0  	LDS        R30, __fm_Driver_fp_i2cStart+0
0x09E2	0x02BF91F0  	LDS        R31, __fm_Driver_fp_i2cStart+1
0x09E6	0x9509    	ICALL
0x09E8	0x902F    	POP        R2
0x09EA	0x903F    	POP        R3
0x09EC	0x904F    	POP        R4
0x09EE	0x905F    	POP        R5
0x09F0	0x906F    	POP        R6
0x09F2	0x907F    	POP        R7
L___fm_Driver_hal_i2cRead7:
;__hal_avr.c,135 :: 		return res;
0x09F4	0x810A    	LDD        R16, Y+2
0x09F6	0x811B    	LDD        R17, Y+3
;__hal_avr.c,136 :: 		}
;__hal_avr.c,135 :: 		return res;
;__hal_avr.c,136 :: 		}
L_end_hal_i2cRead:
0x09F8	0x902F    	POP        R2
0x09FA	0x9623    	ADIW       R28, 3
0x09FC	0xBFCD    	OUT        SPL+0, R28
0x09FE	0xBFDE    	OUT        SPL+1, R29
0x0A00	0x91DF    	POP        R29
0x0A02	0x91CF    	POP        R28
0x0A04	0x9508    	RET
; end of __fm_Driver_hal_i2cRead
_fm_setBits:
;__fm_Driver.c,287 :: 		void fm_setBits( uint16_t *registerBuffer, uint16_t registerAddress, uint16_t bitsMask, uint16_t bitsValue )
;__fm_Driver.c,289 :: 		registerBuffer[ registerAddress ] &= bitsMask;
0x1EBC	0x0182    	MOVW       R16, R4
0x1EBE	0x0F00    	LSL        R16
0x1EC0	0x1F11    	ROL        R17
0x1EC2	0x0198    	MOVW       R18, R16
0x1EC4	0x0D22    	ADD        R18, R2
0x1EC6	0x1D33    	ADC        R19, R3
0x1EC8	0x01F9    	MOVW       R30, R18
0x1ECA	0x9101    	LD         R16, Z+
0x1ECC	0x9111    	LD         R17, Z+
0x1ECE	0x2106    	AND        R16, R6
0x1ED0	0x2117    	AND        R17, R7
0x1ED2	0x01F9    	MOVW       R30, R18
0x1ED4	0x9301    	ST         Z+, R16
0x1ED6	0x9311    	ST         Z+, R17
;__fm_Driver.c,290 :: 		registerBuffer[ registerAddress ] |= bitsValue;
0x1ED8	0x0182    	MOVW       R16, R4
0x1EDA	0x0F00    	LSL        R16
0x1EDC	0x1F11    	ROL        R17
0x1EDE	0x0198    	MOVW       R18, R16
0x1EE0	0x0D22    	ADD        R18, R2
0x1EE2	0x1D33    	ADC        R19, R3
0x1EE4	0x01F9    	MOVW       R30, R18
0x1EE6	0x9101    	LD         R16, Z+
0x1EE8	0x9111    	LD         R17, Z+
0x1EEA	0x2908    	OR         R16, R8
0x1EEC	0x2919    	OR         R17, R9
0x1EEE	0x01F9    	MOVW       R30, R18
0x1EF0	0x9301    	ST         Z+, R16
0x1EF2	0x9311    	ST         Z+, R17
;__fm_Driver.c,291 :: 		}
L_end_fm_setBits:
0x1EF4	0x9508    	RET
; end of _fm_setBits
_fm_writeRegisters:
0x1E10	0x93CF    	PUSH       R28
0x1E12	0x93DF    	PUSH       R29
0x1E14	0xB7CD    	IN         R28, SPL+0
0x1E16	0xB7DE    	IN         R29, SPL+1
0x1E18	0x97A0    	SBIW       R28, 32
0x1E1A	0xBFCD    	OUT        SPL+0, R28
0x1E1C	0xBFDE    	OUT        SPL+1, R29
0x1E1E	0x9621    	ADIW       R28, 1
;__fm_Driver.c,266 :: 		void fm_writeRegisters( uint16_t *registerBuffer )
;__fm_Driver.c,273 :: 		j = 0;
0x1E20	0x924F    	PUSH       R4
0x1E22	0x925F    	PUSH       R5
0x1E24	0x926F    	PUSH       R6
0x1E26	0x927F    	PUSH       R7
; j start address is: 21 (R21)
0x1E28	0xE050    	LDI        R21, 0
;__fm_Driver.c,275 :: 		for (i = 0; i < 16; i ++)
; i start address is: 20 (R20)
0x1E2A	0xE040    	LDI        R20, 0
; j end address is: 21 (R21)
; i end address is: 20 (R20)
L_fm_writeRegisters17:
; i start address is: 20 (R20)
; j start address is: 21 (R21)
0x1E2C	0x3140    	CPI        R20, 16
0x1E2E	0xF550    	BRSH       L_fm_writeRegisters18
L__fm_writeRegisters111:
;__fm_Driver.c,277 :: 		auxBuffer[ j ] = registerBuffer[ i ] >> 8;
0x1E30	0x018E    	MOVW       R16, R28
0x1E32	0x2F25    	MOV        R18, R21
0x1E34	0xE030    	LDI        R19, 0
0x1E36	0x0F20    	ADD        R18, R16
0x1E38	0x1F31    	ADC        R19, R17
0x1E3A	0x2F04    	MOV        R16, R20
0x1E3C	0xE010    	LDI        R17, 0
0x1E3E	0x0F00    	LSL        R16
0x1E40	0x1F11    	ROL        R17
0x1E42	0x01F8    	MOVW       R30, R16
0x1E44	0x0DE2    	ADD        R30, R2
0x1E46	0x1DF3    	ADC        R31, R3
0x1E48	0x9101    	LD         R16, Z+
0x1E4A	0x9111    	LD         R17, Z+
0x1E4C	0x2F01    	MOV        R16, R17
0x1E4E	0xE010    	LDI        R17, 0
0x1E50	0x01F9    	MOVW       R30, R18
0x1E52	0x8300    	ST         Z, R16
;__fm_Driver.c,278 :: 		j += 1;
0x1E54	0x2F25    	MOV        R18, R21
0x1E56	0x5F2F    	SUBI       R18, 255
0x1E58	0x2F52    	MOV        R21, R18
;__fm_Driver.c,279 :: 		auxBuffer[ j ] = registerBuffer[ i ];
0x1E5A	0x018E    	MOVW       R16, R28
0x1E5C	0xE030    	LDI        R19, 0
0x1E5E	0x0F20    	ADD        R18, R16
0x1E60	0x1F31    	ADC        R19, R17
0x1E62	0x2F04    	MOV        R16, R20
0x1E64	0xE010    	LDI        R17, 0
0x1E66	0x0F00    	LSL        R16
0x1E68	0x1F11    	ROL        R17
0x1E6A	0x01F8    	MOVW       R30, R16
0x1E6C	0x0DE2    	ADD        R30, R2
0x1E6E	0x1DF3    	ADC        R31, R3
0x1E70	0x8100    	LD         R16, Z
0x1E72	0x01F9    	MOVW       R30, R18
0x1E74	0x8300    	ST         Z, R16
;__fm_Driver.c,280 :: 		j += 1;
0x1E76	0x2F05    	MOV        R16, R21
0x1E78	0x5F0F    	SUBI       R16, 255
0x1E7A	0x2F50    	MOV        R21, R16
;__fm_Driver.c,275 :: 		for (i = 0; i < 16; i ++)
0x1E7C	0x2F04    	MOV        R16, R20
0x1E7E	0x5F0F    	SUBI       R16, 255
0x1E80	0x2F40    	MOV        R20, R16
;__fm_Driver.c,281 :: 		}
; j end address is: 21 (R21)
; i end address is: 20 (R20)
0x1E82	0xCFD4    	RJMP       L_fm_writeRegisters17
L_fm_writeRegisters18:
;__fm_Driver.c,283 :: 		hal_i2cStart( );
0x1E84	0x923F    	PUSH       R3
0x1E86	0x922F    	PUSH       R2
0x1E88	0x0510940E  	CALL       __fm_Driver_hal_i2cStart+0
;__fm_Driver.c,284 :: 		hal_i2cWrite( _slaveAddress, auxBuffer, 32, END_MODE_STOP );
0x1E8C	0x018E    	MOVW       R16, R28
0x1E8E	0x2477    	CLR        R7
0x1E90	0xE2B0    	LDI        R27, 32
0x1E92	0x2E5B    	MOV        R5, R27
0x1E94	0xE0B0    	LDI        R27, 0
0x1E96	0x2E6B    	MOV        R6, R27
0x1E98	0x2E30    	MOV        R3, R16
0x1E9A	0x2E41    	MOV        R4, R17
0x1E9C	0x02C69020  	LDS        R2, __fm_Driver__slaveAddress+0
0x1EA0	0x03E3940E  	CALL       __fm_Driver_hal_i2cWrite+0
0x1EA4	0x902F    	POP        R2
0x1EA6	0x903F    	POP        R3
;__fm_Driver.c,285 :: 		}
L_end_fm_writeRegisters:
0x1EA8	0x907F    	POP        R7
0x1EAA	0x906F    	POP        R6
0x1EAC	0x905F    	POP        R5
0x1EAE	0x904F    	POP        R4
0x1EB0	0x966F    	ADIW       R28, 31
0x1EB2	0xBFCD    	OUT        SPL+0, R28
0x1EB4	0xBFDE    	OUT        SPL+1, R29
0x1EB6	0x91DF    	POP        R29
0x1EB8	0x91CF    	POP        R28
0x1EBA	0x9508    	RET
; end of _fm_writeRegisters
__fm_Driver_hal_i2cWrite:
0x07C6	0x93CF    	PUSH       R28
0x07C8	0x93DF    	PUSH       R29
0x07CA	0xB7CD    	IN         R28, SPL+0
0x07CC	0xB7DE    	IN         R29, SPL+1
0x07CE	0x9724    	SBIW       R28, 4
0x07D0	0xBFCD    	OUT        SPL+0, R28
0x07D2	0xBFDE    	OUT        SPL+1, R29
0x07D4	0x9621    	ADIW       R28, 1
;__hal_avr.c,109 :: 		static int hal_i2cWrite(uint8_t slaveAddress, uint8_t *pBuf, uint16_t nBytes, uint8_t endMode)
;__hal_avr.c,111 :: 		int res = 0;
0x07D6	0x922F    	PUSH       R2
0x07D8	0xE0B0    	LDI        R27, 0
0x07DA	0x83BA    	STD        Y+2, R27
0x07DC	0x83BB    	STD        Y+3, R27
;__hal_avr.c,112 :: 		uint8_t *ptr = pBuf;
0x07DE	0x8238    	STD        Y+0, R3
0x07E0	0x8249    	STD        Y+1, R4
;__hal_avr.c,113 :: 		fp_i2cWrite(slaveAddress << 1);
0x07E2	0x2D02    	MOV        R16, R2
0x07E4	0x0F00    	LSL        R16
0x07E6	0x927F    	PUSH       R7
0x07E8	0x926F    	PUSH       R6
0x07EA	0x925F    	PUSH       R5
0x07EC	0x2E20    	MOV        R2, R16
0x07EE	0x02B691E0  	LDS        R30, __fm_Driver_fp_i2cWrite+0
0x07F2	0x02B791F0  	LDS        R31, __fm_Driver_fp_i2cWrite+1
0x07F6	0x9509    	ICALL
0x07F8	0x905F    	POP        R5
0x07FA	0x906F    	POP        R6
0x07FC	0x907F    	POP        R7
;__hal_avr.c,114 :: 		while(nBytes--)
L___fm_Driver_hal_i2cWrite0:
0x07FE	0x2D25    	MOV        R18, R5
0x0800	0x2D36    	MOV        R19, R6
0x0802	0x2D05    	MOV        R16, R5
0x0804	0x2D16    	MOV        R17, R6
0x0806	0x5001    	SUBI       R16, 1
0x0808	0x4010    	SBCI       R17, 0
0x080A	0x2E50    	MOV        R5, R16
0x080C	0x2E61    	MOV        R6, R17
0x080E	0x2FB2    	MOV        R27, R18
0x0810	0x2BB3    	OR         R27, R19
0x0812	0xF0E1    	BREQ       L___fm_Driver_hal_i2cWrite1
L___fm_Driver_hal_i2cWrite97:
;__hal_avr.c,115 :: 		fp_i2cWrite(*( ptr++ ));
0x0814	0x81E8    	LDD        R30, Y+0
0x0816	0x81F9    	LDD        R31, Y+1
0x0818	0x8100    	LD         R16, Z
0x081A	0x927F    	PUSH       R7
0x081C	0x926F    	PUSH       R6
0x081E	0x925F    	PUSH       R5
0x0820	0x924F    	PUSH       R4
0x0822	0x923F    	PUSH       R3
0x0824	0x922F    	PUSH       R2
0x0826	0x2E20    	MOV        R2, R16
0x0828	0x02B691E0  	LDS        R30, __fm_Driver_fp_i2cWrite+0
0x082C	0x02B791F0  	LDS        R31, __fm_Driver_fp_i2cWrite+1
0x0830	0x9509    	ICALL
0x0832	0x902F    	POP        R2
0x0834	0x903F    	POP        R3
0x0836	0x904F    	POP        R4
0x0838	0x905F    	POP        R5
0x083A	0x906F    	POP        R6
0x083C	0x907F    	POP        R7
0x083E	0x8108    	LDD        R16, Y+0
0x0840	0x8119    	LDD        R17, Y+1
0x0842	0x5F0F    	SUBI       R16, 255
0x0844	0x4F1F    	SBCI       R17, 255
0x0846	0x8308    	STD        Y+0, R16
0x0848	0x8319    	STD        Y+1, R17
0x084A	0xCFD9    	RJMP       L___fm_Driver_hal_i2cWrite0
L___fm_Driver_hal_i2cWrite1:
;__hal_avr.c,116 :: 		if( endMode == END_MODE_STOP )
0x084C	0xE0B0    	LDI        R27, 0
0x084E	0x167B    	CP         R7, R27
0x0850	0xF489    	BRNE       L___fm_Driver_hal_i2cWrite2
L___fm_Driver_hal_i2cWrite98:
;__hal_avr.c,117 :: 		fp_i2cStop();
0x0852	0x927F    	PUSH       R7
0x0854	0x926F    	PUSH       R6
0x0856	0x925F    	PUSH       R5
0x0858	0x924F    	PUSH       R4
0x085A	0x923F    	PUSH       R3
0x085C	0x922F    	PUSH       R2
0x085E	0x02B891E0  	LDS        R30, __fm_Driver_fp_i2cStop+0
0x0862	0x02B991F0  	LDS        R31, __fm_Driver_fp_i2cStop+1
0x0866	0x9509    	ICALL
0x0868	0x902F    	POP        R2
0x086A	0x903F    	POP        R3
0x086C	0x904F    	POP        R4
0x086E	0x905F    	POP        R5
0x0870	0x906F    	POP        R6
0x0872	0x907F    	POP        R7
L___fm_Driver_hal_i2cWrite2:
;__hal_avr.c,118 :: 		if( endMode == END_MODE_RESTART )
0x0874	0xE0B1    	LDI        R27, 1
0x0876	0x167B    	CP         R7, R27
0x0878	0xF489    	BRNE       L___fm_Driver_hal_i2cWrite3
L___fm_Driver_hal_i2cWrite99:
;__hal_avr.c,119 :: 		fp_i2cStart();
0x087A	0x927F    	PUSH       R7
0x087C	0x926F    	PUSH       R6
0x087E	0x925F    	PUSH       R5
0x0880	0x924F    	PUSH       R4
0x0882	0x923F    	PUSH       R3
0x0884	0x922F    	PUSH       R2
0x0886	0x02BE91E0  	LDS        R30, __fm_Driver_fp_i2cStart+0
0x088A	0x02BF91F0  	LDS        R31, __fm_Driver_fp_i2cStart+1
0x088E	0x9509    	ICALL
0x0890	0x902F    	POP        R2
0x0892	0x903F    	POP        R3
0x0894	0x904F    	POP        R4
0x0896	0x905F    	POP        R5
0x0898	0x906F    	POP        R6
0x089A	0x907F    	POP        R7
L___fm_Driver_hal_i2cWrite3:
;__hal_avr.c,120 :: 		return res;
0x089C	0x810A    	LDD        R16, Y+2
0x089E	0x811B    	LDD        R17, Y+3
;__hal_avr.c,121 :: 		}
;__hal_avr.c,120 :: 		return res;
;__hal_avr.c,121 :: 		}
L_end_hal_i2cWrite:
0x08A0	0x902F    	POP        R2
0x08A2	0x9623    	ADIW       R28, 3
0x08A4	0xBFCD    	OUT        SPL+0, R28
0x08A6	0xBFDE    	OUT        SPL+1, R29
0x08A8	0x91DF    	POP        R29
0x08AA	0x91CF    	POP        R28
0x08AC	0x9508    	RET
; end of __fm_Driver_hal_i2cWrite
_Delay_1sec:
;__Lib_Delays.c,55 :: 		void Delay_1sec() {
;__Lib_Delays.c,56 :: 		Delay_ms(1000);
0x22CE	0xE229    	LDI        R18, 41
0x22D0	0xE916    	LDI        R17, 150
0x22D2	0xE800    	LDI        R16, 128
L_Delay_1sec24:
0x22D4	0x950A    	DEC        R16
0x22D6	0xF7F1    	BRNE       L_Delay_1sec24
0x22D8	0x951A    	DEC        R17
0x22DA	0xF7E1    	BRNE       L_Delay_1sec24
0x22DC	0x952A    	DEC        R18
0x22DE	0xF7D1    	BRNE       L_Delay_1sec24
;__Lib_Delays.c,57 :: 		}
L_end_Delay_1sec:
0x22E0	0x9508    	RET
; end of _Delay_1sec
_fm_basicSettings:
0x2A28	0x93CF    	PUSH       R28
0x2A2A	0x93DF    	PUSH       R29
0x2A2C	0xB7CD    	IN         R28, SPL+0
0x2A2E	0xB7DE    	IN         R29, SPL+1
0x2A30	0x97A0    	SBIW       R28, 32
0x2A32	0xBFCD    	OUT        SPL+0, R28
0x2A34	0xBFDE    	OUT        SPL+1, R29
0x2A36	0x9621    	ADIW       R28, 1
;__fm_Driver.c,563 :: 		void fm_basicSettings( void )
;__fm_Driver.c,567 :: 		fm_readRegisters( regBuffer );
0x2A38	0x922F    	PUSH       R2
0x2A3A	0x923F    	PUSH       R3
0x2A3C	0x924F    	PUSH       R4
0x2A3E	0x925F    	PUSH       R5
0x2A40	0x926F    	PUSH       R6
0x2A42	0x927F    	PUSH       R7
0x2A44	0x928F    	PUSH       R8
0x2A46	0x929F    	PUSH       R9
0x2A48	0x018E    	MOVW       R16, R28
0x2A4A	0x0118    	MOVW       R2, R16
0x2A4C	0xDB9C    	RCALL      _fm_readRegisters+0
;__fm_Driver.c,569 :: 		fm_setBits( regBuffer,   _FM_POWER_CONFIGURATION,   _FM_SOFTMUTE_MASK,          _FM_SOFTMUTE_DISABLE );
0x2A4E	0x018E    	MOVW       R16, R28
0x2A50	0xE0B0    	LDI        R27, 0
0x2A52	0x2E8B    	MOV        R8, R27
0x2A54	0xE8B0    	LDI        R27, 128
0x2A56	0x2E9B    	MOV        R9, R27
0x2A58	0xEFBF    	LDI        R27, 255
0x2A5A	0x2E6B    	MOV        R6, R27
0x2A5C	0xE7BF    	LDI        R27, 127
0x2A5E	0x2E7B    	MOV        R7, R27
0x2A60	0x2444    	CLR        R4
0x2A62	0x2455    	CLR        R5
0x2A64	0x0118    	MOVW       R2, R16
0x2A66	0xDA2A    	RCALL      _fm_setBits+0
;__fm_Driver.c,570 :: 		fm_setBits( regBuffer,   _FM_POWER_CONFIGURATION,   _FM_MUTE_MASK,              _FM_MUTE_DISABLE );
0x2A68	0x018E    	MOVW       R16, R28
0x2A6A	0xE0B0    	LDI        R27, 0
0x2A6C	0x2E8B    	MOV        R8, R27
0x2A6E	0xE4B0    	LDI        R27, 64
0x2A70	0x2E9B    	MOV        R9, R27
0x2A72	0xEFBF    	LDI        R27, 255
0x2A74	0x2E6B    	MOV        R6, R27
0x2A76	0xEBBF    	LDI        R27, 191
0x2A78	0x2E7B    	MOV        R7, R27
0x2A7A	0x2444    	CLR        R4
0x2A7C	0x2455    	CLR        R5
0x2A7E	0x0118    	MOVW       R2, R16
0x2A80	0xDA1D    	RCALL      _fm_setBits+0
;__fm_Driver.c,571 :: 		fm_setBits( regBuffer,   _FM_POWER_CONFIGURATION,   _FM_STEREO_MASK,            _FM_STEREO );
0x2A82	0x018E    	MOVW       R16, R28
0x2A84	0x2488    	CLR        R8
0x2A86	0x2499    	CLR        R9
0x2A88	0xEFBF    	LDI        R27, 255
0x2A8A	0x2E6B    	MOV        R6, R27
0x2A8C	0xEDBF    	LDI        R27, 223
0x2A8E	0x2E7B    	MOV        R7, R27
0x2A90	0x2444    	CLR        R4
0x2A92	0x2455    	CLR        R5
0x2A94	0x0118    	MOVW       R2, R16
0x2A96	0xDA12    	RCALL      _fm_setBits+0
;__fm_Driver.c,572 :: 		fm_setBits( regBuffer,   _FM_POWER_CONFIGURATION,   _FM_RDS_MODE_MASK,          _FM_RDS_MODE_STANDARD );
0x2A98	0x018E    	MOVW       R16, R28
0x2A9A	0x2488    	CLR        R8
0x2A9C	0x2499    	CLR        R9
0x2A9E	0xEFBF    	LDI        R27, 255
0x2AA0	0x2E6B    	MOV        R6, R27
0x2AA2	0xEFB7    	LDI        R27, 247
0x2AA4	0x2E7B    	MOV        R7, R27
0x2AA6	0x2444    	CLR        R4
0x2AA8	0x2455    	CLR        R5
0x2AAA	0x0118    	MOVW       R2, R16
0x2AAC	0xDA07    	RCALL      _fm_setBits+0
;__fm_Driver.c,573 :: 		fm_setBits( regBuffer,   _FM_POWER_CONFIGURATION,   _FM_SEEK_MODE_MASK,         _FM_SEEK_MODE_WRAP );
0x2AAE	0x018E    	MOVW       R16, R28
0x2AB0	0x2488    	CLR        R8
0x2AB2	0x2499    	CLR        R9
0x2AB4	0xEFBF    	LDI        R27, 255
0x2AB6	0x2E6B    	MOV        R6, R27
0x2AB8	0xEFBB    	LDI        R27, 251
0x2ABA	0x2E7B    	MOV        R7, R27
0x2ABC	0x2444    	CLR        R4
0x2ABE	0x2455    	CLR        R5
0x2AC0	0x0118    	MOVW       R2, R16
0x2AC2	0xD9FC    	RCALL      _fm_setBits+0
;__fm_Driver.c,574 :: 		fm_setBits( regBuffer,   _FM_POWER_CONFIGURATION,   _FM_SEEK_DIRECTION_MASK,    _FM_SEEK_DIRECTION_UP );
0x2AC4	0x018E    	MOVW       R16, R28
0x2AC6	0xE0B0    	LDI        R27, 0
0x2AC8	0x2E8B    	MOV        R8, R27
0x2ACA	0xE0B2    	LDI        R27, 2
0x2ACC	0x2E9B    	MOV        R9, R27
0x2ACE	0xEFBF    	LDI        R27, 255
0x2AD0	0x2E6B    	MOV        R6, R27
0x2AD2	0xEFBD    	LDI        R27, 253
0x2AD4	0x2E7B    	MOV        R7, R27
0x2AD6	0x2444    	CLR        R4
0x2AD8	0x2455    	CLR        R5
0x2ADA	0x0118    	MOVW       R2, R16
0x2ADC	0xD9EF    	RCALL      _fm_setBits+0
;__fm_Driver.c,575 :: 		fm_setBits( regBuffer,   _FM_POWER_CONFIGURATION,   _FM_SEEK_MASK,              _FM_SEEK_DISABLE );
0x2ADE	0x018E    	MOVW       R16, R28
0x2AE0	0x2488    	CLR        R8
0x2AE2	0x2499    	CLR        R9
0x2AE4	0xEFBF    	LDI        R27, 255
0x2AE6	0x2E6B    	MOV        R6, R27
0x2AE8	0xEFBE    	LDI        R27, 254
0x2AEA	0x2E7B    	MOV        R7, R27
0x2AEC	0x2444    	CLR        R4
0x2AEE	0x2455    	CLR        R5
0x2AF0	0x0118    	MOVW       R2, R16
0x2AF2	0xD9E4    	RCALL      _fm_setBits+0
;__fm_Driver.c,576 :: 		fm_setBits( regBuffer,   _FM_POWER_CONFIGURATION,   _FM_POWERUP_DISABLE_MASK,   _FM_POWERUP_DISABLE_LOW );
0x2AF4	0x018E    	MOVW       R16, R28
0x2AF6	0x2488    	CLR        R8
0x2AF8	0x2499    	CLR        R9
0x2AFA	0xEBBF    	LDI        R27, 191
0x2AFC	0x2E6B    	MOV        R6, R27
0x2AFE	0xEFBF    	LDI        R27, 255
0x2B00	0x2E7B    	MOV        R7, R27
0x2B02	0x2444    	CLR        R4
0x2B04	0x2455    	CLR        R5
0x2B06	0x0118    	MOVW       R2, R16
0x2B08	0xD9D9    	RCALL      _fm_setBits+0
;__fm_Driver.c,577 :: 		fm_setBits( regBuffer,   _FM_POWER_CONFIGURATION,   _FM_POWERUP_ENABLE_MASK,    _FM_POWERUP_ENABLE_HIGH );
0x2B0A	0x018E    	MOVW       R16, R28
0x2B0C	0xE0B1    	LDI        R27, 1
0x2B0E	0x2E8B    	MOV        R8, R27
0x2B10	0xE0B0    	LDI        R27, 0
0x2B12	0x2E9B    	MOV        R9, R27
0x2B14	0xEFBE    	LDI        R27, 254
0x2B16	0x2E6B    	MOV        R6, R27
0x2B18	0xEFBF    	LDI        R27, 255
0x2B1A	0x2E7B    	MOV        R7, R27
0x2B1C	0x2444    	CLR        R4
0x2B1E	0x2455    	CLR        R5
0x2B20	0x0118    	MOVW       R2, R16
0x2B22	0xD9CC    	RCALL      _fm_setBits+0
;__fm_Driver.c,579 :: 		fm_setBits( regBuffer,   _FM_CHANNEL,   _FM_TUNE_MASK,   _FM_TUNE_DISABLE );
0x2B24	0x018E    	MOVW       R16, R28
0x2B26	0x2488    	CLR        R8
0x2B28	0x2499    	CLR        R9
0x2B2A	0xEFBF    	LDI        R27, 255
0x2B2C	0x2E6B    	MOV        R6, R27
0x2B2E	0xE7BF    	LDI        R27, 127
0x2B30	0x2E7B    	MOV        R7, R27
0x2B32	0xE0B1    	LDI        R27, 1
0x2B34	0x2E4B    	MOV        R4, R27
0x2B36	0xE0B0    	LDI        R27, 0
0x2B38	0x2E5B    	MOV        R5, R27
0x2B3A	0x0118    	MOVW       R2, R16
0x2B3C	0xD9BF    	RCALL      _fm_setBits+0
;__fm_Driver.c,581 :: 		fm_setBits( regBuffer,   _FM_SYSTEM_CONFIGURATION_1,   _FM_RDS_INTERRUPT_MASK,                _FM_RDS_INTERRUPT_DISABLE );
0x2B3E	0x018E    	MOVW       R16, R28
0x2B40	0x2488    	CLR        R8
0x2B42	0x2499    	CLR        R9
0x2B44	0xEFBF    	LDI        R27, 255
0x2B46	0x2E6B    	MOV        R6, R27
0x2B48	0xE7BF    	LDI        R27, 127
0x2B4A	0x2E7B    	MOV        R7, R27
0x2B4C	0xE0B2    	LDI        R27, 2
0x2B4E	0x2E4B    	MOV        R4, R27
0x2B50	0xE0B0    	LDI        R27, 0
0x2B52	0x2E5B    	MOV        R5, R27
0x2B54	0x0118    	MOVW       R2, R16
0x2B56	0xD9B2    	RCALL      _fm_setBits+0
;__fm_Driver.c,582 :: 		fm_setBits( regBuffer,   _FM_SYSTEM_CONFIGURATION_1,   _FM_SEEK_TUNE_COMPLETE_INTERRUPT_MASK, _FM_SEEK_TUNE_COMPLETE_INTERRUPT_ENABLE );
0x2B58	0x018E    	MOVW       R16, R28
0x2B5A	0xE0B0    	LDI        R27, 0
0x2B5C	0x2E8B    	MOV        R8, R27
0x2B5E	0xE4B0    	LDI        R27, 64
0x2B60	0x2E9B    	MOV        R9, R27
0x2B62	0xEFBF    	LDI        R27, 255
0x2B64	0x2E6B    	MOV        R6, R27
0x2B66	0xEBBF    	LDI        R27, 191
0x2B68	0x2E7B    	MOV        R7, R27
0x2B6A	0xE0B2    	LDI        R27, 2
0x2B6C	0x2E4B    	MOV        R4, R27
0x2B6E	0xE0B0    	LDI        R27, 0
0x2B70	0x2E5B    	MOV        R5, R27
0x2B72	0x0118    	MOVW       R2, R16
0x2B74	0xD9A3    	RCALL      _fm_setBits+0
;__fm_Driver.c,583 :: 		fm_setBits( regBuffer,   _FM_SYSTEM_CONFIGURATION_1,   _FM_RDS_MASK,                          _FM_RDS_DISABLE );
0x2B76	0x018E    	MOVW       R16, R28
0x2B78	0x2488    	CLR        R8
0x2B7A	0x2499    	CLR        R9
0x2B7C	0xEFBF    	LDI        R27, 255
0x2B7E	0x2E6B    	MOV        R6, R27
0x2B80	0xEEBF    	LDI        R27, 239
0x2B82	0x2E7B    	MOV        R7, R27
0x2B84	0xE0B2    	LDI        R27, 2
0x2B86	0x2E4B    	MOV        R4, R27
0x2B88	0xE0B0    	LDI        R27, 0
0x2B8A	0x2E5B    	MOV        R5, R27
0x2B8C	0x0118    	MOVW       R2, R16
0x2B8E	0xD996    	RCALL      _fm_setBits+0
;__fm_Driver.c,584 :: 		fm_setBits( regBuffer,   _FM_SYSTEM_CONFIGURATION_1,   _FM_DE_EMPHASIS_MASK,                  _FM_DE_EMPHASIS_EUROPE_AUSTRALIA_JAPAN );
0x2B90	0x018E    	MOVW       R16, R28
0x2B92	0xE0B0    	LDI        R27, 0
0x2B94	0x2E8B    	MOV        R8, R27
0x2B96	0xE0B8    	LDI        R27, 8
0x2B98	0x2E9B    	MOV        R9, R27
0x2B9A	0xEFBF    	LDI        R27, 255
0x2B9C	0x2E6B    	MOV        R6, R27
0x2B9E	0xEFB7    	LDI        R27, 247
0x2BA0	0x2E7B    	MOV        R7, R27
0x2BA2	0xE0B2    	LDI        R27, 2
0x2BA4	0x2E4B    	MOV        R4, R27
0x2BA6	0xE0B0    	LDI        R27, 0
0x2BA8	0x2E5B    	MOV        R5, R27
0x2BAA	0x0118    	MOVW       R2, R16
0x2BAC	0xD987    	RCALL      _fm_setBits+0
;__fm_Driver.c,585 :: 		fm_setBits( regBuffer,   _FM_SYSTEM_CONFIGURATION_1,   _FM_AGC_MASK,                          _FM_AGC_ENABLE );
0x2BAE	0x018E    	MOVW       R16, R28
0x2BB0	0x2488    	CLR        R8
0x2BB2	0x2499    	CLR        R9
0x2BB4	0xEFBF    	LDI        R27, 255
0x2BB6	0x2E6B    	MOV        R6, R27
0x2BB8	0xEFBB    	LDI        R27, 251
0x2BBA	0x2E7B    	MOV        R7, R27
0x2BBC	0xE0B2    	LDI        R27, 2
0x2BBE	0x2E4B    	MOV        R4, R27
0x2BC0	0xE0B0    	LDI        R27, 0
0x2BC2	0x2E5B    	MOV        R5, R27
0x2BC4	0x0118    	MOVW       R2, R16
0x2BC6	0xD97A    	RCALL      _fm_setBits+0
;__fm_Driver.c,586 :: 		fm_setBits( regBuffer,   _FM_SYSTEM_CONFIGURATION_1,   _FM_STEREO_MONO_BLEND_LEVEL_MASK,      _FM_STEREO_MONO_BLEND_LEVEL_31_49_RSSI );
0x2BC8	0x018E    	MOVW       R16, R28
0x2BCA	0x2488    	CLR        R8
0x2BCC	0x2499    	CLR        R9
0x2BCE	0xE3BF    	LDI        R27, 63
0x2BD0	0x2E6B    	MOV        R6, R27
0x2BD2	0xEFBF    	LDI        R27, 255
0x2BD4	0x2E7B    	MOV        R7, R27
0x2BD6	0xE0B2    	LDI        R27, 2
0x2BD8	0x2E4B    	MOV        R4, R27
0x2BDA	0xE0B0    	LDI        R27, 0
0x2BDC	0x2E5B    	MOV        R5, R27
0x2BDE	0x0118    	MOVW       R2, R16
0x2BE0	0xD96D    	RCALL      _fm_setBits+0
;__fm_Driver.c,587 :: 		fm_setBits( regBuffer,   _FM_SYSTEM_CONFIGURATION_1,   _FM_GPIO3_MASK,                        _FM_GPIO3_HIGH_IMPENDANCE );
0x2BE2	0x018E    	MOVW       R16, R28
0x2BE4	0x2488    	CLR        R8
0x2BE6	0x2499    	CLR        R9
0x2BE8	0xECBF    	LDI        R27, 207
0x2BEA	0x2E6B    	MOV        R6, R27
0x2BEC	0xEFBF    	LDI        R27, 255
0x2BEE	0x2E7B    	MOV        R7, R27
0x2BF0	0xE0B2    	LDI        R27, 2
0x2BF2	0x2E4B    	MOV        R4, R27
0x2BF4	0xE0B0    	LDI        R27, 0
0x2BF6	0x2E5B    	MOV        R5, R27
0x2BF8	0x0118    	MOVW       R2, R16
0x2BFA	0xD960    	RCALL      _fm_setBits+0
;__fm_Driver.c,588 :: 		fm_setBits( regBuffer,   _FM_SYSTEM_CONFIGURATION_1,   _FM_GPIO2_MASK,                        _FM_GPIO2_STC_RDS_INTERRUPT );
0x2BFC	0x018E    	MOVW       R16, R28
0x2BFE	0xE0B4    	LDI        R27, 4
0x2C00	0x2E8B    	MOV        R8, R27
0x2C02	0xE0B0    	LDI        R27, 0
0x2C04	0x2E9B    	MOV        R9, R27
0x2C06	0xEFB3    	LDI        R27, 243
0x2C08	0x2E6B    	MOV        R6, R27
0x2C0A	0xEFBF    	LDI        R27, 255
0x2C0C	0x2E7B    	MOV        R7, R27
0x2C0E	0xE0B2    	LDI        R27, 2
0x2C10	0x2E4B    	MOV        R4, R27
0x2C12	0xE0B0    	LDI        R27, 0
0x2C14	0x2E5B    	MOV        R5, R27
0x2C16	0x0118    	MOVW       R2, R16
0x2C18	0xD951    	RCALL      _fm_setBits+0
;__fm_Driver.c,589 :: 		fm_setBits( regBuffer,   _FM_SYSTEM_CONFIGURATION_1,   _FM_GPIO1_MASK,                        _FM_GPIO1_HIGH_IMPEDANCE );
0x2C1A	0x018E    	MOVW       R16, R28
0x2C1C	0x2488    	CLR        R8
0x2C1E	0x2499    	CLR        R9
0x2C20	0xEFBC    	LDI        R27, 252
0x2C22	0x2E6B    	MOV        R6, R27
0x2C24	0xEFBF    	LDI        R27, 255
0x2C26	0x2E7B    	MOV        R7, R27
0x2C28	0xE0B2    	LDI        R27, 2
0x2C2A	0x2E4B    	MOV        R4, R27
0x2C2C	0xE0B0    	LDI        R27, 0
0x2C2E	0x2E5B    	MOV        R5, R27
0x2C30	0x0118    	MOVW       R2, R16
0x2C32	0xD944    	RCALL      _fm_setBits+0
;__fm_Driver.c,591 :: 		fm_setBits( regBuffer,   _FM_SYSTEM_CONFIGURATION_2,   _FM_BAND_MASK,                         _FM_BAND_USA_EUROPE_87P5_108_MHZ );
0x2C34	0x018E    	MOVW       R16, R28
0x2C36	0x2488    	CLR        R8
0x2C38	0x2499    	CLR        R9
0x2C3A	0xE3BF    	LDI        R27, 63
0x2C3C	0x2E6B    	MOV        R6, R27
0x2C3E	0xEFBF    	LDI        R27, 255
0x2C40	0x2E7B    	MOV        R7, R27
0x2C42	0xE0B3    	LDI        R27, 3
0x2C44	0x2E4B    	MOV        R4, R27
0x2C46	0xE0B0    	LDI        R27, 0
0x2C48	0x2E5B    	MOV        R5, R27
0x2C4A	0x0118    	MOVW       R2, R16
0x2C4C	0xD937    	RCALL      _fm_setBits+0
;__fm_Driver.c,592 :: 		fm_setBits( regBuffer,   _FM_SYSTEM_CONFIGURATION_2,   _FM_CHANNEL_SPACING_MASK,              _FM_CHANNEL_SPACING_EUROPE_JAPAN_100_KHZ );
0x2C4E	0x018E    	MOVW       R16, R28
0x2C50	0xE1B0    	LDI        R27, 16
0x2C52	0x2E8B    	MOV        R8, R27
0x2C54	0xE0B0    	LDI        R27, 0
0x2C56	0x2E9B    	MOV        R9, R27
0x2C58	0xECBF    	LDI        R27, 207
0x2C5A	0x2E6B    	MOV        R6, R27
0x2C5C	0xEFBF    	LDI        R27, 255
0x2C5E	0x2E7B    	MOV        R7, R27
0x2C60	0xE0B3    	LDI        R27, 3
0x2C62	0x2E4B    	MOV        R4, R27
0x2C64	0xE0B0    	LDI        R27, 0
0x2C66	0x2E5B    	MOV        R5, R27
0x2C68	0x0118    	MOVW       R2, R16
0x2C6A	0xD928    	RCALL      _fm_setBits+0
;__fm_Driver.c,594 :: 		fm_setBits( regBuffer,   _FM_SYSTEM_CONFIGURATION_3,   _FM_SOFTMUTE_ATTACK_RECOVER_RATE_MASK, _FM_SOFTMUTE_ATTACK_RECOVER_RATE_FASTEST );
0x2C6C	0x018E    	MOVW       R16, R28
0x2C6E	0x2488    	CLR        R8
0x2C70	0x2499    	CLR        R9
0x2C72	0xEFBF    	LDI        R27, 255
0x2C74	0x2E6B    	MOV        R6, R27
0x2C76	0xE3BF    	LDI        R27, 63
0x2C78	0x2E7B    	MOV        R7, R27
0x2C7A	0xE0B4    	LDI        R27, 4
0x2C7C	0x2E4B    	MOV        R4, R27
0x2C7E	0xE0B0    	LDI        R27, 0
0x2C80	0x2E5B    	MOV        R5, R27
0x2C82	0x0118    	MOVW       R2, R16
0x2C84	0xD91B    	RCALL      _fm_setBits+0
;__fm_Driver.c,595 :: 		fm_setBits( regBuffer,   _FM_SYSTEM_CONFIGURATION_3,   _FM_SOFTMUTE_ATTENUATION_MASK,         _FM_SOFTMUTE_ATTENUATION_16_DB );
0x2C86	0x018E    	MOVW       R16, R28
0x2C88	0x2488    	CLR        R8
0x2C8A	0x2499    	CLR        R9
0x2C8C	0xEFBF    	LDI        R27, 255
0x2C8E	0x2E6B    	MOV        R6, R27
0x2C90	0xECBF    	LDI        R27, 207
0x2C92	0x2E7B    	MOV        R7, R27
0x2C94	0xE0B4    	LDI        R27, 4
0x2C96	0x2E4B    	MOV        R4, R27
0x2C98	0xE0B0    	LDI        R27, 0
0x2C9A	0x2E5B    	MOV        R5, R27
0x2C9C	0x0118    	MOVW       R2, R16
0x2C9E	0xD90E    	RCALL      _fm_setBits+0
;__fm_Driver.c,596 :: 		fm_setBits( regBuffer,   _FM_SYSTEM_CONFIGURATION_3,   _FM_EXTENDED_VOLUME_RANGE_MASK,        _FM_EXTENDED_VOLUME_RANGE_DISABLED );
0x2CA0	0x018E    	MOVW       R16, R28
0x2CA2	0x2488    	CLR        R8
0x2CA4	0x2499    	CLR        R9
0x2CA6	0xEFBF    	LDI        R27, 255
0x2CA8	0x2E6B    	MOV        R6, R27
0x2CAA	0xEFBE    	LDI        R27, 254
0x2CAC	0x2E7B    	MOV        R7, R27
0x2CAE	0xE0B4    	LDI        R27, 4
0x2CB0	0x2E4B    	MOV        R4, R27
0x2CB2	0xE0B0    	LDI        R27, 0
0x2CB4	0x2E5B    	MOV        R5, R27
0x2CB6	0x0118    	MOVW       R2, R16
0x2CB8	0xD901    	RCALL      _fm_setBits+0
;__fm_Driver.c,598 :: 		fm_writeRegisters( regBuffer );
0x2CBA	0x018E    	MOVW       R16, R28
0x2CBC	0x0118    	MOVW       R2, R16
0x2CBE	0xD8A8    	RCALL      _fm_writeRegisters+0
;__fm_Driver.c,599 :: 		}
L_end_fm_basicSettings:
0x2CC0	0x909F    	POP        R9
0x2CC2	0x908F    	POP        R8
0x2CC4	0x907F    	POP        R7
0x2CC6	0x906F    	POP        R6
0x2CC8	0x905F    	POP        R5
0x2CCA	0x904F    	POP        R4
0x2CCC	0x903F    	POP        R3
0x2CCE	0x902F    	POP        R2
0x2CD0	0x966F    	ADIW       R28, 31
0x2CD2	0xBFCD    	OUT        SPL+0, R28
0x2CD4	0xBFDE    	OUT        SPL+1, R29
0x2CD6	0x91DF    	POP        R29
0x2CD8	0x91CF    	POP        R28
0x2CDA	0x9508    	RET
; end of _fm_basicSettings
_fm_setVolume:
0x26D2	0x93CF    	PUSH       R28
0x26D4	0x93DF    	PUSH       R29
0x26D6	0xB7CD    	IN         R28, SPL+0
0x26D8	0xB7DE    	IN         R29, SPL+1
0x26DA	0x97A0    	SBIW       R28, 32
0x26DC	0xBFCD    	OUT        SPL+0, R28
0x26DE	0xBFDE    	OUT        SPL+1, R29
0x26E0	0x9621    	ADIW       R28, 1
;__fm_Driver.c,315 :: 		uint8_t fm_setVolume( uint8_t volumeLevel )
;__fm_Driver.c,319 :: 		if (volumeLevel < 16)
0x26E2	0x922F    	PUSH       R2
0x26E4	0x923F    	PUSH       R3
0x26E6	0xE1B0    	LDI        R27, 16
0x26E8	0x162B    	CP         R2, R27
0x26EA	0xF500    	BRSH       L_fm_setVolume22
L__fm_setVolume117:
;__fm_Driver.c,321 :: 		fm_readRegisters( regBuffer );
0x26EC	0x018E    	MOVW       R16, R28
0x26EE	0x922F    	PUSH       R2
0x26F0	0x0118    	MOVW       R2, R16
0x26F2	0xDD49    	RCALL      _fm_readRegisters+0
0x26F4	0x902F    	POP        R2
;__fm_Driver.c,323 :: 		regBuffer[_FM_SYSTEM_CONFIGURATION_2] &= 0xFFF0;
0x26F6	0x018E    	MOVW       R16, R28
0x26F8	0x0198    	MOVW       R18, R16
0x26FA	0x5F2A    	SUBI       R18, 250
0x26FC	0x4F3F    	SBCI       R19, 255
0x26FE	0x01F9    	MOVW       R30, R18
0x2700	0x9101    	LD         R16, Z+
0x2702	0x9111    	LD         R17, Z+
0x2704	0x7F00    	ANDI       R16, 240
0x2706	0x01F9    	MOVW       R30, R18
0x2708	0x9301    	ST         Z+, R16
0x270A	0x9311    	ST         Z+, R17
;__fm_Driver.c,324 :: 		regBuffer[_FM_SYSTEM_CONFIGURATION_2] |= volumeLevel;
0x270C	0x018E    	MOVW       R16, R28
0x270E	0x0198    	MOVW       R18, R16
0x2710	0x5F2A    	SUBI       R18, 250
0x2712	0x4F3F    	SBCI       R19, 255
0x2714	0x01F9    	MOVW       R30, R18
0x2716	0x9101    	LD         R16, Z+
0x2718	0x9111    	LD         R17, Z+
0x271A	0x2902    	OR         R16, R2
0x271C	0x01F9    	MOVW       R30, R18
0x271E	0x9301    	ST         Z+, R16
0x2720	0x9311    	ST         Z+, R17
;__fm_Driver.c,326 :: 		fm_writeRegisters( regBuffer );
0x2722	0x018E    	MOVW       R16, R28
0x2724	0x0118    	MOVW       R2, R16
0x2726	0xDB74    	RCALL      _fm_writeRegisters+0
;__fm_Driver.c,328 :: 		return 0;
0x2728	0xE000    	LDI        R16, 0
0x272A	0xC001    	RJMP       L_end_fm_setVolume
;__fm_Driver.c,329 :: 		}
L_fm_setVolume22:
;__fm_Driver.c,332 :: 		return 1;
0x272C	0xE001    	LDI        R16, 1
;__fm_Driver.c,334 :: 		}
;__fm_Driver.c,332 :: 		return 1;
;__fm_Driver.c,334 :: 		}
L_end_fm_setVolume:
0x272E	0x903F    	POP        R3
0x2730	0x902F    	POP        R2
0x2732	0x966F    	ADIW       R28, 31
0x2734	0xBFCD    	OUT        SPL+0, R28
0x2736	0xBFDE    	OUT        SPL+1, R29
0x2738	0x91DF    	POP        R29
0x273A	0x91CF    	POP        R28
0x273C	0x9508    	RET
; end of _fm_setVolume
_fm_setSnrThreshold:
0x3104	0x93CF    	PUSH       R28
0x3106	0x93DF    	PUSH       R29
0x3108	0xB7CD    	IN         R28, SPL+0
0x310A	0xB7DE    	IN         R29, SPL+1
0x310C	0x97A0    	SBIW       R28, 32
0x310E	0xBFCD    	OUT        SPL+0, R28
0x3110	0xBFDE    	OUT        SPL+1, R29
0x3112	0x9621    	ADIW       R28, 1
;__fm_Driver.c,336 :: 		uint8_t fm_setSnrThreshold( uint8_t snrThreshold )
;__fm_Driver.c,340 :: 		if (snrThreshold < 8)
0x3114	0x922F    	PUSH       R2
0x3116	0x923F    	PUSH       R3
0x3118	0xE0B8    	LDI        R27, 8
0x311A	0x162B    	CP         R2, R27
0x311C	0xF538    	BRSH       L_fm_setSnrThreshold24
L__fm_setSnrThreshold119:
;__fm_Driver.c,342 :: 		fm_readRegisters( regBuffer );
0x311E	0x018E    	MOVW       R16, R28
0x3120	0x922F    	PUSH       R2
0x3122	0x0118    	MOVW       R2, R16
0x3124	0xD830    	RCALL      _fm_readRegisters+0
0x3126	0x902F    	POP        R2
;__fm_Driver.c,344 :: 		regBuffer[_FM_SYSTEM_CONFIGURATION_3] &= 0xFF0F;
0x3128	0x018E    	MOVW       R16, R28
0x312A	0x0198    	MOVW       R18, R16
0x312C	0x5F28    	SUBI       R18, 248
0x312E	0x4F3F    	SBCI       R19, 255
0x3130	0x01F9    	MOVW       R30, R18
0x3132	0x9101    	LD         R16, Z+
0x3134	0x9111    	LD         R17, Z+
0x3136	0x700F    	ANDI       R16, 15
0x3138	0x01F9    	MOVW       R30, R18
0x313A	0x9301    	ST         Z+, R16
0x313C	0x9311    	ST         Z+, R17
;__fm_Driver.c,345 :: 		snrThreshold <<= 4;
0x313E	0x2D42    	MOV        R20, R2
0x3140	0x0F44    	LSL        R20
0x3142	0x0F44    	LSL        R20
0x3144	0x0F44    	LSL        R20
0x3146	0x0F44    	LSL        R20
0x3148	0x2E24    	MOV        R2, R20
;__fm_Driver.c,346 :: 		regBuffer[_FM_SYSTEM_CONFIGURATION_3] |= snrThreshold;
0x314A	0x018E    	MOVW       R16, R28
0x314C	0x0198    	MOVW       R18, R16
0x314E	0x5F28    	SUBI       R18, 248
0x3150	0x4F3F    	SBCI       R19, 255
0x3152	0x01F9    	MOVW       R30, R18
0x3154	0x9101    	LD         R16, Z+
0x3156	0x9111    	LD         R17, Z+
0x3158	0x2B04    	OR         R16, R20
0x315A	0x01F9    	MOVW       R30, R18
0x315C	0x9301    	ST         Z+, R16
0x315E	0x9311    	ST         Z+, R17
;__fm_Driver.c,348 :: 		fm_writeRegisters( regBuffer );
0x3160	0x018E    	MOVW       R16, R28
0x3162	0x0118    	MOVW       R2, R16
0x3164	0x0F08940E  	CALL       _fm_writeRegisters+0
;__fm_Driver.c,350 :: 		return 0;
0x3168	0xE000    	LDI        R16, 0
0x316A	0xC001    	RJMP       L_end_fm_setSnrThreshold
;__fm_Driver.c,351 :: 		}
L_fm_setSnrThreshold24:
;__fm_Driver.c,354 :: 		return 1;
0x316C	0xE001    	LDI        R16, 1
;__fm_Driver.c,356 :: 		}
;__fm_Driver.c,354 :: 		return 1;
;__fm_Driver.c,356 :: 		}
L_end_fm_setSnrThreshold:
0x316E	0x903F    	POP        R3
0x3170	0x902F    	POP        R2
0x3172	0x966F    	ADIW       R28, 31
0x3174	0xBFCD    	OUT        SPL+0, R28
0x3176	0xBFDE    	OUT        SPL+1, R29
0x3178	0x91DF    	POP        R29
0x317A	0x91CF    	POP        R28
0x317C	0x9508    	RET
; end of _fm_setSnrThreshold
_fm_setSeekThreshold:
0x304E	0x93CF    	PUSH       R28
0x3050	0x93DF    	PUSH       R29
0x3052	0xB7CD    	IN         R28, SPL+0
0x3054	0xB7DE    	IN         R29, SPL+1
0x3056	0x97A0    	SBIW       R28, 32
0x3058	0xBFCD    	OUT        SPL+0, R28
0x305A	0xBFDE    	OUT        SPL+1, R29
0x305C	0x9621    	ADIW       R28, 1
;__fm_Driver.c,293 :: 		uint8_t fm_setSeekThreshold( uint16_t seekThreshold )
;__fm_Driver.c,297 :: 		if (seekThreshold < 128)
0x305E	0x922F    	PUSH       R2
0x3060	0x923F    	PUSH       R3
0x3062	0xE0B0    	LDI        R27, 0
0x3064	0x163B    	CP         R3, R27
0x3066	0xF411    	BRNE       L__fm_setSeekThreshold114
0x3068	0xE8B0    	LDI        R27, 128
0x306A	0x162B    	CP         R2, R27
L__fm_setSeekThreshold114:
0x306C	0xF538    	BRSH       L_fm_setSeekThreshold20
L__fm_setSeekThreshold115:
;__fm_Driver.c,299 :: 		fm_readRegisters( regBuffer );
0x306E	0x018E    	MOVW       R16, R28
0x3070	0x923F    	PUSH       R3
0x3072	0x922F    	PUSH       R2
0x3074	0x0118    	MOVW       R2, R16
0x3076	0xD887    	RCALL      _fm_readRegisters+0
0x3078	0x902F    	POP        R2
0x307A	0x903F    	POP        R3
;__fm_Driver.c,301 :: 		regBuffer[_FM_SYSTEM_CONFIGURATION_2] &= 0x00FF;
0x307C	0x018E    	MOVW       R16, R28
0x307E	0x0198    	MOVW       R18, R16
0x3080	0x5F2A    	SUBI       R18, 250
0x3082	0x4F3F    	SBCI       R19, 255
0x3084	0x01F9    	MOVW       R30, R18
0x3086	0x9101    	LD         R16, Z+
0x3088	0x9111    	LD         R17, Z+
0x308A	0x7010    	ANDI       R17, 0
0x308C	0x01F9    	MOVW       R30, R18
0x308E	0x9301    	ST         Z+, R16
0x3090	0x9311    	ST         Z+, R17
;__fm_Driver.c,302 :: 		seekThreshold <<= 8;
0x3092	0x2D52    	MOV        R21, R2
0x3094	0x2744    	CLR        R20
0x3096	0x011A    	MOVW       R2, R20
;__fm_Driver.c,303 :: 		regBuffer[_FM_SYSTEM_CONFIGURATION_2] |= seekThreshold;
0x3098	0x018E    	MOVW       R16, R28
0x309A	0x0198    	MOVW       R18, R16
0x309C	0x5F2A    	SUBI       R18, 250
0x309E	0x4F3F    	SBCI       R19, 255
0x30A0	0x01F9    	MOVW       R30, R18
0x30A2	0x9101    	LD         R16, Z+
0x30A4	0x9111    	LD         R17, Z+
0x30A6	0x2B04    	OR         R16, R20
0x30A8	0x2B15    	OR         R17, R21
0x30AA	0x01F9    	MOVW       R30, R18
0x30AC	0x9301    	ST         Z+, R16
0x30AE	0x9311    	ST         Z+, R17
;__fm_Driver.c,305 :: 		fm_writeRegisters( regBuffer );
0x30B0	0x018E    	MOVW       R16, R28
0x30B2	0x0118    	MOVW       R2, R16
0x30B4	0x0F08940E  	CALL       _fm_writeRegisters+0
;__fm_Driver.c,307 :: 		return 0;
0x30B8	0xE000    	LDI        R16, 0
0x30BA	0xC001    	RJMP       L_end_fm_setSeekThreshold
;__fm_Driver.c,308 :: 		}
L_fm_setSeekThreshold20:
;__fm_Driver.c,311 :: 		return 1;
0x30BC	0xE001    	LDI        R16, 1
;__fm_Driver.c,313 :: 		}
;__fm_Driver.c,311 :: 		return 1;
;__fm_Driver.c,313 :: 		}
L_end_fm_setSeekThreshold:
0x30BE	0x903F    	POP        R3
0x30C0	0x902F    	POP        R2
0x30C2	0x966F    	ADIW       R28, 31
0x30C4	0xBFCD    	OUT        SPL+0, R28
0x30C6	0xBFDE    	OUT        SPL+1, R29
0x30C8	0x91DF    	POP        R29
0x30CA	0x91CF    	POP        R28
0x30CC	0x9508    	RET
; end of _fm_setSeekThreshold
_fm_setSeekImpulseDetectionThreshold:
0x2F74	0x93CF    	PUSH       R28
0x2F76	0x93DF    	PUSH       R29
0x2F78	0xB7CD    	IN         R28, SPL+0
0x2F7A	0xB7DE    	IN         R29, SPL+1
0x2F7C	0x97A0    	SBIW       R28, 32
0x2F7E	0xBFCD    	OUT        SPL+0, R28
0x2F80	0xBFDE    	OUT        SPL+1, R29
0x2F82	0x9621    	ADIW       R28, 1
;__fm_Driver.c,358 :: 		uint8_t fm_setSeekImpulseDetectionThreshold( uint8_t impulseDetectionThreshold )
;__fm_Driver.c,362 :: 		if (impulseDetectionThreshold < 16)
0x2F84	0x922F    	PUSH       R2
0x2F86	0x923F    	PUSH       R3
0x2F88	0xE1B0    	LDI        R27, 16
0x2F8A	0x162B    	CP         R2, R27
0x2F8C	0xF508    	BRSH       L_fm_setSeekImpulseDetectionThreshold26
L__fm_setSeekImpulseDetectionThreshold121:
;__fm_Driver.c,364 :: 		fm_readRegisters( regBuffer );
0x2F8E	0x018E    	MOVW       R16, R28
0x2F90	0x922F    	PUSH       R2
0x2F92	0x0118    	MOVW       R2, R16
0x2F94	0xD8F8    	RCALL      _fm_readRegisters+0
0x2F96	0x902F    	POP        R2
;__fm_Driver.c,366 :: 		regBuffer[_FM_SYSTEM_CONFIGURATION_3] &= 0xFFF0;
0x2F98	0x018E    	MOVW       R16, R28
0x2F9A	0x0198    	MOVW       R18, R16
0x2F9C	0x5F28    	SUBI       R18, 248
0x2F9E	0x4F3F    	SBCI       R19, 255
0x2FA0	0x01F9    	MOVW       R30, R18
0x2FA2	0x9101    	LD         R16, Z+
0x2FA4	0x9111    	LD         R17, Z+
0x2FA6	0x7F00    	ANDI       R16, 240
0x2FA8	0x01F9    	MOVW       R30, R18
0x2FAA	0x9301    	ST         Z+, R16
0x2FAC	0x9311    	ST         Z+, R17
;__fm_Driver.c,367 :: 		regBuffer[_FM_SYSTEM_CONFIGURATION_3] |= impulseDetectionThreshold;
0x2FAE	0x018E    	MOVW       R16, R28
0x2FB0	0x0198    	MOVW       R18, R16
0x2FB2	0x5F28    	SUBI       R18, 248
0x2FB4	0x4F3F    	SBCI       R19, 255
0x2FB6	0x01F9    	MOVW       R30, R18
0x2FB8	0x9101    	LD         R16, Z+
0x2FBA	0x9111    	LD         R17, Z+
0x2FBC	0x2902    	OR         R16, R2
0x2FBE	0x01F9    	MOVW       R30, R18
0x2FC0	0x9301    	ST         Z+, R16
0x2FC2	0x9311    	ST         Z+, R17
;__fm_Driver.c,369 :: 		fm_writeRegisters( regBuffer );
0x2FC4	0x018E    	MOVW       R16, R28
0x2FC6	0x0118    	MOVW       R2, R16
0x2FC8	0x0F08940E  	CALL       _fm_writeRegisters+0
;__fm_Driver.c,371 :: 		return 0;
0x2FCC	0xE000    	LDI        R16, 0
0x2FCE	0xC001    	RJMP       L_end_fm_setSeekImpulseDetectionThreshold
;__fm_Driver.c,372 :: 		}
L_fm_setSeekImpulseDetectionThreshold26:
;__fm_Driver.c,375 :: 		return 1;
0x2FD0	0xE001    	LDI        R16, 1
;__fm_Driver.c,377 :: 		}
;__fm_Driver.c,375 :: 		return 1;
;__fm_Driver.c,377 :: 		}
L_end_fm_setSeekImpulseDetectionThreshold:
0x2FD2	0x903F    	POP        R3
0x2FD4	0x902F    	POP        R2
0x2FD6	0x966F    	ADIW       R28, 31
0x2FD8	0xBFCD    	OUT        SPL+0, R28
0x2FDA	0xBFDE    	OUT        SPL+1, R29
0x2FDC	0x91DF    	POP        R29
0x2FDE	0x91CF    	POP        R28
0x2FE0	0x9508    	RET
; end of _fm_setSeekImpulseDetectionThreshold
_applicationTask:
;Click_FM_AVR.c,406 :: 		void applicationTask( )
;Click_FM_AVR.c,408 :: 		dataReady_ = UART_Rdy_Ptr( );
0x355A	0x031191E0  	LDS        R30, _UART_Rdy_Ptr+0
0x355E	0x031291F0  	LDS        R31, _UART_Rdy_Ptr+1
0x3562	0x9509    	ICALL
0x3564	0x03199300  	STS        _dataReady_+0, R16
;Click_FM_AVR.c,410 :: 		if (dataReady_ != 0)
0x3568	0x3000    	CPI        R16, 0
0x356A	0xF409    	BRNE       L__applicationTask95
0x356C	0xC04F    	RJMP       L_applicationTask52
L__applicationTask95:
;Click_FM_AVR.c,412 :: 		receivedData_ = UART_Rd_Ptr( );
0x356E	0x030F91E0  	LDS        R30, _UART_Rd_Ptr+0
0x3572	0x031091F0  	LDS        R31, _UART_Rd_Ptr+1
0x3576	0x9509    	ICALL
0x3578	0x030E9300  	STS        _receivedData_+0, R16
;Click_FM_AVR.c,414 :: 		switch (receivedData_)
0x357C	0xC01A    	RJMP       L_applicationTask53
;Click_FM_AVR.c,416 :: 		case '+' :
L_applicationTask55:
;Click_FM_AVR.c,418 :: 		fm_casePlus( );
0x357E	0xDDA7    	RCALL      _fm_casePlus+0
;Click_FM_AVR.c,420 :: 		break;
0x3580	0xC045    	RJMP       L_applicationTask54
;Click_FM_AVR.c,422 :: 		case '-' :
L_applicationTask56:
;Click_FM_AVR.c,424 :: 		fm_caseMinus( );
0x3582	0xDDFD    	RCALL      _fm_caseMinus+0
;Click_FM_AVR.c,426 :: 		break;
0x3584	0xC043    	RJMP       L_applicationTask54
;Click_FM_AVR.c,428 :: 		case 's' :
L_applicationTask57:
;Click_FM_AVR.c,430 :: 		fm_caseSeek( );
0x3586	0x1273940E  	CALL       _fm_caseSeek+0
;Click_FM_AVR.c,432 :: 		break;
0x358A	0xC040    	RJMP       L_applicationTask54
;Click_FM_AVR.c,434 :: 		case 't' :
L_applicationTask58:
;Click_FM_AVR.c,436 :: 		fm_caseTune( );
0x358C	0xDEA0    	RCALL      _fm_caseTune+0
;Click_FM_AVR.c,438 :: 		break;
0x358E	0xC03E    	RJMP       L_applicationTask54
;Click_FM_AVR.c,440 :: 		case 'm' :
L_applicationTask59:
;Click_FM_AVR.c,442 :: 		fm_caseMemorize( );
0x3590	0xD8D6    	RCALL      _fm_caseMemorize+0
;Click_FM_AVR.c,444 :: 		break;
0x3592	0xC03C    	RJMP       L_applicationTask54
;Click_FM_AVR.c,446 :: 		case 'i' :
L_applicationTask60:
;Click_FM_AVR.c,448 :: 		fm_caseMute( );
0x3594	0x124B940E  	CALL       _fm_caseMute+0
;Click_FM_AVR.c,450 :: 		break;
0x3598	0xC039    	RJMP       L_applicationTask54
;Click_FM_AVR.c,452 :: 		case '1' :
L_applicationTask61:
;Click_FM_AVR.c,454 :: 		fm_caseStation1( );
0x359A	0xDBA0    	RCALL      _fm_caseStation1+0
;Click_FM_AVR.c,456 :: 		break;
0x359C	0xC037    	RJMP       L_applicationTask54
;Click_FM_AVR.c,458 :: 		case '2' :
L_applicationTask62:
;Click_FM_AVR.c,460 :: 		fm_caseStation2( );
0x359E	0xDC3D    	RCALL      _fm_caseStation2+0
;Click_FM_AVR.c,462 :: 		break;
0x35A0	0xC035    	RJMP       L_applicationTask54
;Click_FM_AVR.c,464 :: 		case '3' :
L_applicationTask63:
;Click_FM_AVR.c,466 :: 		fm_caseStation3( );
0x35A2	0xD935    	RCALL      _fm_caseStation3+0
;Click_FM_AVR.c,468 :: 		break;
0x35A4	0xC033    	RJMP       L_applicationTask54
;Click_FM_AVR.c,470 :: 		case '.' :
L_applicationTask64:
;Click_FM_AVR.c,472 :: 		fm_caseTuneUp( );
0x35A6	0xD9B1    	RCALL      _fm_caseTuneUp+0
;Click_FM_AVR.c,474 :: 		break;
0x35A8	0xC031    	RJMP       L_applicationTask54
;Click_FM_AVR.c,476 :: 		case ',' :
L_applicationTask65:
;Click_FM_AVR.c,478 :: 		fm_caseTuneDown( );
0x35AA	0xDE04    	RCALL      _fm_caseTuneDown+0
;Click_FM_AVR.c,480 :: 		break;
0x35AC	0xC02F    	RJMP       L_applicationTask54
;Click_FM_AVR.c,482 :: 		default :
L_applicationTask66:
;Click_FM_AVR.c,484 :: 		fm_caseWrongCommand( );
0x35AE	0xDCD4    	RCALL      _fm_caseWrongCommand+0
;Click_FM_AVR.c,486 :: 		break;
0x35B0	0xC02D    	RJMP       L_applicationTask54
;Click_FM_AVR.c,488 :: 		}
L_applicationTask53:
0x35B2	0x030E9100  	LDS        R16, _receivedData_+0
0x35B6	0x320B    	CPI        R16, 43
0x35B8	0xF311    	BREQ       L_applicationTask55
L__applicationTask96:
0x35BA	0x030E9100  	LDS        R16, _receivedData_+0
0x35BE	0x320D    	CPI        R16, 45
0x35C0	0xF301    	BREQ       L_applicationTask56
L__applicationTask97:
0x35C2	0x030E9100  	LDS        R16, _receivedData_+0
0x35C6	0x3703    	CPI        R16, 115
0x35C8	0xF2F1    	BREQ       L_applicationTask57
L__applicationTask98:
0x35CA	0x030E9100  	LDS        R16, _receivedData_+0
0x35CE	0x3704    	CPI        R16, 116
0x35D0	0xF2E9    	BREQ       L_applicationTask58
L__applicationTask99:
0x35D2	0x030E9100  	LDS        R16, _receivedData_+0
0x35D6	0x360D    	CPI        R16, 109
0x35D8	0xF2D9    	BREQ       L_applicationTask59
L__applicationTask100:
0x35DA	0x030E9100  	LDS        R16, _receivedData_+0
0x35DE	0x3609    	CPI        R16, 105
0x35E0	0xF2C9    	BREQ       L_applicationTask60
L__applicationTask101:
0x35E2	0x030E9100  	LDS        R16, _receivedData_+0
0x35E6	0x3301    	CPI        R16, 49
0x35E8	0xF2C1    	BREQ       L_applicationTask61
L__applicationTask102:
0x35EA	0x030E9100  	LDS        R16, _receivedData_+0
0x35EE	0x3302    	CPI        R16, 50
0x35F0	0xF2B1    	BREQ       L_applicationTask62
L__applicationTask103:
0x35F2	0x030E9100  	LDS        R16, _receivedData_+0
0x35F6	0x3303    	CPI        R16, 51
0x35F8	0xF2A1    	BREQ       L_applicationTask63
L__applicationTask104:
0x35FA	0x030E9100  	LDS        R16, _receivedData_+0
0x35FE	0x320E    	CPI        R16, 46
0x3600	0xF291    	BREQ       L_applicationTask64
L__applicationTask105:
0x3602	0x030E9100  	LDS        R16, _receivedData_+0
0x3606	0x320C    	CPI        R16, 44
0x3608	0xF281    	BREQ       L_applicationTask65
L__applicationTask106:
0x360A	0xCFD1    	RJMP       L_applicationTask66
L_applicationTask54:
;Click_FM_AVR.c,489 :: 		}
L_applicationTask52:
;Click_FM_AVR.c,490 :: 		}
L_end_applicationTask:
0x360C	0x9508    	RET
; end of _applicationTask
_fm_casePlus:
;Click_FM_AVR.c,78 :: 		void fm_casePlus( )
;Click_FM_AVR.c,80 :: 		errorFlag_ = fm_volumeUp( );
0x30CE	0x922F    	PUSH       R2
0x30D0	0x923F    	PUSH       R3
0x30D2	0x924F    	PUSH       R4
0x30D4	0xD944    	RCALL      _fm_volumeUp+0
0x30D6	0x02D99300  	STS        _errorFlag_+0, R16
;Click_FM_AVR.c,82 :: 		if (errorFlag_ == 0)
0x30DA	0x3000    	CPI        R16, 0
0x30DC	0xF441    	BRNE       L_fm_casePlus0
L__fm_casePlus70:
;Click_FM_AVR.c,84 :: 		mikrobus_logWrite( "volume up", _LOG_LINE );
0x30DE	0xE0B2    	LDI        R27, 2
0x30E0	0x2E4B    	MOV        R4, R27
0x30E2	0xE1B4    	LDI        R27, lo_addr(?lstr1_Click_FM_AVR+0)
0x30E4	0x2E2B    	MOV        R2, R27
0x30E6	0xE0B2    	LDI        R27, hi_addr(?lstr1_Click_FM_AVR+0)
0x30E8	0x2E3B    	MOV        R3, R27
0x30EA	0xD187    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,85 :: 		}
0x30EC	0xC007    	RJMP       L_fm_casePlus1
L_fm_casePlus0:
;Click_FM_AVR.c,88 :: 		mikrobus_logWrite( "volume max", _LOG_LINE );
0x30EE	0xE0B2    	LDI        R27, 2
0x30F0	0x2E4B    	MOV        R4, R27
0x30F2	0xE1BE    	LDI        R27, lo_addr(?lstr2_Click_FM_AVR+0)
0x30F4	0x2E2B    	MOV        R2, R27
0x30F6	0xE0B2    	LDI        R27, hi_addr(?lstr2_Click_FM_AVR+0)
0x30F8	0x2E3B    	MOV        R3, R27
0x30FA	0xD17F    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,89 :: 		}
L_fm_casePlus1:
;Click_FM_AVR.c,90 :: 		}
L_end_fm_casePlus:
0x30FC	0x904F    	POP        R4
0x30FE	0x903F    	POP        R3
0x3100	0x902F    	POP        R2
0x3102	0x9508    	RET
; end of _fm_casePlus
_fm_volumeUp:
0x235E	0x93CF    	PUSH       R28
0x2360	0x93DF    	PUSH       R29
0x2362	0xB7CD    	IN         R28, SPL+0
0x2364	0xB7DE    	IN         R29, SPL+1
0x2366	0x97A0    	SBIW       R28, 32
0x2368	0xBFCD    	OUT        SPL+0, R28
0x236A	0xBFDE    	OUT        SPL+1, R29
0x236C	0x9621    	ADIW       R28, 1
;__fm_Driver.c,767 :: 		uint8_t fm_volumeUp( void )
;__fm_Driver.c,772 :: 		fm_readRegisters( regBuffer );
0x236E	0x922F    	PUSH       R2
0x2370	0x923F    	PUSH       R3
0x2372	0x018E    	MOVW       R16, R28
0x2374	0x0118    	MOVW       R2, R16
0x2376	0xDF07    	RCALL      _fm_readRegisters+0
;__fm_Driver.c,774 :: 		volumeLevel  = regBuffer[ _FM_SYSTEM_CONFIGURATION_2 ];
0x2378	0x018E    	MOVW       R16, R28
0x237A	0x01F8    	MOVW       R30, R16
0x237C	0x9636    	ADIW       R30, 6
0x237E	0x8100    	LD         R16, Z
;__fm_Driver.c,775 :: 		volumeLevel &= 0x000F;
0x2380	0x700F    	ANDI       R16, 15
; volumeLevel start address is: 17 (R17)
0x2382	0x2F10    	MOV        R17, R16
;__fm_Driver.c,777 :: 		if (volumeLevel < 15)
0x2384	0x300F    	CPI        R16, 15
0x2386	0xF4F0    	BRSH       L_fm_volumeUp52
L__fm_volumeUp176:
;__fm_Driver.c,779 :: 		volumeLevel += 1;
0x2388	0x2F01    	MOV        R16, R17
0x238A	0x5F0F    	SUBI       R16, 255
; volumeLevel end address is: 17 (R17)
; volumeLevel start address is: 20 (R20)
0x238C	0x2F40    	MOV        R20, R16
;__fm_Driver.c,781 :: 		regBuffer[_FM_SYSTEM_CONFIGURATION_2] &= 0xFFF0;
0x238E	0x018E    	MOVW       R16, R28
0x2390	0x0198    	MOVW       R18, R16
0x2392	0x5F2A    	SUBI       R18, 250
0x2394	0x4F3F    	SBCI       R19, 255
0x2396	0x01F9    	MOVW       R30, R18
0x2398	0x9101    	LD         R16, Z+
0x239A	0x9111    	LD         R17, Z+
0x239C	0x7F00    	ANDI       R16, 240
0x239E	0x01F9    	MOVW       R30, R18
0x23A0	0x9301    	ST         Z+, R16
0x23A2	0x9311    	ST         Z+, R17
;__fm_Driver.c,782 :: 		regBuffer[_FM_SYSTEM_CONFIGURATION_2] |= volumeLevel;
0x23A4	0x018E    	MOVW       R16, R28
0x23A6	0x0198    	MOVW       R18, R16
0x23A8	0x5F2A    	SUBI       R18, 250
0x23AA	0x4F3F    	SBCI       R19, 255
0x23AC	0x01F9    	MOVW       R30, R18
0x23AE	0x9101    	LD         R16, Z+
0x23B0	0x9111    	LD         R17, Z+
0x23B2	0x2B04    	OR         R16, R20
; volumeLevel end address is: 20 (R20)
0x23B4	0x01F9    	MOVW       R30, R18
0x23B6	0x9301    	ST         Z+, R16
0x23B8	0x9311    	ST         Z+, R17
;__fm_Driver.c,784 :: 		fm_writeRegisters( regBuffer );
0x23BA	0x018E    	MOVW       R16, R28
0x23BC	0x0118    	MOVW       R2, R16
0x23BE	0xDD28    	RCALL      _fm_writeRegisters+0
;__fm_Driver.c,786 :: 		return 0;
0x23C0	0xE000    	LDI        R16, 0
0x23C2	0xC001    	RJMP       L_end_fm_volumeUp
;__fm_Driver.c,787 :: 		}
L_fm_volumeUp52:
;__fm_Driver.c,790 :: 		return 1;
0x23C4	0xE001    	LDI        R16, 1
;__fm_Driver.c,792 :: 		}
;__fm_Driver.c,790 :: 		return 1;
;__fm_Driver.c,792 :: 		}
L_end_fm_volumeUp:
0x23C6	0x903F    	POP        R3
0x23C8	0x902F    	POP        R2
0x23CA	0x966F    	ADIW       R28, 31
0x23CC	0xBFCD    	OUT        SPL+0, R28
0x23CE	0xBFDE    	OUT        SPL+1, R29
0x23D0	0x91DF    	POP        R29
0x23D2	0x91CF    	POP        R28
0x23D4	0x9508    	RET
; end of _fm_volumeUp
_fm_caseMinus:
;Click_FM_AVR.c,92 :: 		void fm_caseMinus( )
;Click_FM_AVR.c,94 :: 		errorFlag_ = fm_volumeDown( );
0x317E	0x922F    	PUSH       R2
0x3180	0x923F    	PUSH       R3
0x3182	0x924F    	PUSH       R4
0x3184	0xD8AE    	RCALL      _fm_volumeDown+0
0x3186	0x02D99300  	STS        _errorFlag_+0, R16
;Click_FM_AVR.c,96 :: 		if (errorFlag_ == 0)
0x318A	0x3000    	CPI        R16, 0
0x318C	0xF441    	BRNE       L_fm_caseMinus2
L__fm_caseMinus72:
;Click_FM_AVR.c,98 :: 		mikrobus_logWrite( "volume down", _LOG_LINE );
0x318E	0xE0B2    	LDI        R27, 2
0x3190	0x2E4B    	MOV        R4, R27
0x3192	0xE4BF    	LDI        R27, lo_addr(?lstr3_Click_FM_AVR+0)
0x3194	0x2E2B    	MOV        R2, R27
0x3196	0xE0B2    	LDI        R27, hi_addr(?lstr3_Click_FM_AVR+0)
0x3198	0x2E3B    	MOV        R3, R27
0x319A	0xD12F    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,99 :: 		}
0x319C	0xC007    	RJMP       L_fm_caseMinus3
L_fm_caseMinus2:
;Click_FM_AVR.c,102 :: 		mikrobus_logWrite( "volume min", _LOG_LINE );
0x319E	0xE0B2    	LDI        R27, 2
0x31A0	0x2E4B    	MOV        R4, R27
0x31A2	0xE5BB    	LDI        R27, lo_addr(?lstr4_Click_FM_AVR+0)
0x31A4	0x2E2B    	MOV        R2, R27
0x31A6	0xE0B2    	LDI        R27, hi_addr(?lstr4_Click_FM_AVR+0)
0x31A8	0x2E3B    	MOV        R3, R27
0x31AA	0xD127    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,103 :: 		}
L_fm_caseMinus3:
;Click_FM_AVR.c,104 :: 		}
L_end_fm_caseMinus:
0x31AC	0x904F    	POP        R4
0x31AE	0x903F    	POP        R3
0x31B0	0x902F    	POP        R2
0x31B2	0x9508    	RET
; end of _fm_caseMinus
_fm_volumeDown:
0x22E2	0x93CF    	PUSH       R28
0x22E4	0x93DF    	PUSH       R29
0x22E6	0xB7CD    	IN         R28, SPL+0
0x22E8	0xB7DE    	IN         R29, SPL+1
0x22EA	0x97A0    	SBIW       R28, 32
0x22EC	0xBFCD    	OUT        SPL+0, R28
0x22EE	0xBFDE    	OUT        SPL+1, R29
0x22F0	0x9621    	ADIW       R28, 1
;__fm_Driver.c,794 :: 		uint8_t fm_volumeDown( void )
;__fm_Driver.c,799 :: 		fm_readRegisters( regBuffer );
0x22F2	0x922F    	PUSH       R2
0x22F4	0x923F    	PUSH       R3
0x22F6	0x018E    	MOVW       R16, R28
0x22F8	0x0118    	MOVW       R2, R16
0x22FA	0xDF45    	RCALL      _fm_readRegisters+0
;__fm_Driver.c,801 :: 		volumeLevel  = regBuffer[ _FM_SYSTEM_CONFIGURATION_2 ];
0x22FC	0x018E    	MOVW       R16, R28
0x22FE	0x01F8    	MOVW       R30, R16
0x2300	0x9636    	ADIW       R30, 6
0x2302	0x8100    	LD         R16, Z
;__fm_Driver.c,802 :: 		volumeLevel &= 0x000F;
0x2304	0x2F10    	MOV        R17, R16
0x2306	0x701F    	ANDI       R17, 15
; volumeLevel start address is: 18 (R18)
0x2308	0x2F21    	MOV        R18, R17
;__fm_Driver.c,804 :: 		if (volumeLevel > 0)
0x230A	0xE000    	LDI        R16, 0
0x230C	0x1701    	CP         R16, R17
0x230E	0xF4F0    	BRSH       L_fm_volumeDown54
L__fm_volumeDown178:
;__fm_Driver.c,806 :: 		volumeLevel -= 1;
0x2310	0x2F02    	MOV        R16, R18
0x2312	0x5001    	SUBI       R16, 1
; volumeLevel end address is: 18 (R18)
; volumeLevel start address is: 20 (R20)
0x2314	0x2F40    	MOV        R20, R16
;__fm_Driver.c,808 :: 		regBuffer[_FM_SYSTEM_CONFIGURATION_2] &= 0xFFF0;
0x2316	0x018E    	MOVW       R16, R28
0x2318	0x0198    	MOVW       R18, R16
0x231A	0x5F2A    	SUBI       R18, 250
0x231C	0x4F3F    	SBCI       R19, 255
0x231E	0x01F9    	MOVW       R30, R18
0x2320	0x9101    	LD         R16, Z+
0x2322	0x9111    	LD         R17, Z+
0x2324	0x7F00    	ANDI       R16, 240
0x2326	0x01F9    	MOVW       R30, R18
0x2328	0x9301    	ST         Z+, R16
0x232A	0x9311    	ST         Z+, R17
;__fm_Driver.c,809 :: 		regBuffer[_FM_SYSTEM_CONFIGURATION_2] |= volumeLevel;
0x232C	0x018E    	MOVW       R16, R28
0x232E	0x0198    	MOVW       R18, R16
0x2330	0x5F2A    	SUBI       R18, 250
0x2332	0x4F3F    	SBCI       R19, 255
0x2334	0x01F9    	MOVW       R30, R18
0x2336	0x9101    	LD         R16, Z+
0x2338	0x9111    	LD         R17, Z+
0x233A	0x2B04    	OR         R16, R20
; volumeLevel end address is: 20 (R20)
0x233C	0x01F9    	MOVW       R30, R18
0x233E	0x9301    	ST         Z+, R16
0x2340	0x9311    	ST         Z+, R17
;__fm_Driver.c,811 :: 		fm_writeRegisters( regBuffer );
0x2342	0x018E    	MOVW       R16, R28
0x2344	0x0118    	MOVW       R2, R16
0x2346	0xDD64    	RCALL      _fm_writeRegisters+0
;__fm_Driver.c,813 :: 		return 0;
0x2348	0xE000    	LDI        R16, 0
0x234A	0xC001    	RJMP       L_end_fm_volumeDown
;__fm_Driver.c,814 :: 		}
L_fm_volumeDown54:
;__fm_Driver.c,817 :: 		return 1;
0x234C	0xE001    	LDI        R16, 1
;__fm_Driver.c,819 :: 		}
;__fm_Driver.c,817 :: 		return 1;
;__fm_Driver.c,819 :: 		}
L_end_fm_volumeDown:
0x234E	0x903F    	POP        R3
0x2350	0x902F    	POP        R2
0x2352	0x966F    	ADIW       R28, 31
0x2354	0xBFCD    	OUT        SPL+0, R28
0x2356	0xBFDE    	OUT        SPL+1, R29
0x2358	0x91DF    	POP        R29
0x235A	0x91CF    	POP        R28
0x235C	0x9508    	RET
; end of _fm_volumeDown
_fm_caseSeek:
;Click_FM_AVR.c,106 :: 		void fm_caseSeek( )
;Click_FM_AVR.c,108 :: 		fm_seek( );
0x24E6	0x922F    	PUSH       R2
0x24E8	0x923F    	PUSH       R3
0x24EA	0x924F    	PUSH       R4
0x24EC	0x925F    	PUSH       R5
0x24EE	0x926F    	PUSH       R6
0x24F0	0x927F    	PUSH       R7
0x24F2	0xDFA0    	RCALL      _fm_seek+0
;Click_FM_AVR.c,110 :: 		Delay_ms(100);
0x24F4	0xE025    	LDI        R18, 5
0x24F6	0xE01F    	LDI        R17, 15
0x24F8	0xEF02    	LDI        R16, 242
L_fm_caseSeek4:
0x24FA	0x950A    	DEC        R16
0x24FC	0xF7F1    	BRNE       L_fm_caseSeek4
0x24FE	0x951A    	DEC        R17
0x2500	0xF7E1    	BRNE       L_fm_caseSeek4
0x2502	0x952A    	DEC        R18
0x2504	0xF7D1    	BRNE       L_fm_caseSeek4
;Click_FM_AVR.c,112 :: 		fm_endSeek( );
0x2506	0xDF67    	RCALL      _fm_endSeek+0
;Click_FM_AVR.c,114 :: 		Delay_ms(10);
0x2508	0xE618    	LDI        R17, 104
0x250A	0xEE05    	LDI        R16, 229
L_fm_caseSeek6:
0x250C	0x950A    	DEC        R16
0x250E	0xF7F1    	BRNE       L_fm_caseSeek6
0x2510	0x951A    	DEC        R17
0x2512	0xF7E1    	BRNE       L_fm_caseSeek6
;Click_FM_AVR.c,116 :: 		receivedSignalStrengthIndicator = fm_getReceivedSignalStrengthIndicator( );
0x2514	0x05B0940E  	CALL       _fm_getReceivedSignalStrengthIndicator+0
0x2518	0x02DA9300  	STS        _receivedSignalStrengthIndicator+0, R16
0x251C	0xE0B0    	LDI        R27, 0
0x251E	0x02DB93B0  	STS        _receivedSignalStrengthIndicator+1, R27
;Click_FM_AVR.c,117 :: 		channelFrequency_ = fm_getChannelFrequency( );
0x2522	0x05CC940E  	CALL       _fm_getChannelFrequency+0
0x2526	0x02CF9300  	STS        _channelFrequency_+0, R16
0x252A	0x02D09310  	STS        _channelFrequency_+1, R17
0x252E	0x02D19320  	STS        _channelFrequency_+2, R18
0x2532	0x02D29330  	STS        _channelFrequency_+3, R19
;Click_FM_AVR.c,118 :: 		stationFrequency_ = fm_getChannel( );
0x2536	0x0A4F940E  	CALL       _fm_getChannel+0
0x253A	0x02D39300  	STS        _stationFrequency_+0, R16
0x253E	0x02D49310  	STS        _stationFrequency_+1, R17
;Click_FM_AVR.c,120 :: 		WordToStr( receivedSignalStrengthIndicator, text );
0x2542	0xEDBC    	LDI        R27, lo_addr(_text+0)
0x2544	0x2E4B    	MOV        R4, R27
0x2546	0xE0B2    	LDI        R27, hi_addr(_text+0)
0x2548	0x2E5B    	MOV        R5, R27
0x254A	0x02DA9020  	LDS        R2, _receivedSignalStrengthIndicator+0
0x254E	0x02DB9030  	LDS        R3, _receivedSignalStrengthIndicator+1
0x2552	0x0A0B940E  	CALL       _WordToStr+0
;Click_FM_AVR.c,121 :: 		mikrobus_logWrite( "station found", _LOG_LINE );
0x2556	0xE0B2    	LDI        R27, 2
0x2558	0x2E4B    	MOV        R4, R27
0x255A	0xE9B2    	LDI        R27, lo_addr(?lstr5_Click_FM_AVR+0)
0x255C	0x2E2B    	MOV        R2, R27
0x255E	0xE0B1    	LDI        R27, hi_addr(?lstr5_Click_FM_AVR+0)
0x2560	0x2E3B    	MOV        R3, R27
0x2562	0xD74B    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,122 :: 		mikrobus_logWrite( "rssi:", _LOG_TEXT );
0x2564	0xE0B1    	LDI        R27, 1
0x2566	0x2E4B    	MOV        R4, R27
0x2568	0xE8BC    	LDI        R27, lo_addr(?lstr6_Click_FM_AVR+0)
0x256A	0x2E2B    	MOV        R2, R27
0x256C	0xE0B1    	LDI        R27, hi_addr(?lstr6_Click_FM_AVR+0)
0x256E	0x2E3B    	MOV        R3, R27
0x2570	0xD744    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,123 :: 		mikrobus_logWrite( text, _LOG_TEXT );
0x2572	0xE0B1    	LDI        R27, 1
0x2574	0x2E4B    	MOV        R4, R27
0x2576	0xEDBC    	LDI        R27, lo_addr(_text+0)
0x2578	0x2E2B    	MOV        R2, R27
0x257A	0xE0B2    	LDI        R27, hi_addr(_text+0)
0x257C	0x2E3B    	MOV        R3, R27
0x257E	0xD73D    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,124 :: 		mikrobus_logWrite( " dBuV", _LOG_LINE );
0x2580	0xE0B2    	LDI        R27, 2
0x2582	0x2E4B    	MOV        R4, R27
0x2584	0xE7B3    	LDI        R27, lo_addr(?lstr7_Click_FM_AVR+0)
0x2586	0x2E2B    	MOV        R2, R27
0x2588	0xE0B1    	LDI        R27, hi_addr(?lstr7_Click_FM_AVR+0)
0x258A	0x2E3B    	MOV        R3, R27
0x258C	0xD736    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,126 :: 		FloatToStr( channelFrequency_, text );
0x258E	0xEDBC    	LDI        R27, lo_addr(_text+0)
0x2590	0x2E6B    	MOV        R6, R27
0x2592	0xE0B2    	LDI        R27, hi_addr(_text+0)
0x2594	0x2E7B    	MOV        R7, R27
0x2596	0x02CF9020  	LDS        R2, _channelFrequency_+0
0x259A	0x02D09030  	LDS        R3, _channelFrequency_+1
0x259E	0x02D19040  	LDS        R4, _channelFrequency_+2
0x25A2	0x02D29050  	LDS        R5, _channelFrequency_+3
0x25A6	0xD962    	RCALL      _FloatToStr+0
;Click_FM_AVR.c,127 :: 		mikrobus_logWrite( "channel frequency:", _LOG_TEXT );
0x25A8	0xE0B1    	LDI        R27, 1
0x25AA	0x2E4B    	MOV        R4, R27
0x25AC	0xE7B9    	LDI        R27, lo_addr(?lstr8_Click_FM_AVR+0)
0x25AE	0x2E2B    	MOV        R2, R27
0x25B0	0xE0B1    	LDI        R27, hi_addr(?lstr8_Click_FM_AVR+0)
0x25B2	0x2E3B    	MOV        R3, R27
0x25B4	0xD722    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,128 :: 		mikrobus_logWrite( text, _LOG_TEXT );
0x25B6	0xE0B1    	LDI        R27, 1
0x25B8	0x2E4B    	MOV        R4, R27
0x25BA	0xEDBC    	LDI        R27, lo_addr(_text+0)
0x25BC	0x2E2B    	MOV        R2, R27
0x25BE	0xE0B2    	LDI        R27, hi_addr(_text+0)
0x25C0	0x2E3B    	MOV        R3, R27
0x25C2	0xD71B    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,129 :: 		mikrobus_logWrite( " MHz", _LOG_LINE );
0x25C4	0xE0B2    	LDI        R27, 2
0x25C6	0x2E4B    	MOV        R4, R27
0x25C8	0xEBBC    	LDI        R27, lo_addr(?lstr9_Click_FM_AVR+0)
0x25CA	0x2E2B    	MOV        R2, R27
0x25CC	0xE0B1    	LDI        R27, hi_addr(?lstr9_Click_FM_AVR+0)
0x25CE	0x2E3B    	MOV        R3, R27
0x25D0	0xD714    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,130 :: 		}
L_end_fm_caseSeek:
0x25D2	0x907F    	POP        R7
0x25D4	0x906F    	POP        R6
0x25D6	0x905F    	POP        R5
0x25D8	0x904F    	POP        R4
0x25DA	0x903F    	POP        R3
0x25DC	0x902F    	POP        R2
0x25DE	0x9508    	RET
; end of _fm_caseSeek
_fm_seek:
0x2434	0x93CF    	PUSH       R28
0x2436	0x93DF    	PUSH       R29
0x2438	0xB7CD    	IN         R28, SPL+0
0x243A	0xB7DE    	IN         R29, SPL+1
0x243C	0x97A0    	SBIW       R28, 32
0x243E	0xBFCD    	OUT        SPL+0, R28
0x2440	0xBFDE    	OUT        SPL+1, R29
0x2442	0x9621    	ADIW       R28, 1
;__fm_Driver.c,745 :: 		void fm_seek( void )
;__fm_Driver.c,749 :: 		fm_readRegisters( regBuffer );
0x2444	0x922F    	PUSH       R2
0x2446	0x923F    	PUSH       R3
0x2448	0x924F    	PUSH       R4
0x244A	0x925F    	PUSH       R5
0x244C	0x926F    	PUSH       R6
0x244E	0x927F    	PUSH       R7
0x2450	0x928F    	PUSH       R8
0x2452	0x929F    	PUSH       R9
0x2454	0x018E    	MOVW       R16, R28
0x2456	0x0118    	MOVW       R2, R16
0x2458	0xDE96    	RCALL      _fm_readRegisters+0
;__fm_Driver.c,751 :: 		fm_setBits( regBuffer, _FM_POWER_CONFIGURATION, _FM_SEEK_MASK, _FM_SEEK_ENABLE );
0x245A	0x018E    	MOVW       R16, R28
0x245C	0xE0B0    	LDI        R27, 0
0x245E	0x2E8B    	MOV        R8, R27
0x2460	0xE0B1    	LDI        R27, 1
0x2462	0x2E9B    	MOV        R9, R27
0x2464	0xEFBF    	LDI        R27, 255
0x2466	0x2E6B    	MOV        R6, R27
0x2468	0xEFBE    	LDI        R27, 254
0x246A	0x2E7B    	MOV        R7, R27
0x246C	0x2444    	CLR        R4
0x246E	0x2455    	CLR        R5
0x2470	0x0118    	MOVW       R2, R16
0x2472	0xDD24    	RCALL      _fm_setBits+0
;__fm_Driver.c,753 :: 		fm_writeRegisters( regBuffer );
0x2474	0x018E    	MOVW       R16, R28
0x2476	0x0118    	MOVW       R2, R16
0x2478	0xDCCB    	RCALL      _fm_writeRegisters+0
;__fm_Driver.c,754 :: 		}
L_end_fm_seek:
0x247A	0x909F    	POP        R9
0x247C	0x908F    	POP        R8
0x247E	0x907F    	POP        R7
0x2480	0x906F    	POP        R6
0x2482	0x905F    	POP        R5
0x2484	0x904F    	POP        R4
0x2486	0x903F    	POP        R3
0x2488	0x902F    	POP        R2
0x248A	0x966F    	ADIW       R28, 31
0x248C	0xBFCD    	OUT        SPL+0, R28
0x248E	0xBFDE    	OUT        SPL+1, R29
0x2490	0x91DF    	POP        R29
0x2492	0x91CF    	POP        R28
0x2494	0x9508    	RET
; end of _fm_seek
_fm_endSeek:
0x23D6	0x93CF    	PUSH       R28
0x23D8	0x93DF    	PUSH       R29
0x23DA	0xB7CD    	IN         R28, SPL+0
0x23DC	0xB7DE    	IN         R29, SPL+1
0x23DE	0x97A0    	SBIW       R28, 32
0x23E0	0xBFCD    	OUT        SPL+0, R28
0x23E2	0xBFDE    	OUT        SPL+1, R29
0x23E4	0x9621    	ADIW       R28, 1
;__fm_Driver.c,756 :: 		void fm_endSeek( void )
;__fm_Driver.c,760 :: 		fm_readRegisters( regBuffer );
0x23E6	0x922F    	PUSH       R2
0x23E8	0x923F    	PUSH       R3
0x23EA	0x924F    	PUSH       R4
0x23EC	0x925F    	PUSH       R5
0x23EE	0x926F    	PUSH       R6
0x23F0	0x927F    	PUSH       R7
0x23F2	0x928F    	PUSH       R8
0x23F4	0x929F    	PUSH       R9
0x23F6	0x018E    	MOVW       R16, R28
0x23F8	0x0118    	MOVW       R2, R16
0x23FA	0xDEC5    	RCALL      _fm_readRegisters+0
;__fm_Driver.c,762 :: 		fm_setBits( regBuffer, _FM_POWER_CONFIGURATION, _FM_SEEK_MASK, _FM_SEEK_DISABLE);
0x23FC	0x018E    	MOVW       R16, R28
0x23FE	0x2488    	CLR        R8
0x2400	0x2499    	CLR        R9
0x2402	0xEFBF    	LDI        R27, 255
0x2404	0x2E6B    	MOV        R6, R27
0x2406	0xEFBE    	LDI        R27, 254
0x2408	0x2E7B    	MOV        R7, R27
0x240A	0x2444    	CLR        R4
0x240C	0x2455    	CLR        R5
0x240E	0x0118    	MOVW       R2, R16
0x2410	0xDD55    	RCALL      _fm_setBits+0
;__fm_Driver.c,764 :: 		fm_writeRegisters( regBuffer );
0x2412	0x018E    	MOVW       R16, R28
0x2414	0x0118    	MOVW       R2, R16
0x2416	0xDCFC    	RCALL      _fm_writeRegisters+0
;__fm_Driver.c,765 :: 		}
L_end_fm_endSeek:
0x2418	0x909F    	POP        R9
0x241A	0x908F    	POP        R8
0x241C	0x907F    	POP        R7
0x241E	0x906F    	POP        R6
0x2420	0x905F    	POP        R5
0x2422	0x904F    	POP        R4
0x2424	0x903F    	POP        R3
0x2426	0x902F    	POP        R2
0x2428	0x966F    	ADIW       R28, 31
0x242A	0xBFCD    	OUT        SPL+0, R28
0x242C	0xBFDE    	OUT        SPL+1, R29
0x242E	0x91DF    	POP        R29
0x2430	0x91CF    	POP        R28
0x2432	0x9508    	RET
; end of _fm_endSeek
_fm_getReceivedSignalStrengthIndicator:
0x0B60	0x93CF    	PUSH       R28
0x0B62	0x93DF    	PUSH       R29
0x0B64	0xB7CD    	IN         R28, SPL+0
0x0B66	0xB7DE    	IN         R29, SPL+1
0x0B68	0x97A0    	SBIW       R28, 32
0x0B6A	0xBFCD    	OUT        SPL+0, R28
0x0B6C	0xBFDE    	OUT        SPL+1, R29
0x0B6E	0x9621    	ADIW       R28, 1
;__fm_Driver.c,399 :: 		uint8_t fm_getReceivedSignalStrengthIndicator( void )
;__fm_Driver.c,406 :: 		fm_readRegisters( regBuffer );
0x0B70	0x922F    	PUSH       R2
0x0B72	0x923F    	PUSH       R3
0x0B74	0x018E    	MOVW       R16, R28
0x0B76	0x0118    	MOVW       R2, R16
0x0B78	0x10C3940E  	CALL       _fm_readRegisters+0
;__fm_Driver.c,408 :: 		auxVariable = regBuffer[_FM_STATUS_RSSI];
0x0B7C	0x018E    	MOVW       R16, R28
0x0B7E	0x01F8    	MOVW       R30, R16
0x0B80	0x9670    	ADIW       R30, 16
0x0B82	0x9101    	LD         R16, Z+
0x0B84	0x9111    	LD         R17, Z+
;__fm_Driver.c,410 :: 		auxVariable &= 0x00FF;
0x0B86	0x7010    	ANDI       R17, 0
;__fm_Driver.c,414 :: 		return rssiValue;
;__fm_Driver.c,415 :: 		}
;__fm_Driver.c,414 :: 		return rssiValue;
;__fm_Driver.c,415 :: 		}
L_end_fm_getReceivedSignalStrengthIndicator:
0x0B88	0x903F    	POP        R3
0x0B8A	0x902F    	POP        R2
0x0B8C	0x966F    	ADIW       R28, 31
0x0B8E	0xBFCD    	OUT        SPL+0, R28
0x0B90	0xBFDE    	OUT        SPL+1, R29
0x0B92	0x91DF    	POP        R29
0x0B94	0x91CF    	POP        R28
0x0B96	0x9508    	RET
; end of _fm_getReceivedSignalStrengthIndicator
_fm_getChannelFrequency:
0x0B98	0x93CF    	PUSH       R28
0x0B9A	0x93DF    	PUSH       R29
0x0B9C	0xB7CD    	IN         R28, SPL+0
0x0B9E	0xB7DE    	IN         R29, SPL+1
0x0BA0	0x97A8    	SBIW       R28, 40
0x0BA2	0xBFCD    	OUT        SPL+0, R28
0x0BA4	0xBFDE    	OUT        SPL+1, R29
0x0BA6	0x9621    	ADIW       R28, 1
;__fm_Driver.c,477 :: 		float fm_getChannelFrequency( void )
;__fm_Driver.c,487 :: 		fm_readRegisters( regBuffer );
0x0BA8	0x922F    	PUSH       R2
0x0BAA	0x923F    	PUSH       R3
0x0BAC	0x018E    	MOVW       R16, R28
0x0BAE	0x0118    	MOVW       R2, R16
0x0BB0	0x10C3940E  	CALL       _fm_readRegisters+0
;__fm_Driver.c,489 :: 		b = regBuffer[ _FM_SYSTEM_CONFIGURATION_2 ];
0x0BB4	0x01AE    	MOVW       R20, R28
0x0BB6	0x01FA    	MOVW       R30, R20
0x0BB8	0x9636    	ADIW       R30, 6
0x0BBA	0x9101    	LD         R16, Z+
0x0BBC	0x9111    	LD         R17, Z+
;__fm_Driver.c,490 :: 		b &= 0x00C0;
0x0BBE	0x7C00    	ANDI       R16, 192
0x0BC0	0x7010    	ANDI       R17, 0
;__fm_Driver.c,491 :: 		b >>= 6;
0x0BC2	0xE0B6    	LDI        R27, 6
L__fm_getChannelFrequency136:
0x0BC4	0x9516    	LSR        R17
0x0BC6	0x9507    	ROR        R16
0x0BC8	0x95BA    	DEC        R27
0x0BCA	0xF7E1    	BRNE       L__fm_getChannelFrequency136
L__fm_getChannelFrequency137:
;__fm_Driver.c,492 :: 		b &= 0x0003;
0x0BCC	0x0198    	MOVW       R18, R16
0x0BCE	0x7023    	ANDI       R18, 3
0x0BD0	0x7030    	ANDI       R19, 0
; b start address is: 22 (R22)
0x0BD2	0x01B9    	MOVW       R22, R18
;__fm_Driver.c,494 :: 		s = regBuffer[ _FM_SYSTEM_CONFIGURATION_2 ];
0x0BD4	0x01FA    	MOVW       R30, R20
0x0BD6	0x9636    	ADIW       R30, 6
0x0BD8	0x9101    	LD         R16, Z+
0x0BDA	0x9111    	LD         R17, Z+
;__fm_Driver.c,495 :: 		s &= 0x0030;
0x0BDC	0x7300    	ANDI       R16, 48
0x0BDE	0x7010    	ANDI       R17, 0
;__fm_Driver.c,496 :: 		s >>= 4;
0x0BE0	0x9516    	LSR        R17
0x0BE2	0x9507    	ROR        R16
0x0BE4	0x9516    	LSR        R17
0x0BE6	0x9507    	ROR        R16
0x0BE8	0x9516    	LSR        R17
0x0BEA	0x9507    	ROR        R16
0x0BEC	0x9516    	LSR        R17
0x0BEE	0x9507    	ROR        R16
;__fm_Driver.c,497 :: 		s &= 0x0003;
0x0BF0	0x7003    	ANDI       R16, 3
0x0BF2	0x7010    	ANDI       R17, 0
; s start address is: 16 (R16)
;__fm_Driver.c,499 :: 		if (b == 0)
0x0BF4	0x3030    	CPI        R19, 0
0x0BF6	0xF409    	BRNE       L__fm_getChannelFrequency138
0x0BF8	0x3020    	CPI        R18, 0
L__fm_getChannelFrequency138:
0x0BFA	0xF441    	BRNE       L_fm_getChannelFrequency28
L__fm_getChannelFrequency139:
; b end address is: 22 (R22)
;__fm_Driver.c,501 :: 		band_ = 87.5;
0x0BFC	0xE0B0    	LDI        R27, 0
0x0BFE	0xA3B8    	STD        Y+32, R27
0x0C00	0xA3B9    	STD        Y+33, R27
0x0C02	0xEABF    	LDI        R27, 175
0x0C04	0xA3BA    	STD        Y+34, R27
0x0C06	0xE4B2    	LDI        R27, 66
0x0C08	0xA3BB    	STD        Y+35, R27
;__fm_Driver.c,502 :: 		}
0x0C0A	0xC017    	RJMP       L_fm_getChannelFrequency29
L_fm_getChannelFrequency28:
;__fm_Driver.c,503 :: 		else if (b == 1)
; b start address is: 22 (R22)
0x0C0C	0x3070    	CPI        R23, 0
0x0C0E	0xF409    	BRNE       L__fm_getChannelFrequency140
0x0C10	0x3061    	CPI        R22, 1
L__fm_getChannelFrequency140:
0x0C12	0xF441    	BRNE       L_fm_getChannelFrequency30
L__fm_getChannelFrequency141:
; b end address is: 22 (R22)
;__fm_Driver.c,505 :: 		band_ = 76.0;
0x0C14	0xE0B0    	LDI        R27, 0
0x0C16	0xA3B8    	STD        Y+32, R27
0x0C18	0xA3B9    	STD        Y+33, R27
0x0C1A	0xE9B8    	LDI        R27, 152
0x0C1C	0xA3BA    	STD        Y+34, R27
0x0C1E	0xE4B2    	LDI        R27, 66
0x0C20	0xA3BB    	STD        Y+35, R27
;__fm_Driver.c,506 :: 		}
0x0C22	0xC00B    	RJMP       L_fm_getChannelFrequency31
L_fm_getChannelFrequency30:
;__fm_Driver.c,507 :: 		else if (b == 2)
; b start address is: 22 (R22)
0x0C24	0x3070    	CPI        R23, 0
0x0C26	0xF409    	BRNE       L__fm_getChannelFrequency142
0x0C28	0x3062    	CPI        R22, 2
L__fm_getChannelFrequency142:
0x0C2A	0xF439    	BRNE       L_fm_getChannelFrequency32
L__fm_getChannelFrequency143:
; b end address is: 22 (R22)
;__fm_Driver.c,509 :: 		band_ = 76.0;
0x0C2C	0xE0B0    	LDI        R27, 0
0x0C2E	0xA3B8    	STD        Y+32, R27
0x0C30	0xA3B9    	STD        Y+33, R27
0x0C32	0xE9B8    	LDI        R27, 152
0x0C34	0xA3BA    	STD        Y+34, R27
0x0C36	0xE4B2    	LDI        R27, 66
0x0C38	0xA3BB    	STD        Y+35, R27
;__fm_Driver.c,510 :: 		}
L_fm_getChannelFrequency32:
L_fm_getChannelFrequency31:
L_fm_getChannelFrequency29:
;__fm_Driver.c,512 :: 		if (s == 0)
0x0C3A	0x3010    	CPI        R17, 0
0x0C3C	0xF409    	BRNE       L__fm_getChannelFrequency144
0x0C3E	0x3000    	CPI        R16, 0
L__fm_getChannelFrequency144:
0x0C40	0xF449    	BRNE       L_fm_getChannelFrequency33
L__fm_getChannelFrequency145:
; s end address is: 16 (R16)
;__fm_Driver.c,514 :: 		space_ = 0.2;
0x0C42	0xECBD    	LDI        R27, 205
0x0C44	0xA3BC    	STD        Y+36, R27
0x0C46	0xECBC    	LDI        R27, 204
0x0C48	0xA3BD    	STD        Y+37, R27
0x0C4A	0xE4BC    	LDI        R27, 76
0x0C4C	0xA3BE    	STD        Y+38, R27
0x0C4E	0xE3BE    	LDI        R27, 62
0x0C50	0xA3BF    	STD        Y+39, R27
;__fm_Driver.c,515 :: 		}
0x0C52	0xC018    	RJMP       L_fm_getChannelFrequency34
L_fm_getChannelFrequency33:
;__fm_Driver.c,516 :: 		else if (s == 1)
; s start address is: 16 (R16)
0x0C54	0x3010    	CPI        R17, 0
0x0C56	0xF409    	BRNE       L__fm_getChannelFrequency146
0x0C58	0x3001    	CPI        R16, 1
L__fm_getChannelFrequency146:
0x0C5A	0xF441    	BRNE       L_fm_getChannelFrequency35
L__fm_getChannelFrequency147:
; s end address is: 16 (R16)
;__fm_Driver.c,518 :: 		space_ = 0.1;
0x0C5C	0xECBD    	LDI        R27, 205
0x0C5E	0xA3BC    	STD        Y+36, R27
0x0C60	0xECBC    	LDI        R27, 204
0x0C62	0xA3BD    	STD        Y+37, R27
0x0C64	0xA3BE    	STD        Y+38, R27
0x0C66	0xE3BD    	LDI        R27, 61
0x0C68	0xA3BF    	STD        Y+39, R27
;__fm_Driver.c,519 :: 		}
0x0C6A	0xC00C    	RJMP       L_fm_getChannelFrequency36
L_fm_getChannelFrequency35:
;__fm_Driver.c,520 :: 		else if (s == 2)
; s start address is: 16 (R16)
0x0C6C	0x3010    	CPI        R17, 0
0x0C6E	0xF409    	BRNE       L__fm_getChannelFrequency148
0x0C70	0x3002    	CPI        R16, 2
L__fm_getChannelFrequency148:
0x0C72	0xF441    	BRNE       L_fm_getChannelFrequency37
L__fm_getChannelFrequency149:
; s end address is: 16 (R16)
;__fm_Driver.c,522 :: 		space_ = 0.05;
0x0C74	0xECBD    	LDI        R27, 205
0x0C76	0xA3BC    	STD        Y+36, R27
0x0C78	0xECBC    	LDI        R27, 204
0x0C7A	0xA3BD    	STD        Y+37, R27
0x0C7C	0xE4BC    	LDI        R27, 76
0x0C7E	0xA3BE    	STD        Y+38, R27
0x0C80	0xE3BD    	LDI        R27, 61
0x0C82	0xA3BF    	STD        Y+39, R27
;__fm_Driver.c,523 :: 		}
L_fm_getChannelFrequency37:
L_fm_getChannelFrequency36:
L_fm_getChannelFrequency34:
;__fm_Driver.c,525 :: 		channel_ = regBuffer[_FM_READ_CHANNEL];
0x0C84	0x018E    	MOVW       R16, R28
0x0C86	0x01F8    	MOVW       R30, R16
0x0C88	0x9672    	ADIW       R30, 18
0x0C8A	0x9101    	LD         R16, Z+
0x0C8C	0x9111    	LD         R17, Z+
;__fm_Driver.c,527 :: 		channel_ &= 0x03FF;
0x0C8E	0x7013    	ANDI       R17, 3
;__fm_Driver.c,529 :: 		channelFrequency_  = channel_ * space_;
0x0C90	0xE020    	LDI        R18, 0
0x0C92	0x2F32    	MOV        R19, R18
0x0C94	0xDEBF    	RCALL      _float_ulong2fp+0
0x0C96	0xA14C    	LDD        R20, Y+36
0x0C98	0xA15D    	LDD        R21, Y+37
0x0C9A	0xA16E    	LDD        R22, Y+38
0x0C9C	0xA17F    	LDD        R23, Y+39
0x0C9E	0xDD4E    	RCALL      _float_fpmul1+0
;__fm_Driver.c,530 :: 		channelFrequency_ += band_;
0x0CA0	0xA148    	LDD        R20, Y+32
0x0CA2	0xA159    	LDD        R21, Y+33
0x0CA4	0xA16A    	LDD        R22, Y+34
0x0CA6	0xA17B    	LDD        R23, Y+35
0x0CA8	0xDE02    	RCALL      _float_fpadd1+0
;__fm_Driver.c,532 :: 		return channelFrequency_;
;__fm_Driver.c,533 :: 		}
;__fm_Driver.c,532 :: 		return channelFrequency_;
;__fm_Driver.c,533 :: 		}
L_end_fm_getChannelFrequency:
0x0CAA	0x903F    	POP        R3
0x0CAC	0x902F    	POP        R2
0x0CAE	0x96A7    	ADIW       R28, 39
0x0CB0	0xBFCD    	OUT        SPL+0, R28
0x0CB2	0xBFDE    	OUT        SPL+1, R29
0x0CB4	0x91DF    	POP        R29
0x0CB6	0x91CF    	POP        R28
0x0CB8	0x9508    	RET
; end of _fm_getChannelFrequency
_float_ulong2fp:
;__Lib_MathDouble.c,129 :: 		
;__Lib_MathDouble.c,131 :: 		
0x0A14	0x9468    	BSET       6
;__Lib_MathDouble.c,133 :: 		
0x0A16	0xDCFF    	RCALL      _float_long2fp+0
;__Lib_MathDouble.c,134 :: 		
L_end_float_ulong2fp:
0x0A18	0x9508    	RET
; end of _float_ulong2fp
_float_long2fp:
;__Lib_MathDouble.c,105 :: 		
;__Lib_MathDouble.c,107 :: 		
0x0416	0xE147    	LDI        R20, 23
;__Lib_MathDouble.c,108 :: 		
0x0418	0x2766    	CLR        R22
;__Lib_MathDouble.c,109 :: 		
0x041A	0x2755    	CLR        R21
;__Lib_MathDouble.c,110 :: 		
0x041C	0xF026    	BRTS       L00FC
;__Lib_MathDouble.c,111 :: 		
0x041E	0x2333    	TST        R19
;__Lib_MathDouble.c,112 :: 		
0x0420	0xF412    	BRPL       L00FC
;__Lib_MathDouble.c,114 :: 		
0x0422	0xDE7A    	RCALL      _float_neg32+0
;__Lib_MathDouble.c,116 :: 		
0x0424	0xE860    	LDI        R22, 128
;__Lib_MathDouble.c,117 :: 		
L00FC:
;__Lib_MathDouble.c,119 :: 		
0x0426	0xDE81    	RCALL      _float_normalize_and_pack+0
;__Lib_MathDouble.c,120 :: 		
L_end_float_long2fp:
0x0428	0x9508    	RET
; end of _float_long2fp
_float_neg32:
;__Lib_MathDouble.c,4 :: 		
;__Lib_MathDouble.c,6 :: 		
0x0118	0x9500    	COM        R16
;__Lib_MathDouble.c,7 :: 		
0x011A	0x9510    	COM        R17
;__Lib_MathDouble.c,8 :: 		
0x011C	0x9520    	COM        R18
;__Lib_MathDouble.c,9 :: 		
0x011E	0x9530    	COM        R19
;__Lib_MathDouble.c,10 :: 		
0x0120	0x5F0F    	SUBI       R16, 255
;__Lib_MathDouble.c,11 :: 		
0x0122	0x4F1F    	SBCI       R17, 255
;__Lib_MathDouble.c,12 :: 		
0x0124	0x4F2F    	SBCI       R18, 255
;__Lib_MathDouble.c,13 :: 		
0x0126	0x4F3F    	SBCI       R19, 255
;__Lib_MathDouble.c,15 :: 		
L_end_float_neg32:
0x0128	0x9508    	RET
; end of _float_neg32
_float_normalize_and_pack:
;__Lib_MathDouble.c,45 :: 		
;__Lib_MathDouble.c,46 :: 		
0x012A	0xDF94    	RCALL      _float_tstr16_r19+0
;__Lib_MathDouble.c,48 :: 		
0x012C	0xF111    	BREQ       L0196
;__Lib_MathDouble.c,49 :: 		
0x012E	0x939F    	PUSH       R25
;__Lib_MathDouble.c,50 :: 		
0x0130	0x938F    	PUSH       R24
;__Lib_MathDouble.c,51 :: 		
0x0132	0xE78E    	LDI        R24, 126
;__Lib_MathDouble.c,52 :: 		
0x0134	0xE090    	LDI        R25, 0
;__Lib_MathDouble.c,53 :: 		
L0178:
;__Lib_MathDouble.c,54 :: 		
0x0136	0x2333    	TST        R19
;__Lib_MathDouble.c,55 :: 		
0x0138	0xF051    	BREQ       L0184
;__Lib_MathDouble.c,56 :: 		
0x013A	0x9536    	LSR        R19
;__Lib_MathDouble.c,57 :: 		
0x013C	0x9527    	ROR        R18
;__Lib_MathDouble.c,58 :: 		
0x013E	0x9517    	ROR        R17
;__Lib_MathDouble.c,59 :: 		
0x0140	0x9507    	ROR        R16
;__Lib_MathDouble.c,60 :: 		
0x0142	0x1748    	CP         R20, R24
;__Lib_MathDouble.c,61 :: 		
0x0144	0x0759    	CPC        R21, R25
;__Lib_MathDouble.c,62 :: 		
0x0146	0xF4B4    	BRGE       L0197
;__Lib_MathDouble.c,63 :: 		
0x0148	0x5F4F    	SUBI       R20, 255
;__Lib_MathDouble.c,64 :: 		
0x014A	0x4F5F    	SBCI       R21, 255
;__Lib_MathDouble.c,65 :: 		
0x014C	0xCFF4    	RJMP       L0178
;__Lib_MathDouble.c,66 :: 		
L0184:
;__Lib_MathDouble.c,67 :: 		
0x014E	0x9580    	COM        R24
;__Lib_MathDouble.c,68 :: 		
0x0150	0x9590    	COM        R25
;__Lib_MathDouble.c,69 :: 		
0x0152	0x9601    	ADIW       R24, 1
;__Lib_MathDouble.c,70 :: 		
L0187:
;__Lib_MathDouble.c,71 :: 		
0x0154	0x2322    	TST        R18
;__Lib_MathDouble.c,72 :: 		
0x0156	0xF09A    	BRMI       L019C
;__Lib_MathDouble.c,73 :: 		
0x0158	0x0F00    	LSL        R16
;__Lib_MathDouble.c,74 :: 		
0x015A	0x1F11    	ROL        R17
;__Lib_MathDouble.c,75 :: 		
0x015C	0x1F22    	ROL        R18
;__Lib_MathDouble.c,76 :: 		
0x015E	0x1748    	CP         R20, R24
;__Lib_MathDouble.c,77 :: 		
0x0160	0x0759    	CPC        R21, R25
;__Lib_MathDouble.c,78 :: 		
0x0162	0xF01C    	BRLT       L0192
;__Lib_MathDouble.c,79 :: 		
0x0164	0x5041    	SUBI       R20, 1
;__Lib_MathDouble.c,80 :: 		
0x0166	0x4050    	SBCI       R21, 0
;__Lib_MathDouble.c,81 :: 		
0x0168	0xCFF5    	RJMP       L0187
;__Lib_MathDouble.c,82 :: 		
L0192:
;__Lib_MathDouble.c,83 :: 		
0x016A	0x2700    	CLR        R16
;__Lib_MathDouble.c,84 :: 		
0x016C	0x2711    	CLR        R17
;__Lib_MathDouble.c,85 :: 		
0x016E	0x2722    	CLR        R18
;__Lib_MathDouble.c,86 :: 		
0x0170	0x2733    	CLR        R19
;__Lib_MathDouble.c,87 :: 		
L0196:
;__Lib_MathDouble.c,88 :: 		
0x0172	0xC008    	RJMP       L0196x
;__Lib_MathDouble.c,89 :: 		
L0197:
;__Lib_MathDouble.c,90 :: 		
0x0174	0x2733    	CLR        R19
;__Lib_MathDouble.c,91 :: 		
0x0176	0xEF0F    	LDI        R16, 255
;__Lib_MathDouble.c,92 :: 		
0x0178	0x2F10    	MOV        R17, R16
;__Lib_MathDouble.c,93 :: 		
0x017A	0xE72F    	LDI        R18, 127
;__Lib_MathDouble.c,94 :: 		
0x017C	0x2F32    	MOV        R19, R18
;__Lib_MathDouble.c,95 :: 		
L019C:
;__Lib_MathDouble.c,96 :: 		
0x017E	0x918F    	POP        R24
;__Lib_MathDouble.c,97 :: 		
0x0180	0x919F    	POP        R25
;__Lib_MathDouble.c,99 :: 		
0x0182	0xDF77    	RCALL      _float_pack+0
;__Lib_MathDouble.c,101 :: 		
L0196x:
;__Lib_MathDouble.c,103 :: 		
L_end_float_normalize_and_pack:
0x0184	0x9508    	RET
; end of _float_normalize_and_pack
_float_tstr16_r19:
;__Lib_MathDouble.c,17 :: 		
;__Lib_MathDouble.c,19 :: 		
0x0054	0x2300    	TST        R16
;__Lib_MathDouble.c,20 :: 		
0x0056	0xF429    	BRNE       L015C
;__Lib_MathDouble.c,21 :: 		
0x0058	0x2311    	TST        R17
;__Lib_MathDouble.c,22 :: 		
0x005A	0xF419    	BRNE       L015C
;__Lib_MathDouble.c,23 :: 		
0x005C	0x2322    	TST        R18
;__Lib_MathDouble.c,24 :: 		
0x005E	0xF409    	BRNE       L015C
;__Lib_MathDouble.c,25 :: 		
0x0060	0x2333    	TST        R19
;__Lib_MathDouble.c,26 :: 		
L015C:
;__Lib_MathDouble.c,28 :: 		
L_end_float_tstr16_r19:
0x0062	0x9508    	RET
; end of _float_tstr16_r19
_float_pack:
;__Lib_MathDouble.c,30 :: 		
;__Lib_MathDouble.c,31 :: 		
0x0072	0xDFF0    	RCALL      _float_tstr16_r19+0
;__Lib_MathDouble.c,33 :: 		
0x0074	0xF039    	BREQ       L01A7
;__Lib_MathDouble.c,34 :: 		
0x0076	0x5841    	SUBI       R20, 129
;__Lib_MathDouble.c,35 :: 		
0x0078	0x4F5F    	SBCI       R21, 255
;__Lib_MathDouble.c,36 :: 		
0x007A	0x2F34    	MOV        R19, R20
;__Lib_MathDouble.c,37 :: 		
0x007C	0x0F22    	LSL        R18
;__Lib_MathDouble.c,38 :: 		
0x007E	0x9536    	LSR        R19
;__Lib_MathDouble.c,39 :: 		
0x0080	0x9527    	ROR        R18
;__Lib_MathDouble.c,40 :: 		
0x0082	0x2B36    	OR         R19, R22
;__Lib_MathDouble.c,41 :: 		
L01A7:
;__Lib_MathDouble.c,43 :: 		
L_end_float_pack:
0x0084	0x9508    	RET
; end of _float_pack
_float_fpmul1:
;__Lib_MathDouble.c,483 :: 		
;__Lib_MathDouble.c,485 :: 		
0x073C	0x2E04    	MOV        R0, R20
;__Lib_MathDouble.c,486 :: 		
0x073E	0x2E15    	MOV        R1, R21
;__Lib_MathDouble.c,487 :: 		
0x0740	0x2E26    	MOV        R2, R22
;__Lib_MathDouble.c,488 :: 		
0x0742	0x2E37    	MOV        R3, R23
;__Lib_MathDouble.c,490 :: 		
0x0744	0xDE7F    	RCALL      _float_fpmul+0
;__Lib_MathDouble.c,492 :: 		
0x0746	0x2E00    	MOV        R0, R16
;__Lib_MathDouble.c,493 :: 		
0x0748	0x2E11    	MOV        R1, R17
;__Lib_MathDouble.c,494 :: 		
0x074A	0x2E22    	MOV        R2, R18
;__Lib_MathDouble.c,495 :: 		
0x074C	0x2E33    	MOV        R3, R19
;__Lib_MathDouble.c,497 :: 		
L_end_float_fpmul1:
0x074E	0x9508    	RET
; end of _float_fpmul1
_float_fpmul:
;__Lib_MathDouble.c,407 :: 		
;__Lib_MathDouble.c,408 :: 		
0x0444	0xDF47    	RCALL      _float_unpacku+0
;__Lib_MathDouble.c,410 :: 		
0x0446	0xF181    	BREQ       L0097
;__Lib_MathDouble.c,411 :: 		
0x0448	0x2EE6    	MOV        R14, R22
;__Lib_MathDouble.c,412 :: 		
0x044A	0x2ED5    	MOV        R13, R21
;__Lib_MathDouble.c,413 :: 		
0x044C	0x2EC4    	MOV        R12, R20
;__Lib_MathDouble.c,414 :: 		
0x044E	0x2EB3    	MOV        R11, R19
;__Lib_MathDouble.c,415 :: 		
0x0450	0x2EA2    	MOV        R10, R18
;__Lib_MathDouble.c,416 :: 		
0x0452	0x2E91    	MOV        R9, R17
;__Lib_MathDouble.c,417 :: 		
0x0454	0x2E80    	MOV        R8, R16
;__Lib_MathDouble.c,418 :: 		
0x0456	0x2D00    	MOV        R16, R0
;__Lib_MathDouble.c,419 :: 		
0x0458	0x2D11    	MOV        R17, R1
;__Lib_MathDouble.c,420 :: 		
0x045A	0x2D22    	MOV        R18, R2
;__Lib_MathDouble.c,421 :: 		
0x045C	0x2D33    	MOV        R19, R3
;__Lib_MathDouble.c,423 :: 		
0x045E	0xDF3A    	RCALL      _float_unpacku+0
;__Lib_MathDouble.c,425 :: 		
0x0460	0xF119    	BREQ       L0097
;__Lib_MathDouble.c,426 :: 		
0x0462	0x256E    	EOR        R22, R14
;__Lib_MathDouble.c,427 :: 		
0x0464	0x0D4C    	ADD        R20, R12
;__Lib_MathDouble.c,428 :: 		
0x0466	0x1D5D    	ADC        R21, R13
;__Lib_MathDouble.c,429 :: 		
0x0468	0x3840    	CPI        R20, 128
;__Lib_MathDouble.c,430 :: 		
0x046A	0x0753    	CPC        R21, R19
;__Lib_MathDouble.c,431 :: 		
0x046C	0xF4F4    	BRGE       L009B
;__Lib_MathDouble.c,432 :: 		
0x046E	0x3841    	CPI        R20, 129
;__Lib_MathDouble.c,433 :: 		
0x0470	0xEF7F    	LDI        R23, 255
;__Lib_MathDouble.c,434 :: 		
0x0472	0x0757    	CPC        R21, R23
;__Lib_MathDouble.c,435 :: 		
0x0474	0xF0FC    	BRLT       L00A0mul
;__Lib_MathDouble.c,436 :: 		
0x0476	0x2788    	CLR        R24
;__Lib_MathDouble.c,437 :: 		
0x0478	0x2799    	CLR        R25
;__Lib_MathDouble.c,438 :: 		
0x047A	0x27AA    	CLR        R26
;__Lib_MathDouble.c,439 :: 		
0x047C	0x27BB    	CLR        R27
;__Lib_MathDouble.c,440 :: 		
0x047E	0xE270    	LDI        R23, 32
;__Lib_MathDouble.c,441 :: 		
L0083:
;__Lib_MathDouble.c,442 :: 		
0x0480	0x95B6    	LSR        R27
;__Lib_MathDouble.c,443 :: 		
0x0482	0x95A7    	ROR        R26
;__Lib_MathDouble.c,444 :: 		
0x0484	0x9597    	ROR        R25
;__Lib_MathDouble.c,445 :: 		
0x0486	0x9587    	ROR        R24
;__Lib_MathDouble.c,446 :: 		
0x0488	0x9537    	ROR        R19
;__Lib_MathDouble.c,447 :: 		
0x048A	0x9527    	ROR        R18
;__Lib_MathDouble.c,448 :: 		
0x048C	0x9517    	ROR        R17
;__Lib_MathDouble.c,449 :: 		
0x048E	0x9507    	ROR        R16
;__Lib_MathDouble.c,450 :: 		
0x0490	0xF420    	BRCC       L0090
;__Lib_MathDouble.c,451 :: 		
0x0492	0x0D88    	ADD        R24, R8
;__Lib_MathDouble.c,452 :: 		
0x0494	0x1D99    	ADC        R25, R9
;__Lib_MathDouble.c,453 :: 		
0x0496	0x1DAA    	ADC        R26, R10
;__Lib_MathDouble.c,454 :: 		
0x0498	0x1DBB    	ADC        R27, R11
;__Lib_MathDouble.c,455 :: 		
L0090:
;__Lib_MathDouble.c,456 :: 		
0x049A	0x957A    	DEC        R23
;__Lib_MathDouble.c,457 :: 		
0x049C	0xF789    	BRNE       L0083
;__Lib_MathDouble.c,458 :: 		
0x049E	0x2F03    	MOV        R16, R19
;__Lib_MathDouble.c,459 :: 		
0x04A0	0x2F3A    	MOV        R19, R26
;__Lib_MathDouble.c,460 :: 		
0x04A2	0x2F29    	MOV        R18, R25
;__Lib_MathDouble.c,461 :: 		
0x04A4	0x2F18    	MOV        R17, R24
;__Lib_MathDouble.c,463 :: 		
0x04A6	0xDE41    	RCALL      _float_normalize_and_pack+0
;__Lib_MathDouble.c,465 :: 		
L0097:
;__Lib_MathDouble.c,466 :: 		
0x04A8	0xC00A    	RJMP       L00A0x
;__Lib_MathDouble.c,467 :: 		
L009B:
;__Lib_MathDouble.c,468 :: 		
0x04AA	0xEF0F    	LDI        R16, 255
;__Lib_MathDouble.c,469 :: 		
0x04AC	0x2F10    	MOV        R17, R16
;__Lib_MathDouble.c,470 :: 		
0x04AE	0xE72F    	LDI        R18, 127
;__Lib_MathDouble.c,471 :: 		
0x04B0	0xE73F    	LDI        R19, 127
;__Lib_MathDouble.c,472 :: 		
0x04B2	0xCFFA    	RJMP       L0097
;__Lib_MathDouble.c,473 :: 		
L00A0mul:
;__Lib_MathDouble.c,474 :: 		
0x04B4	0x2700    	CLR        R16
;__Lib_MathDouble.c,475 :: 		
0x04B6	0x2F10    	MOV        R17, R16
;__Lib_MathDouble.c,476 :: 		
0x04B8	0x2F20    	MOV        R18, R16
;__Lib_MathDouble.c,477 :: 		
0x04BA	0x2F30    	MOV        R19, R16
;__Lib_MathDouble.c,478 :: 		
0x04BC	0xCFF5    	RJMP       L0097
;__Lib_MathDouble.c,479 :: 		
L00A0x:
;__Lib_MathDouble.c,481 :: 		
L_end_float_fpmul:
0x04BE	0x9508    	RET
; end of _float_fpmul
_float_unpacku:
;__Lib_MathDouble.c,148 :: 		
;__Lib_MathDouble.c,149 :: 		
0x02D4	0xDEBF    	RCALL      _float_tstr16_r19+0
;__Lib_MathDouble.c,151 :: 		
0x02D6	0xF079    	BREQ       L016E
;__Lib_MathDouble.c,152 :: 		
0x02D8	0x2F63    	MOV        R22, R19
;__Lib_MathDouble.c,153 :: 		
0x02DA	0x7860    	ANDI       R22, 128
;__Lib_MathDouble.c,154 :: 		
0x02DC	0x0F22    	LSL        R18
;__Lib_MathDouble.c,155 :: 		
0x02DE	0x1F33    	ROL        R19
;__Lib_MathDouble.c,156 :: 		
0x02E0	0x2F43    	MOV        R20, R19
;__Lib_MathDouble.c,157 :: 		
0x02E2	0xE75F    	LDI        R21, 127
;__Lib_MathDouble.c,158 :: 		
0x02E4	0x1B45    	SUB        R20, R21
;__Lib_MathDouble.c,159 :: 		
0x02E6	0x2755    	CLR        R21
;__Lib_MathDouble.c,160 :: 		
0x02E8	0x4050    	SBCI       R21, 0
;__Lib_MathDouble.c,161 :: 		
0x02EA	0x9526    	LSR        R18
;__Lib_MathDouble.c,162 :: 		
0x02EC	0xE830    	LDI        R19, 128
;__Lib_MathDouble.c,163 :: 		
0x02EE	0x2B23    	OR         R18, R19
;__Lib_MathDouble.c,164 :: 		
0x02F0	0x2733    	CLR        R19
;__Lib_MathDouble.c,165 :: 		
0x02F2	0x9498    	CLZ
;__Lib_MathDouble.c,166 :: 		
0x02F4	0xC003    	RJMP       L016Ex
;__Lib_MathDouble.c,167 :: 		
L016E:
;__Lib_MathDouble.c,168 :: 		
0x02F6	0x2744    	CLR        R20
;__Lib_MathDouble.c,169 :: 		
0x02F8	0x2755    	CLR        R21
;__Lib_MathDouble.c,170 :: 		
0x02FA	0x2766    	CLR        R22
;__Lib_MathDouble.c,171 :: 		
L016Ex:
;__Lib_MathDouble.c,173 :: 		
L_end_float_unpacku:
0x02FC	0x9508    	RET
; end of _float_unpacku
_float_fpadd1:
;__Lib_MathDouble.c,368 :: 		
;__Lib_MathDouble.c,370 :: 		
0x08AE	0x2E04    	MOV        R0, R20
;__Lib_MathDouble.c,371 :: 		
0x08B0	0x2E15    	MOV        R1, R21
;__Lib_MathDouble.c,372 :: 		
0x08B2	0x2E26    	MOV        R2, R22
;__Lib_MathDouble.c,373 :: 		
0x08B4	0x2E37    	MOV        R3, R23
;__Lib_MathDouble.c,375 :: 		
0x08B6	0xDDC3    	RCALL      _float_fpadd+0
;__Lib_MathDouble.c,377 :: 		
0x08B8	0x2E00    	MOV        R0, R16
;__Lib_MathDouble.c,378 :: 		
0x08BA	0x2E11    	MOV        R1, R17
;__Lib_MathDouble.c,379 :: 		
0x08BC	0x2E22    	MOV        R2, R18
;__Lib_MathDouble.c,380 :: 		
0x08BE	0x2E33    	MOV        R3, R19
;__Lib_MathDouble.c,382 :: 		
L_end_float_fpadd1:
0x08C0	0x9508    	RET
; end of _float_fpadd1
_float_fpadd:
;__Lib_MathDouble.c,361 :: 		
;__Lib_MathDouble.c,363 :: 		
0x043E	0x94E8    	CLT
;__Lib_MathDouble.c,365 :: 		
0x0440	0xDEDE    	RCALL      _float_fpadd_alt+0
;__Lib_MathDouble.c,366 :: 		
L_end_float_fpadd:
0x0442	0x9508    	RET
; end of _float_fpadd
_float_fpadd_alt:
;__Lib_MathDouble.c,240 :: 		
;__Lib_MathDouble.c,241 :: 		
0x01FE	0xDF32    	RCALL      _float_unpacks+0
;__Lib_MathDouble.c,243 :: 		
0x0200	0xF409    	BRNE       L008A
;__Lib_MathDouble.c,244 :: 		
0x0202	0xC041    	RJMP       L00CC
;__Lib_MathDouble.c,245 :: 		
L008A:
;__Lib_MathDouble.c,246 :: 		
0x0204	0x2EE6    	MOV        R14, R22
;__Lib_MathDouble.c,247 :: 		
0x0206	0x2ED5    	MOV        R13, R21
;__Lib_MathDouble.c,248 :: 		
0x0208	0x2EC4    	MOV        R12, R20
;__Lib_MathDouble.c,249 :: 		
0x020A	0x2EB3    	MOV        R11, R19
;__Lib_MathDouble.c,250 :: 		
0x020C	0x2EA2    	MOV        R10, R18
;__Lib_MathDouble.c,251 :: 		
0x020E	0x2E91    	MOV        R9, R17
;__Lib_MathDouble.c,252 :: 		
0x0210	0x2E80    	MOV        R8, R16
;__Lib_MathDouble.c,253 :: 		
0x0212	0x2D00    	MOV        R16, R0
;__Lib_MathDouble.c,254 :: 		
0x0214	0x2D11    	MOV        R17, R1
;__Lib_MathDouble.c,255 :: 		
0x0216	0x2D22    	MOV        R18, R2
;__Lib_MathDouble.c,256 :: 		
0x0218	0x2D33    	MOV        R19, R3
;__Lib_MathDouble.c,258 :: 		
0x021A	0xDF24    	RCALL      _float_unpacks+0
;__Lib_MathDouble.c,260 :: 		
0x021C	0xF409    	BRNE       L0098
;__Lib_MathDouble.c,261 :: 		
0x021E	0xC03D    	RJMP       L00D6
;__Lib_MathDouble.c,262 :: 		
L0098:
;__Lib_MathDouble.c,263 :: 		
0x0220	0x2F84    	MOV        R24, R20
;__Lib_MathDouble.c,264 :: 		
0x0222	0x2F95    	MOV        R25, R21
;__Lib_MathDouble.c,265 :: 		
0x0224	0x198C    	SUB        R24, R12
;__Lib_MathDouble.c,266 :: 		
0x0226	0x099D    	SBC        R25, R13
;__Lib_MathDouble.c,267 :: 		
0x0228	0xF0B9    	BREQ       L00B4
;__Lib_MathDouble.c,268 :: 		
0x022A	0xF472    	BRPL       L00AC
;__Lib_MathDouble.c,269 :: 		
0x022C	0x9590    	COM        R25
;__Lib_MathDouble.c,270 :: 		
0x022E	0x9580    	COM        R24
;__Lib_MathDouble.c,271 :: 		
0x0230	0x9601    	ADIW       R24, 1
;__Lib_MathDouble.c,272 :: 		
0x0232	0x2D4C    	MOV        R20, R12
;__Lib_MathDouble.c,273 :: 		
0x0234	0x2D5D    	MOV        R21, R13
;__Lib_MathDouble.c,274 :: 		
0x0236	0x3188    	CPI        R24, 24
;__Lib_MathDouble.c,275 :: 		
0x0238	0xF580    	BRCC       L00D6
;__Lib_MathDouble.c,276 :: 		
L00A5:
;__Lib_MathDouble.c,277 :: 		
0x023A	0x9535    	ASR        R19
;__Lib_MathDouble.c,278 :: 		
0x023C	0x9527    	ROR        R18
;__Lib_MathDouble.c,279 :: 		
0x023E	0x9517    	ROR        R17
;__Lib_MathDouble.c,280 :: 		
0x0240	0x9507    	ROR        R16
;__Lib_MathDouble.c,281 :: 		
0x0242	0x9701    	SBIW       R24, 1
;__Lib_MathDouble.c,282 :: 		
0x0244	0xF7D1    	BRNE       L00A5
;__Lib_MathDouble.c,283 :: 		
0x0246	0xC008    	RJMP       L00B4
;__Lib_MathDouble.c,284 :: 		
L00AC:
;__Lib_MathDouble.c,285 :: 		
0x0248	0x3188    	CPI        R24, 24
;__Lib_MathDouble.c,286 :: 		
0x024A	0xF4E8    	BRCC       L00CC
;__Lib_MathDouble.c,287 :: 		
L00AE:
;__Lib_MathDouble.c,288 :: 		
0x024C	0x94B5    	ASR        R11
;__Lib_MathDouble.c,289 :: 		
0x024E	0x94A7    	ROR        R10
;__Lib_MathDouble.c,290 :: 		
0x0250	0x9497    	ROR        R9
;__Lib_MathDouble.c,291 :: 		
0x0252	0x9487    	ROR        R8
;__Lib_MathDouble.c,292 :: 		
0x0254	0x9701    	SBIW       R24, 1
;__Lib_MathDouble.c,293 :: 		
0x0256	0xF7D1    	BRNE       L00AE
;__Lib_MathDouble.c,294 :: 		
L00B4:
;__Lib_MathDouble.c,295 :: 		
0x0258	0x2766    	CLR        R22
;__Lib_MathDouble.c,296 :: 		
0x025A	0xF02E    	BRTS       L00BB
;__Lib_MathDouble.c,297 :: 		
0x025C	0x0D08    	ADD        R16, R8
;__Lib_MathDouble.c,298 :: 		
0x025E	0x1D19    	ADC        R17, R9
;__Lib_MathDouble.c,299 :: 		
0x0260	0x1D2A    	ADC        R18, R10
;__Lib_MathDouble.c,300 :: 		
0x0262	0x1D3B    	ADC        R19, R11
;__Lib_MathDouble.c,301 :: 		
0x0264	0xC009    	RJMP       L00C4
;__Lib_MathDouble.c,302 :: 		
L00BB:
;__Lib_MathDouble.c,303 :: 		
0x0266	0x1A80    	SUB        R8, R16
;__Lib_MathDouble.c,304 :: 		
0x0268	0x0A91    	SBC        R9, R17
;__Lib_MathDouble.c,305 :: 		
0x026A	0x0AA2    	SBC        R10, R18
;__Lib_MathDouble.c,306 :: 		
0x026C	0x0AB3    	SBC        R11, R19
;__Lib_MathDouble.c,307 :: 		
0x026E	0x2D08    	MOV        R16, R8
;__Lib_MathDouble.c,308 :: 		
0x0270	0x2D19    	MOV        R17, R9
;__Lib_MathDouble.c,309 :: 		
0x0272	0x2D2A    	MOV        R18, R10
;__Lib_MathDouble.c,310 :: 		
0x0274	0x2D3B    	MOV        R19, R11
;__Lib_MathDouble.c,311 :: 		
0x0276	0x2333    	TST        R19
;__Lib_MathDouble.c,312 :: 		
L00C4:
;__Lib_MathDouble.c,313 :: 		
0x0278	0xF412    	BRPL       L00C7
;__Lib_MathDouble.c,315 :: 		
0x027A	0xDF4E    	RCALL      _float_neg32+0
;__Lib_MathDouble.c,317 :: 		
0x027C	0xE860    	LDI        R22, 128
;__Lib_MathDouble.c,318 :: 		
L00C7:
;__Lib_MathDouble.c,320 :: 		
0x027E	0xDF55    	RCALL      _float_normalize_and_pack+0
;__Lib_MathDouble.c,322 :: 		
0x0280	0xC001    	RJMP       L00CA
;__Lib_MathDouble.c,323 :: 		
L00C9:
;__Lib_MathDouble.c,325 :: 		
0x0282	0xDEF7    	RCALL      _float_pack+0
;__Lib_MathDouble.c,327 :: 		
L00CA:
;__Lib_MathDouble.c,328 :: 		
0x0284	0xC016    	RJMP       L00D6x
;__Lib_MathDouble.c,329 :: 		
L00CC:
;__Lib_MathDouble.c,330 :: 		
0x0286	0x2D00    	MOV        R16, R0
;__Lib_MathDouble.c,331 :: 		
0x0288	0x2D11    	MOV        R17, R1
;__Lib_MathDouble.c,332 :: 		
0x028A	0x2D22    	MOV        R18, R2
;__Lib_MathDouble.c,333 :: 		
0x028C	0x2D33    	MOV        R19, R3
;__Lib_MathDouble.c,334 :: 		
0x028E	0xF7D6    	BRTC       L00CA
;__Lib_MathDouble.c,336 :: 		
0x0290	0xDEE1    	RCALL      _float_tstr16_r19+0
;__Lib_MathDouble.c,338 :: 		
0x0292	0xF3C1    	BREQ       L00CA
;__Lib_MathDouble.c,339 :: 		
0x0294	0xE840    	LDI        R20, 128
;__Lib_MathDouble.c,340 :: 		
0x0296	0x2734    	EOR        R19, R20
;__Lib_MathDouble.c,341 :: 		
0x0298	0xCFF5    	RJMP       L00CA
;__Lib_MathDouble.c,342 :: 		
L00D6:
;__Lib_MathDouble.c,343 :: 		
0x029A	0x2D08    	MOV        R16, R8
;__Lib_MathDouble.c,344 :: 		
0x029C	0x2D19    	MOV        R17, R9
;__Lib_MathDouble.c,345 :: 		
0x029E	0x2D2A    	MOV        R18, R10
;__Lib_MathDouble.c,346 :: 		
0x02A0	0x2D3B    	MOV        R19, R11
;__Lib_MathDouble.c,347 :: 		
0x02A2	0x2D4C    	MOV        R20, R12
;__Lib_MathDouble.c,348 :: 		
0x02A4	0x2D5D    	MOV        R21, R13
;__Lib_MathDouble.c,349 :: 		
0x02A6	0x2D6E    	MOV        R22, R14
;__Lib_MathDouble.c,350 :: 		
0x02A8	0x2333    	TST        R19
;__Lib_MathDouble.c,351 :: 		
0x02AA	0xF75A    	BRPL       L00C9
;__Lib_MathDouble.c,353 :: 		
0x02AC	0xDF35    	RCALL      _float_neg32+0
;__Lib_MathDouble.c,355 :: 		
0x02AE	0xE860    	LDI        R22, 128
;__Lib_MathDouble.c,356 :: 		
0x02B0	0xCFE8    	RJMP       L00C9
;__Lib_MathDouble.c,357 :: 		
L00D6x:
;__Lib_MathDouble.c,359 :: 		
L_end_float_fpadd_alt:
0x02B2	0x9508    	RET
; end of _float_fpadd_alt
_float_unpacks:
;__Lib_MathDouble.c,175 :: 		
;__Lib_MathDouble.c,176 :: 		
0x0064	0xD137    	RCALL      _float_unpacku+0
;__Lib_MathDouble.c,178 :: 		
0x0066	0xF021    	BREQ       L0154
;__Lib_MathDouble.c,179 :: 		
0x0068	0x2366    	TST        R22
;__Lib_MathDouble.c,180 :: 		
0x006A	0xF009    	BREQ       L0153
;__Lib_MathDouble.c,182 :: 		
0x006C	0xD055    	RCALL      _float_neg32+0
;__Lib_MathDouble.c,184 :: 		
L0153:
;__Lib_MathDouble.c,185 :: 		
0x006E	0x9498    	CLZ
;__Lib_MathDouble.c,186 :: 		
L0154:
;__Lib_MathDouble.c,188 :: 		
L_end_float_unpacks:
0x0070	0x9508    	RET
; end of _float_unpacks
_fm_getChannel:
0x149E	0x93CF    	PUSH       R28
0x14A0	0x93DF    	PUSH       R29
0x14A2	0xB7CD    	IN         R28, SPL+0
0x14A4	0xB7DE    	IN         R29, SPL+1
0x14A6	0x97A0    	SBIW       R28, 32
0x14A8	0xBFCD    	OUT        SPL+0, R28
0x14AA	0xBFDE    	OUT        SPL+1, R29
0x14AC	0x9621    	ADIW       R28, 1
;__fm_Driver.c,623 :: 		uint16_t fm_getChannel( void )
;__fm_Driver.c,628 :: 		fm_readRegisters( regBuffer );
0x14AE	0x922F    	PUSH       R2
0x14B0	0x923F    	PUSH       R3
0x14B2	0x018E    	MOVW       R16, R28
0x14B4	0x0118    	MOVW       R2, R16
0x14B6	0xD667    	RCALL      _fm_readRegisters+0
;__fm_Driver.c,630 :: 		channel_ = regBuffer[_FM_READ_CHANNEL];
0x14B8	0x018E    	MOVW       R16, R28
0x14BA	0x01F8    	MOVW       R30, R16
0x14BC	0x9672    	ADIW       R30, 18
0x14BE	0x9101    	LD         R16, Z+
0x14C0	0x9111    	LD         R17, Z+
;__fm_Driver.c,632 :: 		channel_ &= 0x03FF;
0x14C2	0x7013    	ANDI       R17, 3
;__fm_Driver.c,634 :: 		return channel_;
;__fm_Driver.c,635 :: 		}
;__fm_Driver.c,634 :: 		return channel_;
;__fm_Driver.c,635 :: 		}
L_end_fm_getChannel:
0x14C4	0x903F    	POP        R3
0x14C6	0x902F    	POP        R2
0x14C8	0x966F    	ADIW       R28, 31
0x14CA	0xBFCD    	OUT        SPL+0, R28
0x14CC	0xBFDE    	OUT        SPL+1, R29
0x14CE	0x91DF    	POP        R29
0x14D0	0x91CF    	POP        R28
0x14D2	0x9508    	RET
; end of _fm_getChannel
_WordToStr:
0x1416	0x93CF    	PUSH       R28
0x1418	0x93DF    	PUSH       R29
0x141A	0xB7CD    	IN         R28, SPL+0
0x141C	0xB7DE    	IN         R29, SPL+1
0x141E	0x9722    	SBIW       R28, 2
0x1420	0xBFCD    	OUT        SPL+0, R28
0x1422	0xBFDE    	OUT        SPL+1, R29
0x1424	0x9621    	ADIW       R28, 1
;__Lib_Conversions.c,84 :: 		
;__Lib_Conversions.c,89 :: 		
; len start address is: 17 (R17)
0x1426	0xE010    	LDI        R17, 0
; len end address is: 17 (R17)
L_WordToStr6:
; len start address is: 17 (R17)
0x1428	0x3015    	CPI        R17, 5
0x142A	0xF450    	BRSH       L_WordToStr7
L__WordToStr121:
;__Lib_Conversions.c,90 :: 		
0x142C	0x2FE1    	MOV        R30, R17
0x142E	0xE0F0    	LDI        R31, 0
0x1430	0x0DE4    	ADD        R30, R4
0x1432	0x1DF5    	ADC        R31, R5
0x1434	0xE2B0    	LDI        R27, 32
0x1436	0x83B0    	ST         Z, R27
;__Lib_Conversions.c,89 :: 		
0x1438	0x2F01    	MOV        R16, R17
0x143A	0x5F0F    	SUBI       R16, 255
0x143C	0x2F10    	MOV        R17, R16
;__Lib_Conversions.c,90 :: 		
0x143E	0xCFF4    	RJMP       L_WordToStr6
L_WordToStr7:
;__Lib_Conversions.c,91 :: 		
0x1440	0x2FE1    	MOV        R30, R17
0x1442	0xE0F0    	LDI        R31, 0
0x1444	0x0DE4    	ADD        R30, R4
0x1446	0x1DF5    	ADC        R31, R5
0x1448	0xE0B0    	LDI        R27, 0
0x144A	0x83B0    	ST         Z, R27
0x144C	0x2F01    	MOV        R16, R17
0x144E	0x5001    	SUBI       R16, 1
; len end address is: 17 (R17)
; len start address is: 19 (R19)
0x1450	0x2F30    	MOV        R19, R16
; len end address is: 19 (R19)
;__Lib_Conversions.c,93 :: 		
L_WordToStr9:
;__Lib_Conversions.c,94 :: 		
; len start address is: 19 (R19)
0x1452	0x2F03    	MOV        R16, R19
0x1454	0xE010    	LDI        R17, 0
0x1456	0x0D04    	ADD        R16, R4
0x1458	0x1D15    	ADC        R17, R5
0x145A	0x8308    	STD        Y+0, R16
0x145C	0x8319    	STD        Y+1, R17
0x145E	0xE04A    	LDI        R20, 10
0x1460	0xE050    	LDI        R21, 0
0x1462	0x0181    	MOVW       R16, R2
0x1464	0xDA2E    	RCALL      _Div_16x16_U+0
0x1466	0x018D    	MOVW       R16, R26
0x1468	0x2F20    	MOV        R18, R16
0x146A	0x5D20    	SUBI       R18, 208
0x146C	0x8108    	LDD        R16, Y+0
0x146E	0x8119    	LDD        R17, Y+1
0x1470	0x01F8    	MOVW       R30, R16
0x1472	0x8320    	ST         Z, R18
;__Lib_Conversions.c,95 :: 		
0x1474	0xE04A    	LDI        R20, 10
0x1476	0xE050    	LDI        R21, 0
0x1478	0x0181    	MOVW       R16, R2
0x147A	0xDA23    	RCALL      _Div_16x16_U+0
0x147C	0x018C    	MOVW       R16, R24
0x147E	0x0118    	MOVW       R2, R16
;__Lib_Conversions.c,96 :: 		
0x1480	0x3010    	CPI        R17, 0
0x1482	0xF409    	BRNE       L__WordToStr122
0x1484	0x3000    	CPI        R16, 0
L__WordToStr122:
0x1486	0xF409    	BRNE       L_WordToStr11
L__WordToStr123:
; len end address is: 19 (R19)
;__Lib_Conversions.c,97 :: 		
0x1488	0xC004    	RJMP       L_WordToStr10
L_WordToStr11:
;__Lib_Conversions.c,98 :: 		
; len start address is: 19 (R19)
0x148A	0x2F03    	MOV        R16, R19
0x148C	0x5001    	SUBI       R16, 1
0x148E	0x2F30    	MOV        R19, R16
;__Lib_Conversions.c,99 :: 		
; len end address is: 19 (R19)
0x1490	0xCFE0    	RJMP       L_WordToStr9
L_WordToStr10:
;__Lib_Conversions.c,100 :: 		
L_end_WordToStr:
0x1492	0x9621    	ADIW       R28, 1
0x1494	0xBFCD    	OUT        SPL+0, R28
0x1496	0xBFDE    	OUT        SPL+1, R29
0x1498	0x91DF    	POP        R29
0x149A	0x91CF    	POP        R28
0x149C	0x9508    	RET
; end of _WordToStr
_Div_16x16_U:
;__Lib_Math.c,208 :: 		
;__Lib_Math.c,211 :: 		
0x08C2	0x01C8    	MOVW       R24, R16
;__Lib_Math.c,212 :: 		
0x08C4	0x01BA    	MOVW       R22, R20
;__Lib_Math.c,214 :: 		
0x08C6	0x1BAA    	SUB        R26, R26
;__Lib_Math.c,215 :: 		
0x08C8	0x1BBB    	SUB        R27, R27
;__Lib_Math.c,216 :: 		
0x08CA	0xE151    	LDI        R21, 17
;__Lib_Math.c,217 :: 		
0x08CC	0xC007    	RJMP       Div_16x16_U_L2
;__Lib_Math.c,218 :: 		
Div_16x16_U_L1:
;__Lib_Math.c,219 :: 		
0x08CE	0x1FAA    	ROL        R26
;__Lib_Math.c,220 :: 		
0x08D0	0x1FBB    	ROL        R27
;__Lib_Math.c,221 :: 		
0x08D2	0x17A6    	CP         R26, R22
;__Lib_Math.c,222 :: 		
0x08D4	0x07B7    	CPC        R27, R23
;__Lib_Math.c,223 :: 		
0x08D6	0xF010    	BRCS       Div_16x16_U_L2
;__Lib_Math.c,224 :: 		
0x08D8	0x1BA6    	SUB        R26, R22
;__Lib_Math.c,225 :: 		
0x08DA	0x0BB7    	SBC        R27, R23
;__Lib_Math.c,226 :: 		
Div_16x16_U_L2:
;__Lib_Math.c,227 :: 		
0x08DC	0x1F88    	ROL        R24
;__Lib_Math.c,228 :: 		
0x08DE	0x1F99    	ROL        R25
;__Lib_Math.c,229 :: 		
0x08E0	0x955A    	DEC        R21
;__Lib_Math.c,230 :: 		
0x08E2	0xF7A9    	BRNE       Div_16x16_U_L1
;__Lib_Math.c,231 :: 		
0x08E4	0x9580    	COM        R24
;__Lib_Math.c,232 :: 		
0x08E6	0x9590    	COM        R25
;__Lib_Math.c,235 :: 		
L_end_Div_16x16_U:
0x08E8	0x9508    	RET
; end of _Div_16x16_U
_FloatToStr:
0x186C	0x93CF    	PUSH       R28
0x186E	0x93DF    	PUSH       R29
0x1870	0xB7CD    	IN         R28, SPL+0
0x1872	0xB7DE    	IN         R29, SPL+1
0x1874	0x9726    	SBIW       R28, 6
0x1876	0xBFCD    	OUT        SPL+0, R28
0x1878	0xBFDE    	OUT        SPL+1, R29
0x187A	0x9621    	ADIW       R28, 1
;__Lib_Conversions.c,472 :: 		
;__Lib_Conversions.c,474 :: 		
0x187C	0x922F    	PUSH       R2
0x187E	0x923F    	PUSH       R3
0x1880	0x924F    	PUSH       R4
0x1882	0x925F    	PUSH       R5
0x1884	0xE0B0    	LDI        R27, 0
0x1886	0x83BC    	STD        Y+4, R27
0x1888	0xE0B0    	LDI        R27, 0
0x188A	0x83BD    	STD        Y+5, R27
;__Lib_Conversions.c,476 :: 		
;__Lib_Conversions.c,479 :: 		
0x188C	0x8228    	STD        Y+0, R2
0x188E	0x8239    	STD        Y+1, R3
0x1890	0x824A    	STD        Y+2, R4
0x1892	0x825B    	STD        Y+3, R5
;__Lib_Conversions.c,480 :: 		
0x1894	0x8108    	LDD        R16, Y+0
0x1896	0x8119    	LDD        R17, Y+1
0x1898	0x812A    	LDD        R18, Y+2
0x189A	0x813B    	LDD        R19, Y+3
0x189C	0x3F3F    	CPI        R19, 255
0x189E	0xF429    	BRNE       L__FloatToStr185
0x18A0	0x3F2F    	CPI        R18, 255
0x18A2	0xF419    	BRNE       L__FloatToStr185
0x18A4	0x3F1F    	CPI        R17, 255
0x18A6	0xF409    	BRNE       L__FloatToStr185
0x18A8	0x3F0F    	CPI        R16, 255
L__FloatToStr185:
0x18AA	0xF449    	BRNE       L_FloatToStr76
L__FloatToStr186:
;__Lib_Conversions.c,481 :: 		
0x18AC	0xE3B7    	LDI        R27, lo_addr(?lstr1___Lib_Conversions+0)
0x18AE	0x2E4B    	MOV        R4, R27
0x18B0	0xE0B1    	LDI        R27, hi_addr(?lstr1___Lib_Conversions+0)
0x18B2	0x2E5B    	MOV        R5, R27
0x18B4	0x0113    	MOVW       R2, R6
0x18B6	0x035E940E  	CALL       _strcpy+0
;__Lib_Conversions.c,482 :: 		
0x18BA	0xE003    	LDI        R16, 3
0x18BC	0xC18B    	RJMP       L_end_FloatToStr
;__Lib_Conversions.c,483 :: 		
L_FloatToStr76:
;__Lib_Conversions.c,484 :: 		
; i start address is: 22 (R22)
0x18BE	0xE061    	LDI        R22, 1
;__Lib_Conversions.c,485 :: 		
0x18C0	0x018E    	MOVW       R16, R28
0x18C2	0x01F8    	MOVW       R30, R16
0x18C4	0x9633    	ADIW       R30, 3
0x18C6	0x8100    	LD         R16, Z
0x18C8	0xFF07    	SBRS       R16, 7
0x18CA	0xC016    	RJMP       L__FloatToStr110
;__Lib_Conversions.c,486 :: 		
0x18CC	0x018E    	MOVW       R16, R28
0x18CE	0x0198    	MOVW       R18, R16
0x18D0	0x5F2D    	SUBI       R18, 253
0x18D2	0x4F3F    	SBCI       R19, 255
0x18D4	0x01F9    	MOVW       R30, R18
0x18D6	0x8100    	LD         R16, Z
0x18D8	0xE8B0    	LDI        R27, 128
0x18DA	0x270B    	EOR        R16, R27
0x18DC	0x01F9    	MOVW       R30, R18
0x18DE	0x8300    	ST         Z, R16
;__Lib_Conversions.c,487 :: 		
0x18E0	0x2F06    	MOV        R16, R22
0x18E2	0x5F0F    	SUBI       R16, 255
; i end address is: 22 (R22)
; i start address is: 18 (R18)
0x18E4	0x2F20    	MOV        R18, R16
;__Lib_Conversions.c,488 :: 		
0x18E6	0x01F3    	MOVW       R30, R6
0x18E8	0xE2BD    	LDI        R27, 45
0x18EA	0x83B0    	ST         Z, R27
0x18EC	0x0183    	MOVW       R16, R6
0x18EE	0x5F0F    	SUBI       R16, 255
0x18F0	0x4F1F    	SBCI       R17, 255
0x18F2	0x0138    	MOVW       R6, R16
; i end address is: 18 (R18)
0x18F4	0x2F42    	MOV        R20, R18
;__Lib_Conversions.c,489 :: 		
0x18F6	0xC001    	RJMP       L_FloatToStr77
L__FloatToStr110:
;__Lib_Conversions.c,485 :: 		
0x18F8	0x2F46    	MOV        R20, R22
;__Lib_Conversions.c,489 :: 		
L_FloatToStr77:
;__Lib_Conversions.c,490 :: 		
; i start address is: 20 (R20)
0x18FA	0x8108    	LDD        R16, Y+0
0x18FC	0x8119    	LDD        R17, Y+1
0x18FE	0x812A    	LDD        R18, Y+2
0x1900	0x813B    	LDD        R19, Y+3
0x1902	0x3030    	CPI        R19, 0
0x1904	0xF429    	BRNE       L__FloatToStr187
0x1906	0x3020    	CPI        R18, 0
0x1908	0xF419    	BRNE       L__FloatToStr187
0x190A	0x3010    	CPI        R17, 0
0x190C	0xF409    	BRNE       L__FloatToStr187
0x190E	0x3000    	CPI        R16, 0
L__FloatToStr187:
0x1910	0xF449    	BRNE       L_FloatToStr78
L__FloatToStr188:
; i end address is: 20 (R20)
;__Lib_Conversions.c,491 :: 		
0x1912	0xE6B7    	LDI        R27, lo_addr(?lstr2___Lib_Conversions+0)
0x1914	0x2E4B    	MOV        R4, R27
0x1916	0xE0B1    	LDI        R27, hi_addr(?lstr2___Lib_Conversions+0)
0x1918	0x2E5B    	MOV        R5, R27
0x191A	0x0113    	MOVW       R2, R6
0x191C	0x035E940E  	CALL       _strcpy+0
;__Lib_Conversions.c,492 :: 		
0x1920	0xE000    	LDI        R16, 0
0x1922	0xC158    	RJMP       L_end_FloatToStr
;__Lib_Conversions.c,493 :: 		
L_FloatToStr78:
;__Lib_Conversions.c,494 :: 		
; i start address is: 20 (R20)
0x1924	0x8108    	LDD        R16, Y+0
0x1926	0x8119    	LDD        R17, Y+1
0x1928	0x812A    	LDD        R18, Y+2
0x192A	0x813B    	LDD        R19, Y+3
0x192C	0x373F    	CPI        R19, 127
0x192E	0xF429    	BRNE       L__FloatToStr189
0x1930	0x3820    	CPI        R18, 128
0x1932	0xF419    	BRNE       L__FloatToStr189
0x1934	0x3010    	CPI        R17, 0
0x1936	0xF409    	BRNE       L__FloatToStr189
0x1938	0x3000    	CPI        R16, 0
L__FloatToStr189:
0x193A	0xF459    	BRNE       L_FloatToStr79
L__FloatToStr190:
;__Lib_Conversions.c,495 :: 		
0x193C	0x934F    	PUSH       R20
0x193E	0xE6B3    	LDI        R27, lo_addr(?lstr3___Lib_Conversions+0)
0x1940	0x2E4B    	MOV        R4, R27
0x1942	0xE0B1    	LDI        R27, hi_addr(?lstr3___Lib_Conversions+0)
0x1944	0x2E5B    	MOV        R5, R27
0x1946	0x0113    	MOVW       R2, R6
0x1948	0x035E940E  	CALL       _strcpy+0
0x194C	0x914F    	POP        R20
;__Lib_Conversions.c,496 :: 		
0x194E	0x2F04    	MOV        R16, R20
; i end address is: 20 (R20)
0x1950	0xC141    	RJMP       L_end_FloatToStr
;__Lib_Conversions.c,497 :: 		
L_FloatToStr79:
;__Lib_Conversions.c,505 :: 		
L_FloatToStr80:
0x1952	0x925F    	PUSH       R5
0x1954	0x924F    	PUSH       R4
0x1956	0x923F    	PUSH       R3
0x1958	0x922F    	PUSH       R2
0x195A	0xE040    	LDI        R20, 0
0x195C	0xE050    	LDI        R21, 0
0x195E	0xE860    	LDI        R22, 128
0x1960	0xE37F    	LDI        R23, 63
0x1962	0x8108    	LDD        R16, Y+0
0x1964	0x8119    	LDD        R17, Y+1
0x1966	0x812A    	LDD        R18, Y+2
0x1968	0x813B    	LDD        R19, Y+3
0x196A	0x0397940E  	CALL       _float_op_less+0
0x196E	0x2800    	OR         R0, R0
0x1970	0xE000    	LDI        R16, 0
0x1972	0xF009    	BREQ       L__FloatToStr191
0x1974	0xE001    	LDI        R16, 1
L__FloatToStr191:
0x1976	0x902F    	POP        R2
0x1978	0x903F    	POP        R3
0x197A	0x904F    	POP        R4
0x197C	0x905F    	POP        R5
0x197E	0x2300    	TST        R16
0x1980	0xF0D1    	BREQ       L_FloatToStr81
L__FloatToStr192:
;__Lib_Conversions.c,506 :: 		
0x1982	0x925F    	PUSH       R5
0x1984	0x924F    	PUSH       R4
0x1986	0x923F    	PUSH       R3
0x1988	0x922F    	PUSH       R2
0x198A	0x8108    	LDD        R16, Y+0
0x198C	0x8119    	LDD        R17, Y+1
0x198E	0x812A    	LDD        R18, Y+2
0x1990	0x813B    	LDD        R19, Y+3
0x1992	0xE040    	LDI        R20, 0
0x1994	0xE050    	LDI        R21, 0
0x1996	0xE260    	LDI        R22, 32
0x1998	0xE471    	LDI        R23, 65
0x199A	0x039E940E  	CALL       _float_fpmul1+0
0x199E	0x902F    	POP        R2
0x19A0	0x903F    	POP        R3
0x19A2	0x904F    	POP        R4
0x19A4	0x905F    	POP        R5
0x19A6	0x8308    	STD        Y+0, R16
0x19A8	0x8319    	STD        Y+1, R17
0x19AA	0x832A    	STD        Y+2, R18
0x19AC	0x833B    	STD        Y+3, R19
;__Lib_Conversions.c,507 :: 		
0x19AE	0x810D    	LDD        R16, Y+5
0x19B0	0x5001    	SUBI       R16, 1
0x19B2	0x830D    	STD        Y+5, R16
;__Lib_Conversions.c,508 :: 		
0x19B4	0xCFCE    	RJMP       L_FloatToStr80
L_FloatToStr81:
;__Lib_Conversions.c,513 :: 		
L_FloatToStr82:
0x19B6	0x925F    	PUSH       R5
0x19B8	0x924F    	PUSH       R4
0x19BA	0x923F    	PUSH       R3
0x19BC	0x922F    	PUSH       R2
0x19BE	0xE040    	LDI        R20, 0
0x19C0	0xE050    	LDI        R21, 0
0x19C2	0xE260    	LDI        R22, 32
0x19C4	0xE471    	LDI        R23, 65
0x19C6	0x8108    	LDD        R16, Y+0
0x19C8	0x8119    	LDD        R17, Y+1
0x19CA	0x812A    	LDD        R18, Y+2
0x19CC	0x813B    	LDD        R19, Y+3
0x19CE	0xD81B    	RCALL      _float_op_gequ+0
0x19D0	0x2800    	OR         R0, R0
0x19D2	0xE000    	LDI        R16, 0
0x19D4	0xF009    	BREQ       L__FloatToStr193
0x19D6	0xE001    	LDI        R16, 1
L__FloatToStr193:
0x19D8	0x902F    	POP        R2
0x19DA	0x903F    	POP        R3
0x19DC	0x904F    	POP        R4
0x19DE	0x905F    	POP        R5
0x19E0	0x2300    	TST        R16
0x19E2	0xF0D1    	BREQ       L_FloatToStr83
L__FloatToStr194:
;__Lib_Conversions.c,514 :: 		
0x19E4	0x925F    	PUSH       R5
0x19E6	0x924F    	PUSH       R4
0x19E8	0x923F    	PUSH       R3
0x19EA	0x922F    	PUSH       R2
0x19EC	0x8108    	LDD        R16, Y+0
0x19EE	0x8119    	LDD        R17, Y+1
0x19F0	0x812A    	LDD        R18, Y+2
0x19F2	0x813B    	LDD        R19, Y+3
0x19F4	0xEC4D    	LDI        R20, 205
0x19F6	0xEC5C    	LDI        R21, 204
0x19F8	0xEC6C    	LDI        R22, 204
0x19FA	0xE37D    	LDI        R23, 61
0x19FC	0x039E940E  	CALL       _float_fpmul1+0
0x1A00	0x902F    	POP        R2
0x1A02	0x903F    	POP        R3
0x1A04	0x904F    	POP        R4
0x1A06	0x905F    	POP        R5
0x1A08	0x8308    	STD        Y+0, R16
0x1A0A	0x8319    	STD        Y+1, R17
0x1A0C	0x832A    	STD        Y+2, R18
0x1A0E	0x833B    	STD        Y+3, R19
;__Lib_Conversions.c,515 :: 		
0x1A10	0x810D    	LDD        R16, Y+5
0x1A12	0x5F0F    	SUBI       R16, 255
0x1A14	0x830D    	STD        Y+5, R16
;__Lib_Conversions.c,516 :: 		
0x1A16	0xCFCF    	RJMP       L_FloatToStr82
L_FloatToStr83:
;__Lib_Conversions.c,521 :: 		
0x1A18	0x8108    	LDD        R16, Y+0
0x1A1A	0x8119    	LDD        R17, Y+1
0x1A1C	0x812A    	LDD        R18, Y+2
0x1A1E	0x813B    	LDD        R19, Y+3
0x1A20	0x0F00    	LSL        R16
0x1A22	0x1F11    	ROL        R17
0x1A24	0x1F22    	ROL        R18
0x1A26	0x1F33    	ROL        R19
0x1A28	0x8308    	STD        Y+0, R16
0x1A2A	0x8319    	STD        Y+1, R17
0x1A2C	0x832A    	STD        Y+2, R18
0x1A2E	0x833B    	STD        Y+3, R19
;__Lib_Conversions.c,530 :: 		
0x1A30	0x018E    	MOVW       R16, R28
0x1A32	0x01F8    	MOVW       R30, R16
0x1A34	0x9633    	ADIW       R30, 3
0x1A36	0x8100    	LD         R16, Z
0x1A38	0x570F    	SUBI       R16, 127
; d start address is: 20 (R20)
0x1A3A	0x2F40    	MOV        R20, R16
;__Lib_Conversions.c,533 :: 		
0x1A3C	0x018E    	MOVW       R16, R28
0x1A3E	0x01F8    	MOVW       R30, R16
0x1A40	0x9633    	ADIW       R30, 3
0x1A42	0xE0B1    	LDI        R27, 1
0x1A44	0x83B0    	ST         Z, R27
;__Lib_Conversions.c,534 :: 		
0x1A46	0x8108    	LDD        R16, Y+0
0x1A48	0x8119    	LDD        R17, Y+1
0x1A4A	0x812A    	LDD        R18, Y+2
0x1A4C	0x813B    	LDD        R19, Y+3
0x1A4E	0x2FB4    	MOV        R27, R20
0x1A50	0x23BB    	TST        R27
0x1A52	0xF031    	BREQ       L__FloatToStr196
L__FloatToStr195:
0x1A54	0x0F00    	LSL        R16
0x1A56	0x1F11    	ROL        R17
0x1A58	0x1F22    	ROL        R18
0x1A5A	0x1F33    	ROL        R19
0x1A5C	0x95BA    	DEC        R27
0x1A5E	0xF7D1    	BRNE       L__FloatToStr195
L__FloatToStr196:
; d end address is: 20 (R20)
0x1A60	0x8308    	STD        Y+0, R16
0x1A62	0x8319    	STD        Y+1, R17
0x1A64	0x832A    	STD        Y+2, R18
0x1A66	0x833B    	STD        Y+3, R19
;__Lib_Conversions.c,535 :: 		
0x1A68	0x018E    	MOVW       R16, R28
0x1A6A	0x01F8    	MOVW       R30, R16
0x1A6C	0x9633    	ADIW       R30, 3
0x1A6E	0x8100    	LD         R16, Z
0x1A70	0x5D00    	SUBI       R16, 208
0x1A72	0x01F3    	MOVW       R30, R6
0x1A74	0x8300    	ST         Z, R16
0x1A76	0x0183    	MOVW       R16, R6
0x1A78	0x5F0F    	SUBI       R16, 255
0x1A7A	0x4F1F    	SBCI       R17, 255
0x1A7C	0x0138    	MOVW       R6, R16
;__Lib_Conversions.c,536 :: 		
0x1A7E	0x810D    	LDD        R16, Y+5
0x1A80	0x3001    	CPI        R16, 1
0x1A82	0xF02C    	BRLT       L__FloatToStr109
L__FloatToStr197:
0x1A84	0x811D    	LDD        R17, Y+5
0x1A86	0xE006    	LDI        R16, 6
0x1A88	0x1701    	CP         R16, R17
0x1A8A	0xF00C    	BRLT       L__FloatToStr108
L__FloatToStr198:
0x1A8C	0xC009    	RJMP       L_FloatToStr86
L__FloatToStr109:
L__FloatToStr108:
;__Lib_Conversions.c,537 :: 		
0x1A8E	0x01F3    	MOVW       R30, R6
0x1A90	0xE2BE    	LDI        R27, 46
0x1A92	0x83B0    	ST         Z, R27
0x1A94	0x0183    	MOVW       R16, R6
0x1A96	0x5F0F    	SUBI       R16, 255
0x1A98	0x4F1F    	SBCI       R17, 255
0x1A9A	0x0138    	MOVW       R6, R16
;__Lib_Conversions.c,538 :: 		
0x1A9C	0xE0B1    	LDI        R27, 1
0x1A9E	0x83BC    	STD        Y+4, R27
;__Lib_Conversions.c,539 :: 		
L_FloatToStr86:
;__Lib_Conversions.c,540 :: 		
; d start address is: 24 (R24)
0x1AA0	0xE086    	LDI        R24, 6
; d end address is: 24 (R24)
L_FloatToStr87:
; d start address is: 24 (R24)
0x1AA2	0x3080    	CPI        R24, 0
0x1AA4	0xF409    	BRNE       L__FloatToStr199
0x1AA6	0xC04B    	RJMP       L_FloatToStr88
L__FloatToStr199:
;__Lib_Conversions.c,541 :: 		
0x1AA8	0x018E    	MOVW       R16, R28
0x1AAA	0x01F8    	MOVW       R30, R16
0x1AAC	0x9633    	ADIW       R30, 3
0x1AAE	0xE0B0    	LDI        R27, 0
0x1AB0	0x83B0    	ST         Z, R27
;__Lib_Conversions.c,542 :: 		
0x1AB2	0x8108    	LDD        R16, Y+0
0x1AB4	0x8119    	LDD        R17, Y+1
0x1AB6	0x812A    	LDD        R18, Y+2
0x1AB8	0x813B    	LDD        R19, Y+3
0x1ABA	0x01A8    	MOVW       R20, R16
0x1ABC	0x01B9    	MOVW       R22, R18
0x1ABE	0x0F44    	LSL        R20
0x1AC0	0x1F55    	ROL        R21
0x1AC2	0x1F66    	ROL        R22
0x1AC4	0x1F77    	ROL        R23
0x1AC6	0x0F44    	LSL        R20
0x1AC8	0x1F55    	ROL        R21
0x1ACA	0x1F66    	ROL        R22
0x1ACC	0x1F77    	ROL        R23
0x1ACE	0x8108    	LDD        R16, Y+0
0x1AD0	0x8119    	LDD        R17, Y+1
0x1AD2	0x812A    	LDD        R18, Y+2
0x1AD4	0x813B    	LDD        R19, Y+3
0x1AD6	0x0F04    	ADD        R16, R20
0x1AD8	0x1F15    	ADC        R17, R21
0x1ADA	0x1F26    	ADC        R18, R22
0x1ADC	0x1F37    	ADC        R19, R23
0x1ADE	0x8308    	STD        Y+0, R16
0x1AE0	0x8319    	STD        Y+1, R17
0x1AE2	0x832A    	STD        Y+2, R18
0x1AE4	0x833B    	STD        Y+3, R19
;__Lib_Conversions.c,543 :: 		
0x1AE6	0x8108    	LDD        R16, Y+0
0x1AE8	0x8119    	LDD        R17, Y+1
0x1AEA	0x812A    	LDD        R18, Y+2
0x1AEC	0x813B    	LDD        R19, Y+3
0x1AEE	0x0F00    	LSL        R16
0x1AF0	0x1F11    	ROL        R17
0x1AF2	0x1F22    	ROL        R18
0x1AF4	0x1F33    	ROL        R19
0x1AF6	0x8308    	STD        Y+0, R16
0x1AF8	0x8319    	STD        Y+1, R17
0x1AFA	0x832A    	STD        Y+2, R18
0x1AFC	0x833B    	STD        Y+3, R19
;__Lib_Conversions.c,544 :: 		
0x1AFE	0x018E    	MOVW       R16, R28
0x1B00	0x01F8    	MOVW       R30, R16
0x1B02	0x9633    	ADIW       R30, 3
0x1B04	0x8100    	LD         R16, Z
0x1B06	0x5D00    	SUBI       R16, 208
0x1B08	0x01F3    	MOVW       R30, R6
0x1B0A	0x8300    	ST         Z, R16
0x1B0C	0x0183    	MOVW       R16, R6
0x1B0E	0x5F0F    	SUBI       R16, 255
0x1B10	0x4F1F    	SBCI       R17, 255
0x1B12	0x0138    	MOVW       R6, R16
;__Lib_Conversions.c,545 :: 		
0x1B14	0x810C    	LDD        R16, Y+4
0x1B16	0x3000    	CPI        R16, 0
0x1B18	0xF471    	BRNE       L_FloatToStr90
L__FloatToStr200:
;__Lib_Conversions.c,546 :: 		
0x1B1A	0x810D    	LDD        R16, Y+5
0x1B1C	0x5001    	SUBI       R16, 1
0x1B1E	0x830D    	STD        Y+5, R16
0x1B20	0x3000    	CPI        R16, 0
0x1B22	0xF449    	BRNE       L_FloatToStr91
L__FloatToStr201:
;__Lib_Conversions.c,547 :: 		
0x1B24	0x01F3    	MOVW       R30, R6
0x1B26	0xE2BE    	LDI        R27, 46
0x1B28	0x83B0    	ST         Z, R27
0x1B2A	0x0183    	MOVW       R16, R6
0x1B2C	0x5F0F    	SUBI       R16, 255
0x1B2E	0x4F1F    	SBCI       R17, 255
0x1B30	0x0138    	MOVW       R6, R16
;__Lib_Conversions.c,548 :: 		
0x1B32	0xE0B1    	LDI        R27, 1
0x1B34	0x83BC    	STD        Y+4, R27
;__Lib_Conversions.c,549 :: 		
L_FloatToStr91:
L_FloatToStr90:
;__Lib_Conversions.c,540 :: 		
0x1B36	0x2F08    	MOV        R16, R24
0x1B38	0x5001    	SUBI       R16, 1
; d end address is: 24 (R24)
; d start address is: 16 (R16)
;__Lib_Conversions.c,550 :: 		
0x1B3A	0x2F80    	MOV        R24, R16
; d end address is: 16 (R16)
0x1B3C	0xCFB2    	RJMP       L_FloatToStr87
L_FloatToStr88:
;__Lib_Conversions.c,551 :: 		
L_FloatToStr92:
0x1B3E	0x01F3    	MOVW       R30, R6
0x1B40	0x9731    	SBIW       R30, 1
0x1B42	0x8100    	LD         R16, Z
0x1B44	0x3300    	CPI        R16, 48
0x1B46	0xF429    	BRNE       L_FloatToStr93
L__FloatToStr202:
;__Lib_Conversions.c,552 :: 		
0x1B48	0x0183    	MOVW       R16, R6
0x1B4A	0x5001    	SUBI       R16, 1
0x1B4C	0x4010    	SBCI       R17, 0
0x1B4E	0x0138    	MOVW       R6, R16
0x1B50	0xCFF6    	RJMP       L_FloatToStr92
L_FloatToStr93:
;__Lib_Conversions.c,553 :: 		
0x1B52	0x01F3    	MOVW       R30, R6
0x1B54	0x9731    	SBIW       R30, 1
0x1B56	0x8100    	LD         R16, Z
0x1B58	0x320E    	CPI        R16, 46
0x1B5A	0xF421    	BRNE       L_FloatToStr94
L__FloatToStr203:
;__Lib_Conversions.c,554 :: 		
0x1B5C	0x0183    	MOVW       R16, R6
0x1B5E	0x5001    	SUBI       R16, 1
0x1B60	0x4010    	SBCI       R17, 0
0x1B62	0x0138    	MOVW       R6, R16
L_FloatToStr94:
;__Lib_Conversions.c,555 :: 		
0x1B64	0x810D    	LDD        R16, Y+5
0x1B66	0x3000    	CPI        R16, 0
0x1B68	0xF189    	BREQ       L_FloatToStr95
L__FloatToStr204:
;__Lib_Conversions.c,556 :: 		
0x1B6A	0x01F3    	MOVW       R30, R6
0x1B6C	0xE6B5    	LDI        R27, 101
0x1B6E	0x83B0    	ST         Z, R27
0x1B70	0x0183    	MOVW       R16, R6
0x1B72	0x5F0F    	SUBI       R16, 255
0x1B74	0x4F1F    	SBCI       R17, 255
0x1B76	0x0138    	MOVW       R6, R16
;__Lib_Conversions.c,557 :: 		
0x1B78	0x810D    	LDD        R16, Y+5
0x1B7A	0x3000    	CPI        R16, 0
0x1B7C	0xF45C    	BRGE       L_FloatToStr96
L__FloatToStr205:
;__Lib_Conversions.c,558 :: 		
0x1B7E	0x01F3    	MOVW       R30, R6
0x1B80	0xE2BD    	LDI        R27, 45
0x1B82	0x83B0    	ST         Z, R27
0x1B84	0x0183    	MOVW       R16, R6
0x1B86	0x5F0F    	SUBI       R16, 255
0x1B88	0x4F1F    	SBCI       R17, 255
0x1B8A	0x0138    	MOVW       R6, R16
;__Lib_Conversions.c,559 :: 		
0x1B8C	0x800D    	LDD        R0, Y+5
0x1B8E	0xE000    	LDI        R16, 0
0x1B90	0x1900    	SUB        R16, R0
0x1B92	0x830D    	STD        Y+5, R16
;__Lib_Conversions.c,560 :: 		
L_FloatToStr96:
;__Lib_Conversions.c,561 :: 		
; d start address is: 18 (R18)
0x1B94	0x812D    	LDD        R18, Y+5
;__Lib_Conversions.c,562 :: 		
0x1B96	0x811D    	LDD        R17, Y+5
0x1B98	0xE009    	LDI        R16, 9
0x1B9A	0x1701    	CP         R16, R17
0x1B9C	0xF458    	BRSH       L_FloatToStr97
L__FloatToStr206:
;__Lib_Conversions.c,563 :: 		
0x1B9E	0x2F02    	MOV        R16, R18
0x1BA0	0xE04A    	LDI        R20, 10
0x1BA2	0x0576940E  	CALL       _Div_8x8_U+0
0x1BA6	0x5D00    	SUBI       R16, 208
0x1BA8	0x01F3    	MOVW       R30, R6
0x1BAA	0x8300    	ST         Z, R16
0x1BAC	0x0183    	MOVW       R16, R6
0x1BAE	0x5F0F    	SUBI       R16, 255
0x1BB0	0x4F1F    	SBCI       R17, 255
0x1BB2	0x0138    	MOVW       R6, R16
L_FloatToStr97:
;__Lib_Conversions.c,564 :: 		
0x1BB4	0x2F02    	MOV        R16, R18
0x1BB6	0xE04A    	LDI        R20, 10
0x1BB8	0x0576940E  	CALL       _Div_8x8_U+0
0x1BBC	0x2F09    	MOV        R16, R25
; d end address is: 18 (R18)
0x1BBE	0x5D00    	SUBI       R16, 208
0x1BC0	0x01F3    	MOVW       R30, R6
0x1BC2	0x8300    	ST         Z, R16
0x1BC4	0x0183    	MOVW       R16, R6
0x1BC6	0x5F0F    	SUBI       R16, 255
0x1BC8	0x4F1F    	SBCI       R17, 255
0x1BCA	0x0138    	MOVW       R6, R16
;__Lib_Conversions.c,565 :: 		
L_FloatToStr95:
;__Lib_Conversions.c,566 :: 		
0x1BCC	0x01F3    	MOVW       R30, R6
0x1BCE	0xE0B0    	LDI        R27, 0
0x1BD0	0x83B0    	ST         Z, R27
;__Lib_Conversions.c,567 :: 		
0x1BD2	0xE000    	LDI        R16, 0
;__Lib_Conversions.c,568 :: 		
;__Lib_Conversions.c,567 :: 		
;__Lib_Conversions.c,568 :: 		
L_end_FloatToStr:
0x1BD4	0x905F    	POP        R5
0x1BD6	0x904F    	POP        R4
0x1BD8	0x903F    	POP        R3
0x1BDA	0x902F    	POP        R2
0x1BDC	0x9625    	ADIW       R28, 5
0x1BDE	0xBFCD    	OUT        SPL+0, R28
0x1BE0	0xBFDE    	OUT        SPL+1, R29
0x1BE2	0x91DF    	POP        R29
0x1BE4	0x91CF    	POP        R28
0x1BE6	0x9508    	RET
; end of _FloatToStr
_strcpy:
;__Lib_CString.c,133 :: 		
;__Lib_CString.c,136 :: 		
; cp start address is: 20 (R20)
; cp start address is: 20 (R20)
0x06BC	0x01A1    	MOVW       R20, R2
; cp end address is: 20 (R20)
;__Lib_CString.c,137 :: 		
L_strcpy34:
; cp start address is: 20 (R20)
0x06BE	0x019A    	MOVW       R18, R20
0x06C0	0x018A    	MOVW       R16, R20
0x06C2	0x5F0F    	SUBI       R16, 255
0x06C4	0x4F1F    	SBCI       R17, 255
0x06C6	0x01A8    	MOVW       R20, R16
; cp end address is: 20 (R20)
0x06C8	0x01F2    	MOVW       R30, R4
0x06CA	0x0182    	MOVW       R16, R4
0x06CC	0x5F0F    	SUBI       R16, 255
0x06CE	0x4F1F    	SBCI       R17, 255
0x06D0	0x0128    	MOVW       R4, R16
0x06D2	0x8100    	LD         R16, Z
0x06D4	0x01F9    	MOVW       R30, R18
0x06D6	0x8300    	ST         Z, R16
0x06D8	0x01F9    	MOVW       R30, R18
0x06DA	0x8100    	LD         R16, Z
0x06DC	0x2300    	TST        R16
0x06DE	0xF009    	BREQ       L_strcpy35
L__strcpy133:
; cp end address is: 20 (R20)
;__Lib_CString.c,138 :: 		
; cp start address is: 20 (R20)
; cp end address is: 20 (R20)
0x06E0	0xCFEE    	RJMP       L_strcpy34
L_strcpy35:
;__Lib_CString.c,139 :: 		
0x06E2	0x0181    	MOVW       R16, R2
;__Lib_CString.c,140 :: 		
L_end_strcpy:
0x06E4	0x9508    	RET
; end of _strcpy
_float_op_less:
;__Lib_MathDouble.c,729 :: 		
;__Lib_MathDouble.c,730 :: 		
0x072E	0xDF24    	RCALL      _float_fpcmp1+0
;__Lib_MathDouble.c,732 :: 		
0x0730	0xF41C    	BRGE       op_less_false
;__Lib_MathDouble.c,733 :: 		
0x0732	0x2400    	CLR        R0
;__Lib_MathDouble.c,734 :: 		
0x0734	0x9403    	INC        R0
;__Lib_MathDouble.c,735 :: 		
0x0736	0xC001    	RJMP       op_less_exit
;__Lib_MathDouble.c,736 :: 		
op_less_false:
;__Lib_MathDouble.c,737 :: 		
0x0738	0x2400    	CLR        R0
;__Lib_MathDouble.c,738 :: 		
op_less_exit:
;__Lib_MathDouble.c,740 :: 		
L_end_float_op_less:
0x073A	0x9508    	RET
; end of _float_op_less
_float_fpcmp1:
;__Lib_MathDouble.c,652 :: 		
;__Lib_MathDouble.c,654 :: 		
0x0578	0x2E04    	MOV        R0, R20
;__Lib_MathDouble.c,655 :: 		
0x057A	0x2E15    	MOV        R1, R21
;__Lib_MathDouble.c,656 :: 		
0x057C	0x2E26    	MOV        R2, R22
;__Lib_MathDouble.c,657 :: 		
0x057E	0x2E37    	MOV        R3, R23
;__Lib_MathDouble.c,659 :: 		
0x0580	0xDE99    	RCALL      _float_fpcmp+0
;__Lib_MathDouble.c,661 :: 		
0x0582	0x2300    	TST        R16
;__Lib_MathDouble.c,663 :: 		
L_end_float_fpcmp1:
0x0584	0x9508    	RET
; end of _float_fpcmp1
_float_fpcmp:
;__Lib_MathDouble.c,632 :: 		
;__Lib_MathDouble.c,633 :: 		
0x02B4	0xDEE8    	RCALL      _float_fpsub+0
;__Lib_MathDouble.c,635 :: 		
0x02B6	0x2333    	TST        R19
;__Lib_MathDouble.c,636 :: 		
0x02B8	0xF032    	BRMI       L011A
;__Lib_MathDouble.c,638 :: 		
0x02BA	0xDECC    	RCALL      _float_tstr16_r19+0
;__Lib_MathDouble.c,640 :: 		
0x02BC	0xF011    	BREQ       L0118
;__Lib_MathDouble.c,641 :: 		
0x02BE	0xE001    	LDI        R16, 1
;__Lib_MathDouble.c,642 :: 		
0x02C0	0xC003    	RJMP       L011Aexit
;__Lib_MathDouble.c,643 :: 		
L0118:
;__Lib_MathDouble.c,644 :: 		
0x02C2	0x2700    	CLR        R16
;__Lib_MathDouble.c,645 :: 		
0x02C4	0xC001    	RJMP       L011Aexit
;__Lib_MathDouble.c,646 :: 		
L011A:
;__Lib_MathDouble.c,647 :: 		
0x02C6	0xEF0F    	LDI        R16, 255
;__Lib_MathDouble.c,648 :: 		
L011Aexit:
;__Lib_MathDouble.c,650 :: 		
L_end_float_fpcmp:
0x02C8	0x9508    	RET
; end of _float_fpcmp
_float_fpsub:
;__Lib_MathDouble.c,384 :: 		
;__Lib_MathDouble.c,386 :: 		
0x0086	0x9468    	SET
;__Lib_MathDouble.c,388 :: 		
0x0088	0xD0BA    	RCALL      _float_fpadd_alt+0
;__Lib_MathDouble.c,389 :: 		
L_end_float_fpsub:
0x008A	0x9508    	RET
; end of _float_fpsub
_float_op_gequ:
;__Lib_MathDouble.c,691 :: 		
;__Lib_MathDouble.c,692 :: 		
0x0A06	0xDDB8    	RCALL      _float_fpcmp1+0
;__Lib_MathDouble.c,694 :: 		
0x0A08	0xF01C    	BRLT       op_gequ_false
;__Lib_MathDouble.c,695 :: 		
0x0A0A	0x2400    	CLR        R0
;__Lib_MathDouble.c,696 :: 		
0x0A0C	0x9403    	INC        R0
;__Lib_MathDouble.c,697 :: 		
0x0A0E	0xC001    	RJMP       op_gequ_exit
;__Lib_MathDouble.c,698 :: 		
op_gequ_false:
;__Lib_MathDouble.c,699 :: 		
0x0A10	0x2400    	CLR        R0
;__Lib_MathDouble.c,700 :: 		
op_gequ_exit:
;__Lib_MathDouble.c,702 :: 		
L_end_float_op_gequ:
0x0A12	0x9508    	RET
; end of _float_op_gequ
_Div_8x8_U:
;__Lib_Math.c,121 :: 		
;__Lib_Math.c,123 :: 		
0x0AEC	0x2799    	CLR        R25
;__Lib_Math.c,124 :: 		
0x0AEE	0xE079    	LDI        R23, 9
;__Lib_Math.c,125 :: 		
0x0AF0	0xC004    	RJMP       Div_8x8_U_L2
;__Lib_Math.c,126 :: 		
Div_8x8_U_L1:
;__Lib_Math.c,127 :: 		
0x0AF2	0x1F99    	ROL        R25
;__Lib_Math.c,128 :: 		
0x0AF4	0x1794    	CP         R25, R20
;__Lib_Math.c,129 :: 		
0x0AF6	0xF008    	BRCS       Div_8x8_U_L2
;__Lib_Math.c,130 :: 		
0x0AF8	0x1B94    	SUB        R25, R20
;__Lib_Math.c,131 :: 		
Div_8x8_U_L2:
;__Lib_Math.c,132 :: 		
0x0AFA	0x1F00    	ROL        R16
;__Lib_Math.c,133 :: 		
0x0AFC	0x957A    	DEC        R23
;__Lib_Math.c,134 :: 		
0x0AFE	0xF7C9    	BRNE       Div_8x8_U_L1
;__Lib_Math.c,135 :: 		
0x0B00	0x9500    	COM        R16
;__Lib_Math.c,137 :: 		
L_end_Div_8x8_U:
0x0B02	0x9508    	RET
; end of _Div_8x8_U
_fm_caseTune:
;Click_FM_AVR.c,132 :: 		void fm_caseTune( )
;Click_FM_AVR.c,134 :: 		errorFlag_ = fm_tune( 107.0 );
0x32CE	0x922F    	PUSH       R2
0x32D0	0x923F    	PUSH       R3
0x32D2	0x924F    	PUSH       R4
0x32D4	0x925F    	PUSH       R5
0x32D6	0x926F    	PUSH       R6
0x32D8	0x927F    	PUSH       R7
0x32DA	0xE0B0    	LDI        R27, 0
0x32DC	0x2E2B    	MOV        R2, R27
0x32DE	0x2E3B    	MOV        R3, R27
0x32E0	0xEDB6    	LDI        R27, 214
0x32E2	0x2E4B    	MOV        R4, R27
0x32E4	0xE4B2    	LDI        R27, 66
0x32E6	0x2E5B    	MOV        R5, R27
0x32E8	0x0AD2940E  	CALL       _fm_tune+0
0x32EC	0x02D99300  	STS        _errorFlag_+0, R16
;Click_FM_AVR.c,136 :: 		Delay_ms(100);
0x32F0	0xE025    	LDI        R18, 5
0x32F2	0xE01F    	LDI        R17, 15
0x32F4	0xEF02    	LDI        R16, 242
L_fm_caseTune8:
0x32F6	0x950A    	DEC        R16
0x32F8	0xF7F1    	BRNE       L_fm_caseTune8
0x32FA	0x951A    	DEC        R17
0x32FC	0xF7E1    	BRNE       L_fm_caseTune8
0x32FE	0x952A    	DEC        R18
0x3300	0xF7D1    	BRNE       L_fm_caseTune8
;Click_FM_AVR.c,138 :: 		fm_endTune( );
0x3302	0x0770940E  	CALL       _fm_endTune+0
;Click_FM_AVR.c,140 :: 		Delay_ms(10);
0x3306	0xE618    	LDI        R17, 104
0x3308	0xEE05    	LDI        R16, 229
L_fm_caseTune10:
0x330A	0x950A    	DEC        R16
0x330C	0xF7F1    	BRNE       L_fm_caseTune10
0x330E	0x951A    	DEC        R17
0x3310	0xF7E1    	BRNE       L_fm_caseTune10
;Click_FM_AVR.c,142 :: 		if (errorFlag_ == 0)
0x3312	0x02D99100  	LDS        R16, _errorFlag_+0
0x3316	0x3000    	CPI        R16, 0
0x3318	0xF009    	BREQ       L__fm_caseTune75
0x331A	0xC061    	RJMP       L_fm_caseTune12
L__fm_caseTune75:
;Click_FM_AVR.c,144 :: 		receivedSignalStrengthIndicator = fm_getReceivedSignalStrengthIndicator( );
0x331C	0x05B0940E  	CALL       _fm_getReceivedSignalStrengthIndicator+0
0x3320	0x02DA9300  	STS        _receivedSignalStrengthIndicator+0, R16
0x3324	0xE0B0    	LDI        R27, 0
0x3326	0x02DB93B0  	STS        _receivedSignalStrengthIndicator+1, R27
;Click_FM_AVR.c,145 :: 		tunedFrequency_ = fm_getChannelFrequency( );
0x332A	0x05CC940E  	CALL       _fm_getChannelFrequency+0
0x332E	0x02D59300  	STS        _tunedFrequency_+0, R16
0x3332	0x02D69310  	STS        _tunedFrequency_+1, R17
0x3336	0x02D79320  	STS        _tunedFrequency_+2, R18
0x333A	0x02D89330  	STS        _tunedFrequency_+3, R19
;Click_FM_AVR.c,146 :: 		stationFrequency_ = fm_getChannel( );
0x333E	0x0A4F940E  	CALL       _fm_getChannel+0
0x3342	0x02D39300  	STS        _stationFrequency_+0, R16
0x3346	0x02D49310  	STS        _stationFrequency_+1, R17
;Click_FM_AVR.c,148 :: 		mikrobus_logWrite( "tune complete", _LOG_LINE );
0x334A	0xE0B2    	LDI        R27, 2
0x334C	0x2E4B    	MOV        R4, R27
0x334E	0xEDBF    	LDI        R27, lo_addr(?lstr10_Click_FM_AVR+0)
0x3350	0x2E2B    	MOV        R2, R27
0x3352	0xE0B1    	LDI        R27, hi_addr(?lstr10_Click_FM_AVR+0)
0x3354	0x2E3B    	MOV        R3, R27
0x3356	0xD051    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,150 :: 		WordToStr( receivedSignalStrengthIndicator, text );
0x3358	0xEDBC    	LDI        R27, lo_addr(_text+0)
0x335A	0x2E4B    	MOV        R4, R27
0x335C	0xE0B2    	LDI        R27, hi_addr(_text+0)
0x335E	0x2E5B    	MOV        R5, R27
0x3360	0x02DA9020  	LDS        R2, _receivedSignalStrengthIndicator+0
0x3364	0x02DB9030  	LDS        R3, _receivedSignalStrengthIndicator+1
0x3368	0x0A0B940E  	CALL       _WordToStr+0
;Click_FM_AVR.c,151 :: 		mikrobus_logWrite( "rssi:", _LOG_TEXT );
0x336C	0xE0B1    	LDI        R27, 1
0x336E	0x2E4B    	MOV        R4, R27
0x3370	0xE0B9    	LDI        R27, lo_addr(?lstr11_Click_FM_AVR+0)
0x3372	0x2E2B    	MOV        R2, R27
0x3374	0xE0B2    	LDI        R27, hi_addr(?lstr11_Click_FM_AVR+0)
0x3376	0x2E3B    	MOV        R3, R27
0x3378	0xD040    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,152 :: 		mikrobus_logWrite( text, _LOG_TEXT );
0x337A	0xE0B1    	LDI        R27, 1
0x337C	0x2E4B    	MOV        R4, R27
0x337E	0xEDBC    	LDI        R27, lo_addr(_text+0)
0x3380	0x2E2B    	MOV        R2, R27
0x3382	0xE0B2    	LDI        R27, hi_addr(_text+0)
0x3384	0x2E3B    	MOV        R3, R27
0x3386	0xD039    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,153 :: 		mikrobus_logWrite( " dBuV", _LOG_LINE );
0x3388	0xE0B2    	LDI        R27, 2
0x338A	0x2E4B    	MOV        R4, R27
0x338C	0xE0B3    	LDI        R27, lo_addr(?lstr12_Click_FM_AVR+0)
0x338E	0x2E2B    	MOV        R2, R27
0x3390	0xE0B2    	LDI        R27, hi_addr(?lstr12_Click_FM_AVR+0)
0x3392	0x2E3B    	MOV        R3, R27
0x3394	0xD032    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,155 :: 		FloatToStr( tunedFrequency_, text );
0x3396	0xEDBC    	LDI        R27, lo_addr(_text+0)
0x3398	0x2E6B    	MOV        R6, R27
0x339A	0xE0B2    	LDI        R27, hi_addr(_text+0)
0x339C	0x2E7B    	MOV        R7, R27
0x339E	0x02D59020  	LDS        R2, _tunedFrequency_+0
0x33A2	0x02D69030  	LDS        R3, _tunedFrequency_+1
0x33A6	0x02D79040  	LDS        R4, _tunedFrequency_+2
0x33AA	0x02D89050  	LDS        R5, _tunedFrequency_+3
0x33AE	0x0C36940E  	CALL       _FloatToStr+0
;Click_FM_AVR.c,156 :: 		mikrobus_logWrite( "tuned frequency:", _LOG_TEXT );
0x33B2	0xE0B1    	LDI        R27, 1
0x33B4	0x2E4B    	MOV        R4, R27
0x33B6	0xEEBD    	LDI        R27, lo_addr(?lstr13_Click_FM_AVR+0)
0x33B8	0x2E2B    	MOV        R2, R27
0x33BA	0xE0B1    	LDI        R27, hi_addr(?lstr13_Click_FM_AVR+0)
0x33BC	0x2E3B    	MOV        R3, R27
0x33BE	0xD01D    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,157 :: 		mikrobus_logWrite( text, _LOG_TEXT );
0x33C0	0xE0B1    	LDI        R27, 1
0x33C2	0x2E4B    	MOV        R4, R27
0x33C4	0xEDBC    	LDI        R27, lo_addr(_text+0)
0x33C6	0x2E2B    	MOV        R2, R27
0x33C8	0xE0B2    	LDI        R27, hi_addr(_text+0)
0x33CA	0x2E3B    	MOV        R3, R27
0x33CC	0xD016    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,158 :: 		mikrobus_logWrite( " MHz", _LOG_LINE );
0x33CE	0xE0B2    	LDI        R27, 2
0x33D0	0x2E4B    	MOV        R4, R27
0x33D2	0xEFBE    	LDI        R27, lo_addr(?lstr14_Click_FM_AVR+0)
0x33D4	0x2E2B    	MOV        R2, R27
0x33D6	0xE0B1    	LDI        R27, hi_addr(?lstr14_Click_FM_AVR+0)
0x33D8	0x2E3B    	MOV        R3, R27
0x33DA	0xD00F    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,159 :: 		}
0x33DC	0xC007    	RJMP       L_fm_caseTune13
L_fm_caseTune12:
;Click_FM_AVR.c,162 :: 		mikrobus_logWrite( "frequency not in valid range", _LOG_TEXT );
0x33DE	0xE0B1    	LDI        R27, 1
0x33E0	0x2E4B    	MOV        R4, R27
0x33E2	0xECB2    	LDI        R27, lo_addr(?lstr15_Click_FM_AVR+0)
0x33E4	0x2E2B    	MOV        R2, R27
0x33E6	0xE0B1    	LDI        R27, hi_addr(?lstr15_Click_FM_AVR+0)
0x33E8	0x2E3B    	MOV        R3, R27
0x33EA	0xD007    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,163 :: 		}
L_fm_caseTune13:
;Click_FM_AVR.c,164 :: 		}
L_end_fm_caseTune:
0x33EC	0x907F    	POP        R7
0x33EE	0x906F    	POP        R6
0x33F0	0x905F    	POP        R5
0x33F2	0x904F    	POP        R4
0x33F4	0x903F    	POP        R3
0x33F6	0x902F    	POP        R2
0x33F8	0x9508    	RET
; end of _fm_caseTune
_fm_tune:
0x15A4	0x93CF    	PUSH       R28
0x15A6	0x93DF    	PUSH       R29
0x15A8	0xB7CD    	IN         R28, SPL+0
0x15AA	0xB7DE    	IN         R29, SPL+1
0x15AC	0x97AC    	SBIW       R28, 44
0x15AE	0xBFCD    	OUT        SPL+0, R28
0x15B0	0xBFDE    	OUT        SPL+1, R29
0x15B2	0x9621    	ADIW       R28, 1
;__fm_Driver.c,653 :: 		uint8_t fm_tune( float channelFrequency )
;__fm_Driver.c,666 :: 		fm_readRegisters( regBuffer );
0x15B4	0x922F    	PUSH       R2
0x15B6	0x923F    	PUSH       R3
0x15B8	0x924F    	PUSH       R4
0x15BA	0x925F    	PUSH       R5
0x15BC	0x926F    	PUSH       R6
0x15BE	0x927F    	PUSH       R7
0x15C0	0x928F    	PUSH       R8
0x15C2	0x929F    	PUSH       R9
0x15C4	0x018E    	MOVW       R16, R28
0x15C6	0x925F    	PUSH       R5
0x15C8	0x924F    	PUSH       R4
0x15CA	0x923F    	PUSH       R3
0x15CC	0x922F    	PUSH       R2
0x15CE	0x0118    	MOVW       R2, R16
0x15D0	0xD5DA    	RCALL      _fm_readRegisters+0
0x15D2	0x902F    	POP        R2
0x15D4	0x903F    	POP        R3
0x15D6	0x904F    	POP        R4
0x15D8	0x905F    	POP        R5
;__fm_Driver.c,668 :: 		b = regBuffer[ _FM_SYSTEM_CONFIGURATION_2 ];
0x15DA	0x01AE    	MOVW       R20, R28
0x15DC	0x01FA    	MOVW       R30, R20
0x15DE	0x9636    	ADIW       R30, 6
0x15E0	0x9101    	LD         R16, Z+
0x15E2	0x9111    	LD         R17, Z+
;__fm_Driver.c,669 :: 		b &= 0x00C0;
0x15E4	0x7C00    	ANDI       R16, 192
0x15E6	0x7010    	ANDI       R17, 0
;__fm_Driver.c,670 :: 		b >>= 6;
0x15E8	0xE0B6    	LDI        R27, 6
L__fm_tune156:
0x15EA	0x9516    	LSR        R17
0x15EC	0x9507    	ROR        R16
0x15EE	0x95BA    	DEC        R27
0x15F0	0xF7E1    	BRNE       L__fm_tune156
L__fm_tune157:
;__fm_Driver.c,671 :: 		b &= 0x0003;
0x15F2	0x0198    	MOVW       R18, R16
0x15F4	0x7023    	ANDI       R18, 3
0x15F6	0x7030    	ANDI       R19, 0
; b start address is: 22 (R22)
0x15F8	0x01B9    	MOVW       R22, R18
;__fm_Driver.c,673 :: 		s = regBuffer[ _FM_SYSTEM_CONFIGURATION_2 ];
0x15FA	0x01FA    	MOVW       R30, R20
0x15FC	0x9636    	ADIW       R30, 6
0x15FE	0x9101    	LD         R16, Z+
0x1600	0x9111    	LD         R17, Z+
;__fm_Driver.c,674 :: 		s &= 0x0030;
0x1602	0x7300    	ANDI       R16, 48
0x1604	0x7010    	ANDI       R17, 0
;__fm_Driver.c,675 :: 		s >>= 4;
0x1606	0x9516    	LSR        R17
0x1608	0x9507    	ROR        R16
0x160A	0x9516    	LSR        R17
0x160C	0x9507    	ROR        R16
0x160E	0x9516    	LSR        R17
0x1610	0x9507    	ROR        R16
0x1612	0x9516    	LSR        R17
0x1614	0x9507    	ROR        R16
;__fm_Driver.c,676 :: 		s &= 0x0003;
0x1616	0x7003    	ANDI       R16, 3
0x1618	0x7010    	ANDI       R17, 0
; s start address is: 16 (R16)
;__fm_Driver.c,678 :: 		if (b == 0)
0x161A	0x3030    	CPI        R19, 0
0x161C	0xF409    	BRNE       L__fm_tune158
0x161E	0x3020    	CPI        R18, 0
L__fm_tune158:
0x1620	0xF479    	BRNE       L_fm_tune38
L__fm_tune159:
; b end address is: 22 (R22)
;__fm_Driver.c,680 :: 		bandLimitDown = 87.5;
0x1622	0xE0B0    	LDI        R27, 0
0x1624	0xA3B8    	STD        Y+32, R27
0x1626	0xA3B9    	STD        Y+33, R27
0x1628	0xEABF    	LDI        R27, 175
0x162A	0xA3BA    	STD        Y+34, R27
0x162C	0xE4B2    	LDI        R27, 66
0x162E	0xA3BB    	STD        Y+35, R27
;__fm_Driver.c,681 :: 		bandLimitUp = 108;
0x1630	0xE0B0    	LDI        R27, 0
0x1632	0xA3BC    	STD        Y+36, R27
0x1634	0xA3BD    	STD        Y+37, R27
0x1636	0xEDB8    	LDI        R27, 216
0x1638	0xA3BE    	STD        Y+38, R27
0x163A	0xE4B2    	LDI        R27, 66
0x163C	0xA3BF    	STD        Y+39, R27
;__fm_Driver.c,682 :: 		}
0x163E	0xC025    	RJMP       L_fm_tune39
L_fm_tune38:
;__fm_Driver.c,683 :: 		else if (b == 1)
; b start address is: 22 (R22)
0x1640	0x3070    	CPI        R23, 0
0x1642	0xF409    	BRNE       L__fm_tune160
0x1644	0x3061    	CPI        R22, 1
L__fm_tune160:
0x1646	0xF479    	BRNE       L_fm_tune40
L__fm_tune161:
; b end address is: 22 (R22)
;__fm_Driver.c,685 :: 		bandLimitDown = 76.0;
0x1648	0xE0B0    	LDI        R27, 0
0x164A	0xA3B8    	STD        Y+32, R27
0x164C	0xA3B9    	STD        Y+33, R27
0x164E	0xE9B8    	LDI        R27, 152
0x1650	0xA3BA    	STD        Y+34, R27
0x1652	0xE4B2    	LDI        R27, 66
0x1654	0xA3BB    	STD        Y+35, R27
;__fm_Driver.c,686 :: 		bandLimitUp = 108;
0x1656	0xE0B0    	LDI        R27, 0
0x1658	0xA3BC    	STD        Y+36, R27
0x165A	0xA3BD    	STD        Y+37, R27
0x165C	0xEDB8    	LDI        R27, 216
0x165E	0xA3BE    	STD        Y+38, R27
0x1660	0xE4B2    	LDI        R27, 66
0x1662	0xA3BF    	STD        Y+39, R27
;__fm_Driver.c,687 :: 		}
0x1664	0xC012    	RJMP       L_fm_tune41
L_fm_tune40:
;__fm_Driver.c,688 :: 		else if (b == 2)
; b start address is: 22 (R22)
0x1666	0x3070    	CPI        R23, 0
0x1668	0xF409    	BRNE       L__fm_tune162
0x166A	0x3062    	CPI        R22, 2
L__fm_tune162:
0x166C	0xF471    	BRNE       L_fm_tune42
L__fm_tune163:
; b end address is: 22 (R22)
;__fm_Driver.c,690 :: 		bandLimitDown = 76.0;
0x166E	0xE0B0    	LDI        R27, 0
0x1670	0xA3B8    	STD        Y+32, R27
0x1672	0xA3B9    	STD        Y+33, R27
0x1674	0xE9B8    	LDI        R27, 152
0x1676	0xA3BA    	STD        Y+34, R27
0x1678	0xE4B2    	LDI        R27, 66
0x167A	0xA3BB    	STD        Y+35, R27
;__fm_Driver.c,691 :: 		bandLimitUp = 90;
0x167C	0xE0B0    	LDI        R27, 0
0x167E	0xA3BC    	STD        Y+36, R27
0x1680	0xA3BD    	STD        Y+37, R27
0x1682	0xEBB4    	LDI        R27, 180
0x1684	0xA3BE    	STD        Y+38, R27
0x1686	0xE4B2    	LDI        R27, 66
0x1688	0xA3BF    	STD        Y+39, R27
;__fm_Driver.c,692 :: 		}
L_fm_tune42:
L_fm_tune41:
L_fm_tune39:
;__fm_Driver.c,694 :: 		if (s == 0)
0x168A	0x3010    	CPI        R17, 0
0x168C	0xF409    	BRNE       L__fm_tune164
0x168E	0x3000    	CPI        R16, 0
L__fm_tune164:
0x1690	0xF449    	BRNE       L_fm_tune43
L__fm_tune165:
; s end address is: 16 (R16)
;__fm_Driver.c,696 :: 		space_ = 0.2;
0x1692	0xECBD    	LDI        R27, 205
0x1694	0xA7B8    	STD        Y+40, R27
0x1696	0xECBC    	LDI        R27, 204
0x1698	0xA7B9    	STD        Y+41, R27
0x169A	0xE4BC    	LDI        R27, 76
0x169C	0xA7BA    	STD        Y+42, R27
0x169E	0xE3BE    	LDI        R27, 62
0x16A0	0xA7BB    	STD        Y+43, R27
;__fm_Driver.c,697 :: 		}
0x16A2	0xC018    	RJMP       L_fm_tune44
L_fm_tune43:
;__fm_Driver.c,698 :: 		else if (s == 1)
; s start address is: 16 (R16)
0x16A4	0x3010    	CPI        R17, 0
0x16A6	0xF409    	BRNE       L__fm_tune166
0x16A8	0x3001    	CPI        R16, 1
L__fm_tune166:
0x16AA	0xF441    	BRNE       L_fm_tune45
L__fm_tune167:
; s end address is: 16 (R16)
;__fm_Driver.c,700 :: 		space_ = 0.1;
0x16AC	0xECBD    	LDI        R27, 205
0x16AE	0xA7B8    	STD        Y+40, R27
0x16B0	0xECBC    	LDI        R27, 204
0x16B2	0xA7B9    	STD        Y+41, R27
0x16B4	0xA7BA    	STD        Y+42, R27
0x16B6	0xE3BD    	LDI        R27, 61
0x16B8	0xA7BB    	STD        Y+43, R27
;__fm_Driver.c,701 :: 		}
0x16BA	0xC00C    	RJMP       L_fm_tune46
L_fm_tune45:
;__fm_Driver.c,702 :: 		else if (s == 2)
; s start address is: 16 (R16)
0x16BC	0x3010    	CPI        R17, 0
0x16BE	0xF409    	BRNE       L__fm_tune168
0x16C0	0x3002    	CPI        R16, 2
L__fm_tune168:
0x16C2	0xF441    	BRNE       L_fm_tune47
L__fm_tune169:
; s end address is: 16 (R16)
;__fm_Driver.c,704 :: 		space_ = 0.05;
0x16C4	0xECBD    	LDI        R27, 205
0x16C6	0xA7B8    	STD        Y+40, R27
0x16C8	0xECBC    	LDI        R27, 204
0x16CA	0xA7B9    	STD        Y+41, R27
0x16CC	0xE4BC    	LDI        R27, 76
0x16CE	0xA7BA    	STD        Y+42, R27
0x16D0	0xE3BD    	LDI        R27, 61
0x16D2	0xA7BB    	STD        Y+43, R27
;__fm_Driver.c,705 :: 		}
L_fm_tune47:
L_fm_tune46:
L_fm_tune44:
;__fm_Driver.c,707 :: 		aux_  = channelFrequency - bandLimitDown;
0x16D4	0xA148    	LDD        R20, Y+32
0x16D6	0xA159    	LDD        R21, Y+33
0x16D8	0xA16A    	LDD        R22, Y+34
0x16DA	0xA17B    	LDD        R23, Y+35
0x16DC	0x0181    	MOVW       R16, R2
0x16DE	0x0192    	MOVW       R18, R4
0x16E0	0xD9FB    	RCALL      _float_fpsub1+0
;__fm_Driver.c,708 :: 		aux_ /= space_;
0x16E2	0xA548    	LDD        R20, Y+40
0x16E4	0xA559    	LDD        R21, Y+41
0x16E6	0xA56A    	LDD        R22, Y+42
0x16E8	0xA57B    	LDD        R23, Y+43
0x16EA	0xDA30    	RCALL      _float_fpdiv1+0
;__fm_Driver.c,710 :: 		channel_ = (uint16_t)(aux_);
0x16EC	0xDA0B    	RCALL      _float_fpint+0
; channel_ start address is: 20 (R20)
0x16EE	0x01A8    	MOVW       R20, R16
;__fm_Driver.c,712 :: 		aux_  = bandLimitUp - bandLimitDown;
0x16F0	0x935F    	PUSH       R21
0x16F2	0x934F    	PUSH       R20
0x16F4	0xA148    	LDD        R20, Y+32
0x16F6	0xA159    	LDD        R21, Y+33
0x16F8	0xA16A    	LDD        R22, Y+34
0x16FA	0xA17B    	LDD        R23, Y+35
0x16FC	0xA10C    	LDD        R16, Y+36
0x16FE	0xA11D    	LDD        R17, Y+37
0x1700	0xA12E    	LDD        R18, Y+38
0x1702	0xA13F    	LDD        R19, Y+39
0x1704	0xD9E9    	RCALL      _float_fpsub1+0
;__fm_Driver.c,713 :: 		aux_ /= space_;
0x1706	0xA548    	LDD        R20, Y+40
0x1708	0xA559    	LDD        R21, Y+41
0x170A	0xA56A    	LDD        R22, Y+42
0x170C	0xA57B    	LDD        R23, Y+43
0x170E	0xDA1E    	RCALL      _float_fpdiv1+0
;__fm_Driver.c,715 :: 		channelLimitUp = (uint16_t)(aux_);
0x1710	0xD9F9    	RCALL      _float_fpint+0
0x1712	0x914F    	POP        R20
0x1714	0x915F    	POP        R21
;__fm_Driver.c,717 :: 		if (channel_ < channelLimitUp && channel_ > 0)
0x1716	0x1740    	CP         R20, R16
0x1718	0x0751    	CPC        R21, R17
0x171A	0xF588    	BRSH       L__fm_tune86
L__fm_tune170:
0x171C	0xE000    	LDI        R16, 0
0x171E	0xE010    	LDI        R17, 0
0x1720	0x1704    	CP         R16, R20
0x1722	0x0715    	CPC        R17, R21
0x1724	0xF560    	BRSH       L__fm_tune85
L__fm_tune171:
L__fm_tune84:
;__fm_Driver.c,719 :: 		regBuffer[_FM_CHANNEL] &= 0x0000;
0x1726	0x018E    	MOVW       R16, R28
0x1728	0x0198    	MOVW       R18, R16
0x172A	0x5F2E    	SUBI       R18, 254
0x172C	0x4F3F    	SBCI       R19, 255
0x172E	0x01F9    	MOVW       R30, R18
0x1730	0x9101    	LD         R16, Z+
0x1732	0x9111    	LD         R17, Z+
0x1734	0x7000    	ANDI       R16, 0
0x1736	0x7010    	ANDI       R17, 0
0x1738	0x01F9    	MOVW       R30, R18
0x173A	0x9301    	ST         Z+, R16
0x173C	0x9311    	ST         Z+, R17
;__fm_Driver.c,720 :: 		regBuffer[_FM_CHANNEL] |= channel_;
0x173E	0x018E    	MOVW       R16, R28
0x1740	0x0198    	MOVW       R18, R16
0x1742	0x5F2E    	SUBI       R18, 254
0x1744	0x4F3F    	SBCI       R19, 255
0x1746	0x01F9    	MOVW       R30, R18
0x1748	0x9101    	LD         R16, Z+
0x174A	0x9111    	LD         R17, Z+
0x174C	0x2B04    	OR         R16, R20
0x174E	0x2B15    	OR         R17, R21
; channel_ end address is: 20 (R20)
0x1750	0x01F9    	MOVW       R30, R18
0x1752	0x9301    	ST         Z+, R16
0x1754	0x9311    	ST         Z+, R17
;__fm_Driver.c,722 :: 		fm_setBits( regBuffer, _FM_CHANNEL, _FM_TUNE_MASK, _FM_TUNE_ENABLE );
0x1756	0x018E    	MOVW       R16, R28
0x1758	0xE0B0    	LDI        R27, 0
0x175A	0x2E8B    	MOV        R8, R27
0x175C	0xE8B0    	LDI        R27, 128
0x175E	0x2E9B    	MOV        R9, R27
0x1760	0xEFBF    	LDI        R27, 255
0x1762	0x2E6B    	MOV        R6, R27
0x1764	0xE7BF    	LDI        R27, 127
0x1766	0x2E7B    	MOV        R7, R27
0x1768	0xE0B1    	LDI        R27, 1
0x176A	0x2E4B    	MOV        R4, R27
0x176C	0xE0B0    	LDI        R27, 0
0x176E	0x2E5B    	MOV        R5, R27
0x1770	0x0118    	MOVW       R2, R16
0x1772	0xD3A4    	RCALL      _fm_setBits+0
;__fm_Driver.c,724 :: 		fm_writeRegisters( regBuffer );
0x1774	0x018E    	MOVW       R16, R28
0x1776	0x0118    	MOVW       R2, R16
0x1778	0xD34B    	RCALL      _fm_writeRegisters+0
;__fm_Driver.c,726 :: 		return 0;
0x177A	0xE000    	LDI        R16, 0
0x177C	0xC001    	RJMP       L_end_fm_tune
;__fm_Driver.c,717 :: 		if (channel_ < channelLimitUp && channel_ > 0)
L__fm_tune86:
L__fm_tune85:
;__fm_Driver.c,730 :: 		return 1;
0x177E	0xE001    	LDI        R16, 1
;__fm_Driver.c,732 :: 		}
;__fm_Driver.c,730 :: 		return 1;
;__fm_Driver.c,732 :: 		}
L_end_fm_tune:
0x1780	0x909F    	POP        R9
0x1782	0x908F    	POP        R8
0x1784	0x907F    	POP        R7
0x1786	0x906F    	POP        R6
0x1788	0x905F    	POP        R5
0x178A	0x904F    	POP        R4
0x178C	0x903F    	POP        R3
0x178E	0x902F    	POP        R2
0x1790	0x96AB    	ADIW       R28, 43
0x1792	0xBFCD    	OUT        SPL+0, R28
0x1794	0xBFDE    	OUT        SPL+1, R29
0x1796	0x91DF    	POP        R29
0x1798	0x91CF    	POP        R28
0x179A	0x9508    	RET
; end of _fm_tune
_float_fpsub1:
;__Lib_MathDouble.c,391 :: 		
;__Lib_MathDouble.c,393 :: 		
0x0AD8	0x2E04    	MOV        R0, R20
;__Lib_MathDouble.c,394 :: 		
0x0ADA	0x2E15    	MOV        R1, R21
;__Lib_MathDouble.c,395 :: 		
0x0ADC	0x2E26    	MOV        R2, R22
;__Lib_MathDouble.c,396 :: 		
0x0ADE	0x2E37    	MOV        R3, R23
;__Lib_MathDouble.c,398 :: 		
0x0AE0	0xDAD2    	RCALL      _float_fpsub+0
;__Lib_MathDouble.c,400 :: 		
0x0AE2	0x2E00    	MOV        R0, R16
;__Lib_MathDouble.c,401 :: 		
0x0AE4	0x2E11    	MOV        R1, R17
;__Lib_MathDouble.c,402 :: 		
0x0AE6	0x2E22    	MOV        R2, R18
;__Lib_MathDouble.c,403 :: 		
0x0AE8	0x2E33    	MOV        R3, R19
;__Lib_MathDouble.c,405 :: 		
L_end_float_fpsub1:
0x0AEA	0x9508    	RET
; end of _float_fpsub1
_float_fpdiv1:
;__Lib_MathDouble.c,616 :: 		
;__Lib_MathDouble.c,618 :: 		
0x0B4C	0x2E04    	MOV        R0, R20
;__Lib_MathDouble.c,619 :: 		
0x0B4E	0x2E15    	MOV        R1, R21
;__Lib_MathDouble.c,620 :: 		
0x0B50	0x2E26    	MOV        R2, R22
;__Lib_MathDouble.c,621 :: 		
0x0B52	0x2E37    	MOV        R3, R23
;__Lib_MathDouble.c,623 :: 		
0x0B54	0xDCB5    	RCALL      _float_fpdiv+0
;__Lib_MathDouble.c,625 :: 		
0x0B56	0x2E00    	MOV        R0, R16
;__Lib_MathDouble.c,626 :: 		
0x0B58	0x2E11    	MOV        R1, R17
;__Lib_MathDouble.c,627 :: 		
0x0B5A	0x2E22    	MOV        R2, R18
;__Lib_MathDouble.c,628 :: 		
0x0B5C	0x2E33    	MOV        R3, R19
;__Lib_MathDouble.c,630 :: 		
L_end_float_fpdiv1:
0x0B5E	0x9508    	RET
; end of _float_fpdiv1
_float_fpdiv:
;__Lib_MathDouble.c,499 :: 		
;__Lib_MathDouble.c,501 :: 		
0x04C0	0x933F    	PUSH       R19
;__Lib_MathDouble.c,502 :: 		
0x04C2	0x932F    	PUSH       R18
;__Lib_MathDouble.c,503 :: 		
0x04C4	0x931F    	PUSH       R17
;__Lib_MathDouble.c,504 :: 		
0x04C6	0x930F    	PUSH       R16
;__Lib_MathDouble.c,505 :: 		
0x04C8	0x2D00    	MOV        R16, R0
;__Lib_MathDouble.c,506 :: 		
0x04CA	0x2D11    	MOV        R17, R1
;__Lib_MathDouble.c,507 :: 		
0x04CC	0x2D22    	MOV        R18, R2
;__Lib_MathDouble.c,508 :: 		
0x04CE	0x2D33    	MOV        R19, R3
;__Lib_MathDouble.c,510 :: 		
0x04D0	0xDF01    	RCALL      _float_unpacku+0
;__Lib_MathDouble.c,512 :: 		
0x04D2	0xF409    	BRNE       L0072div
;__Lib_MathDouble.c,513 :: 		
0x04D4	0xC04B    	RJMP       L00C2
;__Lib_MathDouble.c,514 :: 		
L0072div:
;__Lib_MathDouble.c,515 :: 		
0x04D6	0x2EE6    	MOV        R14, R22
;__Lib_MathDouble.c,516 :: 		
0x04D8	0x2ED5    	MOV        R13, R21
;__Lib_MathDouble.c,517 :: 		
0x04DA	0x2EC4    	MOV        R12, R20
;__Lib_MathDouble.c,518 :: 		
0x04DC	0x2EB3    	MOV        R11, R19
;__Lib_MathDouble.c,519 :: 		
0x04DE	0x2EA2    	MOV        R10, R18
;__Lib_MathDouble.c,520 :: 		
0x04E0	0x2E91    	MOV        R9, R17
;__Lib_MathDouble.c,521 :: 		
0x04E2	0x2E80    	MOV        R8, R16
;__Lib_MathDouble.c,522 :: 		
0x04E4	0x910F    	POP        R16
;__Lib_MathDouble.c,523 :: 		
0x04E6	0x911F    	POP        R17
;__Lib_MathDouble.c,524 :: 		
0x04E8	0x912F    	POP        R18
;__Lib_MathDouble.c,525 :: 		
0x04EA	0x913F    	POP        R19
;__Lib_MathDouble.c,528 :: 		
0x04EC	0xDEF3    	RCALL      _float_unpacku+0
;__Lib_MathDouble.c,530 :: 		
0x04EE	0xF161    	BREQ       L00AB
;__Lib_MathDouble.c,531 :: 		
0x04F0	0x256E    	EOR        R22, R14
;__Lib_MathDouble.c,532 :: 		
0x04F2	0x194C    	SUB        R20, R12
;__Lib_MathDouble.c,533 :: 		
0x04F4	0x095D    	SBC        R21, R13
;__Lib_MathDouble.c,534 :: 		
0x04F6	0x3840    	CPI        R20, 128
;__Lib_MathDouble.c,535 :: 		
0x04F8	0x0753    	CPC        R21, R19
;__Lib_MathDouble.c,536 :: 		
0x04FA	0xF53C    	BRGE       L00B1
;__Lib_MathDouble.c,537 :: 		
0x04FC	0x3841    	CPI        R20, 129
;__Lib_MathDouble.c,538 :: 		
0x04FE	0xEF7F    	LDI        R23, 255
;__Lib_MathDouble.c,539 :: 		
0x0500	0x0757    	CPC        R21, R23
;__Lib_MathDouble.c,540 :: 		
0x0502	0xF17C    	BRLT       L00BD
;__Lib_MathDouble.c,541 :: 		
0x0504	0xE280    	LDI        R24, 32
;__Lib_MathDouble.c,542 :: 		
0x0506	0x2477    	CLR        R7
;__Lib_MathDouble.c,543 :: 		
0x0508	0x2E63    	MOV        R6, R19
;__Lib_MathDouble.c,544 :: 		
0x050A	0x2E52    	MOV        R5, R18
;__Lib_MathDouble.c,545 :: 		
0x050C	0x2E41    	MOV        R4, R17
;__Lib_MathDouble.c,546 :: 		
0x050E	0x2F30    	MOV        R19, R16
;__Lib_MathDouble.c,547 :: 		
0x0510	0x2722    	CLR        R18
;__Lib_MathDouble.c,548 :: 		
0x0512	0x2711    	CLR        R17
;__Lib_MathDouble.c,549 :: 		
0x0514	0x2700    	CLR        R16
;__Lib_MathDouble.c,550 :: 		
L0092:
;__Lib_MathDouble.c,551 :: 		
0x0516	0x0F00    	LSL        R16
;__Lib_MathDouble.c,552 :: 		
0x0518	0x1F11    	ROL        R17
;__Lib_MathDouble.c,553 :: 		
0x051A	0x1F22    	ROL        R18
;__Lib_MathDouble.c,554 :: 		
0x051C	0x1F33    	ROL        R19
;__Lib_MathDouble.c,555 :: 		
0x051E	0x1C44    	ROL        R4
;__Lib_MathDouble.c,556 :: 		
0x0520	0x1C55    	ROL        R5
;__Lib_MathDouble.c,557 :: 		
0x0522	0x1C66    	ROL        R6
;__Lib_MathDouble.c,558 :: 		
0x0524	0x1C77    	ROL        R7
;__Lib_MathDouble.c,559 :: 		
0x0526	0xF028    	BRCS       L00A0div
;__Lib_MathDouble.c,560 :: 		
0x0528	0x1848    	SUB        R4, R8
;__Lib_MathDouble.c,561 :: 		
0x052A	0x0859    	SBC        R5, R9
;__Lib_MathDouble.c,562 :: 		
0x052C	0x086A    	SBC        R6, R10
;__Lib_MathDouble.c,563 :: 		
0x052E	0x087B    	SBC        R7, R11
;__Lib_MathDouble.c,564 :: 		
0x0530	0xC004    	RJMP       L00A4
;__Lib_MathDouble.c,565 :: 		
L00A0div:
;__Lib_MathDouble.c,566 :: 		
0x0532	0x0C48    	ADD        R4, R8
;__Lib_MathDouble.c,567 :: 		
0x0534	0x1C59    	ADC        R5, R9
;__Lib_MathDouble.c,568 :: 		
0x0536	0x1C6A    	ADC        R6, R10
;__Lib_MathDouble.c,569 :: 		
0x0538	0x1C7B    	ADC        R7, R11
;__Lib_MathDouble.c,570 :: 		
L00A4:
;__Lib_MathDouble.c,571 :: 		
0x053A	0xF00A    	BRMI       L00A6
;__Lib_MathDouble.c,572 :: 		
0x053C	0x6001    	ORI        R16, 1
;__Lib_MathDouble.c,573 :: 		
L00A6:
;__Lib_MathDouble.c,574 :: 		
0x053E	0x958A    	DEC        R24
;__Lib_MathDouble.c,575 :: 		
0x0540	0xF751    	BRNE       L0092
;__Lib_MathDouble.c,576 :: 		
0x0542	0x5041    	SUBI       R20, 1
;__Lib_MathDouble.c,577 :: 		
0x0544	0x4050    	SBCI       R21, 0
;__Lib_MathDouble.c,579 :: 		
0x0546	0xDDF1    	RCALL      _float_normalize_and_pack+0
;__Lib_MathDouble.c,581 :: 		
L00AB:
;__Lib_MathDouble.c,582 :: 		
0x0548	0xC016    	RJMP       L00C2x
;__Lib_MathDouble.c,583 :: 		
L00B1:
;__Lib_MathDouble.c,584 :: 		
0x054A	0xEF0F    	LDI        R16, 255
;__Lib_MathDouble.c,585 :: 		
0x054C	0x2F10    	MOV        R17, R16
;__Lib_MathDouble.c,586 :: 		
0x054E	0xE72F    	LDI        R18, 127
;__Lib_MathDouble.c,587 :: 		
0x0550	0xE73F    	LDI        R19, 127
;__Lib_MathDouble.c,588 :: 		
0x0552	0x2366    	TST        R22
;__Lib_MathDouble.c,589 :: 		
0x0554	0xF3C9    	BREQ       L00AB
;__Lib_MathDouble.c,591 :: 		
0x0556	0xDD7E    	RCALL      _float_tstr16_r19+0
;__Lib_MathDouble.c,593 :: 		
0x0558	0xF3B9    	BREQ       L00AB
;__Lib_MathDouble.c,594 :: 		
0x055A	0x2D34    	MOV        R19, R4
;__Lib_MathDouble.c,595 :: 		
0x055C	0xE830    	LDI        R19, 128
;__Lib_MathDouble.c,596 :: 		
0x055E	0x2534    	EOR        R19, R4
;__Lib_MathDouble.c,597 :: 		
0x0560	0xCFF3    	RJMP       L00AB
;__Lib_MathDouble.c,598 :: 		
L00BD:
;__Lib_MathDouble.c,599 :: 		
0x0562	0x2700    	CLR        R16
;__Lib_MathDouble.c,600 :: 		
0x0564	0x2F10    	MOV        R17, R16
;__Lib_MathDouble.c,601 :: 		
0x0566	0x2F20    	MOV        R18, R16
;__Lib_MathDouble.c,602 :: 		
0x0568	0x2F30    	MOV        R19, R16
;__Lib_MathDouble.c,603 :: 		
0x056A	0xCFEE    	RJMP       L00AB
;__Lib_MathDouble.c,604 :: 		
L00C2:
;__Lib_MathDouble.c,606 :: 		
0x056C	0x900F    	POP        R0
;__Lib_MathDouble.c,607 :: 		
0x056E	0x900F    	POP        R0
;__Lib_MathDouble.c,608 :: 		
0x0570	0x900F    	POP        R0
;__Lib_MathDouble.c,609 :: 		
0x0572	0x900F    	POP        R0
;__Lib_MathDouble.c,610 :: 		
0x0574	0xCFEA    	RJMP       L00B1
;__Lib_MathDouble.c,612 :: 		
L00C2x:
;__Lib_MathDouble.c,614 :: 		
L_end_float_fpdiv:
0x0576	0x9508    	RET
; end of _float_fpdiv
_float_fpint:
;__Lib_MathDouble.c,190 :: 		
;__Lib_MathDouble.c,191 :: 		
0x0B04	0xDBE7    	RCALL      _float_unpacku+0
;__Lib_MathDouble.c,193 :: 		
0x0B06	0xF0F1    	BREQ       L0077
;__Lib_MathDouble.c,194 :: 		
0x0B08	0x2355    	TST        R21
;__Lib_MathDouble.c,195 :: 		
0x0B0A	0xF0C2    	BRMI       L0073
;__Lib_MathDouble.c,196 :: 		
0x0B0C	0x314F    	CPI        R20, 31
;__Lib_MathDouble.c,197 :: 		
0x0B0E	0xF4A8    	BRCC       L0072int
;__Lib_MathDouble.c,198 :: 		
0x0B10	0x3147    	CPI        R20, 23
;__Lib_MathDouble.c,199 :: 		
0x0B12	0xF0C1    	BREQ       L0077
;__Lib_MathDouble.c,200 :: 		
0x0B14	0xF450    	BRCC       L006A
;__Lib_MathDouble.c,201 :: 		
0x0B16	0x9541    	NEG        R20
;__Lib_MathDouble.c,202 :: 		
0x0B18	0x5E49    	SUBI       R20, 233
;__Lib_MathDouble.c,203 :: 		
0x0B1A	0xC005    	RJMP       L0068
;__Lib_MathDouble.c,204 :: 		
L0063:
;__Lib_MathDouble.c,205 :: 		
0x0B1C	0x9535    	ASR        R19
;__Lib_MathDouble.c,206 :: 		
0x0B1E	0x9527    	ROR        R18
;__Lib_MathDouble.c,207 :: 		
0x0B20	0x9517    	ROR        R17
;__Lib_MathDouble.c,208 :: 		
0x0B22	0x9507    	ROR        R16
;__Lib_MathDouble.c,209 :: 		
0x0B24	0x954A    	DEC        R20
;__Lib_MathDouble.c,210 :: 		
L0068:
;__Lib_MathDouble.c,211 :: 		
0x0B26	0xF7D1    	BRNE       L0063
;__Lib_MathDouble.c,212 :: 		
0x0B28	0xC00D    	RJMP       L0077
;__Lib_MathDouble.c,213 :: 		
L006A:
;__Lib_MathDouble.c,214 :: 		
0x0B2A	0x5147    	SUBI       R20, 23
;__Lib_MathDouble.c,215 :: 		
L006B:
;__Lib_MathDouble.c,216 :: 		
0x0B2C	0x0F00    	LSL        R16
;__Lib_MathDouble.c,217 :: 		
0x0B2E	0x1F11    	ROL        R17
;__Lib_MathDouble.c,218 :: 		
0x0B30	0x1F22    	ROL        R18
;__Lib_MathDouble.c,219 :: 		
0x0B32	0x1F33    	ROL        R19
;__Lib_MathDouble.c,220 :: 		
0x0B34	0x954A    	DEC        R20
;__Lib_MathDouble.c,221 :: 		
0x0B36	0xF7D1    	BRNE       L006B
;__Lib_MathDouble.c,222 :: 		
0x0B38	0xC005    	RJMP       L0077
;__Lib_MathDouble.c,223 :: 		
L0072int:
;__Lib_MathDouble.c,224 :: 		
0x0B3A	0xE73F    	LDI        R19, 127
;__Lib_MathDouble.c,225 :: 		
L0073:
;__Lib_MathDouble.c,226 :: 		
0x0B3C	0x2F23    	MOV        R18, R19
;__Lib_MathDouble.c,227 :: 		
0x0B3E	0x2F13    	MOV        R17, R19
;__Lib_MathDouble.c,228 :: 		
0x0B40	0x2F03    	MOV        R16, R19
;__Lib_MathDouble.c,229 :: 		
0x0B42	0xC003    	RJMP       L007A
;__Lib_MathDouble.c,230 :: 		
L0077:
;__Lib_MathDouble.c,231 :: 		
0x0B44	0x2366    	TST        R22
;__Lib_MathDouble.c,232 :: 		
0x0B46	0xF009    	BREQ       L007A
;__Lib_MathDouble.c,234 :: 		
0x0B48	0xDAE7    	RCALL      _float_neg32+0
;__Lib_MathDouble.c,236 :: 		
L007A:
;__Lib_MathDouble.c,238 :: 		
L_end_float_fpint:
0x0B4A	0x9508    	RET
; end of _float_fpint
_fm_endTune:
0x0EE0	0x93CF    	PUSH       R28
0x0EE2	0x93DF    	PUSH       R29
0x0EE4	0xB7CD    	IN         R28, SPL+0
0x0EE6	0xB7DE    	IN         R29, SPL+1
0x0EE8	0x97A0    	SBIW       R28, 32
0x0EEA	0xBFCD    	OUT        SPL+0, R28
0x0EEC	0xBFDE    	OUT        SPL+1, R29
0x0EEE	0x9621    	ADIW       R28, 1
;__fm_Driver.c,734 :: 		void fm_endTune( void )
;__fm_Driver.c,738 :: 		fm_readRegisters( regBuffer );
0x0EF0	0x922F    	PUSH       R2
0x0EF2	0x923F    	PUSH       R3
0x0EF4	0x924F    	PUSH       R4
0x0EF6	0x925F    	PUSH       R5
0x0EF8	0x926F    	PUSH       R6
0x0EFA	0x927F    	PUSH       R7
0x0EFC	0x928F    	PUSH       R8
0x0EFE	0x929F    	PUSH       R9
0x0F00	0x018E    	MOVW       R16, R28
0x0F02	0x0118    	MOVW       R2, R16
0x0F04	0x10C3940E  	CALL       _fm_readRegisters+0
;__fm_Driver.c,740 :: 		fm_setBits( regBuffer, _FM_CHANNEL, _FM_TUNE_MASK, _FM_TUNE_DISABLE );
0x0F08	0x018E    	MOVW       R16, R28
0x0F0A	0x2488    	CLR        R8
0x0F0C	0x2499    	CLR        R9
0x0F0E	0xEFBF    	LDI        R27, 255
0x0F10	0x2E6B    	MOV        R6, R27
0x0F12	0xE7BF    	LDI        R27, 127
0x0F14	0x2E7B    	MOV        R7, R27
0x0F16	0xE0B1    	LDI        R27, 1
0x0F18	0x2E4B    	MOV        R4, R27
0x0F1A	0xE0B0    	LDI        R27, 0
0x0F1C	0x2E5B    	MOV        R5, R27
0x0F1E	0x0118    	MOVW       R2, R16
0x0F20	0xD7CD    	RCALL      _fm_setBits+0
;__fm_Driver.c,742 :: 		fm_writeRegisters( regBuffer );
0x0F22	0x018E    	MOVW       R16, R28
0x0F24	0x0118    	MOVW       R2, R16
0x0F26	0xD774    	RCALL      _fm_writeRegisters+0
;__fm_Driver.c,743 :: 		}
L_end_fm_endTune:
0x0F28	0x909F    	POP        R9
0x0F2A	0x908F    	POP        R8
0x0F2C	0x907F    	POP        R7
0x0F2E	0x906F    	POP        R6
0x0F30	0x905F    	POP        R5
0x0F32	0x904F    	POP        R4
0x0F34	0x903F    	POP        R3
0x0F36	0x902F    	POP        R2
0x0F38	0x966F    	ADIW       R28, 31
0x0F3A	0xBFCD    	OUT        SPL+0, R28
0x0F3C	0xBFDE    	OUT        SPL+1, R29
0x0F3E	0x91DF    	POP        R29
0x0F40	0x91CF    	POP        R28
0x0F42	0x9508    	RET
; end of _fm_endTune
_fm_caseMemorize:
;Click_FM_AVR.c,166 :: 		void fm_caseMemorize( )
;Click_FM_AVR.c,168 :: 		if (memory_ == 0)
0x273E	0x922F    	PUSH       R2
0x2740	0x923F    	PUSH       R3
0x2742	0x924F    	PUSH       R4
0x2744	0x01AE9100  	LDS        R16, _memory_+0
0x2748	0x3000    	CPI        R16, 0
0x274A	0xF4A9    	BRNE       L_fm_caseMemorize14
L__fm_caseMemorize77:
;Click_FM_AVR.c,170 :: 		station1_ = stationFrequency_;
0x274C	0x02D39100  	LDS        R16, _stationFrequency_+0
0x2750	0x02D49110  	LDS        R17, _stationFrequency_+1
0x2754	0x03159300  	STS        _station1_+0, R16
0x2758	0x03169310  	STS        _station1_+1, R17
;Click_FM_AVR.c,171 :: 		memory_ += 1;
0x275C	0x01AE9100  	LDS        R16, _memory_+0
0x2760	0x5F0F    	SUBI       R16, 255
0x2762	0x01AE9300  	STS        _memory_+0, R16
;Click_FM_AVR.c,173 :: 		mikrobus_logWrite( "station 1 memorized", _LOG_LINE );
0x2766	0xE0B2    	LDI        R27, 2
0x2768	0x2E4B    	MOV        R4, R27
0x276A	0xE8BE    	LDI        R27, lo_addr(?lstr16_Click_FM_AVR+0)
0x276C	0x2E2B    	MOV        R2, R27
0x276E	0xE0B2    	LDI        R27, hi_addr(?lstr16_Click_FM_AVR+0)
0x2770	0x2E3B    	MOV        R3, R27
0x2772	0xD643    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,174 :: 		}
0x2774	0xC048    	RJMP       L_fm_caseMemorize15
L_fm_caseMemorize14:
;Click_FM_AVR.c,175 :: 		else if (memory_ == 1)
0x2776	0x01AE9100  	LDS        R16, _memory_+0
0x277A	0x3001    	CPI        R16, 1
0x277C	0xF4A9    	BRNE       L_fm_caseMemorize16
L__fm_caseMemorize78:
;Click_FM_AVR.c,177 :: 		station2_ = stationFrequency_;
0x277E	0x02D39100  	LDS        R16, _stationFrequency_+0
0x2782	0x02D49110  	LDS        R17, _stationFrequency_+1
0x2786	0x03179300  	STS        _station2_+0, R16
0x278A	0x03189310  	STS        _station2_+1, R17
;Click_FM_AVR.c,178 :: 		memory_ += 1;
0x278E	0x01AE9100  	LDS        R16, _memory_+0
0x2792	0x5F0F    	SUBI       R16, 255
0x2794	0x01AE9300  	STS        _memory_+0, R16
;Click_FM_AVR.c,180 :: 		mikrobus_logWrite( "station 2 memorized", _LOG_LINE );
0x2798	0xE0B2    	LDI        R27, 2
0x279A	0x2E4B    	MOV        R4, R27
0x279C	0xE6B6    	LDI        R27, lo_addr(?lstr17_Click_FM_AVR+0)
0x279E	0x2E2B    	MOV        R2, R27
0x27A0	0xE0B2    	LDI        R27, hi_addr(?lstr17_Click_FM_AVR+0)
0x27A2	0x2E3B    	MOV        R3, R27
0x27A4	0xD62A    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,181 :: 		}
0x27A6	0xC02F    	RJMP       L_fm_caseMemorize17
L_fm_caseMemorize16:
;Click_FM_AVR.c,182 :: 		else if (memory_ == 2)
0x27A8	0x01AE9100  	LDS        R16, _memory_+0
0x27AC	0x3002    	CPI        R16, 2
0x27AE	0xF4A9    	BRNE       L_fm_caseMemorize18
L__fm_caseMemorize79:
;Click_FM_AVR.c,184 :: 		station3_ = stationFrequency_;
0x27B0	0x02D39100  	LDS        R16, _stationFrequency_+0
0x27B4	0x02D49110  	LDS        R17, _stationFrequency_+1
0x27B8	0x03139300  	STS        _station3_+0, R16
0x27BC	0x03149310  	STS        _station3_+1, R17
;Click_FM_AVR.c,185 :: 		memory_ += 1;
0x27C0	0x01AE9100  	LDS        R16, _memory_+0
0x27C4	0x5F0F    	SUBI       R16, 255
0x27C6	0x01AE9300  	STS        _memory_+0, R16
;Click_FM_AVR.c,187 :: 		mikrobus_logWrite( "station 3 memorized", _LOG_LINE );
0x27CA	0xE0B2    	LDI        R27, 2
0x27CC	0x2E4B    	MOV        R4, R27
0x27CE	0xE7BA    	LDI        R27, lo_addr(?lstr18_Click_FM_AVR+0)
0x27D0	0x2E2B    	MOV        R2, R27
0x27D2	0xE0B2    	LDI        R27, hi_addr(?lstr18_Click_FM_AVR+0)
0x27D4	0x2E3B    	MOV        R3, R27
0x27D6	0xD611    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,188 :: 		}
0x27D8	0xC016    	RJMP       L_fm_caseMemorize19
L_fm_caseMemorize18:
;Click_FM_AVR.c,189 :: 		else if (memory_ == 3)
0x27DA	0x01AE9100  	LDS        R16, _memory_+0
0x27DE	0x3003    	CPI        R16, 3
0x27E0	0xF491    	BRNE       L_fm_caseMemorize20
L__fm_caseMemorize80:
;Click_FM_AVR.c,191 :: 		station1_ = stationFrequency_;
0x27E2	0x02D39100  	LDS        R16, _stationFrequency_+0
0x27E6	0x02D49110  	LDS        R17, _stationFrequency_+1
0x27EA	0x03159300  	STS        _station1_+0, R16
0x27EE	0x03169310  	STS        _station1_+1, R17
;Click_FM_AVR.c,192 :: 		memory_ = 1;
0x27F2	0xE0B1    	LDI        R27, 1
0x27F4	0x01AE93B0  	STS        _memory_+0, R27
;Click_FM_AVR.c,194 :: 		mikrobus_logWrite( "station 1 memorized", _LOG_LINE );
0x27F8	0xE0B2    	LDI        R27, 2
0x27FA	0x2E4B    	MOV        R4, R27
0x27FC	0xEAB2    	LDI        R27, lo_addr(?lstr19_Click_FM_AVR+0)
0x27FE	0x2E2B    	MOV        R2, R27
0x2800	0xE0B2    	LDI        R27, hi_addr(?lstr19_Click_FM_AVR+0)
0x2802	0x2E3B    	MOV        R3, R27
0x2804	0xD5FA    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,195 :: 		}
L_fm_caseMemorize20:
L_fm_caseMemorize19:
L_fm_caseMemorize17:
L_fm_caseMemorize15:
;Click_FM_AVR.c,196 :: 		}
L_end_fm_caseMemorize:
0x2806	0x904F    	POP        R4
0x2808	0x903F    	POP        R3
0x280A	0x902F    	POP        R2
0x280C	0x9508    	RET
; end of _fm_caseMemorize
_fm_caseMute:
;Click_FM_AVR.c,198 :: 		void fm_caseMute( )
;Click_FM_AVR.c,200 :: 		if (mute_ == 0)
0x2496	0x922F    	PUSH       R2
0x2498	0x923F    	PUSH       R3
0x249A	0x924F    	PUSH       R4
0x249C	0x01C19100  	LDS        R16, _mute_+0
0x24A0	0x3000    	CPI        R16, 0
0x24A2	0xF469    	BRNE       L_fm_caseMute21
L__fm_caseMute82:
;Click_FM_AVR.c,202 :: 		fm_muteEnable( );
0x24A4	0x073F940E  	CALL       _fm_muteEnable+0
;Click_FM_AVR.c,204 :: 		mikrobus_logWrite( "mute enabled", _LOG_LINE );
0x24A8	0xE0B2    	LDI        R27, 2
0x24AA	0x2E4B    	MOV        R4, R27
0x24AC	0xEABF    	LDI        R27, lo_addr(?lstr20_Click_FM_AVR+0)
0x24AE	0x2E2B    	MOV        R2, R27
0x24B0	0xE0B1    	LDI        R27, hi_addr(?lstr20_Click_FM_AVR+0)
0x24B2	0x2E3B    	MOV        R3, R27
0x24B4	0xD7A2    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,206 :: 		mute_ = 1;
0x24B6	0xE0B1    	LDI        R27, 1
0x24B8	0x01C193B0  	STS        _mute_+0, R27
;Click_FM_AVR.c,207 :: 		}
0x24BC	0xC010    	RJMP       L_fm_caseMute22
L_fm_caseMute21:
;Click_FM_AVR.c,208 :: 		else if (mute_ == 1)
0x24BE	0x01C19100  	LDS        R16, _mute_+0
0x24C2	0x3001    	CPI        R16, 1
0x24C4	0xF461    	BRNE       L_fm_caseMute23
L__fm_caseMute83:
;Click_FM_AVR.c,210 :: 		fm_muteDisable( );
0x24C6	0x070C940E  	CALL       _fm_muteDisable+0
;Click_FM_AVR.c,212 :: 		mikrobus_logWrite( "mute disabled", _LOG_LINE );
0x24CA	0xE0B2    	LDI        R27, 2
0x24CC	0x2E4B    	MOV        R4, R27
0x24CE	0xEAB0    	LDI        R27, lo_addr(?lstr21_Click_FM_AVR+0)
0x24D0	0x2E2B    	MOV        R2, R27
0x24D2	0xE0B1    	LDI        R27, hi_addr(?lstr21_Click_FM_AVR+0)
0x24D4	0x2E3B    	MOV        R3, R27
0x24D6	0xD791    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,214 :: 		mute_ = 0;
0x24D8	0xE0B0    	LDI        R27, 0
0x24DA	0x01C193B0  	STS        _mute_+0, R27
;Click_FM_AVR.c,215 :: 		}
L_fm_caseMute23:
L_fm_caseMute22:
;Click_FM_AVR.c,216 :: 		}
L_end_fm_caseMute:
0x24DE	0x904F    	POP        R4
0x24E0	0x903F    	POP        R3
0x24E2	0x902F    	POP        R2
0x24E4	0x9508    	RET
; end of _fm_caseMute
_fm_muteEnable:
0x0E7E	0x93CF    	PUSH       R28
0x0E80	0x93DF    	PUSH       R29
0x0E82	0xB7CD    	IN         R28, SPL+0
0x0E84	0xB7DE    	IN         R29, SPL+1
0x0E86	0x97A0    	SBIW       R28, 32
0x0E88	0xBFCD    	OUT        SPL+0, R28
0x0E8A	0xBFDE    	OUT        SPL+1, R29
0x0E8C	0x9621    	ADIW       R28, 1
;__fm_Driver.c,821 :: 		void fm_muteEnable( void )
;__fm_Driver.c,825 :: 		fm_readRegisters( regBuffer );
0x0E8E	0x922F    	PUSH       R2
0x0E90	0x923F    	PUSH       R3
0x0E92	0x924F    	PUSH       R4
0x0E94	0x925F    	PUSH       R5
0x0E96	0x926F    	PUSH       R6
0x0E98	0x927F    	PUSH       R7
0x0E9A	0x928F    	PUSH       R8
0x0E9C	0x929F    	PUSH       R9
0x0E9E	0x018E    	MOVW       R16, R28
0x0EA0	0x0118    	MOVW       R2, R16
0x0EA2	0x10C3940E  	CALL       _fm_readRegisters+0
;__fm_Driver.c,827 :: 		fm_setBits( regBuffer, _FM_POWER_CONFIGURATION, _FM_MUTE_MASK, _FM_MUTE_ENABLE );
0x0EA6	0x018E    	MOVW       R16, R28
0x0EA8	0x2488    	CLR        R8
0x0EAA	0x2499    	CLR        R9
0x0EAC	0xEFBF    	LDI        R27, 255
0x0EAE	0x2E6B    	MOV        R6, R27
0x0EB0	0xEBBF    	LDI        R27, 191
0x0EB2	0x2E7B    	MOV        R7, R27
0x0EB4	0x2444    	CLR        R4
0x0EB6	0x2455    	CLR        R5
0x0EB8	0x0118    	MOVW       R2, R16
0x0EBA	0x0F5E940E  	CALL       _fm_setBits+0
;__fm_Driver.c,829 :: 		fm_writeRegisters( regBuffer );
0x0EBE	0x018E    	MOVW       R16, R28
0x0EC0	0x0118    	MOVW       R2, R16
0x0EC2	0xD7A6    	RCALL      _fm_writeRegisters+0
;__fm_Driver.c,830 :: 		}
L_end_fm_muteEnable:
0x0EC4	0x909F    	POP        R9
0x0EC6	0x908F    	POP        R8
0x0EC8	0x907F    	POP        R7
0x0ECA	0x906F    	POP        R6
0x0ECC	0x905F    	POP        R5
0x0ECE	0x904F    	POP        R4
0x0ED0	0x903F    	POP        R3
0x0ED2	0x902F    	POP        R2
0x0ED4	0x966F    	ADIW       R28, 31
0x0ED6	0xBFCD    	OUT        SPL+0, R28
0x0ED8	0xBFDE    	OUT        SPL+1, R29
0x0EDA	0x91DF    	POP        R29
0x0EDC	0x91CF    	POP        R28
0x0EDE	0x9508    	RET
; end of _fm_muteEnable
_fm_muteDisable:
0x0E18	0x93CF    	PUSH       R28
0x0E1A	0x93DF    	PUSH       R29
0x0E1C	0xB7CD    	IN         R28, SPL+0
0x0E1E	0xB7DE    	IN         R29, SPL+1
0x0E20	0x97A0    	SBIW       R28, 32
0x0E22	0xBFCD    	OUT        SPL+0, R28
0x0E24	0xBFDE    	OUT        SPL+1, R29
0x0E26	0x9621    	ADIW       R28, 1
;__fm_Driver.c,832 :: 		void fm_muteDisable( void )
;__fm_Driver.c,836 :: 		fm_readRegisters( regBuffer );
0x0E28	0x922F    	PUSH       R2
0x0E2A	0x923F    	PUSH       R3
0x0E2C	0x924F    	PUSH       R4
0x0E2E	0x925F    	PUSH       R5
0x0E30	0x926F    	PUSH       R6
0x0E32	0x927F    	PUSH       R7
0x0E34	0x928F    	PUSH       R8
0x0E36	0x929F    	PUSH       R9
0x0E38	0x018E    	MOVW       R16, R28
0x0E3A	0x0118    	MOVW       R2, R16
0x0E3C	0x10C3940E  	CALL       _fm_readRegisters+0
;__fm_Driver.c,838 :: 		fm_setBits( regBuffer, _FM_POWER_CONFIGURATION, _FM_MUTE_MASK, _FM_MUTE_DISABLE );
0x0E40	0x018E    	MOVW       R16, R28
0x0E42	0xE0B0    	LDI        R27, 0
0x0E44	0x2E8B    	MOV        R8, R27
0x0E46	0xE4B0    	LDI        R27, 64
0x0E48	0x2E9B    	MOV        R9, R27
0x0E4A	0xEFBF    	LDI        R27, 255
0x0E4C	0x2E6B    	MOV        R6, R27
0x0E4E	0xEBBF    	LDI        R27, 191
0x0E50	0x2E7B    	MOV        R7, R27
0x0E52	0x2444    	CLR        R4
0x0E54	0x2455    	CLR        R5
0x0E56	0x0118    	MOVW       R2, R16
0x0E58	0x0F5E940E  	CALL       _fm_setBits+0
;__fm_Driver.c,840 :: 		fm_writeRegisters( regBuffer );
0x0E5C	0x018E    	MOVW       R16, R28
0x0E5E	0x0118    	MOVW       R2, R16
0x0E60	0xD7D7    	RCALL      _fm_writeRegisters+0
;__fm_Driver.c,841 :: 		}
L_end_fm_muteDisable:
0x0E62	0x909F    	POP        R9
0x0E64	0x908F    	POP        R8
0x0E66	0x907F    	POP        R7
0x0E68	0x906F    	POP        R6
0x0E6A	0x905F    	POP        R5
0x0E6C	0x904F    	POP        R4
0x0E6E	0x903F    	POP        R3
0x0E70	0x902F    	POP        R2
0x0E72	0x966F    	ADIW       R28, 31
0x0E74	0xBFCD    	OUT        SPL+0, R28
0x0E76	0xBFDE    	OUT        SPL+1, R29
0x0E78	0x91DF    	POP        R29
0x0E7A	0x91CF    	POP        R28
0x0E7C	0x9508    	RET
; end of _fm_muteDisable
_fm_caseStation1:
;Click_FM_AVR.c,218 :: 		void fm_caseStation1( )
;Click_FM_AVR.c,220 :: 		fm_tuneChannel( station1_ );
0x2CDC	0x922F    	PUSH       R2
0x2CDE	0x923F    	PUSH       R3
0x2CE0	0x924F    	PUSH       R4
0x2CE2	0x925F    	PUSH       R5
0x2CE4	0x926F    	PUSH       R6
0x2CE6	0x927F    	PUSH       R7
0x2CE8	0x03159020  	LDS        R2, _station1_+0
0x2CEC	0x03169030  	LDS        R3, _station1_+1
0x2CF0	0x09B9940E  	CALL       _fm_tuneChannel+0
;Click_FM_AVR.c,222 :: 		Delay_ms(100);
0x2CF4	0xE025    	LDI        R18, 5
0x2CF6	0xE01F    	LDI        R17, 15
0x2CF8	0xEF02    	LDI        R16, 242
L_fm_caseStation124:
0x2CFA	0x950A    	DEC        R16
0x2CFC	0xF7F1    	BRNE       L_fm_caseStation124
0x2CFE	0x951A    	DEC        R17
0x2D00	0xF7E1    	BRNE       L_fm_caseStation124
0x2D02	0x952A    	DEC        R18
0x2D04	0xF7D1    	BRNE       L_fm_caseStation124
;Click_FM_AVR.c,224 :: 		fm_endTune( );
0x2D06	0x0770940E  	CALL       _fm_endTune+0
;Click_FM_AVR.c,226 :: 		Delay_ms(10);
0x2D0A	0xE618    	LDI        R17, 104
0x2D0C	0xEE05    	LDI        R16, 229
L_fm_caseStation126:
0x2D0E	0x950A    	DEC        R16
0x2D10	0xF7F1    	BRNE       L_fm_caseStation126
0x2D12	0x951A    	DEC        R17
0x2D14	0xF7E1    	BRNE       L_fm_caseStation126
;Click_FM_AVR.c,228 :: 		receivedSignalStrengthIndicator = fm_getReceivedSignalStrengthIndicator( );
0x2D16	0x05B0940E  	CALL       _fm_getReceivedSignalStrengthIndicator+0
0x2D1A	0x02DA9300  	STS        _receivedSignalStrengthIndicator+0, R16
0x2D1E	0xE0B0    	LDI        R27, 0
0x2D20	0x02DB93B0  	STS        _receivedSignalStrengthIndicator+1, R27
;Click_FM_AVR.c,229 :: 		channelFrequency_ = fm_getChannelFrequency( );
0x2D24	0x05CC940E  	CALL       _fm_getChannelFrequency+0
0x2D28	0x02CF9300  	STS        _channelFrequency_+0, R16
0x2D2C	0x02D09310  	STS        _channelFrequency_+1, R17
0x2D30	0x02D19320  	STS        _channelFrequency_+2, R18
0x2D34	0x02D29330  	STS        _channelFrequency_+3, R19
;Click_FM_AVR.c,231 :: 		mikrobus_logWrite( "station 1 tuned", _LOG_LINE );
0x2D38	0xE0B2    	LDI        R27, 2
0x2D3A	0x2E4B    	MOV        R4, R27
0x2D3C	0xE2B9    	LDI        R27, lo_addr(?lstr22_Click_FM_AVR+0)
0x2D3E	0x2E2B    	MOV        R2, R27
0x2D40	0xE0B2    	LDI        R27, hi_addr(?lstr22_Click_FM_AVR+0)
0x2D42	0x2E3B    	MOV        R3, R27
0x2D44	0xD35A    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,233 :: 		WordToStr( receivedSignalStrengthIndicator, text );
0x2D46	0xEDBC    	LDI        R27, lo_addr(_text+0)
0x2D48	0x2E4B    	MOV        R4, R27
0x2D4A	0xE0B2    	LDI        R27, hi_addr(_text+0)
0x2D4C	0x2E5B    	MOV        R5, R27
0x2D4E	0x02DA9020  	LDS        R2, _receivedSignalStrengthIndicator+0
0x2D52	0x02DB9030  	LDS        R3, _receivedSignalStrengthIndicator+1
0x2D56	0x0A0B940E  	CALL       _WordToStr+0
;Click_FM_AVR.c,234 :: 		mikrobus_logWrite( "rssi:", _LOG_TEXT );
0x2D5A	0xE0B1    	LDI        R27, 1
0x2D5C	0x2E4B    	MOV        R4, R27
0x2D5E	0xE6BD    	LDI        R27, lo_addr(?lstr23_Click_FM_AVR+0)
0x2D60	0x2E2B    	MOV        R2, R27
0x2D62	0xE0B1    	LDI        R27, hi_addr(?lstr23_Click_FM_AVR+0)
0x2D64	0x2E3B    	MOV        R3, R27
0x2D66	0xD349    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,235 :: 		mikrobus_logWrite( text, _LOG_TEXT );
0x2D68	0xE0B1    	LDI        R27, 1
0x2D6A	0x2E4B    	MOV        R4, R27
0x2D6C	0xEDBC    	LDI        R27, lo_addr(_text+0)
0x2D6E	0x2E2B    	MOV        R2, R27
0x2D70	0xE0B2    	LDI        R27, hi_addr(_text+0)
0x2D72	0x2E3B    	MOV        R3, R27
0x2D74	0xD342    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,236 :: 		mikrobus_logWrite( " dBuV", _LOG_LINE );
0x2D76	0xE0B2    	LDI        R27, 2
0x2D78	0x2E4B    	MOV        R4, R27
0x2D7A	0xEFB0    	LDI        R27, lo_addr(?lstr24_Click_FM_AVR+0)
0x2D7C	0x2E2B    	MOV        R2, R27
0x2D7E	0xE0B0    	LDI        R27, hi_addr(?lstr24_Click_FM_AVR+0)
0x2D80	0x2E3B    	MOV        R3, R27
0x2D82	0xD33B    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,238 :: 		FloatToStr( channelFrequency_, text );
0x2D84	0xEDBC    	LDI        R27, lo_addr(_text+0)
0x2D86	0x2E6B    	MOV        R6, R27
0x2D88	0xE0B2    	LDI        R27, hi_addr(_text+0)
0x2D8A	0x2E7B    	MOV        R7, R27
0x2D8C	0x02CF9020  	LDS        R2, _channelFrequency_+0
0x2D90	0x02D09030  	LDS        R3, _channelFrequency_+1
0x2D94	0x02D19040  	LDS        R4, _channelFrequency_+2
0x2D98	0x02D29050  	LDS        R5, _channelFrequency_+3
0x2D9C	0x0C36940E  	CALL       _FloatToStr+0
;Click_FM_AVR.c,239 :: 		mikrobus_logWrite( "tuned frequency:", _LOG_TEXT );
0x2DA0	0xE0B1    	LDI        R27, 1
0x2DA2	0x2E4B    	MOV        R4, R27
0x2DA4	0xEFB6    	LDI        R27, lo_addr(?lstr25_Click_FM_AVR+0)
0x2DA6	0x2E2B    	MOV        R2, R27
0x2DA8	0xE0B0    	LDI        R27, hi_addr(?lstr25_Click_FM_AVR+0)
0x2DAA	0x2E3B    	MOV        R3, R27
0x2DAC	0xD326    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,240 :: 		mikrobus_logWrite( text, _LOG_TEXT );
0x2DAE	0xE0B1    	LDI        R27, 1
0x2DB0	0x2E4B    	MOV        R4, R27
0x2DB2	0xEDBC    	LDI        R27, lo_addr(_text+0)
0x2DB4	0x2E2B    	MOV        R2, R27
0x2DB6	0xE0B2    	LDI        R27, hi_addr(_text+0)
0x2DB8	0x2E3B    	MOV        R3, R27
0x2DBA	0xD31F    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,241 :: 		mikrobus_logWrite( " MHz", _LOG_LINE );
0x2DBC	0xE0B2    	LDI        R27, 2
0x2DBE	0x2E4B    	MOV        R4, R27
0x2DC0	0xEEBB    	LDI        R27, lo_addr(?lstr26_Click_FM_AVR+0)
0x2DC2	0x2E2B    	MOV        R2, R27
0x2DC4	0xE0B0    	LDI        R27, hi_addr(?lstr26_Click_FM_AVR+0)
0x2DC6	0x2E3B    	MOV        R3, R27
0x2DC8	0xD318    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,242 :: 		}
L_end_fm_caseStation1:
0x2DCA	0x907F    	POP        R7
0x2DCC	0x906F    	POP        R6
0x2DCE	0x905F    	POP        R5
0x2DD0	0x904F    	POP        R4
0x2DD2	0x903F    	POP        R3
0x2DD4	0x902F    	POP        R2
0x2DD6	0x9508    	RET
; end of _fm_caseStation1
_fm_tuneChannel:
0x1372	0x93CF    	PUSH       R28
0x1374	0x93DF    	PUSH       R29
0x1376	0xB7CD    	IN         R28, SPL+0
0x1378	0xB7DE    	IN         R29, SPL+1
0x137A	0x97A0    	SBIW       R28, 32
0x137C	0xBFCD    	OUT        SPL+0, R28
0x137E	0xBFDE    	OUT        SPL+1, R29
0x1380	0x9621    	ADIW       R28, 1
;__fm_Driver.c,637 :: 		void fm_tuneChannel( uint16_t channel_ )
;__fm_Driver.c,641 :: 		fm_readRegisters( regBuffer );
0x1382	0x922F    	PUSH       R2
0x1384	0x923F    	PUSH       R3
0x1386	0x924F    	PUSH       R4
0x1388	0x925F    	PUSH       R5
0x138A	0x926F    	PUSH       R6
0x138C	0x927F    	PUSH       R7
0x138E	0x928F    	PUSH       R8
0x1390	0x929F    	PUSH       R9
0x1392	0x018E    	MOVW       R16, R28
0x1394	0x923F    	PUSH       R3
0x1396	0x922F    	PUSH       R2
0x1398	0x0118    	MOVW       R2, R16
0x139A	0xD6F5    	RCALL      _fm_readRegisters+0
0x139C	0x902F    	POP        R2
0x139E	0x903F    	POP        R3
;__fm_Driver.c,643 :: 		channel_ &= 0x03FF;
0x13A0	0x0181    	MOVW       R16, R2
0x13A2	0x7013    	ANDI       R17, 3
0x13A4	0x0118    	MOVW       R2, R16
;__fm_Driver.c,645 :: 		regBuffer[_FM_CHANNEL] &= 0x0000;
0x13A6	0x018E    	MOVW       R16, R28
0x13A8	0x0198    	MOVW       R18, R16
0x13AA	0x5F2E    	SUBI       R18, 254
0x13AC	0x4F3F    	SBCI       R19, 255
0x13AE	0x01F9    	MOVW       R30, R18
0x13B0	0x9101    	LD         R16, Z+
0x13B2	0x9111    	LD         R17, Z+
0x13B4	0x7000    	ANDI       R16, 0
0x13B6	0x7010    	ANDI       R17, 0
0x13B8	0x01F9    	MOVW       R30, R18
0x13BA	0x9301    	ST         Z+, R16
0x13BC	0x9311    	ST         Z+, R17
;__fm_Driver.c,646 :: 		regBuffer[_FM_CHANNEL] |= channel_;
0x13BE	0x018E    	MOVW       R16, R28
0x13C0	0x0198    	MOVW       R18, R16
0x13C2	0x5F2E    	SUBI       R18, 254
0x13C4	0x4F3F    	SBCI       R19, 255
0x13C6	0x01F9    	MOVW       R30, R18
0x13C8	0x9101    	LD         R16, Z+
0x13CA	0x9111    	LD         R17, Z+
0x13CC	0x2902    	OR         R16, R2
0x13CE	0x2913    	OR         R17, R3
0x13D0	0x01F9    	MOVW       R30, R18
0x13D2	0x9301    	ST         Z+, R16
0x13D4	0x9311    	ST         Z+, R17
;__fm_Driver.c,648 :: 		fm_setBits( regBuffer, _FM_CHANNEL, _FM_TUNE_MASK, _FM_TUNE_ENABLE );
0x13D6	0x018E    	MOVW       R16, R28
0x13D8	0xE0B0    	LDI        R27, 0
0x13DA	0x2E8B    	MOV        R8, R27
0x13DC	0xE8B0    	LDI        R27, 128
0x13DE	0x2E9B    	MOV        R9, R27
0x13E0	0xEFBF    	LDI        R27, 255
0x13E2	0x2E6B    	MOV        R6, R27
0x13E4	0xE7BF    	LDI        R27, 127
0x13E6	0x2E7B    	MOV        R7, R27
0x13E8	0xE0B1    	LDI        R27, 1
0x13EA	0x2E4B    	MOV        R4, R27
0x13EC	0xE0B0    	LDI        R27, 0
0x13EE	0x2E5B    	MOV        R5, R27
0x13F0	0x0118    	MOVW       R2, R16
0x13F2	0xD564    	RCALL      _fm_setBits+0
;__fm_Driver.c,650 :: 		fm_writeRegisters( regBuffer );
0x13F4	0x018E    	MOVW       R16, R28
0x13F6	0x0118    	MOVW       R2, R16
0x13F8	0xD50B    	RCALL      _fm_writeRegisters+0
;__fm_Driver.c,651 :: 		}
L_end_fm_tuneChannel:
0x13FA	0x909F    	POP        R9
0x13FC	0x908F    	POP        R8
0x13FE	0x907F    	POP        R7
0x1400	0x906F    	POP        R6
0x1402	0x905F    	POP        R5
0x1404	0x904F    	POP        R4
0x1406	0x903F    	POP        R3
0x1408	0x902F    	POP        R2
0x140A	0x966F    	ADIW       R28, 31
0x140C	0xBFCD    	OUT        SPL+0, R28
0x140E	0xBFDE    	OUT        SPL+1, R29
0x1410	0x91DF    	POP        R29
0x1412	0x91CF    	POP        R28
0x1414	0x9508    	RET
; end of _fm_tuneChannel
_fm_caseStation2:
;Click_FM_AVR.c,244 :: 		void fm_caseStation2( )
;Click_FM_AVR.c,246 :: 		fm_tuneChannel( station2_ );
0x2E1A	0x922F    	PUSH       R2
0x2E1C	0x923F    	PUSH       R3
0x2E1E	0x924F    	PUSH       R4
0x2E20	0x925F    	PUSH       R5
0x2E22	0x926F    	PUSH       R6
0x2E24	0x927F    	PUSH       R7
0x2E26	0x03179020  	LDS        R2, _station2_+0
0x2E2A	0x03189030  	LDS        R3, _station2_+1
0x2E2E	0x09B9940E  	CALL       _fm_tuneChannel+0
;Click_FM_AVR.c,248 :: 		Delay_ms(100);
0x2E32	0xE025    	LDI        R18, 5
0x2E34	0xE01F    	LDI        R17, 15
0x2E36	0xEF02    	LDI        R16, 242
L_fm_caseStation228:
0x2E38	0x950A    	DEC        R16
0x2E3A	0xF7F1    	BRNE       L_fm_caseStation228
0x2E3C	0x951A    	DEC        R17
0x2E3E	0xF7E1    	BRNE       L_fm_caseStation228
0x2E40	0x952A    	DEC        R18
0x2E42	0xF7D1    	BRNE       L_fm_caseStation228
;Click_FM_AVR.c,250 :: 		fm_endTune( );
0x2E44	0x0770940E  	CALL       _fm_endTune+0
;Click_FM_AVR.c,252 :: 		Delay_ms(10);
0x2E48	0xE618    	LDI        R17, 104
0x2E4A	0xEE05    	LDI        R16, 229
L_fm_caseStation230:
0x2E4C	0x950A    	DEC        R16
0x2E4E	0xF7F1    	BRNE       L_fm_caseStation230
0x2E50	0x951A    	DEC        R17
0x2E52	0xF7E1    	BRNE       L_fm_caseStation230
;Click_FM_AVR.c,254 :: 		receivedSignalStrengthIndicator = fm_getReceivedSignalStrengthIndicator( );
0x2E54	0x05B0940E  	CALL       _fm_getReceivedSignalStrengthIndicator+0
0x2E58	0x02DA9300  	STS        _receivedSignalStrengthIndicator+0, R16
0x2E5C	0xE0B0    	LDI        R27, 0
0x2E5E	0x02DB93B0  	STS        _receivedSignalStrengthIndicator+1, R27
;Click_FM_AVR.c,255 :: 		channelFrequency_ = fm_getChannelFrequency( );
0x2E62	0x05CC940E  	CALL       _fm_getChannelFrequency+0
0x2E66	0x02CF9300  	STS        _channelFrequency_+0, R16
0x2E6A	0x02D09310  	STS        _channelFrequency_+1, R17
0x2E6E	0x02D19320  	STS        _channelFrequency_+2, R18
0x2E72	0x02D29330  	STS        _channelFrequency_+3, R19
;Click_FM_AVR.c,257 :: 		mikrobus_logWrite( "station 2 tuned", _LOG_LINE );
0x2E76	0xE0B2    	LDI        R27, 2
0x2E78	0x2E4B    	MOV        R4, R27
0x2E7A	0xE9B2    	LDI        R27, lo_addr(?lstr27_Click_FM_AVR+0)
0x2E7C	0x2E2B    	MOV        R2, R27
0x2E7E	0xE0B0    	LDI        R27, hi_addr(?lstr27_Click_FM_AVR+0)
0x2E80	0x2E3B    	MOV        R3, R27
0x2E82	0xD2BB    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,259 :: 		WordToStr( receivedSignalStrengthIndicator, text );
0x2E84	0xEDBC    	LDI        R27, lo_addr(_text+0)
0x2E86	0x2E4B    	MOV        R4, R27
0x2E88	0xE0B2    	LDI        R27, hi_addr(_text+0)
0x2E8A	0x2E5B    	MOV        R5, R27
0x2E8C	0x02DA9020  	LDS        R2, _receivedSignalStrengthIndicator+0
0x2E90	0x02DB9030  	LDS        R3, _receivedSignalStrengthIndicator+1
0x2E94	0x0A0B940E  	CALL       _WordToStr+0
;Click_FM_AVR.c,260 :: 		mikrobus_logWrite( "rssi:", _LOG_TEXT );
0x2E98	0xE0B1    	LDI        R27, 1
0x2E9A	0x2E4B    	MOV        R4, R27
0x2E9C	0xECB0    	LDI        R27, lo_addr(?lstr28_Click_FM_AVR+0)
0x2E9E	0x2E2B    	MOV        R2, R27
0x2EA0	0xE0B0    	LDI        R27, hi_addr(?lstr28_Click_FM_AVR+0)
0x2EA2	0x2E3B    	MOV        R3, R27
0x2EA4	0xD2AA    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,261 :: 		mikrobus_logWrite( text, _LOG_TEXT );
0x2EA6	0xE0B1    	LDI        R27, 1
0x2EA8	0x2E4B    	MOV        R4, R27
0x2EAA	0xEDBC    	LDI        R27, lo_addr(_text+0)
0x2EAC	0x2E2B    	MOV        R2, R27
0x2EAE	0xE0B2    	LDI        R27, hi_addr(_text+0)
0x2EB0	0x2E3B    	MOV        R3, R27
0x2EB2	0xD2A3    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,262 :: 		mikrobus_logWrite( " dBuV", _LOG_LINE );
0x2EB4	0xE0B2    	LDI        R27, 2
0x2EB6	0x2E4B    	MOV        R4, R27
0x2EB8	0xECB6    	LDI        R27, lo_addr(?lstr29_Click_FM_AVR+0)
0x2EBA	0x2E2B    	MOV        R2, R27
0x2EBC	0xE0B0    	LDI        R27, hi_addr(?lstr29_Click_FM_AVR+0)
0x2EBE	0x2E3B    	MOV        R3, R27
0x2EC0	0xD29C    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,264 :: 		FloatToStr( channelFrequency_, text );
0x2EC2	0xEDBC    	LDI        R27, lo_addr(_text+0)
0x2EC4	0x2E6B    	MOV        R6, R27
0x2EC6	0xE0B2    	LDI        R27, hi_addr(_text+0)
0x2EC8	0x2E7B    	MOV        R7, R27
0x2ECA	0x02CF9020  	LDS        R2, _channelFrequency_+0
0x2ECE	0x02D09030  	LDS        R3, _channelFrequency_+1
0x2ED2	0x02D19040  	LDS        R4, _channelFrequency_+2
0x2ED6	0x02D29050  	LDS        R5, _channelFrequency_+3
0x2EDA	0x0C36940E  	CALL       _FloatToStr+0
;Click_FM_AVR.c,265 :: 		mikrobus_logWrite( "tuned frequency:", _LOG_TEXT );
0x2EDE	0xE0B1    	LDI        R27, 1
0x2EE0	0x2E4B    	MOV        R4, R27
0x2EE2	0xEABF    	LDI        R27, lo_addr(?lstr30_Click_FM_AVR+0)
0x2EE4	0x2E2B    	MOV        R2, R27
0x2EE6	0xE0B0    	LDI        R27, hi_addr(?lstr30_Click_FM_AVR+0)
0x2EE8	0x2E3B    	MOV        R3, R27
0x2EEA	0xD287    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,266 :: 		mikrobus_logWrite( text, _LOG_TEXT );
0x2EEC	0xE0B1    	LDI        R27, 1
0x2EEE	0x2E4B    	MOV        R4, R27
0x2EF0	0xEDBC    	LDI        R27, lo_addr(_text+0)
0x2EF2	0x2E2B    	MOV        R2, R27
0x2EF4	0xE0B2    	LDI        R27, hi_addr(_text+0)
0x2EF6	0x2E3B    	MOV        R3, R27
0x2EF8	0xD280    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,267 :: 		mikrobus_logWrite( " MHz", _LOG_LINE );
0x2EFA	0xE0B2    	LDI        R27, 2
0x2EFC	0x2E4B    	MOV        R4, R27
0x2EFE	0xEAB2    	LDI        R27, lo_addr(?lstr31_Click_FM_AVR+0)
0x2F00	0x2E2B    	MOV        R2, R27
0x2F02	0xE0B0    	LDI        R27, hi_addr(?lstr31_Click_FM_AVR+0)
0x2F04	0x2E3B    	MOV        R3, R27
0x2F06	0xD279    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,268 :: 		}
L_end_fm_caseStation2:
0x2F08	0x907F    	POP        R7
0x2F0A	0x906F    	POP        R6
0x2F0C	0x905F    	POP        R5
0x2F0E	0x904F    	POP        R4
0x2F10	0x903F    	POP        R3
0x2F12	0x902F    	POP        R2
0x2F14	0x9508    	RET
; end of _fm_caseStation2
_fm_caseStation3:
;Click_FM_AVR.c,270 :: 		void fm_caseStation3( )
;Click_FM_AVR.c,272 :: 		fm_tuneChannel( station3_ );
0x280E	0x922F    	PUSH       R2
0x2810	0x923F    	PUSH       R3
0x2812	0x924F    	PUSH       R4
0x2814	0x925F    	PUSH       R5
0x2816	0x926F    	PUSH       R6
0x2818	0x927F    	PUSH       R7
0x281A	0x03139020  	LDS        R2, _station3_+0
0x281E	0x03149030  	LDS        R3, _station3_+1
0x2822	0x09B9940E  	CALL       _fm_tuneChannel+0
;Click_FM_AVR.c,274 :: 		Delay_ms(100);
0x2826	0xE025    	LDI        R18, 5
0x2828	0xE01F    	LDI        R17, 15
0x282A	0xEF02    	LDI        R16, 242
L_fm_caseStation332:
0x282C	0x950A    	DEC        R16
0x282E	0xF7F1    	BRNE       L_fm_caseStation332
0x2830	0x951A    	DEC        R17
0x2832	0xF7E1    	BRNE       L_fm_caseStation332
0x2834	0x952A    	DEC        R18
0x2836	0xF7D1    	BRNE       L_fm_caseStation332
;Click_FM_AVR.c,276 :: 		fm_endTune( );
0x2838	0x0770940E  	CALL       _fm_endTune+0
;Click_FM_AVR.c,278 :: 		Delay_ms(10);
0x283C	0xE618    	LDI        R17, 104
0x283E	0xEE05    	LDI        R16, 229
L_fm_caseStation334:
0x2840	0x950A    	DEC        R16
0x2842	0xF7F1    	BRNE       L_fm_caseStation334
0x2844	0x951A    	DEC        R17
0x2846	0xF7E1    	BRNE       L_fm_caseStation334
;Click_FM_AVR.c,280 :: 		receivedSignalStrengthIndicator = fm_getReceivedSignalStrengthIndicator( );
0x2848	0x05B0940E  	CALL       _fm_getReceivedSignalStrengthIndicator+0
0x284C	0x02DA9300  	STS        _receivedSignalStrengthIndicator+0, R16
0x2850	0xE0B0    	LDI        R27, 0
0x2852	0x02DB93B0  	STS        _receivedSignalStrengthIndicator+1, R27
;Click_FM_AVR.c,281 :: 		channelFrequency_ = fm_getChannelFrequency( );
0x2856	0x05CC940E  	CALL       _fm_getChannelFrequency+0
0x285A	0x02CF9300  	STS        _channelFrequency_+0, R16
0x285E	0x02D09310  	STS        _channelFrequency_+1, R17
0x2862	0x02D19320  	STS        _channelFrequency_+2, R18
0x2866	0x02D29330  	STS        _channelFrequency_+3, R19
;Click_FM_AVR.c,283 :: 		mikrobus_logWrite( "station 3 tuned", _LOG_LINE );
0x286A	0xE0B2    	LDI        R27, 2
0x286C	0x2E4B    	MOV        R4, R27
0x286E	0xE7BC    	LDI        R27, lo_addr(?lstr32_Click_FM_AVR+0)
0x2870	0x2E2B    	MOV        R2, R27
0x2872	0xE0B0    	LDI        R27, hi_addr(?lstr32_Click_FM_AVR+0)
0x2874	0x2E3B    	MOV        R3, R27
0x2876	0xD5C1    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,285 :: 		WordToStr( receivedSignalStrengthIndicator, text );
0x2878	0xEDBC    	LDI        R27, lo_addr(_text+0)
0x287A	0x2E4B    	MOV        R4, R27
0x287C	0xE0B2    	LDI        R27, hi_addr(_text+0)
0x287E	0x2E5B    	MOV        R5, R27
0x2880	0x02DA9020  	LDS        R2, _receivedSignalStrengthIndicator+0
0x2884	0x02DB9030  	LDS        R3, _receivedSignalStrengthIndicator+1
0x2888	0x0A0B940E  	CALL       _WordToStr+0
;Click_FM_AVR.c,286 :: 		mikrobus_logWrite( "rssi:", _LOG_TEXT );
0x288C	0xE0B1    	LDI        R27, 1
0x288E	0x2E4B    	MOV        R4, R27
0x2890	0xE8BC    	LDI        R27, lo_addr(?lstr33_Click_FM_AVR+0)
0x2892	0x2E2B    	MOV        R2, R27
0x2894	0xE0B0    	LDI        R27, hi_addr(?lstr33_Click_FM_AVR+0)
0x2896	0x2E3B    	MOV        R3, R27
0x2898	0xD5B0    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,287 :: 		mikrobus_logWrite( text, _LOG_TEXT );
0x289A	0xE0B1    	LDI        R27, 1
0x289C	0x2E4B    	MOV        R4, R27
0x289E	0xEDBC    	LDI        R27, lo_addr(_text+0)
0x28A0	0x2E2B    	MOV        R2, R27
0x28A2	0xE0B2    	LDI        R27, hi_addr(_text+0)
0x28A4	0x2E3B    	MOV        R3, R27
0x28A6	0xD5A9    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,288 :: 		mikrobus_logWrite( " dBuV", _LOG_LINE );
0x28A8	0xE0B2    	LDI        R27, 2
0x28AA	0x2E4B    	MOV        R4, R27
0x28AC	0xE7B6    	LDI        R27, lo_addr(?lstr34_Click_FM_AVR+0)
0x28AE	0x2E2B    	MOV        R2, R27
0x28B0	0xE0B0    	LDI        R27, hi_addr(?lstr34_Click_FM_AVR+0)
0x28B2	0x2E3B    	MOV        R3, R27
0x28B4	0xD5A2    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,290 :: 		FloatToStr( channelFrequency_, text );
0x28B6	0xEDBC    	LDI        R27, lo_addr(_text+0)
0x28B8	0x2E6B    	MOV        R6, R27
0x28BA	0xE0B2    	LDI        R27, hi_addr(_text+0)
0x28BC	0x2E7B    	MOV        R7, R27
0x28BE	0x02CF9020  	LDS        R2, _channelFrequency_+0
0x28C2	0x02D09030  	LDS        R3, _channelFrequency_+1
0x28C6	0x02D19040  	LDS        R4, _channelFrequency_+2
0x28CA	0x02D29050  	LDS        R5, _channelFrequency_+3
0x28CE	0x0C36940E  	CALL       _FloatToStr+0
;Click_FM_AVR.c,291 :: 		mikrobus_logWrite( "tuned frequency:", _LOG_TEXT );
0x28D2	0xE0B1    	LDI        R27, 1
0x28D4	0x2E4B    	MOV        R4, R27
0x28D6	0xE6B0    	LDI        R27, lo_addr(?lstr35_Click_FM_AVR+0)
0x28D8	0x2E2B    	MOV        R2, R27
0x28DA	0xE0B0    	LDI        R27, hi_addr(?lstr35_Click_FM_AVR+0)
0x28DC	0x2E3B    	MOV        R3, R27
0x28DE	0xD58D    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,292 :: 		mikrobus_logWrite( text, _LOG_TEXT );
0x28E0	0xE0B1    	LDI        R27, 1
0x28E2	0x2E4B    	MOV        R4, R27
0x28E4	0xEDBC    	LDI        R27, lo_addr(_text+0)
0x28E6	0x2E2B    	MOV        R2, R27
0x28E8	0xE0B2    	LDI        R27, hi_addr(_text+0)
0x28EA	0x2E3B    	MOV        R3, R27
0x28EC	0xD586    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,293 :: 		mikrobus_logWrite( " MHz", _LOG_LINE );
0x28EE	0xE0B2    	LDI        R27, 2
0x28F0	0x2E4B    	MOV        R4, R27
0x28F2	0xE7B1    	LDI        R27, lo_addr(?lstr36_Click_FM_AVR+0)
0x28F4	0x2E2B    	MOV        R2, R27
0x28F6	0xE0B0    	LDI        R27, hi_addr(?lstr36_Click_FM_AVR+0)
0x28F8	0x2E3B    	MOV        R3, R27
0x28FA	0xD57F    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,294 :: 		}
L_end_fm_caseStation3:
0x28FC	0x907F    	POP        R7
0x28FE	0x906F    	POP        R6
0x2900	0x905F    	POP        R5
0x2902	0x904F    	POP        R4
0x2904	0x903F    	POP        R3
0x2906	0x902F    	POP        R2
0x2908	0x9508    	RET
; end of _fm_caseStation3
_fm_caseTuneUp:
;Click_FM_AVR.c,296 :: 		void fm_caseTuneUp( )
;Click_FM_AVR.c,298 :: 		errorFlag_ = fm_fineTuneUp( );
0x290A	0x922F    	PUSH       R2
0x290C	0x923F    	PUSH       R3
0x290E	0x924F    	PUSH       R4
0x2910	0x925F    	PUSH       R5
0x2912	0x926F    	PUSH       R6
0x2914	0x927F    	PUSH       R7
0x2916	0x08AE940E  	CALL       _fm_fineTuneUp+0
0x291A	0x02D99300  	STS        _errorFlag_+0, R16
;Click_FM_AVR.c,300 :: 		Delay_ms(100);
0x291E	0xE025    	LDI        R18, 5
0x2920	0xE01F    	LDI        R17, 15
0x2922	0xEF02    	LDI        R16, 242
L_fm_caseTuneUp36:
0x2924	0x950A    	DEC        R16
0x2926	0xF7F1    	BRNE       L_fm_caseTuneUp36
0x2928	0x951A    	DEC        R17
0x292A	0xF7E1    	BRNE       L_fm_caseTuneUp36
0x292C	0x952A    	DEC        R18
0x292E	0xF7D1    	BRNE       L_fm_caseTuneUp36
;Click_FM_AVR.c,302 :: 		fm_endTune( );
0x2930	0x0770940E  	CALL       _fm_endTune+0
;Click_FM_AVR.c,304 :: 		Delay_ms(10);
0x2934	0xE618    	LDI        R17, 104
0x2936	0xEE05    	LDI        R16, 229
L_fm_caseTuneUp38:
0x2938	0x950A    	DEC        R16
0x293A	0xF7F1    	BRNE       L_fm_caseTuneUp38
0x293C	0x951A    	DEC        R17
0x293E	0xF7E1    	BRNE       L_fm_caseTuneUp38
;Click_FM_AVR.c,306 :: 		if (errorFlag_ == 0)
0x2940	0x02D99100  	LDS        R16, _errorFlag_+0
0x2944	0x3000    	CPI        R16, 0
0x2946	0xF009    	BREQ       L__fm_caseTuneUp88
0x2948	0xC061    	RJMP       L_fm_caseTuneUp40
L__fm_caseTuneUp88:
;Click_FM_AVR.c,308 :: 		receivedSignalStrengthIndicator = fm_getReceivedSignalStrengthIndicator( );
0x294A	0x05B0940E  	CALL       _fm_getReceivedSignalStrengthIndicator+0
0x294E	0x02DA9300  	STS        _receivedSignalStrengthIndicator+0, R16
0x2952	0xE0B0    	LDI        R27, 0
0x2954	0x02DB93B0  	STS        _receivedSignalStrengthIndicator+1, R27
;Click_FM_AVR.c,309 :: 		channelFrequency_ = fm_getChannelFrequency( );
0x2958	0x05CC940E  	CALL       _fm_getChannelFrequency+0
0x295C	0x02CF9300  	STS        _channelFrequency_+0, R16
0x2960	0x02D09310  	STS        _channelFrequency_+1, R17
0x2964	0x02D19320  	STS        _channelFrequency_+2, R18
0x2968	0x02D29330  	STS        _channelFrequency_+3, R19
;Click_FM_AVR.c,310 :: 		stationFrequency_ = fm_getChannel( );
0x296C	0x0A4F940E  	CALL       _fm_getChannel+0
0x2970	0x02D39300  	STS        _stationFrequency_+0, R16
0x2974	0x02D49310  	STS        _stationFrequency_+1, R17
;Click_FM_AVR.c,312 :: 		mikrobus_logWrite( "tune up", _LOG_LINE );
0x2978	0xE0B2    	LDI        R27, 2
0x297A	0x2E4B    	MOV        R4, R27
0x297C	0xEAB7    	LDI        R27, lo_addr(?lstr37_Click_FM_AVR+0)
0x297E	0x2E2B    	MOV        R2, R27
0x2980	0xE0B0    	LDI        R27, hi_addr(?lstr37_Click_FM_AVR+0)
0x2982	0x2E3B    	MOV        R3, R27
0x2984	0xD53A    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,314 :: 		WordToStr( receivedSignalStrengthIndicator, text );
0x2986	0xEDBC    	LDI        R27, lo_addr(_text+0)
0x2988	0x2E4B    	MOV        R4, R27
0x298A	0xE0B2    	LDI        R27, hi_addr(_text+0)
0x298C	0x2E5B    	MOV        R5, R27
0x298E	0x02DA9020  	LDS        R2, _receivedSignalStrengthIndicator+0
0x2992	0x02DB9030  	LDS        R3, _receivedSignalStrengthIndicator+1
0x2996	0x0A0B940E  	CALL       _WordToStr+0
;Click_FM_AVR.c,315 :: 		mikrobus_logWrite( "rssi:", _LOG_TEXT );
0x299A	0xE0B1    	LDI        R27, 1
0x299C	0x2E4B    	MOV        R4, R27
0x299E	0xE5B7    	LDI        R27, lo_addr(?lstr38_Click_FM_AVR+0)
0x29A0	0x2E2B    	MOV        R2, R27
0x29A2	0xE0B1    	LDI        R27, hi_addr(?lstr38_Click_FM_AVR+0)
0x29A4	0x2E3B    	MOV        R3, R27
0x29A6	0xD529    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,316 :: 		mikrobus_logWrite( text, _LOG_TEXT );
0x29A8	0xE0B1    	LDI        R27, 1
0x29AA	0x2E4B    	MOV        R4, R27
0x29AC	0xEDBC    	LDI        R27, lo_addr(_text+0)
0x29AE	0x2E2B    	MOV        R2, R27
0x29B0	0xE0B2    	LDI        R27, hi_addr(_text+0)
0x29B2	0x2E3B    	MOV        R3, R27
0x29B4	0xD522    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,317 :: 		mikrobus_logWrite( " dBuV", _LOG_LINE );
0x29B6	0xE0B2    	LDI        R27, 2
0x29B8	0x2E4B    	MOV        R4, R27
0x29BA	0xE5BD    	LDI        R27, lo_addr(?lstr39_Click_FM_AVR+0)
0x29BC	0x2E2B    	MOV        R2, R27
0x29BE	0xE0B1    	LDI        R27, hi_addr(?lstr39_Click_FM_AVR+0)
0x29C0	0x2E3B    	MOV        R3, R27
0x29C2	0xD51B    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,319 :: 		FloatToStr( channelFrequency_, text );
0x29C4	0xEDBC    	LDI        R27, lo_addr(_text+0)
0x29C6	0x2E6B    	MOV        R6, R27
0x29C8	0xE0B2    	LDI        R27, hi_addr(_text+0)
0x29CA	0x2E7B    	MOV        R7, R27
0x29CC	0x02CF9020  	LDS        R2, _channelFrequency_+0
0x29D0	0x02D09030  	LDS        R3, _channelFrequency_+1
0x29D4	0x02D19040  	LDS        R4, _channelFrequency_+2
0x29D8	0x02D29050  	LDS        R5, _channelFrequency_+3
0x29DC	0x0C36940E  	CALL       _FloatToStr+0
;Click_FM_AVR.c,320 :: 		mikrobus_logWrite( "tuned frequency:", _LOG_TEXT );
0x29E0	0xE0B1    	LDI        R27, 1
0x29E2	0x2E4B    	MOV        R4, R27
0x29E4	0xE4B6    	LDI        R27, lo_addr(?lstr40_Click_FM_AVR+0)
0x29E6	0x2E2B    	MOV        R2, R27
0x29E8	0xE0B1    	LDI        R27, hi_addr(?lstr40_Click_FM_AVR+0)
0x29EA	0x2E3B    	MOV        R3, R27
0x29EC	0xD506    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,321 :: 		mikrobus_logWrite( text, _LOG_TEXT );
0x29EE	0xE0B1    	LDI        R27, 1
0x29F0	0x2E4B    	MOV        R4, R27
0x29F2	0xEDBC    	LDI        R27, lo_addr(_text+0)
0x29F4	0x2E2B    	MOV        R2, R27
0x29F6	0xE0B2    	LDI        R27, hi_addr(_text+0)
0x29F8	0x2E3B    	MOV        R3, R27
0x29FA	0xD4FF    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,322 :: 		mikrobus_logWrite( " MHz", _LOG_LINE );
0x29FC	0xE0B2    	LDI        R27, 2
0x29FE	0x2E4B    	MOV        R4, R27
0x2A00	0xE3BB    	LDI        R27, lo_addr(?lstr41_Click_FM_AVR+0)
0x2A02	0x2E2B    	MOV        R2, R27
0x2A04	0xE0B1    	LDI        R27, hi_addr(?lstr41_Click_FM_AVR+0)
0x2A06	0x2E3B    	MOV        R3, R27
0x2A08	0xD4F8    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,323 :: 		}
0x2A0A	0xC007    	RJMP       L_fm_caseTuneUp41
L_fm_caseTuneUp40:
;Click_FM_AVR.c,326 :: 		mikrobus_logWrite( "error", _LOG_LINE );
0x2A0C	0xE0B2    	LDI        R27, 2
0x2A0E	0x2E4B    	MOV        R4, R27
0x2A10	0xE4B0    	LDI        R27, lo_addr(?lstr42_Click_FM_AVR+0)
0x2A12	0x2E2B    	MOV        R2, R27
0x2A14	0xE0B1    	LDI        R27, hi_addr(?lstr42_Click_FM_AVR+0)
0x2A16	0x2E3B    	MOV        R3, R27
0x2A18	0xD4F0    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,327 :: 		}
L_fm_caseTuneUp41:
;Click_FM_AVR.c,328 :: 		}
L_end_fm_caseTuneUp:
0x2A1A	0x907F    	POP        R7
0x2A1C	0x906F    	POP        R6
0x2A1E	0x905F    	POP        R5
0x2A20	0x904F    	POP        R4
0x2A22	0x903F    	POP        R3
0x2A24	0x902F    	POP        R2
0x2A26	0x9508    	RET
; end of _fm_caseTuneUp
_fm_fineTuneUp:
0x115C	0x93CF    	PUSH       R28
0x115E	0x93DF    	PUSH       R29
0x1160	0xB7CD    	IN         R28, SPL+0
0x1162	0xB7DE    	IN         R29, SPL+1
0x1164	0x97AE    	SBIW       R28, 46
0x1166	0xBFCD    	OUT        SPL+0, R28
0x1168	0xBFDE    	OUT        SPL+1, R29
0x116A	0x9621    	ADIW       R28, 1
;__fm_Driver.c,843 :: 		uint8_t fm_fineTuneUp( void )
;__fm_Driver.c,857 :: 		fm_readRegisters( regBuffer );
0x116C	0x922F    	PUSH       R2
0x116E	0x923F    	PUSH       R3
0x1170	0x924F    	PUSH       R4
0x1172	0x925F    	PUSH       R5
0x1174	0x926F    	PUSH       R6
0x1176	0x927F    	PUSH       R7
0x1178	0x928F    	PUSH       R8
0x117A	0x929F    	PUSH       R9
0x117C	0x018E    	MOVW       R16, R28
0x117E	0x5F0E    	SUBI       R16, 254
0x1180	0x4F1F    	SBCI       R17, 255
0x1182	0x0118    	MOVW       R2, R16
0x1184	0x10C3940E  	CALL       _fm_readRegisters+0
;__fm_Driver.c,859 :: 		b = regBuffer[ _FM_SYSTEM_CONFIGURATION_2 ];
0x1188	0x01AE    	MOVW       R20, R28
0x118A	0x5F4E    	SUBI       R20, 254
0x118C	0x4F5F    	SBCI       R21, 255
0x118E	0x01FA    	MOVW       R30, R20
0x1190	0x9636    	ADIW       R30, 6
0x1192	0x9101    	LD         R16, Z+
0x1194	0x9111    	LD         R17, Z+
;__fm_Driver.c,860 :: 		b &= 0x00C0;
0x1196	0x7C00    	ANDI       R16, 192
0x1198	0x7010    	ANDI       R17, 0
;__fm_Driver.c,861 :: 		b >>= 6;
0x119A	0xE0B6    	LDI        R27, 6
L__fm_fineTuneUp182:
0x119C	0x9516    	LSR        R17
0x119E	0x9507    	ROR        R16
0x11A0	0x95BA    	DEC        R27
0x11A2	0xF7E1    	BRNE       L__fm_fineTuneUp182
L__fm_fineTuneUp183:
;__fm_Driver.c,862 :: 		b &= 0x0003;
0x11A4	0x0198    	MOVW       R18, R16
0x11A6	0x7023    	ANDI       R18, 3
0x11A8	0x7030    	ANDI       R19, 0
; b start address is: 22 (R22)
0x11AA	0x01B9    	MOVW       R22, R18
;__fm_Driver.c,864 :: 		s = regBuffer[ _FM_SYSTEM_CONFIGURATION_2 ];
0x11AC	0x01FA    	MOVW       R30, R20
0x11AE	0x9636    	ADIW       R30, 6
0x11B0	0x9101    	LD         R16, Z+
0x11B2	0x9111    	LD         R17, Z+
;__fm_Driver.c,865 :: 		s &= 0x0030;
0x11B4	0x7300    	ANDI       R16, 48
0x11B6	0x7010    	ANDI       R17, 0
;__fm_Driver.c,866 :: 		s >>= 4;
0x11B8	0x9516    	LSR        R17
0x11BA	0x9507    	ROR        R16
0x11BC	0x9516    	LSR        R17
0x11BE	0x9507    	ROR        R16
0x11C0	0x9516    	LSR        R17
0x11C2	0x9507    	ROR        R16
0x11C4	0x9516    	LSR        R17
0x11C6	0x9507    	ROR        R16
;__fm_Driver.c,867 :: 		s &= 0x0003;
0x11C8	0x7003    	ANDI       R16, 3
0x11CA	0x7010    	ANDI       R17, 0
; s start address is: 24 (R24)
0x11CC	0x01C8    	MOVW       R24, R16
;__fm_Driver.c,869 :: 		currentChannel  = regBuffer[_FM_READ_CHANNEL];
0x11CE	0x01FA    	MOVW       R30, R20
0x11D0	0x9672    	ADIW       R30, 18
0x11D2	0x9101    	LD         R16, Z+
0x11D4	0x9111    	LD         R17, Z+
;__fm_Driver.c,870 :: 		currentChannel &= 0x03FF;
0x11D6	0x7013    	ANDI       R17, 3
; currentChannel start address is: 20 (R20)
0x11D8	0x01A8    	MOVW       R20, R16
;__fm_Driver.c,872 :: 		if (b == 0)
0x11DA	0x3030    	CPI        R19, 0
0x11DC	0xF409    	BRNE       L__fm_fineTuneUp184
0x11DE	0x3020    	CPI        R18, 0
L__fm_fineTuneUp184:
0x11E0	0xF479    	BRNE       L_fm_fineTuneUp56
L__fm_fineTuneUp185:
; b end address is: 22 (R22)
;__fm_Driver.c,874 :: 		bandLimitDown = 87.5;
0x11E2	0xE0B0    	LDI        R27, 0
0x11E4	0xA3BA    	STD        Y+34, R27
0x11E6	0xA3BB    	STD        Y+35, R27
0x11E8	0xEABF    	LDI        R27, 175
0x11EA	0xA3BC    	STD        Y+36, R27
0x11EC	0xE4B2    	LDI        R27, 66
0x11EE	0xA3BD    	STD        Y+37, R27
;__fm_Driver.c,875 :: 		bandLimitUp = 108;
0x11F0	0xE0B0    	LDI        R27, 0
0x11F2	0xA3BE    	STD        Y+38, R27
0x11F4	0xA3BF    	STD        Y+39, R27
0x11F6	0xEDB8    	LDI        R27, 216
0x11F8	0xA7B8    	STD        Y+40, R27
0x11FA	0xE4B2    	LDI        R27, 66
0x11FC	0xA7B9    	STD        Y+41, R27
;__fm_Driver.c,876 :: 		}
0x11FE	0xC025    	RJMP       L_fm_fineTuneUp57
L_fm_fineTuneUp56:
;__fm_Driver.c,877 :: 		else if (b == 1)
; b start address is: 22 (R22)
0x1200	0x3070    	CPI        R23, 0
0x1202	0xF409    	BRNE       L__fm_fineTuneUp186
0x1204	0x3061    	CPI        R22, 1
L__fm_fineTuneUp186:
0x1206	0xF479    	BRNE       L_fm_fineTuneUp58
L__fm_fineTuneUp187:
; b end address is: 22 (R22)
;__fm_Driver.c,879 :: 		bandLimitDown = 76.0;
0x1208	0xE0B0    	LDI        R27, 0
0x120A	0xA3BA    	STD        Y+34, R27
0x120C	0xA3BB    	STD        Y+35, R27
0x120E	0xE9B8    	LDI        R27, 152
0x1210	0xA3BC    	STD        Y+36, R27
0x1212	0xE4B2    	LDI        R27, 66
0x1214	0xA3BD    	STD        Y+37, R27
;__fm_Driver.c,880 :: 		bandLimitUp = 108;
0x1216	0xE0B0    	LDI        R27, 0
0x1218	0xA3BE    	STD        Y+38, R27
0x121A	0xA3BF    	STD        Y+39, R27
0x121C	0xEDB8    	LDI        R27, 216
0x121E	0xA7B8    	STD        Y+40, R27
0x1220	0xE4B2    	LDI        R27, 66
0x1222	0xA7B9    	STD        Y+41, R27
;__fm_Driver.c,881 :: 		}
0x1224	0xC012    	RJMP       L_fm_fineTuneUp59
L_fm_fineTuneUp58:
;__fm_Driver.c,882 :: 		else if (b == 2)
; b start address is: 22 (R22)
0x1226	0x3070    	CPI        R23, 0
0x1228	0xF409    	BRNE       L__fm_fineTuneUp188
0x122A	0x3062    	CPI        R22, 2
L__fm_fineTuneUp188:
0x122C	0xF471    	BRNE       L_fm_fineTuneUp60
L__fm_fineTuneUp189:
; b end address is: 22 (R22)
;__fm_Driver.c,884 :: 		bandLimitDown = 76.0;
0x122E	0xE0B0    	LDI        R27, 0
0x1230	0xA3BA    	STD        Y+34, R27
0x1232	0xA3BB    	STD        Y+35, R27
0x1234	0xE9B8    	LDI        R27, 152
0x1236	0xA3BC    	STD        Y+36, R27
0x1238	0xE4B2    	LDI        R27, 66
0x123A	0xA3BD    	STD        Y+37, R27
;__fm_Driver.c,885 :: 		bandLimitUp = 90;
0x123C	0xE0B0    	LDI        R27, 0
0x123E	0xA3BE    	STD        Y+38, R27
0x1240	0xA3BF    	STD        Y+39, R27
0x1242	0xEBB4    	LDI        R27, 180
0x1244	0xA7B8    	STD        Y+40, R27
0x1246	0xE4B2    	LDI        R27, 66
0x1248	0xA7B9    	STD        Y+41, R27
;__fm_Driver.c,886 :: 		}
L_fm_fineTuneUp60:
L_fm_fineTuneUp59:
L_fm_fineTuneUp57:
;__fm_Driver.c,888 :: 		if (s == 0)
0x124A	0x3090    	CPI        R25, 0
0x124C	0xF409    	BRNE       L__fm_fineTuneUp190
0x124E	0x3080    	CPI        R24, 0
L__fm_fineTuneUp190:
0x1250	0xF469    	BRNE       L_fm_fineTuneUp61
L__fm_fineTuneUp191:
; s end address is: 24 (R24)
;__fm_Driver.c,890 :: 		space_ = 0.2;
0x1252	0xECBD    	LDI        R27, 205
0x1254	0xA7BA    	STD        Y+42, R27
0x1256	0xECBC    	LDI        R27, 204
0x1258	0xA7BB    	STD        Y+43, R27
0x125A	0xE4BC    	LDI        R27, 76
0x125C	0xA7BC    	STD        Y+44, R27
0x125E	0xE3BE    	LDI        R27, 62
0x1260	0xA7BD    	STD        Y+45, R27
;__fm_Driver.c,891 :: 		increment = 1;
0x1262	0xE0B1    	LDI        R27, 1
0x1264	0x83B8    	STD        Y+0, R27
0x1266	0xE0B0    	LDI        R27, 0
0x1268	0x83B9    	STD        Y+1, R27
;__fm_Driver.c,892 :: 		}
0x126A	0xC020    	RJMP       L_fm_fineTuneUp62
L_fm_fineTuneUp61:
;__fm_Driver.c,893 :: 		else if (s == 1)
; s start address is: 24 (R24)
0x126C	0x3090    	CPI        R25, 0
0x126E	0xF409    	BRNE       L__fm_fineTuneUp192
0x1270	0x3081    	CPI        R24, 1
L__fm_fineTuneUp192:
0x1272	0xF461    	BRNE       L_fm_fineTuneUp63
L__fm_fineTuneUp193:
; s end address is: 24 (R24)
;__fm_Driver.c,895 :: 		space_ = 0.1;
0x1274	0xECBD    	LDI        R27, 205
0x1276	0xA7BA    	STD        Y+42, R27
0x1278	0xECBC    	LDI        R27, 204
0x127A	0xA7BB    	STD        Y+43, R27
0x127C	0xA7BC    	STD        Y+44, R27
0x127E	0xE3BD    	LDI        R27, 61
0x1280	0xA7BD    	STD        Y+45, R27
;__fm_Driver.c,896 :: 		increment = 1;
0x1282	0xE0B1    	LDI        R27, 1
0x1284	0x83B8    	STD        Y+0, R27
0x1286	0xE0B0    	LDI        R27, 0
0x1288	0x83B9    	STD        Y+1, R27
;__fm_Driver.c,897 :: 		}
0x128A	0xC010    	RJMP       L_fm_fineTuneUp64
L_fm_fineTuneUp63:
;__fm_Driver.c,898 :: 		else if (s == 2)
; s start address is: 24 (R24)
0x128C	0x3090    	CPI        R25, 0
0x128E	0xF409    	BRNE       L__fm_fineTuneUp194
0x1290	0x3082    	CPI        R24, 2
L__fm_fineTuneUp194:
0x1292	0xF461    	BRNE       L_fm_fineTuneUp65
L__fm_fineTuneUp195:
; s end address is: 24 (R24)
;__fm_Driver.c,900 :: 		space_ = 0.05;
0x1294	0xECBD    	LDI        R27, 205
0x1296	0xA7BA    	STD        Y+42, R27
0x1298	0xECBC    	LDI        R27, 204
0x129A	0xA7BB    	STD        Y+43, R27
0x129C	0xE4BC    	LDI        R27, 76
0x129E	0xA7BC    	STD        Y+44, R27
0x12A0	0xE3BD    	LDI        R27, 61
0x12A2	0xA7BD    	STD        Y+45, R27
;__fm_Driver.c,901 :: 		increment = 2;
0x12A4	0xE0B2    	LDI        R27, 2
0x12A6	0x83B8    	STD        Y+0, R27
0x12A8	0xE0B0    	LDI        R27, 0
0x12AA	0x83B9    	STD        Y+1, R27
;__fm_Driver.c,902 :: 		}
L_fm_fineTuneUp65:
L_fm_fineTuneUp64:
L_fm_fineTuneUp62:
;__fm_Driver.c,904 :: 		channel_ = currentChannel + increment;
0x12AC	0x8108    	LDD        R16, Y+0
0x12AE	0x8119    	LDD        R17, Y+1
0x12B0	0x0F04    	ADD        R16, R20
0x12B2	0x1F15    	ADC        R17, R21
; currentChannel end address is: 20 (R20)
; channel_ start address is: 20 (R20)
0x12B4	0x01A8    	MOVW       R20, R16
;__fm_Driver.c,906 :: 		aux_  = bandLimitUp - bandLimitDown;
0x12B6	0x935F    	PUSH       R21
0x12B8	0x934F    	PUSH       R20
0x12BA	0xA14A    	LDD        R20, Y+34
0x12BC	0xA15B    	LDD        R21, Y+35
0x12BE	0xA16C    	LDD        R22, Y+36
0x12C0	0xA17D    	LDD        R23, Y+37
0x12C2	0xA10E    	LDD        R16, Y+38
0x12C4	0xA11F    	LDD        R17, Y+39
0x12C6	0xA528    	LDD        R18, Y+40
0x12C8	0xA539    	LDD        R19, Y+41
0x12CA	0xDC06    	RCALL      _float_fpsub1+0
;__fm_Driver.c,907 :: 		aux_ /= space_;
0x12CC	0xA54A    	LDD        R20, Y+42
0x12CE	0xA55B    	LDD        R21, Y+43
0x12D0	0xA56C    	LDD        R22, Y+44
0x12D2	0xA57D    	LDD        R23, Y+45
0x12D4	0xDC3B    	RCALL      _float_fpdiv1+0
;__fm_Driver.c,909 :: 		channelLimitUp = (uint16_t)(aux_);
0x12D6	0xDC16    	RCALL      _float_fpint+0
0x12D8	0x914F    	POP        R20
0x12DA	0x915F    	POP        R21
;__fm_Driver.c,911 :: 		if (channel_ < channelLimitUp && channel_ > 0)
0x12DC	0x1740    	CP         R20, R16
0x12DE	0x0751    	CPC        R21, R17
0x12E0	0xF5C8    	BRSH       L__fm_fineTuneUp89
L__fm_fineTuneUp196:
0x12E2	0xE000    	LDI        R16, 0
0x12E4	0xE010    	LDI        R17, 0
0x12E6	0x1704    	CP         R16, R20
0x12E8	0x0715    	CPC        R17, R21
0x12EA	0xF5A0    	BRSH       L__fm_fineTuneUp88
L__fm_fineTuneUp197:
L__fm_fineTuneUp87:
;__fm_Driver.c,913 :: 		regBuffer[_FM_CHANNEL] &= 0x0000;
0x12EC	0x018E    	MOVW       R16, R28
0x12EE	0x5F0E    	SUBI       R16, 254
0x12F0	0x4F1F    	SBCI       R17, 255
0x12F2	0x0198    	MOVW       R18, R16
0x12F4	0x5F2E    	SUBI       R18, 254
0x12F6	0x4F3F    	SBCI       R19, 255
0x12F8	0x01F9    	MOVW       R30, R18
0x12FA	0x9101    	LD         R16, Z+
0x12FC	0x9111    	LD         R17, Z+
0x12FE	0x7000    	ANDI       R16, 0
0x1300	0x7010    	ANDI       R17, 0
0x1302	0x01F9    	MOVW       R30, R18
0x1304	0x9301    	ST         Z+, R16
0x1306	0x9311    	ST         Z+, R17
;__fm_Driver.c,914 :: 		regBuffer[_FM_CHANNEL] |= channel_;
0x1308	0x018E    	MOVW       R16, R28
0x130A	0x5F0E    	SUBI       R16, 254
0x130C	0x4F1F    	SBCI       R17, 255
0x130E	0x0198    	MOVW       R18, R16
0x1310	0x5F2E    	SUBI       R18, 254
0x1312	0x4F3F    	SBCI       R19, 255
0x1314	0x01F9    	MOVW       R30, R18
0x1316	0x9101    	LD         R16, Z+
0x1318	0x9111    	LD         R17, Z+
0x131A	0x2B04    	OR         R16, R20
0x131C	0x2B15    	OR         R17, R21
; channel_ end address is: 20 (R20)
0x131E	0x01F9    	MOVW       R30, R18
0x1320	0x9301    	ST         Z+, R16
0x1322	0x9311    	ST         Z+, R17
;__fm_Driver.c,916 :: 		fm_setBits( regBuffer, _FM_CHANNEL, _FM_TUNE_MASK, _FM_TUNE_ENABLE );
0x1324	0x018E    	MOVW       R16, R28
0x1326	0x5F0E    	SUBI       R16, 254
0x1328	0x4F1F    	SBCI       R17, 255
0x132A	0xE0B0    	LDI        R27, 0
0x132C	0x2E8B    	MOV        R8, R27
0x132E	0xE8B0    	LDI        R27, 128
0x1330	0x2E9B    	MOV        R9, R27
0x1332	0xEFBF    	LDI        R27, 255
0x1334	0x2E6B    	MOV        R6, R27
0x1336	0xE7BF    	LDI        R27, 127
0x1338	0x2E7B    	MOV        R7, R27
0x133A	0xE0B1    	LDI        R27, 1
0x133C	0x2E4B    	MOV        R4, R27
0x133E	0xE0B0    	LDI        R27, 0
0x1340	0x2E5B    	MOV        R5, R27
0x1342	0x0118    	MOVW       R2, R16
0x1344	0xD5BB    	RCALL      _fm_setBits+0
;__fm_Driver.c,918 :: 		fm_writeRegisters( regBuffer );
0x1346	0x018E    	MOVW       R16, R28
0x1348	0x5F0E    	SUBI       R16, 254
0x134A	0x4F1F    	SBCI       R17, 255
0x134C	0x0118    	MOVW       R2, R16
0x134E	0xD560    	RCALL      _fm_writeRegisters+0
;__fm_Driver.c,920 :: 		return 0;
0x1350	0xE000    	LDI        R16, 0
0x1352	0xC001    	RJMP       L_end_fm_fineTuneUp
;__fm_Driver.c,911 :: 		if (channel_ < channelLimitUp && channel_ > 0)
L__fm_fineTuneUp89:
L__fm_fineTuneUp88:
;__fm_Driver.c,924 :: 		return 1;
0x1354	0xE001    	LDI        R16, 1
;__fm_Driver.c,926 :: 		}
;__fm_Driver.c,924 :: 		return 1;
;__fm_Driver.c,926 :: 		}
L_end_fm_fineTuneUp:
0x1356	0x909F    	POP        R9
0x1358	0x908F    	POP        R8
0x135A	0x907F    	POP        R7
0x135C	0x906F    	POP        R6
0x135E	0x905F    	POP        R5
0x1360	0x904F    	POP        R4
0x1362	0x903F    	POP        R3
0x1364	0x902F    	POP        R2
0x1366	0x96AD    	ADIW       R28, 45
0x1368	0xBFCD    	OUT        SPL+0, R28
0x136A	0xBFDE    	OUT        SPL+1, R29
0x136C	0x91DF    	POP        R29
0x136E	0x91CF    	POP        R28
0x1370	0x9508    	RET
; end of _fm_fineTuneUp
_fm_caseTuneDown:
;Click_FM_AVR.c,330 :: 		void fm_caseTuneDown( )
;Click_FM_AVR.c,332 :: 		fm_fineTuneDown( );
0x31B4	0x922F    	PUSH       R2
0x31B6	0x923F    	PUSH       R3
0x31B8	0x924F    	PUSH       R4
0x31BA	0x925F    	PUSH       R5
0x31BC	0x926F    	PUSH       R6
0x31BE	0x927F    	PUSH       R7
0x31C0	0x07A2940E  	CALL       _fm_fineTuneDown+0
;Click_FM_AVR.c,334 :: 		Delay_ms(100);
0x31C4	0xE025    	LDI        R18, 5
0x31C6	0xE01F    	LDI        R17, 15
0x31C8	0xEF02    	LDI        R16, 242
L_fm_caseTuneDown42:
0x31CA	0x950A    	DEC        R16
0x31CC	0xF7F1    	BRNE       L_fm_caseTuneDown42
0x31CE	0x951A    	DEC        R17
0x31D0	0xF7E1    	BRNE       L_fm_caseTuneDown42
0x31D2	0x952A    	DEC        R18
0x31D4	0xF7D1    	BRNE       L_fm_caseTuneDown42
;Click_FM_AVR.c,336 :: 		fm_endTune( );
0x31D6	0x0770940E  	CALL       _fm_endTune+0
;Click_FM_AVR.c,338 :: 		Delay_ms(10);
0x31DA	0xE618    	LDI        R17, 104
0x31DC	0xEE05    	LDI        R16, 229
L_fm_caseTuneDown44:
0x31DE	0x950A    	DEC        R16
0x31E0	0xF7F1    	BRNE       L_fm_caseTuneDown44
0x31E2	0x951A    	DEC        R17
0x31E4	0xF7E1    	BRNE       L_fm_caseTuneDown44
;Click_FM_AVR.c,340 :: 		if (errorFlag_ == 0)
0x31E6	0x02D99100  	LDS        R16, _errorFlag_+0
0x31EA	0x3000    	CPI        R16, 0
0x31EC	0xF009    	BREQ       L__fm_caseTuneDown90
0x31EE	0xC061    	RJMP       L_fm_caseTuneDown46
L__fm_caseTuneDown90:
;Click_FM_AVR.c,342 :: 		receivedSignalStrengthIndicator = fm_getReceivedSignalStrengthIndicator( );
0x31F0	0x05B0940E  	CALL       _fm_getReceivedSignalStrengthIndicator+0
0x31F4	0x02DA9300  	STS        _receivedSignalStrengthIndicator+0, R16
0x31F8	0xE0B0    	LDI        R27, 0
0x31FA	0x02DB93B0  	STS        _receivedSignalStrengthIndicator+1, R27
;Click_FM_AVR.c,343 :: 		channelFrequency_ = fm_getChannelFrequency( );
0x31FE	0x05CC940E  	CALL       _fm_getChannelFrequency+0
0x3202	0x02CF9300  	STS        _channelFrequency_+0, R16
0x3206	0x02D09310  	STS        _channelFrequency_+1, R17
0x320A	0x02D19320  	STS        _channelFrequency_+2, R18
0x320E	0x02D29330  	STS        _channelFrequency_+3, R19
;Click_FM_AVR.c,344 :: 		stationFrequency_ = fm_getChannel( );
0x3212	0x0A4F940E  	CALL       _fm_getChannel+0
0x3216	0x02D39300  	STS        _stationFrequency_+0, R16
0x321A	0x02D49310  	STS        _stationFrequency_+1, R17
;Click_FM_AVR.c,346 :: 		mikrobus_logWrite( "tune up", _LOG_LINE );
0x321E	0xE0B2    	LDI        R27, 2
0x3220	0x2E4B    	MOV        R4, R27
0x3222	0xE0B7    	LDI        R27, lo_addr(?lstr43_Click_FM_AVR+0)
0x3224	0x2E2B    	MOV        R2, R27
0x3226	0xE0B1    	LDI        R27, hi_addr(?lstr43_Click_FM_AVR+0)
0x3228	0x2E3B    	MOV        R3, R27
0x322A	0xD0E7    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,348 :: 		WordToStr( receivedSignalStrengthIndicator, text );
0x322C	0xEDBC    	LDI        R27, lo_addr(_text+0)
0x322E	0x2E4B    	MOV        R4, R27
0x3230	0xE0B2    	LDI        R27, hi_addr(_text+0)
0x3232	0x2E5B    	MOV        R5, R27
0x3234	0x02DA9020  	LDS        R2, _receivedSignalStrengthIndicator+0
0x3238	0x02DB9030  	LDS        R3, _receivedSignalStrengthIndicator+1
0x323C	0x0A0B940E  	CALL       _WordToStr+0
;Click_FM_AVR.c,349 :: 		mikrobus_logWrite( "rssi:", _LOG_TEXT );
0x3240	0xE0B1    	LDI        R27, 1
0x3242	0x2E4B    	MOV        R4, R27
0x3244	0xE2BB    	LDI        R27, lo_addr(?lstr44_Click_FM_AVR+0)
0x3246	0x2E2B    	MOV        R2, R27
0x3248	0xE0B1    	LDI        R27, hi_addr(?lstr44_Click_FM_AVR+0)
0x324A	0x2E3B    	MOV        R3, R27
0x324C	0xD0D6    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,350 :: 		mikrobus_logWrite( text, _LOG_TEXT );
0x324E	0xE0B1    	LDI        R27, 1
0x3250	0x2E4B    	MOV        R4, R27
0x3252	0xEDBC    	LDI        R27, lo_addr(_text+0)
0x3254	0x2E2B    	MOV        R2, R27
0x3256	0xE0B2    	LDI        R27, hi_addr(_text+0)
0x3258	0x2E3B    	MOV        R3, R27
0x325A	0xD0CF    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,351 :: 		mikrobus_logWrite( " dBuV", _LOG_LINE );
0x325C	0xE0B2    	LDI        R27, 2
0x325E	0x2E4B    	MOV        R4, R27
0x3260	0xE3B1    	LDI        R27, lo_addr(?lstr45_Click_FM_AVR+0)
0x3262	0x2E2B    	MOV        R2, R27
0x3264	0xE0B1    	LDI        R27, hi_addr(?lstr45_Click_FM_AVR+0)
0x3266	0x2E3B    	MOV        R3, R27
0x3268	0xD0C8    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,353 :: 		FloatToStr( channelFrequency_, text );
0x326A	0xEDBC    	LDI        R27, lo_addr(_text+0)
0x326C	0x2E6B    	MOV        R6, R27
0x326E	0xE0B2    	LDI        R27, hi_addr(_text+0)
0x3270	0x2E7B    	MOV        R7, R27
0x3272	0x02CF9020  	LDS        R2, _channelFrequency_+0
0x3276	0x02D09030  	LDS        R3, _channelFrequency_+1
0x327A	0x02D19040  	LDS        R4, _channelFrequency_+2
0x327E	0x02D29050  	LDS        R5, _channelFrequency_+3
0x3282	0x0C36940E  	CALL       _FloatToStr+0
;Click_FM_AVR.c,354 :: 		mikrobus_logWrite( "tuned frequency:", _LOG_TEXT );
0x3286	0xE0B1    	LDI        R27, 1
0x3288	0x2E4B    	MOV        R4, R27
0x328A	0xE1BA    	LDI        R27, lo_addr(?lstr46_Click_FM_AVR+0)
0x328C	0x2E2B    	MOV        R2, R27
0x328E	0xE0B1    	LDI        R27, hi_addr(?lstr46_Click_FM_AVR+0)
0x3290	0x2E3B    	MOV        R3, R27
0x3292	0xD0B3    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,355 :: 		mikrobus_logWrite( text, _LOG_TEXT );
0x3294	0xE0B1    	LDI        R27, 1
0x3296	0x2E4B    	MOV        R4, R27
0x3298	0xEDBC    	LDI        R27, lo_addr(_text+0)
0x329A	0x2E2B    	MOV        R2, R27
0x329C	0xE0B2    	LDI        R27, hi_addr(_text+0)
0x329E	0x2E3B    	MOV        R3, R27
0x32A0	0xD0AC    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,356 :: 		mikrobus_logWrite( " MHz", _LOG_LINE );
0x32A2	0xE0B2    	LDI        R27, 2
0x32A4	0x2E4B    	MOV        R4, R27
0x32A6	0xE0BF    	LDI        R27, lo_addr(?lstr47_Click_FM_AVR+0)
0x32A8	0x2E2B    	MOV        R2, R27
0x32AA	0xE0B1    	LDI        R27, hi_addr(?lstr47_Click_FM_AVR+0)
0x32AC	0x2E3B    	MOV        R3, R27
0x32AE	0xD0A5    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,357 :: 		}
0x32B0	0xC007    	RJMP       L_fm_caseTuneDown47
L_fm_caseTuneDown46:
;Click_FM_AVR.c,360 :: 		mikrobus_logWrite( "error", _LOG_LINE );
0x32B2	0xE0B2    	LDI        R27, 2
0x32B4	0x2E4B    	MOV        R4, R27
0x32B6	0xE1B4    	LDI        R27, lo_addr(?lstr48_Click_FM_AVR+0)
0x32B8	0x2E2B    	MOV        R2, R27
0x32BA	0xE0B1    	LDI        R27, hi_addr(?lstr48_Click_FM_AVR+0)
0x32BC	0x2E3B    	MOV        R3, R27
0x32BE	0xD09D    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,361 :: 		}
L_fm_caseTuneDown47:
;Click_FM_AVR.c,362 :: 		}
L_end_fm_caseTuneDown:
0x32C0	0x907F    	POP        R7
0x32C2	0x906F    	POP        R6
0x32C4	0x905F    	POP        R5
0x32C6	0x904F    	POP        R4
0x32C8	0x903F    	POP        R3
0x32CA	0x902F    	POP        R2
0x32CC	0x9508    	RET
; end of _fm_caseTuneDown
_fm_fineTuneDown:
0x0F44	0x93CF    	PUSH       R28
0x0F46	0x93DF    	PUSH       R29
0x0F48	0xB7CD    	IN         R28, SPL+0
0x0F4A	0xB7DE    	IN         R29, SPL+1
0x0F4C	0x97AE    	SBIW       R28, 46
0x0F4E	0xBFCD    	OUT        SPL+0, R28
0x0F50	0xBFDE    	OUT        SPL+1, R29
0x0F52	0x9621    	ADIW       R28, 1
;__fm_Driver.c,928 :: 		uint8_t fm_fineTuneDown( void )
;__fm_Driver.c,942 :: 		fm_readRegisters( regBuffer );
0x0F54	0x922F    	PUSH       R2
0x0F56	0x923F    	PUSH       R3
0x0F58	0x924F    	PUSH       R4
0x0F5A	0x925F    	PUSH       R5
0x0F5C	0x926F    	PUSH       R6
0x0F5E	0x927F    	PUSH       R7
0x0F60	0x928F    	PUSH       R8
0x0F62	0x929F    	PUSH       R9
0x0F64	0x018E    	MOVW       R16, R28
0x0F66	0x5F0E    	SUBI       R16, 254
0x0F68	0x4F1F    	SBCI       R17, 255
0x0F6A	0x0118    	MOVW       R2, R16
0x0F6C	0x10C3940E  	CALL       _fm_readRegisters+0
;__fm_Driver.c,944 :: 		b = regBuffer[ _FM_SYSTEM_CONFIGURATION_2 ];
0x0F70	0x01AE    	MOVW       R20, R28
0x0F72	0x5F4E    	SUBI       R20, 254
0x0F74	0x4F5F    	SBCI       R21, 255
0x0F76	0x01FA    	MOVW       R30, R20
0x0F78	0x9636    	ADIW       R30, 6
0x0F7A	0x9101    	LD         R16, Z+
0x0F7C	0x9111    	LD         R17, Z+
;__fm_Driver.c,945 :: 		b &= 0x00C0;
0x0F7E	0x7C00    	ANDI       R16, 192
0x0F80	0x7010    	ANDI       R17, 0
;__fm_Driver.c,946 :: 		b >>= 6;
0x0F82	0xE0B6    	LDI        R27, 6
L__fm_fineTuneDown199:
0x0F84	0x9516    	LSR        R17
0x0F86	0x9507    	ROR        R16
0x0F88	0x95BA    	DEC        R27
0x0F8A	0xF7E1    	BRNE       L__fm_fineTuneDown199
L__fm_fineTuneDown200:
;__fm_Driver.c,947 :: 		b &= 0x0003;
0x0F8C	0x0198    	MOVW       R18, R16
0x0F8E	0x7023    	ANDI       R18, 3
0x0F90	0x7030    	ANDI       R19, 0
; b start address is: 22 (R22)
0x0F92	0x01B9    	MOVW       R22, R18
;__fm_Driver.c,949 :: 		s = regBuffer[ _FM_SYSTEM_CONFIGURATION_2 ];
0x0F94	0x01FA    	MOVW       R30, R20
0x0F96	0x9636    	ADIW       R30, 6
0x0F98	0x9101    	LD         R16, Z+
0x0F9A	0x9111    	LD         R17, Z+
;__fm_Driver.c,950 :: 		s &= 0x0030;
0x0F9C	0x7300    	ANDI       R16, 48
0x0F9E	0x7010    	ANDI       R17, 0
;__fm_Driver.c,951 :: 		s >>= 4;
0x0FA0	0x9516    	LSR        R17
0x0FA2	0x9507    	ROR        R16
0x0FA4	0x9516    	LSR        R17
0x0FA6	0x9507    	ROR        R16
0x0FA8	0x9516    	LSR        R17
0x0FAA	0x9507    	ROR        R16
0x0FAC	0x9516    	LSR        R17
0x0FAE	0x9507    	ROR        R16
;__fm_Driver.c,952 :: 		s &= 0x0003;
0x0FB0	0x7003    	ANDI       R16, 3
0x0FB2	0x7010    	ANDI       R17, 0
; s start address is: 24 (R24)
0x0FB4	0x01C8    	MOVW       R24, R16
;__fm_Driver.c,954 :: 		currentChannel  = regBuffer[_FM_READ_CHANNEL];
0x0FB6	0x01FA    	MOVW       R30, R20
0x0FB8	0x9672    	ADIW       R30, 18
0x0FBA	0x9101    	LD         R16, Z+
0x0FBC	0x9111    	LD         R17, Z+
;__fm_Driver.c,955 :: 		currentChannel &= 0x03FF;
0x0FBE	0x7013    	ANDI       R17, 3
; currentChannel start address is: 20 (R20)
0x0FC0	0x01A8    	MOVW       R20, R16
;__fm_Driver.c,957 :: 		if (b == 0)
0x0FC2	0x3030    	CPI        R19, 0
0x0FC4	0xF409    	BRNE       L__fm_fineTuneDown201
0x0FC6	0x3020    	CPI        R18, 0
L__fm_fineTuneDown201:
0x0FC8	0xF479    	BRNE       L_fm_fineTuneDown70
L__fm_fineTuneDown202:
; b end address is: 22 (R22)
;__fm_Driver.c,959 :: 		bandLimitDown = 87.5;
0x0FCA	0xE0B0    	LDI        R27, 0
0x0FCC	0xA3BA    	STD        Y+34, R27
0x0FCE	0xA3BB    	STD        Y+35, R27
0x0FD0	0xEABF    	LDI        R27, 175
0x0FD2	0xA3BC    	STD        Y+36, R27
0x0FD4	0xE4B2    	LDI        R27, 66
0x0FD6	0xA3BD    	STD        Y+37, R27
;__fm_Driver.c,960 :: 		bandLimitUp = 108;
0x0FD8	0xE0B0    	LDI        R27, 0
0x0FDA	0xA3BE    	STD        Y+38, R27
0x0FDC	0xA3BF    	STD        Y+39, R27
0x0FDE	0xEDB8    	LDI        R27, 216
0x0FE0	0xA7B8    	STD        Y+40, R27
0x0FE2	0xE4B2    	LDI        R27, 66
0x0FE4	0xA7B9    	STD        Y+41, R27
;__fm_Driver.c,961 :: 		}
0x0FE6	0xC025    	RJMP       L_fm_fineTuneDown71
L_fm_fineTuneDown70:
;__fm_Driver.c,962 :: 		else if (b == 1)
; b start address is: 22 (R22)
0x0FE8	0x3070    	CPI        R23, 0
0x0FEA	0xF409    	BRNE       L__fm_fineTuneDown203
0x0FEC	0x3061    	CPI        R22, 1
L__fm_fineTuneDown203:
0x0FEE	0xF479    	BRNE       L_fm_fineTuneDown72
L__fm_fineTuneDown204:
; b end address is: 22 (R22)
;__fm_Driver.c,964 :: 		bandLimitDown = 76.0;
0x0FF0	0xE0B0    	LDI        R27, 0
0x0FF2	0xA3BA    	STD        Y+34, R27
0x0FF4	0xA3BB    	STD        Y+35, R27
0x0FF6	0xE9B8    	LDI        R27, 152
0x0FF8	0xA3BC    	STD        Y+36, R27
0x0FFA	0xE4B2    	LDI        R27, 66
0x0FFC	0xA3BD    	STD        Y+37, R27
;__fm_Driver.c,965 :: 		bandLimitUp = 108;
0x0FFE	0xE0B0    	LDI        R27, 0
0x1000	0xA3BE    	STD        Y+38, R27
0x1002	0xA3BF    	STD        Y+39, R27
0x1004	0xEDB8    	LDI        R27, 216
0x1006	0xA7B8    	STD        Y+40, R27
0x1008	0xE4B2    	LDI        R27, 66
0x100A	0xA7B9    	STD        Y+41, R27
;__fm_Driver.c,966 :: 		}
0x100C	0xC012    	RJMP       L_fm_fineTuneDown73
L_fm_fineTuneDown72:
;__fm_Driver.c,967 :: 		else if (b == 2)
; b start address is: 22 (R22)
0x100E	0x3070    	CPI        R23, 0
0x1010	0xF409    	BRNE       L__fm_fineTuneDown205
0x1012	0x3062    	CPI        R22, 2
L__fm_fineTuneDown205:
0x1014	0xF471    	BRNE       L_fm_fineTuneDown74
L__fm_fineTuneDown206:
; b end address is: 22 (R22)
;__fm_Driver.c,969 :: 		bandLimitDown = 76.0;
0x1016	0xE0B0    	LDI        R27, 0
0x1018	0xA3BA    	STD        Y+34, R27
0x101A	0xA3BB    	STD        Y+35, R27
0x101C	0xE9B8    	LDI        R27, 152
0x101E	0xA3BC    	STD        Y+36, R27
0x1020	0xE4B2    	LDI        R27, 66
0x1022	0xA3BD    	STD        Y+37, R27
;__fm_Driver.c,970 :: 		bandLimitUp = 90;
0x1024	0xE0B0    	LDI        R27, 0
0x1026	0xA3BE    	STD        Y+38, R27
0x1028	0xA3BF    	STD        Y+39, R27
0x102A	0xEBB4    	LDI        R27, 180
0x102C	0xA7B8    	STD        Y+40, R27
0x102E	0xE4B2    	LDI        R27, 66
0x1030	0xA7B9    	STD        Y+41, R27
;__fm_Driver.c,971 :: 		}
L_fm_fineTuneDown74:
L_fm_fineTuneDown73:
L_fm_fineTuneDown71:
;__fm_Driver.c,973 :: 		if (s == 0)
0x1032	0x3090    	CPI        R25, 0
0x1034	0xF409    	BRNE       L__fm_fineTuneDown207
0x1036	0x3080    	CPI        R24, 0
L__fm_fineTuneDown207:
0x1038	0xF469    	BRNE       L_fm_fineTuneDown75
L__fm_fineTuneDown208:
; s end address is: 24 (R24)
;__fm_Driver.c,975 :: 		space_ = 0.2;
0x103A	0xECBD    	LDI        R27, 205
0x103C	0xA7BA    	STD        Y+42, R27
0x103E	0xECBC    	LDI        R27, 204
0x1040	0xA7BB    	STD        Y+43, R27
0x1042	0xE4BC    	LDI        R27, 76
0x1044	0xA7BC    	STD        Y+44, R27
0x1046	0xE3BE    	LDI        R27, 62
0x1048	0xA7BD    	STD        Y+45, R27
;__fm_Driver.c,976 :: 		increment = 1;
0x104A	0xE0B1    	LDI        R27, 1
0x104C	0x83B8    	STD        Y+0, R27
0x104E	0xE0B0    	LDI        R27, 0
0x1050	0x83B9    	STD        Y+1, R27
;__fm_Driver.c,977 :: 		}
0x1052	0xC020    	RJMP       L_fm_fineTuneDown76
L_fm_fineTuneDown75:
;__fm_Driver.c,978 :: 		else if (s == 1)
; s start address is: 24 (R24)
0x1054	0x3090    	CPI        R25, 0
0x1056	0xF409    	BRNE       L__fm_fineTuneDown209
0x1058	0x3081    	CPI        R24, 1
L__fm_fineTuneDown209:
0x105A	0xF461    	BRNE       L_fm_fineTuneDown77
L__fm_fineTuneDown210:
; s end address is: 24 (R24)
;__fm_Driver.c,980 :: 		space_ = 0.1;
0x105C	0xECBD    	LDI        R27, 205
0x105E	0xA7BA    	STD        Y+42, R27
0x1060	0xECBC    	LDI        R27, 204
0x1062	0xA7BB    	STD        Y+43, R27
0x1064	0xA7BC    	STD        Y+44, R27
0x1066	0xE3BD    	LDI        R27, 61
0x1068	0xA7BD    	STD        Y+45, R27
;__fm_Driver.c,981 :: 		increment = 1;
0x106A	0xE0B1    	LDI        R27, 1
0x106C	0x83B8    	STD        Y+0, R27
0x106E	0xE0B0    	LDI        R27, 0
0x1070	0x83B9    	STD        Y+1, R27
;__fm_Driver.c,982 :: 		}
0x1072	0xC010    	RJMP       L_fm_fineTuneDown78
L_fm_fineTuneDown77:
;__fm_Driver.c,983 :: 		else if (s == 2)
; s start address is: 24 (R24)
0x1074	0x3090    	CPI        R25, 0
0x1076	0xF409    	BRNE       L__fm_fineTuneDown211
0x1078	0x3082    	CPI        R24, 2
L__fm_fineTuneDown211:
0x107A	0xF461    	BRNE       L_fm_fineTuneDown79
L__fm_fineTuneDown212:
; s end address is: 24 (R24)
;__fm_Driver.c,985 :: 		space_ = 0.05;
0x107C	0xECBD    	LDI        R27, 205
0x107E	0xA7BA    	STD        Y+42, R27
0x1080	0xECBC    	LDI        R27, 204
0x1082	0xA7BB    	STD        Y+43, R27
0x1084	0xE4BC    	LDI        R27, 76
0x1086	0xA7BC    	STD        Y+44, R27
0x1088	0xE3BD    	LDI        R27, 61
0x108A	0xA7BD    	STD        Y+45, R27
;__fm_Driver.c,986 :: 		increment = 2;
0x108C	0xE0B2    	LDI        R27, 2
0x108E	0x83B8    	STD        Y+0, R27
0x1090	0xE0B0    	LDI        R27, 0
0x1092	0x83B9    	STD        Y+1, R27
;__fm_Driver.c,987 :: 		}
L_fm_fineTuneDown79:
L_fm_fineTuneDown78:
L_fm_fineTuneDown76:
;__fm_Driver.c,989 :: 		channel_ = currentChannel - increment;
0x1094	0x8008    	LDD        R0, Y+0
0x1096	0x8019    	LDD        R1, Y+1
0x1098	0x018A    	MOVW       R16, R20
0x109A	0x1900    	SUB        R16, R0
0x109C	0x0911    	SBC        R17, R1
; currentChannel end address is: 20 (R20)
; channel_ start address is: 20 (R20)
0x109E	0x01A8    	MOVW       R20, R16
;__fm_Driver.c,991 :: 		aux_  = bandLimitUp - bandLimitDown;
0x10A0	0x935F    	PUSH       R21
0x10A2	0x934F    	PUSH       R20
0x10A4	0xA14A    	LDD        R20, Y+34
0x10A6	0xA15B    	LDD        R21, Y+35
0x10A8	0xA16C    	LDD        R22, Y+36
0x10AA	0xA17D    	LDD        R23, Y+37
0x10AC	0xA10E    	LDD        R16, Y+38
0x10AE	0xA11F    	LDD        R17, Y+39
0x10B0	0xA528    	LDD        R18, Y+40
0x10B2	0xA539    	LDD        R19, Y+41
0x10B4	0xDD11    	RCALL      _float_fpsub1+0
;__fm_Driver.c,992 :: 		aux_ /= space_;
0x10B6	0xA54A    	LDD        R20, Y+42
0x10B8	0xA55B    	LDD        R21, Y+43
0x10BA	0xA56C    	LDD        R22, Y+44
0x10BC	0xA57D    	LDD        R23, Y+45
0x10BE	0xDD46    	RCALL      _float_fpdiv1+0
;__fm_Driver.c,994 :: 		channelLimitUp = (uint16_t)(aux_);
0x10C0	0xDD21    	RCALL      _float_fpint+0
0x10C2	0x914F    	POP        R20
0x10C4	0x915F    	POP        R21
;__fm_Driver.c,996 :: 		if (channel_ < channelLimitUp && channel_ > 0)
0x10C6	0x1740    	CP         R20, R16
0x10C8	0x0751    	CPC        R21, R17
0x10CA	0xF5C8    	BRSH       L__fm_fineTuneDown92
L__fm_fineTuneDown213:
0x10CC	0xE000    	LDI        R16, 0
0x10CE	0xE010    	LDI        R17, 0
0x10D0	0x1704    	CP         R16, R20
0x10D2	0x0715    	CPC        R17, R21
0x10D4	0xF5A0    	BRSH       L__fm_fineTuneDown91
L__fm_fineTuneDown214:
L__fm_fineTuneDown90:
;__fm_Driver.c,998 :: 		regBuffer[_FM_CHANNEL] &= 0x0000;
0x10D6	0x018E    	MOVW       R16, R28
0x10D8	0x5F0E    	SUBI       R16, 254
0x10DA	0x4F1F    	SBCI       R17, 255
0x10DC	0x0198    	MOVW       R18, R16
0x10DE	0x5F2E    	SUBI       R18, 254
0x10E0	0x4F3F    	SBCI       R19, 255
0x10E2	0x01F9    	MOVW       R30, R18
0x10E4	0x9101    	LD         R16, Z+
0x10E6	0x9111    	LD         R17, Z+
0x10E8	0x7000    	ANDI       R16, 0
0x10EA	0x7010    	ANDI       R17, 0
0x10EC	0x01F9    	MOVW       R30, R18
0x10EE	0x9301    	ST         Z+, R16
0x10F0	0x9311    	ST         Z+, R17
;__fm_Driver.c,999 :: 		regBuffer[_FM_CHANNEL] |= channel_;
0x10F2	0x018E    	MOVW       R16, R28
0x10F4	0x5F0E    	SUBI       R16, 254
0x10F6	0x4F1F    	SBCI       R17, 255
0x10F8	0x0198    	MOVW       R18, R16
0x10FA	0x5F2E    	SUBI       R18, 254
0x10FC	0x4F3F    	SBCI       R19, 255
0x10FE	0x01F9    	MOVW       R30, R18
0x1100	0x9101    	LD         R16, Z+
0x1102	0x9111    	LD         R17, Z+
0x1104	0x2B04    	OR         R16, R20
0x1106	0x2B15    	OR         R17, R21
; channel_ end address is: 20 (R20)
0x1108	0x01F9    	MOVW       R30, R18
0x110A	0x9301    	ST         Z+, R16
0x110C	0x9311    	ST         Z+, R17
;__fm_Driver.c,1001 :: 		fm_setBits( regBuffer, _FM_CHANNEL, _FM_TUNE_MASK, _FM_TUNE_ENABLE );
0x110E	0x018E    	MOVW       R16, R28
0x1110	0x5F0E    	SUBI       R16, 254
0x1112	0x4F1F    	SBCI       R17, 255
0x1114	0xE0B0    	LDI        R27, 0
0x1116	0x2E8B    	MOV        R8, R27
0x1118	0xE8B0    	LDI        R27, 128
0x111A	0x2E9B    	MOV        R9, R27
0x111C	0xEFBF    	LDI        R27, 255
0x111E	0x2E6B    	MOV        R6, R27
0x1120	0xE7BF    	LDI        R27, 127
0x1122	0x2E7B    	MOV        R7, R27
0x1124	0xE0B1    	LDI        R27, 1
0x1126	0x2E4B    	MOV        R4, R27
0x1128	0xE0B0    	LDI        R27, 0
0x112A	0x2E5B    	MOV        R5, R27
0x112C	0x0118    	MOVW       R2, R16
0x112E	0xD6C6    	RCALL      _fm_setBits+0
;__fm_Driver.c,1003 :: 		fm_writeRegisters( regBuffer );
0x1130	0x018E    	MOVW       R16, R28
0x1132	0x5F0E    	SUBI       R16, 254
0x1134	0x4F1F    	SBCI       R17, 255
0x1136	0x0118    	MOVW       R2, R16
0x1138	0xD66B    	RCALL      _fm_writeRegisters+0
;__fm_Driver.c,1005 :: 		return 0;
0x113A	0xE000    	LDI        R16, 0
0x113C	0xC001    	RJMP       L_end_fm_fineTuneDown
;__fm_Driver.c,996 :: 		if (channel_ < channelLimitUp && channel_ > 0)
L__fm_fineTuneDown92:
L__fm_fineTuneDown91:
;__fm_Driver.c,1009 :: 		return 1;
0x113E	0xE001    	LDI        R16, 1
;__fm_Driver.c,1011 :: 		}
;__fm_Driver.c,1009 :: 		return 1;
;__fm_Driver.c,1011 :: 		}
L_end_fm_fineTuneDown:
0x1140	0x909F    	POP        R9
0x1142	0x908F    	POP        R8
0x1144	0x907F    	POP        R7
0x1146	0x906F    	POP        R6
0x1148	0x905F    	POP        R5
0x114A	0x904F    	POP        R4
0x114C	0x903F    	POP        R3
0x114E	0x902F    	POP        R2
0x1150	0x96AD    	ADIW       R28, 45
0x1152	0xBFCD    	OUT        SPL+0, R28
0x1154	0xBFDE    	OUT        SPL+1, R29
0x1156	0x91DF    	POP        R29
0x1158	0x91CF    	POP        R28
0x115A	0x9508    	RET
; end of _fm_fineTuneDown
_fm_caseWrongCommand:
;Click_FM_AVR.c,364 :: 		void fm_caseWrongCommand( )
;Click_FM_AVR.c,366 :: 		mikrobus_logWrite( "wrong command", _LOG_LINE );
0x2F58	0x922F    	PUSH       R2
0x2F5A	0x923F    	PUSH       R3
0x2F5C	0x924F    	PUSH       R4
0x2F5E	0xE0B2    	LDI        R27, 2
0x2F60	0x2E4B    	MOV        R4, R27
0x2F62	0xECBC    	LDI        R27, lo_addr(?lstr49_Click_FM_AVR+0)
0x2F64	0x2E2B    	MOV        R2, R27
0x2F66	0xE0B0    	LDI        R27, hi_addr(?lstr49_Click_FM_AVR+0)
0x2F68	0x2E3B    	MOV        R3, R27
0x2F6A	0xD247    	RCALL      _mikrobus_logWrite+0
;Click_FM_AVR.c,367 :: 		}
L_end_fm_caseWrongCommand:
0x2F6C	0x904F    	POP        R4
0x2F6E	0x903F    	POP        R3
0x2F70	0x902F    	POP        R2
0x2F72	0x9508    	RET
; end of _fm_caseWrongCommand
___CC2DW:
;__Lib_System.c,25 :: 		
;__Lib_System.c,27 :: 		
L_loopDW:
;__Lib_System.c,28 :: 		
0x34D0	0x9005    	LPM        R0, Z+
;__Lib_System.c,29 :: 		
0x34D2	0x920D    	ST         X+, R0
;__Lib_System.c,30 :: 		
0x34D4	0x9701    	SBIW       R24, 1
;__Lib_System.c,31 :: 		
0x34D6	0xF7E1    	BRNE       L_loopDW
;__Lib_System.c,33 :: 		
L_end___CC2DW:
0x34D8	0x9508    	RET
; end of ___CC2DW
0x3926	0xE6A0    	LDI        R26, 96
0x3928	0xE0B0    	LDI        R27, 0
0x392A	0xE9E4    	LDI        R30, 148
0x392C	0xE3F6    	LDI        R31, 54
0x392E	0xE586    	LDI        R24, 86
0x3930	0xE092    	LDI        R25, 2
0x3932	0x1A68940E  	CALL       ___CC2DW
0x3936	0x9508    	RET
;easyavr_v7_ATMEGA32.c,47 :: __MIKROBUS1_GPIO
0x38EA	0x0165 ;__MIKROBUS1_GPIO+0
0x38EC	0x00FA ;__MIKROBUS1_GPIO+2
0x38EE	0x00EB ;__MIKROBUS1_GPIO+4
0x38F0	0x00E6 ;__MIKROBUS1_GPIO+6
0x38F2	0x00F5 ;__MIKROBUS1_GPIO+8
0x38F4	0x00F0 ;__MIKROBUS1_GPIO+10
0x38F6	0x019D ;__MIKROBUS1_GPIO+12
0x38F8	0x0198 ;__MIKROBUS1_GPIO+14
0x38FA	0x01A2 ;__MIKROBUS1_GPIO+16
0x38FC	0x01A7 ;__MIKROBUS1_GPIO+18
0x38FE	0x0193 ;__MIKROBUS1_GPIO+20
0x3900	0x0184 ;__MIKROBUS1_GPIO+22
0x3902	0x034F ;__MIKROBUS1_GPIO+24
0x3904	0x0354 ;__MIKROBUS1_GPIO+26
0x3906	0x0359 ;__MIKROBUS1_GPIO+28
0x3908	0x0340 ;__MIKROBUS1_GPIO+30
0x390A	0x0345 ;__MIKROBUS1_GPIO+32
0x390C	0x034A ;__MIKROBUS1_GPIO+34
0x390E	0x01E3 ;__MIKROBUS1_GPIO+36
0x3910	0x01E8 ;__MIKROBUS1_GPIO+38
0x3912	0x01D9 ;__MIKROBUS1_GPIO+40
0x3914	0x01DE ;__MIKROBUS1_GPIO+42
0x3916	0x01F7 ;__MIKROBUS1_GPIO+44
0x3918	0x01FC ;__MIKROBUS1_GPIO+46
; end of __MIKROBUS1_GPIO
;easyavr_v7_ATMEGA32.c,15 :: __MIKROBUS1_I2C
0x391A	0x03A8 ;__MIKROBUS1_I2C+0
0x391C	0x050D ;__MIKROBUS1_I2C+2
0x391E	0x02FF ;__MIKROBUS1_I2C+4
0x3920	0x0532 ;__MIKROBUS1_I2C+6
; end of __MIKROBUS1_I2C
;Click_FM_AVR.c,3 :: __FM_I2C_CFG
0x3922	0x86A0 ;__FM_I2C_CFG+0
0x3924	0x0001 ;__FM_I2C_CFG+2
; end of __FM_I2C_CFG
;Click_FM_AVR.c,0 :: ?ICS?lstr35_Click_FM_AVR
0x3694	0x7574 ;?ICS?lstr35_Click_FM_AVR+0
0x3696	0x656E ;?ICS?lstr35_Click_FM_AVR+2
0x3698	0x2064 ;?ICS?lstr35_Click_FM_AVR+4
0x369A	0x7266 ;?ICS?lstr35_Click_FM_AVR+6
0x369C	0x7165 ;?ICS?lstr35_Click_FM_AVR+8
0x369E	0x6575 ;?ICS?lstr35_Click_FM_AVR+10
0x36A0	0x636E ;?ICS?lstr35_Click_FM_AVR+12
0x36A2	0x3A79 ;?ICS?lstr35_Click_FM_AVR+14
0x36A4	0x00 ;?ICS?lstr35_Click_FM_AVR+16
; end of ?ICS?lstr35_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr36_Click_FM_AVR
0x36A5	0x4D20 ;?ICS?lstr36_Click_FM_AVR+0
0x36A7	0x7A48 ;?ICS?lstr36_Click_FM_AVR+2
0x36A9	0x00 ;?ICS?lstr36_Click_FM_AVR+4
; end of ?ICS?lstr36_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr34_Click_FM_AVR
0x36AA	0x6420 ;?ICS?lstr34_Click_FM_AVR+0
0x36AC	0x7542 ;?ICS?lstr34_Click_FM_AVR+2
0x36AE	0x0056 ;?ICS?lstr34_Click_FM_AVR+4
; end of ?ICS?lstr34_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr32_Click_FM_AVR
0x36B0	0x7473 ;?ICS?lstr32_Click_FM_AVR+0
0x36B2	0x7461 ;?ICS?lstr32_Click_FM_AVR+2
0x36B4	0x6F69 ;?ICS?lstr32_Click_FM_AVR+4
0x36B6	0x206E ;?ICS?lstr32_Click_FM_AVR+6
0x36B8	0x2033 ;?ICS?lstr32_Click_FM_AVR+8
0x36BA	0x7574 ;?ICS?lstr32_Click_FM_AVR+10
0x36BC	0x656E ;?ICS?lstr32_Click_FM_AVR+12
0x36BE	0x0064 ;?ICS?lstr32_Click_FM_AVR+14
; end of ?ICS?lstr32_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr33_Click_FM_AVR
0x36C0	0x7372 ;?ICS?lstr33_Click_FM_AVR+0
0x36C2	0x6973 ;?ICS?lstr33_Click_FM_AVR+2
0x36C4	0x003A ;?ICS?lstr33_Click_FM_AVR+4
; end of ?ICS?lstr33_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr27_Click_FM_AVR
0x36C6	0x7473 ;?ICS?lstr27_Click_FM_AVR+0
0x36C8	0x7461 ;?ICS?lstr27_Click_FM_AVR+2
0x36CA	0x6F69 ;?ICS?lstr27_Click_FM_AVR+4
0x36CC	0x206E ;?ICS?lstr27_Click_FM_AVR+6
0x36CE	0x2032 ;?ICS?lstr27_Click_FM_AVR+8
0x36D0	0x7574 ;?ICS?lstr27_Click_FM_AVR+10
0x36D2	0x656E ;?ICS?lstr27_Click_FM_AVR+12
0x36D4	0x0064 ;?ICS?lstr27_Click_FM_AVR+14
; end of ?ICS?lstr27_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr31_Click_FM_AVR
0x36D6	0x4D20 ;?ICS?lstr31_Click_FM_AVR+0
0x36D8	0x7A48 ;?ICS?lstr31_Click_FM_AVR+2
0x36DA	0x00 ;?ICS?lstr31_Click_FM_AVR+4
; end of ?ICS?lstr31_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr37_Click_FM_AVR
0x36DB	0x7574 ;?ICS?lstr37_Click_FM_AVR+0
0x36DD	0x656E ;?ICS?lstr37_Click_FM_AVR+2
0x36DF	0x7520 ;?ICS?lstr37_Click_FM_AVR+4
0x36E1	0x0070 ;?ICS?lstr37_Click_FM_AVR+6
; end of ?ICS?lstr37_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr30_Click_FM_AVR
0x36E3	0x7574 ;?ICS?lstr30_Click_FM_AVR+0
0x36E5	0x656E ;?ICS?lstr30_Click_FM_AVR+2
0x36E7	0x2064 ;?ICS?lstr30_Click_FM_AVR+4
0x36E9	0x7266 ;?ICS?lstr30_Click_FM_AVR+6
0x36EB	0x7165 ;?ICS?lstr30_Click_FM_AVR+8
0x36ED	0x6575 ;?ICS?lstr30_Click_FM_AVR+10
0x36EF	0x636E ;?ICS?lstr30_Click_FM_AVR+12
0x36F1	0x3A79 ;?ICS?lstr30_Click_FM_AVR+14
0x36F3	0x00 ;?ICS?lstr30_Click_FM_AVR+16
; end of ?ICS?lstr30_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr28_Click_FM_AVR
0x36F4	0x7372 ;?ICS?lstr28_Click_FM_AVR+0
0x36F6	0x6973 ;?ICS?lstr28_Click_FM_AVR+2
0x36F8	0x003A ;?ICS?lstr28_Click_FM_AVR+4
; end of ?ICS?lstr28_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr29_Click_FM_AVR
0x36FA	0x6420 ;?ICS?lstr29_Click_FM_AVR+0
0x36FC	0x7542 ;?ICS?lstr29_Click_FM_AVR+2
0x36FE	0x0056 ;?ICS?lstr29_Click_FM_AVR+4
; end of ?ICS?lstr29_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr49_Click_FM_AVR
0x3700	0x7277 ;?ICS?lstr49_Click_FM_AVR+0
0x3702	0x6E6F ;?ICS?lstr49_Click_FM_AVR+2
0x3704	0x2067 ;?ICS?lstr49_Click_FM_AVR+4
0x3706	0x6F63 ;?ICS?lstr49_Click_FM_AVR+6
0x3708	0x6D6D ;?ICS?lstr49_Click_FM_AVR+8
0x370A	0x6E61 ;?ICS?lstr49_Click_FM_AVR+10
0x370C	0x0064 ;?ICS?lstr49_Click_FM_AVR+12
; end of ?ICS?lstr49_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr50_Click_FM_AVR
0x370E	0x7973 ;?ICS?lstr50_Click_FM_AVR+0
0x3710	0x7473 ;?ICS?lstr50_Click_FM_AVR+2
0x3712	0x6D65 ;?ICS?lstr50_Click_FM_AVR+4
0x3714	0x6920 ;?ICS?lstr50_Click_FM_AVR+6
0x3716	0x696E ;?ICS?lstr50_Click_FM_AVR+8
0x3718	0x2074 ;?ICS?lstr50_Click_FM_AVR+10
0x371A	0x6F64 ;?ICS?lstr50_Click_FM_AVR+12
0x371C	0x656E ;?ICS?lstr50_Click_FM_AVR+14
0x371E	0x00 ;?ICS?lstr50_Click_FM_AVR+16
; end of ?ICS?lstr50_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr26_Click_FM_AVR
0x371F	0x4D20 ;?ICS?lstr26_Click_FM_AVR+0
0x3721	0x7A48 ;?ICS?lstr26_Click_FM_AVR+2
0x3723	0x00 ;?ICS?lstr26_Click_FM_AVR+4
; end of ?ICS?lstr26_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr24_Click_FM_AVR
0x3724	0x6420 ;?ICS?lstr24_Click_FM_AVR+0
0x3726	0x7542 ;?ICS?lstr24_Click_FM_AVR+2
0x3728	0x0056 ;?ICS?lstr24_Click_FM_AVR+4
; end of ?ICS?lstr24_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr25_Click_FM_AVR
0x372A	0x7574 ;?ICS?lstr25_Click_FM_AVR+0
0x372C	0x656E ;?ICS?lstr25_Click_FM_AVR+2
0x372E	0x2064 ;?ICS?lstr25_Click_FM_AVR+4
0x3730	0x7266 ;?ICS?lstr25_Click_FM_AVR+6
0x3732	0x7165 ;?ICS?lstr25_Click_FM_AVR+8
0x3734	0x6575 ;?ICS?lstr25_Click_FM_AVR+10
0x3736	0x636E ;?ICS?lstr25_Click_FM_AVR+12
0x3738	0x3A79 ;?ICS?lstr25_Click_FM_AVR+14
0x373A	0x00 ;?ICS?lstr25_Click_FM_AVR+16
; end of ?ICS?lstr25_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr43_Click_FM_AVR
0x373B	0x7574 ;?ICS?lstr43_Click_FM_AVR+0
0x373D	0x656E ;?ICS?lstr43_Click_FM_AVR+2
0x373F	0x7520 ;?ICS?lstr43_Click_FM_AVR+4
0x3741	0x0070 ;?ICS?lstr43_Click_FM_AVR+6
; end of ?ICS?lstr43_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr47_Click_FM_AVR
0x3743	0x4D20 ;?ICS?lstr47_Click_FM_AVR+0
0x3745	0x7A48 ;?ICS?lstr47_Click_FM_AVR+2
0x3747	0x00 ;?ICS?lstr47_Click_FM_AVR+4
; end of ?ICS?lstr47_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr48_Click_FM_AVR
0x3748	0x7265 ;?ICS?lstr48_Click_FM_AVR+0
0x374A	0x6F72 ;?ICS?lstr48_Click_FM_AVR+2
0x374C	0x0072 ;?ICS?lstr48_Click_FM_AVR+4
; end of ?ICS?lstr48_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr46_Click_FM_AVR
0x374E	0x7574 ;?ICS?lstr46_Click_FM_AVR+0
0x3750	0x656E ;?ICS?lstr46_Click_FM_AVR+2
0x3752	0x2064 ;?ICS?lstr46_Click_FM_AVR+4
0x3754	0x7266 ;?ICS?lstr46_Click_FM_AVR+6
0x3756	0x7165 ;?ICS?lstr46_Click_FM_AVR+8
0x3758	0x6575 ;?ICS?lstr46_Click_FM_AVR+10
0x375A	0x636E ;?ICS?lstr46_Click_FM_AVR+12
0x375C	0x3A79 ;?ICS?lstr46_Click_FM_AVR+14
0x375E	0x00 ;?ICS?lstr46_Click_FM_AVR+16
; end of ?ICS?lstr46_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr44_Click_FM_AVR
0x375F	0x7372 ;?ICS?lstr44_Click_FM_AVR+0
0x3761	0x6973 ;?ICS?lstr44_Click_FM_AVR+2
0x3763	0x003A ;?ICS?lstr44_Click_FM_AVR+4
; end of ?ICS?lstr44_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr45_Click_FM_AVR
0x3765	0x6420 ;?ICS?lstr45_Click_FM_AVR+0
0x3767	0x7542 ;?ICS?lstr45_Click_FM_AVR+2
0x3769	0x0056 ;?ICS?lstr45_Click_FM_AVR+4
; end of ?ICS?lstr45_Click_FM_AVR
;__Lib_Conversions.c,0 :: ?ICS?lstr1___Lib_Conversions
0x376B	0x614E ;?ICS?lstr1___Lib_Conversions+0
0x376D	0x004E ;?ICS?lstr1___Lib_Conversions+2
; end of ?ICS?lstr1___Lib_Conversions
;Click_FM_AVR.c,0 :: ?ICS?lstr41_Click_FM_AVR
0x376F	0x4D20 ;?ICS?lstr41_Click_FM_AVR+0
0x3771	0x7A48 ;?ICS?lstr41_Click_FM_AVR+2
0x3773	0x00 ;?ICS?lstr41_Click_FM_AVR+4
; end of ?ICS?lstr41_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr42_Click_FM_AVR
0x3774	0x7265 ;?ICS?lstr42_Click_FM_AVR+0
0x3776	0x6F72 ;?ICS?lstr42_Click_FM_AVR+2
0x3778	0x0072 ;?ICS?lstr42_Click_FM_AVR+4
; end of ?ICS?lstr42_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr40_Click_FM_AVR
0x377A	0x7574 ;?ICS?lstr40_Click_FM_AVR+0
0x377C	0x656E ;?ICS?lstr40_Click_FM_AVR+2
0x377E	0x2064 ;?ICS?lstr40_Click_FM_AVR+4
0x3780	0x7266 ;?ICS?lstr40_Click_FM_AVR+6
0x3782	0x7165 ;?ICS?lstr40_Click_FM_AVR+8
0x3784	0x6575 ;?ICS?lstr40_Click_FM_AVR+10
0x3786	0x636E ;?ICS?lstr40_Click_FM_AVR+12
0x3788	0x3A79 ;?ICS?lstr40_Click_FM_AVR+14
0x378A	0x00 ;?ICS?lstr40_Click_FM_AVR+16
; end of ?ICS?lstr40_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr38_Click_FM_AVR
0x378B	0x7372 ;?ICS?lstr38_Click_FM_AVR+0
0x378D	0x6973 ;?ICS?lstr38_Click_FM_AVR+2
0x378F	0x003A ;?ICS?lstr38_Click_FM_AVR+4
; end of ?ICS?lstr38_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr39_Click_FM_AVR
0x3791	0x6420 ;?ICS?lstr39_Click_FM_AVR+0
0x3793	0x7542 ;?ICS?lstr39_Click_FM_AVR+2
0x3795	0x0056 ;?ICS?lstr39_Click_FM_AVR+4
; end of ?ICS?lstr39_Click_FM_AVR
;__Lib_Conversions.c,0 :: ?ICS?lstr3___Lib_Conversions
0x3797	0x4E49 ;?ICS?lstr3___Lib_Conversions+0
0x3799	0x0046 ;?ICS?lstr3___Lib_Conversions+2
; end of ?ICS?lstr3___Lib_Conversions
;__Lib_Conversions.c,0 :: ?ICS?lstr2___Lib_Conversions
0x379B	0x0030 ;?ICS?lstr2___Lib_Conversions+0
; end of ?ICS?lstr2___Lib_Conversions
;__Lib_TWI.c,0 :: ?ICS__Lib_TWI__TWI_TIMEOUT
0x379D	0x0000 ;?ICS__Lib_TWI__TWI_TIMEOUT+0
0x379F	0x0000 ;?ICS__Lib_TWI__TWI_TIMEOUT+2
; end of ?ICS__Lib_TWI__TWI_TIMEOUT
;Click_FM_AVR.c,0 :: ?ICS?lstr23_Click_FM_AVR
0x37A1	0x7372 ;?ICS?lstr23_Click_FM_AVR+0
0x37A3	0x6973 ;?ICS?lstr23_Click_FM_AVR+2
0x37A5	0x003A ;?ICS?lstr23_Click_FM_AVR+4
; end of ?ICS?lstr23_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr7_Click_FM_AVR
0x37A7	0x6420 ;?ICS?lstr7_Click_FM_AVR+0
0x37A9	0x7542 ;?ICS?lstr7_Click_FM_AVR+2
0x37AB	0x0056 ;?ICS?lstr7_Click_FM_AVR+4
; end of ?ICS?lstr7_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr8_Click_FM_AVR
0x37AD	0x6863 ;?ICS?lstr8_Click_FM_AVR+0
0x37AF	0x6E61 ;?ICS?lstr8_Click_FM_AVR+2
0x37B1	0x656E ;?ICS?lstr8_Click_FM_AVR+4
0x37B3	0x206C ;?ICS?lstr8_Click_FM_AVR+6
0x37B5	0x7266 ;?ICS?lstr8_Click_FM_AVR+8
0x37B7	0x7165 ;?ICS?lstr8_Click_FM_AVR+10
0x37B9	0x6575 ;?ICS?lstr8_Click_FM_AVR+12
0x37BB	0x636E ;?ICS?lstr8_Click_FM_AVR+14
0x37BD	0x3A79 ;?ICS?lstr8_Click_FM_AVR+16
0x37BF	0x00 ;?ICS?lstr8_Click_FM_AVR+18
; end of ?ICS?lstr8_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr6_Click_FM_AVR
0x37C0	0x7372 ;?ICS?lstr6_Click_FM_AVR+0
0x37C2	0x6973 ;?ICS?lstr6_Click_FM_AVR+2
0x37C4	0x003A ;?ICS?lstr6_Click_FM_AVR+4
; end of ?ICS?lstr6_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr5_Click_FM_AVR
0x37C6	0x7473 ;?ICS?lstr5_Click_FM_AVR+0
0x37C8	0x7461 ;?ICS?lstr5_Click_FM_AVR+2
0x37CA	0x6F69 ;?ICS?lstr5_Click_FM_AVR+4
0x37CC	0x206E ;?ICS?lstr5_Click_FM_AVR+6
0x37CE	0x6F66 ;?ICS?lstr5_Click_FM_AVR+8
0x37D0	0x6E75 ;?ICS?lstr5_Click_FM_AVR+10
0x37D2	0x0064 ;?ICS?lstr5_Click_FM_AVR+12
; end of ?ICS?lstr5_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr21_Click_FM_AVR
0x37D4	0x756D ;?ICS?lstr21_Click_FM_AVR+0
0x37D6	0x6574 ;?ICS?lstr21_Click_FM_AVR+2
0x37D8	0x6420 ;?ICS?lstr21_Click_FM_AVR+4
0x37DA	0x7369 ;?ICS?lstr21_Click_FM_AVR+6
0x37DC	0x6261 ;?ICS?lstr21_Click_FM_AVR+8
0x37DE	0x656C ;?ICS?lstr21_Click_FM_AVR+10
0x37E0	0x0064 ;?ICS?lstr21_Click_FM_AVR+12
; end of ?ICS?lstr21_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS_memory_
0x37E2	0x00 ;?ICS_memory_+0
; end of ?ICS_memory_
;Click_FM_AVR.c,0 :: ?ICS?lstr20_Click_FM_AVR
0x37E3	0x756D ;?ICS?lstr20_Click_FM_AVR+0
0x37E5	0x6574 ;?ICS?lstr20_Click_FM_AVR+2
0x37E7	0x6520 ;?ICS?lstr20_Click_FM_AVR+4
0x37E9	0x616E ;?ICS?lstr20_Click_FM_AVR+6
0x37EB	0x6C62 ;?ICS?lstr20_Click_FM_AVR+8
0x37ED	0x6465 ;?ICS?lstr20_Click_FM_AVR+10
0x37EF	0x00 ;?ICS?lstr20_Click_FM_AVR+12
; end of ?ICS?lstr20_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr9_Click_FM_AVR
0x37F0	0x4D20 ;?ICS?lstr9_Click_FM_AVR+0
0x37F2	0x7A48 ;?ICS?lstr9_Click_FM_AVR+2
0x37F4	0x00 ;?ICS?lstr9_Click_FM_AVR+4
; end of ?ICS?lstr9_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS_mute_
0x37F5	0x00 ;?ICS_mute_+0
; end of ?ICS_mute_
;Click_FM_AVR.c,0 :: ?ICS?lstr15_Click_FM_AVR
0x37F6	0x7266 ;?ICS?lstr15_Click_FM_AVR+0
0x37F8	0x7165 ;?ICS?lstr15_Click_FM_AVR+2
0x37FA	0x6575 ;?ICS?lstr15_Click_FM_AVR+4
0x37FC	0x636E ;?ICS?lstr15_Click_FM_AVR+6
0x37FE	0x2079 ;?ICS?lstr15_Click_FM_AVR+8
0x3800	0x6F6E ;?ICS?lstr15_Click_FM_AVR+10
0x3802	0x2074 ;?ICS?lstr15_Click_FM_AVR+12
0x3804	0x6E69 ;?ICS?lstr15_Click_FM_AVR+14
0x3806	0x7620 ;?ICS?lstr15_Click_FM_AVR+16
0x3808	0x6C61 ;?ICS?lstr15_Click_FM_AVR+18
0x380A	0x6469 ;?ICS?lstr15_Click_FM_AVR+20
0x380C	0x7220 ;?ICS?lstr15_Click_FM_AVR+22
0x380E	0x6E61 ;?ICS?lstr15_Click_FM_AVR+24
0x3810	0x6567 ;?ICS?lstr15_Click_FM_AVR+26
0x3812	0x00 ;?ICS?lstr15_Click_FM_AVR+28
; end of ?ICS?lstr15_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr10_Click_FM_AVR
0x3813	0x7574 ;?ICS?lstr10_Click_FM_AVR+0
0x3815	0x656E ;?ICS?lstr10_Click_FM_AVR+2
0x3817	0x6320 ;?ICS?lstr10_Click_FM_AVR+4
0x3819	0x6D6F ;?ICS?lstr10_Click_FM_AVR+6
0x381B	0x6C70 ;?ICS?lstr10_Click_FM_AVR+8
0x381D	0x7465 ;?ICS?lstr10_Click_FM_AVR+10
0x381F	0x0065 ;?ICS?lstr10_Click_FM_AVR+12
; end of ?ICS?lstr10_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr13_Click_FM_AVR
0x3821	0x7574 ;?ICS?lstr13_Click_FM_AVR+0
0x3823	0x656E ;?ICS?lstr13_Click_FM_AVR+2
0x3825	0x2064 ;?ICS?lstr13_Click_FM_AVR+4
0x3827	0x7266 ;?ICS?lstr13_Click_FM_AVR+6
0x3829	0x7165 ;?ICS?lstr13_Click_FM_AVR+8
0x382B	0x6575 ;?ICS?lstr13_Click_FM_AVR+10
0x382D	0x636E ;?ICS?lstr13_Click_FM_AVR+12
0x382F	0x3A79 ;?ICS?lstr13_Click_FM_AVR+14
0x3831	0x00 ;?ICS?lstr13_Click_FM_AVR+16
; end of ?ICS?lstr13_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr14_Click_FM_AVR
0x3832	0x4D20 ;?ICS?lstr14_Click_FM_AVR+0
0x3834	0x7A48 ;?ICS?lstr14_Click_FM_AVR+2
0x3836	0x00 ;?ICS?lstr14_Click_FM_AVR+4
; end of ?ICS?lstr14_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr12_Click_FM_AVR
0x3837	0x6420 ;?ICS?lstr12_Click_FM_AVR+0
0x3839	0x7542 ;?ICS?lstr12_Click_FM_AVR+2
0x383B	0x0056 ;?ICS?lstr12_Click_FM_AVR+4
; end of ?ICS?lstr12_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr11_Click_FM_AVR
0x383D	0x7372 ;?ICS?lstr11_Click_FM_AVR+0
0x383F	0x6973 ;?ICS?lstr11_Click_FM_AVR+2
0x3841	0x003A ;?ICS?lstr11_Click_FM_AVR+4
; end of ?ICS?lstr11_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS_snrThreshold_
0x3843	0x04 ;?ICS_snrThreshold_+0
; end of ?ICS_snrThreshold_
;Click_FM_AVR.c,0 :: ?ICS_seekThreshold_
0x3844	0x0019 ;?ICS_seekThreshold_+0
; end of ?ICS_seekThreshold_
;Click_FM_AVR.c,0 :: ?ICS_impulseDetectionThreshold_
0x3846	0x08 ;?ICS_impulseDetectionThreshold_+0
; end of ?ICS_impulseDetectionThreshold_
;Click_FM_AVR.c,0 :: ?ICS_volumeLevel_
0x3847	0x0A ;?ICS_volumeLevel_+0
; end of ?ICS_volumeLevel_
;Click_FM_AVR.c,0 :: ?ICS?lstr1_Click_FM_AVR
0x3848	0x6F76 ;?ICS?lstr1_Click_FM_AVR+0
0x384A	0x756C ;?ICS?lstr1_Click_FM_AVR+2
0x384C	0x656D ;?ICS?lstr1_Click_FM_AVR+4
0x384E	0x7520 ;?ICS?lstr1_Click_FM_AVR+6
0x3850	0x0070 ;?ICS?lstr1_Click_FM_AVR+8
; end of ?ICS?lstr1_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr2_Click_FM_AVR
0x3852	0x6F76 ;?ICS?lstr2_Click_FM_AVR+0
0x3854	0x756C ;?ICS?lstr2_Click_FM_AVR+2
0x3856	0x656D ;?ICS?lstr2_Click_FM_AVR+4
0x3858	0x6D20 ;?ICS?lstr2_Click_FM_AVR+6
0x385A	0x7861 ;?ICS?lstr2_Click_FM_AVR+8
0x385C	0x00 ;?ICS?lstr2_Click_FM_AVR+10
; end of ?ICS?lstr2_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr22_Click_FM_AVR
0x385D	0x7473 ;?ICS?lstr22_Click_FM_AVR+0
0x385F	0x7461 ;?ICS?lstr22_Click_FM_AVR+2
0x3861	0x6F69 ;?ICS?lstr22_Click_FM_AVR+4
0x3863	0x206E ;?ICS?lstr22_Click_FM_AVR+6
0x3865	0x2031 ;?ICS?lstr22_Click_FM_AVR+8
0x3867	0x7574 ;?ICS?lstr22_Click_FM_AVR+10
0x3869	0x656E ;?ICS?lstr22_Click_FM_AVR+12
0x386B	0x0064 ;?ICS?lstr22_Click_FM_AVR+14
; end of ?ICS?lstr22_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr51_Click_FM_AVR
0x386D	0x7061 ;?ICS?lstr51_Click_FM_AVR+0
0x386F	0x6C70 ;?ICS?lstr51_Click_FM_AVR+2
0x3871	0x6369 ;?ICS?lstr51_Click_FM_AVR+4
0x3873	0x7461 ;?ICS?lstr51_Click_FM_AVR+6
0x3875	0x6F69 ;?ICS?lstr51_Click_FM_AVR+8
0x3877	0x206E ;?ICS?lstr51_Click_FM_AVR+10
0x3879	0x6E69 ;?ICS?lstr51_Click_FM_AVR+12
0x387B	0x7469 ;?ICS?lstr51_Click_FM_AVR+14
0x387D	0x6420 ;?ICS?lstr51_Click_FM_AVR+16
0x387F	0x6E6F ;?ICS?lstr51_Click_FM_AVR+18
0x3881	0x0065 ;?ICS?lstr51_Click_FM_AVR+20
; end of ?ICS?lstr51_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr3_Click_FM_AVR
0x3883	0x6F76 ;?ICS?lstr3_Click_FM_AVR+0
0x3885	0x756C ;?ICS?lstr3_Click_FM_AVR+2
0x3887	0x656D ;?ICS?lstr3_Click_FM_AVR+4
0x3889	0x6420 ;?ICS?lstr3_Click_FM_AVR+6
0x388B	0x776F ;?ICS?lstr3_Click_FM_AVR+8
0x388D	0x006E ;?ICS?lstr3_Click_FM_AVR+10
; end of ?ICS?lstr3_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr4_Click_FM_AVR
0x388F	0x6F76 ;?ICS?lstr4_Click_FM_AVR+0
0x3891	0x756C ;?ICS?lstr4_Click_FM_AVR+2
0x3893	0x656D ;?ICS?lstr4_Click_FM_AVR+4
0x3895	0x6D20 ;?ICS?lstr4_Click_FM_AVR+6
0x3897	0x6E69 ;?ICS?lstr4_Click_FM_AVR+8
0x3899	0x00 ;?ICS?lstr4_Click_FM_AVR+10
; end of ?ICS?lstr4_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr17_Click_FM_AVR
0x389A	0x7473 ;?ICS?lstr17_Click_FM_AVR+0
0x389C	0x7461 ;?ICS?lstr17_Click_FM_AVR+2
0x389E	0x6F69 ;?ICS?lstr17_Click_FM_AVR+4
0x38A0	0x206E ;?ICS?lstr17_Click_FM_AVR+6
0x38A2	0x2032 ;?ICS?lstr17_Click_FM_AVR+8
0x38A4	0x656D ;?ICS?lstr17_Click_FM_AVR+10
0x38A6	0x6F6D ;?ICS?lstr17_Click_FM_AVR+12
0x38A8	0x6972 ;?ICS?lstr17_Click_FM_AVR+14
0x38AA	0x657A ;?ICS?lstr17_Click_FM_AVR+16
0x38AC	0x0064 ;?ICS?lstr17_Click_FM_AVR+18
; end of ?ICS?lstr17_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr18_Click_FM_AVR
0x38AE	0x7473 ;?ICS?lstr18_Click_FM_AVR+0
0x38B0	0x7461 ;?ICS?lstr18_Click_FM_AVR+2
0x38B2	0x6F69 ;?ICS?lstr18_Click_FM_AVR+4
0x38B4	0x206E ;?ICS?lstr18_Click_FM_AVR+6
0x38B6	0x2033 ;?ICS?lstr18_Click_FM_AVR+8
0x38B8	0x656D ;?ICS?lstr18_Click_FM_AVR+10
0x38BA	0x6F6D ;?ICS?lstr18_Click_FM_AVR+12
0x38BC	0x6972 ;?ICS?lstr18_Click_FM_AVR+14
0x38BE	0x657A ;?ICS?lstr18_Click_FM_AVR+16
0x38C0	0x0064 ;?ICS?lstr18_Click_FM_AVR+18
; end of ?ICS?lstr18_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr16_Click_FM_AVR
0x38C2	0x7473 ;?ICS?lstr16_Click_FM_AVR+0
0x38C4	0x7461 ;?ICS?lstr16_Click_FM_AVR+2
0x38C6	0x6F69 ;?ICS?lstr16_Click_FM_AVR+4
0x38C8	0x206E ;?ICS?lstr16_Click_FM_AVR+6
0x38CA	0x2031 ;?ICS?lstr16_Click_FM_AVR+8
0x38CC	0x656D ;?ICS?lstr16_Click_FM_AVR+10
0x38CE	0x6F6D ;?ICS?lstr16_Click_FM_AVR+12
0x38D0	0x6972 ;?ICS?lstr16_Click_FM_AVR+14
0x38D2	0x657A ;?ICS?lstr16_Click_FM_AVR+16
0x38D4	0x0064 ;?ICS?lstr16_Click_FM_AVR+18
; end of ?ICS?lstr16_Click_FM_AVR
;Click_FM_AVR.c,0 :: ?ICS?lstr19_Click_FM_AVR
0x38D6	0x7473 ;?ICS?lstr19_Click_FM_AVR+0
0x38D8	0x7461 ;?ICS?lstr19_Click_FM_AVR+2
0x38DA	0x6F69 ;?ICS?lstr19_Click_FM_AVR+4
0x38DC	0x206E ;?ICS?lstr19_Click_FM_AVR+6
0x38DE	0x2031 ;?ICS?lstr19_Click_FM_AVR+8
0x38E0	0x656D ;?ICS?lstr19_Click_FM_AVR+10
0x38E2	0x6F6D ;?ICS?lstr19_Click_FM_AVR+12
0x38E4	0x6972 ;?ICS?lstr19_Click_FM_AVR+14
0x38E6	0x657A ;?ICS?lstr19_Click_FM_AVR+16
0x38E8	0x0064 ;?ICS?lstr19_Click_FM_AVR+18
; end of ?ICS?lstr19_Click_FM_AVR
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x002A       [8]    _float_tstr16_r19
0x0032       [7]    _float_unpacks
0x0039      [10]    _float_pack
0x0043       [3]    _float_fpsub
0x0046       [5]    easyavr_v7_ATMEGA32__setSDA_2
0x004B       [5]    easyavr_v7_ATMEGA32__setCS_3
0x0050       [5]    easyavr_v7_ATMEGA32__setRST_3
0x0055       [5]    easyavr_v7_ATMEGA32__setAN_3
0x005A       [5]    easyavr_v7_ATMEGA32__setSCL_2
0x005F       [5]    easyavr_v7_ATMEGA32__setPWM_2
0x0064       [5]    easyavr_v7_ATMEGA32__setMOSI_2
0x0069       [5]    easyavr_v7_ATMEGA32__setMISO_2
0x006E       [5]    easyavr_v7_ATMEGA32__setTX_2
0x0073       [5]    easyavr_v7_ATMEGA32__setRX_2
0x0078       [5]    easyavr_v7_ATMEGA32__setINT_2
0x007D       [5]    easyavr_v7_ATMEGA32__setSCL_3
0x0082       [5]    easyavr_v7_ATMEGA32__setTX_3
0x0087       [5]    easyavr_v7_ATMEGA32__setSDA_3
0x008C       [9]    _float_neg32
0x0095      [46]    _float_normalize_and_pack
0x00C3       [5]    easyavr_v7_ATMEGA32__setRX_3
0x00C8       [5]    easyavr_v7_ATMEGA32__setMISO_3
0x00CD       [5]    easyavr_v7_ATMEGA32__setSCK_3
0x00D2       [5]    easyavr_v7_ATMEGA32__setMOSI_3
0x00D7       [5]    easyavr_v7_ATMEGA32__setINT_3
0x00DC       [5]    easyavr_v7_ATMEGA32__setPWM_3
0x00E1       [5]    easyavr_v7_ATMEGA32__setSCK_2
0x00E6       [5]    easyavr_v7_ATMEGA32__setSCK_1
0x00EB       [5]    easyavr_v7_ATMEGA32__setCS_1
0x00F0       [5]    easyavr_v7_ATMEGA32__setMOSI_1
0x00F5       [5]    easyavr_v7_ATMEGA32__setMISO_1
0x00FA       [5]    easyavr_v7_ATMEGA32__setRST_1
0x00FF      [91]    _float_fpadd_alt
0x015A      [11]    _float_fpcmp
0x0165       [5]    easyavr_v7_ATMEGA32__setAN_1
0x016A      [21]    _float_unpacku
0x017F       [5]    easyavr_v7_ATMEGA32__setAN_2
0x0184       [5]    easyavr_v7_ATMEGA32__setSDA_1
0x0189       [5]    easyavr_v7_ATMEGA32__setRST_2
0x018E       [5]    easyavr_v7_ATMEGA32__setCS_2
0x0193       [5]    easyavr_v7_ATMEGA32__setSCL_1
0x0198       [5]    easyavr_v7_ATMEGA32__setINT_1
0x019D       [5]    easyavr_v7_ATMEGA32__setPWM_1
0x01A2       [5]    easyavr_v7_ATMEGA32__setRX_1
0x01A7       [5]    easyavr_v7_ATMEGA32__setTX_1
0x01AC       [5]    easyavr_v7_ATMEGA32__getPWM_2
0x01B1       [5]    easyavr_v7_ATMEGA32__getMOSI_2
0x01B6       [5]    easyavr_v7_ATMEGA32__getSCK_2
0x01BB       [5]    easyavr_v7_ATMEGA32__getMISO_2
0x01C0       [5]    easyavr_v7_ATMEGA32__getTX_2
0x01C5       [5]    easyavr_v7_ATMEGA32__getSCL_2
0x01CA       [5]    easyavr_v7_ATMEGA32__getINT_2
0x01CF       [5]    easyavr_v7_ATMEGA32__getRX_2
0x01D4       [5]    easyavr_v7_ATMEGA32__getCS_2
0x01D9       [5]    easyavr_v7_ATMEGA32__getRX_1
0x01DE       [5]    easyavr_v7_ATMEGA32__getTX_1
0x01E3       [5]    easyavr_v7_ATMEGA32__getPWM_1
0x01E8       [5]    easyavr_v7_ATMEGA32__getINT_1
0x01ED       [5]    easyavr_v7_ATMEGA32__getAN_2
0x01F2       [5]    easyavr_v7_ATMEGA32__getRST_2
0x01F7       [5]    easyavr_v7_ATMEGA32__getSCL_1
0x01FC       [5]    easyavr_v7_ATMEGA32__getSDA_1
0x0201       [5]    easyavr_v7_ATMEGA32__getSDA_2
0x0206       [5]    easyavr_v7_ATMEGA32__getSDA_3
0x020B      [10]    _float_long2fp
0x0215       [5]    easyavr_v7_ATMEGA32__getTX_3
0x021A       [5]    easyavr_v7_ATMEGA32__getSCL_3
0x021F       [3]    _float_fpadd
0x0222      [62]    _float_fpmul
0x0260      [92]    _float_fpdiv
0x02BC       [7]    _float_fpcmp1
0x02C3       [5]    easyavr_v7_ATMEGA32__getRX_3
0x02C8       [5]    easyavr_v7_ATMEGA32__getCS_3
0x02CD       [5]    easyavr_v7_ATMEGA32__getSCK_3
0x02D2       [5]    easyavr_v7_ATMEGA32__getAN_3
0x02D7       [5]    easyavr_v7_ATMEGA32__getRST_3
0x02DC       [5]    easyavr_v7_ATMEGA32__getPWM_3
0x02E1       [5]    easyavr_v7_ATMEGA32__getINT_3
0x02E6       [5]    easyavr_v7_ATMEGA32__getMISO_3
0x02EB       [5]    easyavr_v7_ATMEGA32__getMOSI_3
0x02F0       [2]    _UART1_Read
0x02F2       [5]    _UART1_Data_Ready
0x02F7       [5]    _UART1_Tx_Idle
0x02FC       [3]    _TWI_Status
0x02FF      [53]    _TWI_Write
0x0334      [12]    _UART1_Write
0x0340       [5]    easyavr_v7_ATMEGA32__getSCK_1
0x0345       [5]    easyavr_v7_ATMEGA32__getMISO_1
0x034A       [5]    easyavr_v7_ATMEGA32__getMOSI_1
0x034F       [5]    easyavr_v7_ATMEGA32__getAN_1
0x0354       [5]    easyavr_v7_ATMEGA32__getRST_1
0x0359       [5]    easyavr_v7_ATMEGA32__getCS_1
0x035E      [21]    _strcpy
0x0373      [36]    _UART1_Init
0x0397       [7]    _float_op_less
0x039E      [10]    _float_fpmul1
0x03A8      [59]    _TWI_Start
0x03E3     [116]    __fm_Driver_hal_i2cWrite
0x0457      [10]    _float_fpadd1
0x0461      [20]    _Div_16x16_U
0x0475       [5]    _TWI_Init
0x047A     [137]    __fm_Driver_hal_i2cRead
0x0503       [7]    _float_op_gequ
0x050A       [3]    _float_ulong2fp
0x050D       [3]    _TWI_Stop
0x0510      [27]    __fm_Driver_hal_i2cStart
0x052B       [7]    _Delay_10ms
0x0532      [58]    _TWI_Read
0x056C      [10]    _float_fpsub1
0x0576      [12]    _Div_8x8_U
0x0582      [36]    _float_fpint
0x05A6      [10]    _float_fpdiv1
0x05B0      [28]    _fm_getReceivedSignalStrengthIndicator
0x05CC     [145]    _fm_getChannelFrequency
0x065D      [71]    easyavr_v7_ATMEGA32__i2cInit_1
0x06A4     [104]    easyavr_v7_ATMEGA32__gpioInit_3
0x070C      [51]    _fm_muteDisable
0x073F      [49]    _fm_muteEnable
0x0770      [50]    _fm_endTune
0x07A2     [268]    _fm_fineTuneDown
0x08AE     [267]    _fm_fineTuneUp
0x09B9      [82]    _fm_tuneChannel
0x0A0B      [68]    _WordToStr
0x0A4F      [27]    _fm_getChannel
0x0A6A     [104]    easyavr_v7_ATMEGA32__gpioInit_2
0x0AD2     [252]    _fm_tune
0x0BCE     [104]    easyavr_v7_ATMEGA32__gpioInit_1
0x0C36     [446]    _FloatToStr
0x0DF4     [136]    easyavr_v7_ATMEGA32__log_init1
0x0E7C     [136]    easyavr_v7_ATMEGA32__log_init2
0x0F04       [2]    easyavr_v7_ATMEGA32__log_init3
0x0F06       [2]    easyavr_v7_ATMEGA32__i2cInit_3
0x0F08      [86]    _fm_writeRegisters
0x0F5E      [29]    _fm_setBits
0x0F7B      [76]    easyavr_v7_ATMEGA32__i2cInit_2
0x0FC7      [35]    __fm_Driver_hal_gpioMap
0x0FEA      [25]    __fm_Driver_fm_modeSelect
0x1003      [10]    _Delay_100ms
0x100D      [32]    __fm_Driver_hal_i2cMap
0x102D     [136]    easyavr_v7_ATMEGA32__log_initUart
0x10B5      [14]    easyavr_v7_ATMEGA32__log_write
0x10C3     [164]    _fm_readRegisters
0x1167      [10]    _Delay_1sec
0x1171      [62]    _fm_volumeDown
0x11AF      [60]    _fm_volumeUp
0x11EB      [47]    _fm_endSeek
0x121A      [49]    _fm_seek
0x124B      [40]    _fm_caseMute
0x1273     [125]    _fm_caseSeek
0x12F0     [111]    _fm_powerup
0x135F      [10]    _fm_i2cDriverInit
0x1369      [54]    _fm_setVolume
0x139F     [104]    _fm_caseMemorize
0x1407     [126]    _fm_caseStation3
0x1485     [143]    _fm_caseTuneUp
0x1514     [346]    _fm_basicSettings
0x166E     [126]    _fm_caseStation1
0x16EC      [33]    _mikrobus_i2cInit
0x170D     [126]    _fm_caseStation2
0x178B      [33]    _mikrobus_gpioInit
0x17AC      [14]    _fm_caseWrongCommand
0x17BA      [55]    _fm_setSeekImpulseDetectionThreshold
0x17F1      [54]    _mikrobus_logInit
0x1827      [64]    _fm_setSeekThreshold
0x1867      [27]    _fm_casePlus
0x1882      [61]    _fm_setSnrThreshold
0x18BF      [27]    _fm_caseMinus
0x18DA     [141]    _fm_caseTuneDown
0x1967     [150]    _fm_caseTune
0x19FD     [107]    _mikrobus_logWrite
0x1A68       [5]    ___CC2DW
0x1A6D      [64]    _systemInit
0x1AAD      [90]    _applicationTask
0x1B07      [56]    _applicationInit
0x1B3F      [11]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    Delay_Cyc_loc_L0
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [2]    FARG_memchr_p
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setMISO_2_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setTX_2_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setRST_2_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setMISO_3_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setAN_2_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setINT_2_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setSDA_1_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setINT_3_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setMOSI_3_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setPWM_3_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setRX_2_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setPWM_2_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setCS_2_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setSDA_2_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setMOSI_2_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setRST_3_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setAN_3_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setCS_3_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setSCK_3_value
0x0002       [2]    FARG_fm_writeRegisters_registerBuffer
0x0002       [4]    FARG_FloatToStr_fnum
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setSCK_2_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setSCL_2_value
0x0002       [1]    FARG_fm_setSeekImpulseDetectionThreshold_impulseDetectionThreshold
0x0002       [2]    FARG_fm_setSeekThreshold_seekThreshold
0x0002       [1]    FARG_mikrobus_i2cInit_bus
0x0002       [2]    FARG_mikrobus_logWrite_data_
0x0002       [1]    FARG_mikrobus_logInit_port
0x0002       [4]    FARG_easyavr_v7_ATMEGA32__log_init3_baud
0x0002       [4]    FARG_easyavr_v7_ATMEGA32__log_init2_baud
0x0002       [1]    FARG_mikrobus_gpioInit_bus
0x0002       [4]    FARG_easyavr_v7_ATMEGA32__log_initUart_baud
0x0002       [2]    FARG_memmove_to
0x0002       [2]    FARG_strchr_ptr
0x0002       [1]    FARG_fm_setVolume_volumeLevel
0x0002       [1]    FARG_fm_setSnrThreshold_snrThreshold
0x0002       [2]    FARG_strcat_to
0x0002       [2]    FARG_strcmp_s1
0x0002       [2]    FARG_Dec2Bcd16_decnum
0x0002       [2]    FARG_memset_p1
0x0002       [2]    FARG_Rtrim_string
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__gpioInit_1_pin
0x0002       [2]    FARG_fm_setBits_registerBuffer
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__gpioInit_3_pin
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__gpioInit_2_pin
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setTX_3_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setRX_3_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setSDA_3_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setSCL_3_value
0x0002       [2]    FARG_memcmp_s1
0x0002       [2]    FARG_Ltrim_string
0x0002       [2]    FARG_easyavr_v7_ATMEGA32__i2cInit_3_cfg
0x0002       [4]    FARG_easyavr_v7_ATMEGA32__log_init1_baud
0x0002       [2]    FARG_easyavr_v7_ATMEGA32__log_write_data_
0x0002       [2]    FARG_strcpy_to
0x0002       [2]    FARG_easyavr_v7_ATMEGA32__i2cInit_1_cfg
0x0002       [2]    FARG_memcpy_d1
0x0002       [2]    FARG_easyavr_v7_ATMEGA32__i2cInit_2_cfg
0x0002       [2]    FARG___fm_Driver_hal_gpioMap_gpioObj
0x0002       [2]    FARG_strrchr_ptr
0x0002       [2]    FARG_strpbrk_s1
0x0002       [2]    FARG_strstr_s1
0x0002       [1]    FARG_ByteToHex_input
0x0002       [2]    FARG_fm_tuneChannel_channel_
0x0002       [4]    FARG_LongWordToStrWithZeros_input
0x0002       [2]    FARG___fm_Driver_hal_i2cMap_i2cObj
0x0002       [4]    FARG_LongIntToStrWithZeros_input
0x0002       [2]    FARG_strcspn_s1
0x0002       [1]    FARG___fm_Driver_hal_i2cRead_slaveAddress
0x0002       [1]    FARG___fm_Driver_hal_i2cWrite_slaveAddress
0x0002       [4]    FARG_LongToStr_input
0x0002       [2]    FARG_strncmp_s1
0x0002       [2]    FARG_strtok_s1
0x0002       [4]    FARG_fm_tune_channelFrequency
0x0002       [2]    FARG_IntToStr_input
0x0002       [4]    FARG_LongIntToHex_input
0x0002       [2]    FARG_IntToStrWithZeros_input
0x0002       [1]    FARG_ByteToStr_input
0x0002       [2]    FARG_WordToStrWithZeros_input
0x0002       [2]    FARG_WordToStr_input
0x0002       [1]    FARG_ShortToStr_input
0x0002       [1]    FARG_TWI_Read_ack
0x0002       [4]    FARG_TWI_SetTimeoutCallback_timeout
0x0002       [2]    FARG_WordToHex_input
0x0002       [1]    FARG_ShortToHex_input
0x0002       [4]    FARG_LongWordToStr_input
0x0002       [4]    FARG_LongWordToHex_input
0x0002       [1]    FARG_TWI_Write_data_
0x0002       [2]    FARG_IntToHex_input
0x0002       [4]    FARG_UART1_Init_Advanced_bps
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setSCK_1_value
0x0002       [2]    FARG_Bcd2Dec16_bcdnum
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setMISO_1_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setCS_1_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setAN_1_value
0x0002       [2]    FARG_VDelay_ms_Time_ms
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setRST_1_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setMOSI_1_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setTX_1_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setSCL_1_value
0x0002       [2]    FARG_VDelay_Advanced_ms_Time_ms
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setRX_1_value
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setPWM_1_value
0x0002       [2]    FARG_strlen_s
0x0002       [1]    FARG_easyavr_v7_ATMEGA32__setINT_1_value
0x0002       [1]    FARG_Delay_Cyc_cycles_div_by_10
0x0002       [2]    FARG_UART1_Read_Text_Output
0x0002       [2]    FARG_fm_i2cDriverInit_gpioObj
0x0002       [2]    FARG_UART_Set_Active_read_ptr
0x0002       [1]    FARG_Dec2Bcd_decnum
0x0002       [1]    FARG_UART1_Write_data_
0x0002       [2]    FARG_strspn_str1
0x0002       [2]    FARG_UART1_Write_Text_uart_text
0x0002       [1]    FARG_UART_Write__data
0x0002       [2]    FARG_fm_readRegisters_registerBuffer
0x0002       [2]    FARG_strncat_to
0x0002       [1]    FARG_Bcd2Dec_bcdnum
0x0002       [2]    FARG_strncpy_to
0x0002       [2]    FARG_UART_Write_Text_uart_text
0x0002       [2]    FARG_UART_Read_Text_Output
0x0002       [1]    R2
0x0003       [2]    FARG_ByteToStr_output
0x0003       [1]    FARG_mikrobus_gpioInit_pin
0x0003       [2]    FARG_ByteToHex_output
0x0003       [2]    FARG_ShortToHex_output
0x0003       [2]    FARG_ShortToStr_output
0x0003       [4]    FARG_mikrobus_logInit_baud
0x0003       [1]    R3
0x0003       [2]    FARG_mikrobus_i2cInit_cfg
0x0003       [1]    FARG_easyavr_v7_ATMEGA32__gpioInit_1_dir
0x0003       [2]    FARG___fm_Driver_hal_i2cRead_pBuf
0x0003       [1]    FARG_easyavr_v7_ATMEGA32__gpioInit_3_dir
0x0003       [2]    FARG___fm_Driver_hal_i2cWrite_pBuf
0x0003       [1]    FARG_easyavr_v7_ATMEGA32__gpioInit_2_dir
0x0004       [2]    FARG_memcmp_s2
0x0004       [1]    R4
0x0004       [1]    FARG_memset_character
0x0004       [2]    FARG_IntToStr_output
0x0004       [1]    FARG_memchr_n
0x0004       [2]    FARG_IntToStrWithZeros_output
0x0004       [1]    FARG_strchr_chr
0x0004       [2]    FARG_strcpy_from
0x0004       [2]    FARG_VDelay_Advanced_ms_Current_Fosc_kHz
0x0004       [2]    FARG_UART_Read_Text_Delimiter
0x0004       [2]    FARG_strpbrk_s2
0x0004       [2]    FARG_strncmp_s2
0x0004       [2]    FARG_strstr_s2
0x0004       [1]    FARG_strrchr_chr
0x0004       [2]    FARG_strcspn_s2
0x0004       [2]    FARG_strspn_str2
0x0004       [2]    FARG_strtok_s2
0x0004       [2]    FARG_fm_setBits_registerAddress
0x0004       [2]    FARG_strncpy_from
0x0004       [2]    FARG_UART1_Read_Text_Delimiter
0x0004       [2]    FARG_strncat_from
0x0004       [2]    FARG_UART_Set_Active_write_ptr
0x0004       [2]    FARG_strcat_from
0x0004       [2]    FARG_IntToHex_output
0x0004       [2]    FARG_WordToHex_output
0x0004       [2]    FARG_WordToStrWithZeros_output
0x0004       [2]    FARG_WordToStr_output
0x0004       [2]    FARG_strcmp_s2
0x0004       [2]    FARG_fm_i2cDriverInit_i2cObj
0x0004       [2]    FARG_memmove_from
0x0004       [2]    FARG_memcpy_s1
0x0004       [1]    FARG_mikrobus_logWrite_format
0x0004       [1]    FARG_mikrobus_gpioInit_direction
0x0005       [2]    FARG___fm_Driver_hal_i2cRead_nBytes
0x0005       [1]    R5
0x0005       [2]    FARG_memset_n
0x0005       [2]    FARG_memchr_v
0x0005       [2]    FARG___fm_Driver_hal_i2cWrite_nBytes
0x0006       [2]    FARG_strncat_size
0x0006       [2]    FARG_LongIntToStrWithZeros_output
0x0006       [1]    FARG_UART1_Read_Text_Attempts
0x0006       [1]    FARG_UART_Read_Text_Attempts
0x0006       [2]    FARG_TWI_SetTimeoutCallback_TWI_timeout
0x0006       [2]    FARG_LongToStr_output
0x0006       [2]    FARG_UART_Set_Active_tx_idle_ptr
0x0006       [1]    R6
0x0006       [2]    FARG_memcpy_n
0x0006       [1]    FARG_fm_i2cDriverInit_slave
0x0006       [2]    FARG_memcmp_n
0x0006       [1]    FARG_strncmp_len
0x0006       [2]    FARG_LongWordToStr_output
0x0006       [2]    FARG_LongWordToStrWithZeros_output
0x0006       [2]    FARG_FloatToStr_str
0x0006       [2]    FARG_fm_setBits_bitsMask
0x0006       [2]    FARG_strncpy_size
0x0006       [2]    FARG_LongWordToHex_output
0x0006       [2]    FARG_LongIntToHex_output
0x0006       [1]    FARG_UART1_Init_Advanced_parity
0x0006       [2]    FARG_memmove_n
0x0007       [1]    FARG_UART1_Init_Advanced_stop_bits
0x0007       [1]    R7
0x0007       [1]    FARG___fm_Driver_hal_i2cWrite_endMode
0x0007       [1]    FARG___fm_Driver_hal_i2cRead_endMode
0x0008       [1]    R8
0x0008       [2]    FARG_fm_setBits_bitsValue
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    R21
0x0016       [1]    R22
0x0017       [1]    R23
0x0018       [1]    R24
0x0019       [1]    R25
0x001A       [1]    R26
0x001A       [1]    XL
0x001A       [2]    X
0x001B       [1]    XH
0x001B       [1]    R27
0x001C       [2]    Y
0x001C       [1]    YL
0x001C       [1]    R28
0x001D       [1]    R29
0x001D       [1]    YH
0x001E       [2]    Z
0x001E       [1]    R30
0x001E       [1]    ZL
0x001F       [1]    R31
0x001F       [1]    ZH
0x0020       [1]    TWBR
0x0020       [0]    TWBR2_bit
0x0020       [0]    TWBR1_bit
0x0020       [0]    TWBR0_bit
0x0020       [0]    TWBR5_bit
0x0020       [0]    TWBR6_bit
0x0020       [0]    TWBR7_bit
0x0020       [0]    TWBR3_bit
0x0020       [0]    TWBR4_bit
0x0021       [1]    TWSR
0x0021       [0]    TWS4_bit
0x0021       [0]    TWS5_bit
0x0021       [0]    TWPS1_bit
0x0021       [0]    TWPS0_bit
0x0021       [0]    TWS6_bit
0x0021       [0]    TWS3_bit
0x0021       [0]    TWS7_bit
0x0022       [0]    TWA4_bit
0x0022       [0]    TWA3_bit
0x0022       [0]    TWA5_bit
0x0022       [1]    TWAR
0x0022       [0]    TWGCE_bit
0x0022       [0]    TWA6_bit
0x0022       [0]    TWA1_bit
0x0022       [0]    TWA2_bit
0x0022       [0]    TWA0_bit
0x0023       [1]    TWDR
0x0023       [0]    TWD0_bit
0x0023       [0]    TWD4_bit
0x0023       [0]    TWD5_bit
0x0023       [0]    TWD6_bit
0x0023       [0]    TWD7_bit
0x0023       [0]    TWD3_bit
0x0023       [0]    TWD1_bit
0x0023       [0]    TWD2_bit
0x0024       [1]    ADCL
0x0024       [0]    ADCL0_bit
0x0024       [0]    ADCL6_bit
0x0024       [0]    ADCL2_bit
0x0024       [0]    ADCL5_bit
0x0024       [0]    ADCL4_bit
0x0024       [0]    ADCL1_bit
0x0024       [0]    ADCL3_bit
0x0024       [0]    ADCL7_bit
0x0025       [0]    ADCH1_bit
0x0025       [0]    ADCH2_bit
0x0025       [1]    ADCH
0x0025       [0]    ADCH0_bit
0x0025       [0]    ADCH3_bit
0x0025       [0]    ADCH6_bit
0x0025       [0]    ADCH7_bit
0x0025       [0]    ADCH4_bit
0x0025       [0]    ADCH5_bit
0x0026       [0]    ADIF_bit
0x0026       [0]    ADEN_bit
0x0026       [0]    ADATE_bit
0x0026       [0]    ADSC_bit
0x0026       [0]    ADIE_bit
0x0026       [0]    ADPS0_bit
0x0026       [1]    ADCSRA
0x0026       [0]    ADPS2_bit
0x0026       [0]    ADPS1_bit
0x0027       [0]    REFS1_bit
0x0027       [0]    REFS0_bit
0x0027       [1]    ADMUX
0x0027       [0]    MUX0_bit
0x0027       [0]    MUX1_bit
0x0027       [0]    MUX3_bit
0x0027       [0]    MUX4_bit
0x0027       [0]    ADLAR_bit
0x0027       [0]    MUX2_bit
0x0028       [0]    ACO_bit
0x0028       [0]    ACIC_bit
0x0028       [0]    ACI_bit
0x0028       [0]    ACIE_bit
0x0028       [0]    ACIS1_bit
0x0028       [0]    ACD_bit
0x0028       [0]    ACBG_bit
0x0028       [0]    ACIS0_bit
0x0028       [1]    ACSR
0x0029       [0]    UBRR3_bit
0x0029       [0]    UBRR1_bit
0x0029       [0]    UBRR4_bit
0x0029       [0]    UBRR0_bit
0x0029       [1]    UBRRL
0x0029       [0]    UBRR2_bit
0x0029       [0]    UBRR6_bit
0x0029       [0]    UBRR5_bit
0x0029       [0]    UBRR7_bit
0x002A       [1]    UCSRB
0x002A       [0]    TXB8_bit
0x002A       [0]    RXEN_bit
0x002A       [1]    UCSR0B
0x002A       [0]    TXCIE_bit
0x002A       [0]    UDRIE_bit
0x002A       [0]    TXEN_bit
0x002A       [0]    UCSZ2_bit
0x002A       [0]    RXCIE_bit
0x002A       [0]    RXB8_bit
0x002B       [1]    UCSRA
0x002B       [0]    MPCM_bit
0x002B       [0]    UDRE_bit
0x002B       [0]    TXC0_bit
0x002B       [0]    UDRE0_bit
0x002B       [0]    DOR_bit
0x002B       [0]    FE_bit
0x002B       [0]    U2X_bit
0x002B       [0]    RXC_bit
0x002B       [0]    RXC0_bit
0x002B       [0]    UPE_bit
0x002B       [0]    TXC_bit
0x002C       [0]    UDR1_bit
0x002C       [0]    UDR2_bit
0x002C       [0]    UDR0__bit
0x002C       [1]    UDR0
0x002C       [1]    UDR
0x002C       [0]    UDR4_bit
0x002C       [0]    UDR3_bit
0x002C       [0]    UDR5_bit
0x002C       [0]    UDR7_bit
0x002C       [0]    UDR6_bit
0x002D       [0]    MSTR_bit
0x002D       [0]    CPOL_bit
0x002D       [0]    CPHA_bit
0x002D       [0]    SPIE_bit
0x002D       [0]    SPE_bit
0x002D       [0]    DORD_bit
0x002D       [1]    SPCR
0x002D       [0]    SPR1_bit
0x002D       [0]    SPR0_bit
0x002E       [0]    WCOL_bit
0x002E       [0]    SPI2X_bit
0x002E       [0]    SPIF_bit
0x002E       [1]    SPSR
0x002F       [0]    SPDR0_bit
0x002F       [0]    SPDR5_bit
0x002F       [0]    SPDR3_bit
0x002F       [0]    SPDR4_bit
0x002F       [0]    SPDR2_bit
0x002F       [1]    SPDR
0x002F       [0]    SPDR6_bit
0x002F       [0]    SPDR7_bit
0x002F       [0]    SPDR1_bit
0x0030       [0]    PIND0_bit
0x0030       [0]    PIND3_bit
0x0030       [0]    PIND7_bit
0x0030       [1]    PIND
0x0030       [0]    PIND1_bit
0x0030       [0]    PIND5_bit
0x0030       [0]    PIND4_bit
0x0030       [0]    PIND2_bit
0x0030       [0]    PIND6_bit
0x0031       [0]    DDD1_bit
0x0031       [1]    DDRD
0x0031       [0]    DDD0_bit
0x0031       [0]    DDD3_bit
0x0031       [0]    DDD2_bit
0x0031       [0]    DDD5_bit
0x0031       [0]    DDD4_bit
0x0031       [0]    DDD6_bit
0x0031       [0]    DDD7_bit
0x0032       [0]    PORTD0_bit
0x0032       [0]    PORTD4_bit
0x0032       [0]    PORTD5_bit
0x0032       [0]    PORTD7_bit
0x0032       [0]    PORTD6_bit
0x0032       [0]    PORTD1_bit
0x0032       [0]    PORTD3_bit
0x0032       [0]    PORTD2_bit
0x0032       [1]    PORTD
0x0033       [0]    PINC2_bit
0x0033       [0]    PINC3_bit
0x0033       [0]    PINC4_bit
0x0033       [1]    PINC
0x0033       [0]    PINC0_bit
0x0033       [0]    PINC1_bit
0x0033       [0]    PINC7_bit
0x0033       [0]    PINC5_bit
0x0033       [0]    PINC6_bit
0x0034       [1]    DDRC
0x0034       [0]    DDC6_bit
0x0034       [0]    DDC5_bit
0x0034       [0]    DDC0_bit
0x0034       [0]    DDC1_bit
0x0034       [0]    DDC2_bit
0x0034       [0]    DDC4_bit
0x0034       [0]    DDC3_bit
0x0034       [0]    DDC7_bit
0x0035       [0]    PORTC3_bit
0x0035       [0]    PORTC2_bit
0x0035       [0]    PORTC1_bit
0x0035       [0]    PORTC7_bit
0x0035       [0]    PORTC5_bit
0x0035       [0]    PORTC6_bit
0x0035       [0]    PORTC4_bit
0x0035       [1]    PORTC
0x0035       [0]    PORTC0_bit
0x0036       [0]    PINB4_bit
0x0036       [0]    PINB6_bit
0x0036       [0]    PINB5_bit
0x0036       [0]    PINB7_bit
0x0036       [0]    PINB3_bit
0x0036       [0]    PINB2_bit
0x0036       [0]    PINB1_bit
0x0036       [1]    PINB
0x0036       [0]    PINB0_bit
0x0037       [0]    DDB2_bit
0x0037       [0]    DDB3_bit
0x0037       [0]    DDB1_bit
0x0037       [1]    DDRB
0x0037       [0]    DDB0_bit
0x0037       [0]    DDB6_bit
0x0037       [0]    DDB7_bit
0x0037       [0]    DDB4_bit
0x0037       [0]    DDB5_bit
0x0038       [0]    PORTB2_bit
0x0038       [0]    PORTB3_bit
0x0038       [0]    PORTB1_bit
0x0038       [1]    PORTB
0x0038       [0]    PORTB0_bit
0x0038       [0]    PORTB6_bit
0x0038       [0]    PORTB7_bit
0x0038       [0]    PORTB4_bit
0x0038       [0]    PORTB5_bit
0x0039       [0]    PINA4_bit
0x0039       [0]    PINA5_bit
0x0039       [0]    PINA1_bit
0x0039       [0]    PINA2_bit
0x0039       [0]    PINA3_bit
0x0039       [0]    PINA7_bit
0x0039       [1]    PINA
0x0039       [0]    PINA0_bit
0x0039       [0]    PINA6_bit
0x003A       [0]    DDA2_bit
0x003A       [1]    DDRA
0x003A       [0]    DDA0_bit
0x003A       [0]    DDA1_bit
0x003A       [0]    DDA7_bit
0x003A       [0]    DDA5_bit
0x003A       [0]    DDA6_bit
0x003A       [0]    DDA4_bit
0x003A       [0]    DDA3_bit
0x003B       [0]    PORTA1_bit
0x003B       [0]    PORTA2_bit
0x003B       [0]    PORTA3_bit
0x003B       [0]    PORTA6_bit
0x003B       [0]    PORTA7_bit
0x003B       [0]    PORTA4_bit
0x003B       [0]    PORTA5_bit
0x003B       [1]    PORTA
0x003B       [0]    PORTA0_bit
0x003C       [0]    EEMWE_bit
0x003C       [0]    EEWE_bit
0x003C       [0]    EERE_bit
0x003C       [1]    EECR
0x003C       [0]    EERIE_bit
0x003D       [1]    EEDR
0x003D       [0]    EEDR0_bit
0x003D       [0]    EEDR7_bit
0x003D       [0]    EEDR5_bit
0x003D       [0]    EEDR6_bit
0x003D       [0]    EEDR4_bit
0x003D       [0]    EEDR1_bit
0x003D       [0]    EEDR2_bit
0x003D       [0]    EEDR3_bit
0x003E       [0]    EEAR6_bit
0x003E       [0]    EEAR7_bit
0x003E       [0]    EEAR2_bit
0x003E       [0]    EEAR3_bit
0x003E       [0]    EEAR4_bit
0x003E       [1]    EEARL
0x003E       [0]    EEAR00_bit
0x003E       [0]    EEAR1_bit
0x003E       [0]    EEAR5_bit
0x003F       [0]    EEAR9_bit
0x003F       [0]    EEAR8_bit
0x003F       [1]    EEARH
0x0040       [0]    UCSZ0_bit
0x0040       [0]    UCSZ1_bit
0x0040       [1]    UCSRC
0x0040       [0]    UCPOL_bit
0x0040       [0]    UMSEL_bit
0x0040       [0]    URSEL_bit
0x0040       [0]    UPM1_bit
0x0040       [0]    USBS_bit
0x0040       [0]    UPM0_bit
0x0040       [1]    UCSR0C
0x0040       [0]    UBRR9_bit
0x0040       [0]    UBRR10_bit
0x0040       [1]    UBRRH
0x0040       [0]    UBRR8_bit
0x0040       [0]    UBRR11_bit
0x0041       [0]    WDP0_bit
0x0041       [0]    WDP2_bit
0x0041       [1]    WDTCR
0x0041       [0]    WDP1_bit
0x0041       [0]    WDE_bit
0x0041       [0]    WDTOE_bit
0x0042       [0]    TCR2UB_bit
0x0042       [0]    TCN2UB_bit
0x0042       [0]    OCR2UB_bit
0x0042       [0]    AS2_bit
0x0042       [1]    ASSR
0x0043       [1]    OCR2
0x0043       [0]    OCR2_0_bit
0x0043       [0]    OCR2_4_bit
0x0043       [0]    OCR2_2_bit
0x0043       [0]    OCR2_3_bit
0x0043       [0]    OCR2_1_bit
0x0043       [0]    OCR2_5_bit
0x0043       [0]    OCR2_7_bit
0x0043       [0]    OCR2_6_bit
0x0044       [0]    TCNT2_0_bit
0x0044       [1]    TCNT2
0x0044       [0]    TCNT2_7_bit
0x0044       [0]    TCNT2_1_bit
0x0044       [0]    TCNT2_6_bit
0x0044       [0]    TCNT2_4_bit
0x0044       [0]    TCNT2_5_bit
0x0044       [0]    TCNT2_2_bit
0x0044       [0]    TCNT2_3_bit
0x0045       [0]    COM21_bit
0x0045       [0]    COM20_bit
0x0045       [0]    FOC2_bit
0x0045       [0]    WGM20_bit
0x0045       [0]    WGM21_bit
0x0045       [0]    CS20_bit
0x0045       [1]    TCCR2
0x0045       [0]    CS21_bit
0x0045       [0]    CS22_bit
0x0046       [0]    ICR1L2_bit
0x0046       [0]    ICR1L3_bit
0x0046       [0]    ICR1L1_bit
0x0046       [1]    ICR1L
0x0046       [0]    ICR1L0_bit
0x0046       [0]    ICR1L4_bit
0x0046       [0]    ICR1L6_bit
0x0046       [0]    ICR1L7_bit
0x0046       [0]    ICR1L5_bit
0x0047       [0]    ICR1H0_bit
0x0047       [1]    ICR1H
0x0047       [0]    ICR1H6_bit
0x0047       [0]    ICR1H7_bit
0x0047       [0]    ICR1H4_bit
0x0047       [0]    ICR1H5_bit
0x0047       [0]    ICR1H2_bit
0x0047       [0]    ICR1H1_bit
0x0047       [0]    ICR1H3_bit
0x0048       [0]    OCR1BL7_bit
0x0048       [0]    OCR1BL1_bit
0x0048       [0]    OCR1BL0_bit
0x0048       [1]    OCR1BL
0x0048       [0]    OCR1BL4_bit
0x0048       [0]    OCR1BL3_bit
0x0048       [0]    OCR1BL5_bit
0x0048       [0]    OCR1BL6_bit
0x0048       [0]    OCR1BL2_bit
0x0049       [0]    OCR1BH2_bit
0x0049       [0]    OCR1BH3_bit
0x0049       [0]    OCR1BH4_bit
0x0049       [1]    OCR1BH
0x0049       [0]    OCR1BH0_bit
0x0049       [0]    OCR1BH1_bit
0x0049       [0]    OCR1BH6_bit
0x0049       [0]    OCR1BH7_bit
0x0049       [0]    OCR1BH5_bit
0x004A       [0]    OCR1AL7_bit
0x004A       [0]    OCR1AL6_bit
0x004A       [0]    OCR1AL4_bit
0x004A       [0]    OCR1AL5_bit
0x004A       [0]    OCR1AL3_bit
0x004A       [0]    OCR1AL0_bit
0x004A       [0]    OCR1AL1_bit
0x004A       [1]    OCR1AL
0x004A       [0]    OCR1AL2_bit
0x004B       [0]    OCR1AH7_bit
0x004B       [0]    OCR1AH3_bit
0x004B       [0]    OCR1AH4_bit
0x004B       [0]    OCR1AH1_bit
0x004B       [0]    OCR1AH2_bit
0x004B       [0]    OCR1AH5_bit
0x004B       [0]    OCR1AH6_bit
0x004B       [0]    OCR1AH0_bit
0x004B       [1]    OCR1AH
0x004C       [0]    TCNT1L5_bit
0x004C       [0]    TCNT1L4_bit
0x004C       [0]    TCNT1L7_bit
0x004C       [0]    TCNT1L6_bit
0x004C       [0]    TCNT1L3_bit
0x004C       [0]    TCNT1L0_bit
0x004C       [1]    TCNT1L
0x004C       [0]    TCNT1L2_bit
0x004C       [0]    TCNT1L1_bit
0x004D       [0]    TCNT1H5_bit
0x004D       [0]    TCNT1H4_bit
0x004D       [0]    TCNT1H7_bit
0x004D       [0]    TCNT1H6_bit
0x004D       [0]    TCNT1H3_bit
0x004D       [0]    TCNT1H0_bit
0x004D       [1]    TCNT1H
0x004D       [0]    TCNT1H2_bit
0x004D       [0]    TCNT1H1_bit
0x004E       [0]    CS11_bit
0x004E       [0]    CS12_bit
0x004E       [1]    TCCR1B
0x004E       [0]    CS10_bit
0x004E       [0]    WGM13_bit
0x004E       [0]    ICES1_bit
0x004E       [0]    ICNC1_bit
0x004E       [0]    WGM12_bit
0x004F       [0]    FOC1B_bit
0x004F       [0]    COM1A0_bit
0x004F       [0]    WGM10_bit
0x004F       [0]    WGM11_bit
0x004F       [0]    COM1A1_bit
0x004F       [0]    COM1B1_bit
0x004F       [0]    COM1B0_bit
0x004F       [1]    TCCR1A
0x004F       [0]    FOC1A_bit
0x0050       [0]    PUD_bit
0x0050       [0]    ADTS0_bit
0x0050       [1]    SFIOR
0x0050       [0]    ACME_bit
0x0050       [0]    PSR10_bit
0x0050       [0]    PSR2_bit
0x0050       [0]    ADTS1_bit
0x0050       [0]    ADTS2_bit
0x0051       [1]    OCDR
0x0051       [0]    CAL0_bit
0x0051       [1]    OSCCAL
0x0051       [0]    CAL1_bit
0x0051       [0]    CAL2_bit
0x0051       [0]    CAL3_bit
0x0051       [0]    CAL6_bit
0x0051       [0]    CAL7_bit
0x0051       [0]    CAL4_bit
0x0051       [0]    CAL5_bit
0x0052       [0]    TCNT0_3_bit
0x0052       [0]    TCNT0_2_bit
0x0052       [0]    TCNT0_1_bit
0x0052       [0]    TCNT0_4_bit
0x0052       [0]    TCNT0_7_bit
0x0052       [0]    TCNT0_6_bit
0x0052       [0]    TCNT0_5_bit
0x0052       [0]    TCNT0_0_bit
0x0052       [1]    TCNT0
0x0053       [0]    COM01_bit
0x0053       [1]    TCCR0
0x0053       [0]    WGM00_bit
0x0053       [0]    FOC0_bit
0x0053       [0]    CS00_bit
0x0053       [0]    CS01_bit
0x0053       [0]    WGM01_bit
0x0053       [0]    CS02_bit
0x0053       [0]    COM00_bit
0x0054       [0]    ISC2_bit
0x0054       [0]    PORF_bit
0x0054       [1]    MCUCSR
0x0054       [0]    JTRF_bit
0x0054       [0]    BORF_bit
0x0054       [0]    WDRF_bit
0x0054       [0]    EXTRF_bit
0x0054       [0]    JTD_bit
0x0055       [0]    SE_bit
0x0055       [0]    SM2_bit
0x0055       [0]    ISC00_bit
0x0055       [0]    ISC01_bit
0x0055       [1]    MCUCR
0x0055       [0]    SM0_bit
0x0055       [0]    SM1_bit
0x0055       [0]    ISC10_bit
0x0055       [0]    ISC11_bit
0x0056       [0]    TWSTO_bit
0x0056       [0]    TWWC_bit
0x0056       [0]    TWSTA_bit
0x0056       [0]    TWINT_bit
0x0056       [0]    TWEA_bit
0x0056       [1]    TWCR
0x0056       [0]    TWEN_bit
0x0056       [0]    TWIE_bit
0x0057       [0]    RWWSB_bit
0x0057       [0]    SPMEN_bit
0x0057       [0]    PGWRT_bit
0x0057       [0]    BLBSET_bit
0x0057       [0]    PGERS_bit
0x0057       [0]    RWWSRE_bit
0x0057       [1]    SPMCR
0x0057       [1]    SPMCSR
0x0057       [0]    SPMIE_bit
0x0058       [0]    OCF2_bit
0x0058       [0]    TOV0_bit
0x0058       [0]    TOV1_bit
0x0058       [0]    TOV2_bit
0x0058       [0]    ICF1_bit
0x0058       [0]    OCF0_bit
0x0058       [0]    OCF1B_bit
0x0058       [1]    TIFR
0x0058       [0]    OCF1A_bit
0x0059       [0]    TOIE0_bit
0x0059       [0]    TOIE1_bit
0x0059       [0]    OCIE1A_bit
0x0059       [1]    TIMSK
0x0059       [0]    TICIE1_bit
0x0059       [0]    OCIE1B_bit
0x0059       [0]    OCIE2_bit
0x0059       [0]    TOIE2_bit
0x0059       [0]    OCIE0_bit
0x005A       [0]    INTF0_bit
0x005A       [0]    INTF2_bit
0x005A       [1]    GIFR
0x005A       [0]    INTF1_bit
0x005B       [0]    INT0_bit
0x005B       [0]    INT1_bit
0x005B       [0]    INT2_bit
0x005B       [1]    GICR
0x005B       [0]    IVCE_bit
0x005B       [0]    IVSEL_bit
0x005C       [0]    OCR0_7_bit
0x005C       [0]    OCR0_6_bit
0x005C       [1]    OCR0
0x005C       [0]    OCR0_0_bit
0x005C       [0]    OCR0_5_bit
0x005C       [0]    OCR0_1_bit
0x005C       [0]    OCR0_2_bit
0x005C       [0]    OCR0_4_bit
0x005C       [0]    OCR0_3_bit
0x005D       [0]    SP1_bit
0x005D       [0]    SP7_bit
0x005D       [0]    SP5_bit
0x005D       [0]    SP0_bit
0x005D       [0]    SP6_bit
0x005D       [0]    SP4_bit
0x005D       [1]    SPL
0x005D       [0]    SP3_bit
0x005D       [0]    SP2_bit
0x005E       [1]    SPH
0x005E       [0]    SP10_bit
0x005E       [0]    SP8_bit
0x005E       [0]    SP9_bit
0x005E       [0]    SP11_bit
0x005F       [0]    SREG_N_bit
0x005F       [0]    SREG_Z_bit
0x005F       [0]    SREG_C_bit
0x005F       [0]    SREG_H_bit
0x005F       [0]    SREG_I_bit
0x005F       [0]    SREG_V_bit
0x005F       [1]    SREG
0x005F       [0]    SREG_S_bit
0x005F       [0]    SREG_T_bit
0x0060      [17]    ?lstr35_Click_FM_AVR
0x0071       [5]    ?lstr36_Click_FM_AVR
0x0076       [6]    ?lstr34_Click_FM_AVR
0x007C      [16]    ?lstr32_Click_FM_AVR
0x008C       [6]    ?lstr33_Click_FM_AVR
0x0092      [16]    ?lstr27_Click_FM_AVR
0x00A2       [5]    ?lstr31_Click_FM_AVR
0x00A7       [8]    ?lstr37_Click_FM_AVR
0x00AF      [17]    ?lstr30_Click_FM_AVR
0x00C0       [6]    ?lstr28_Click_FM_AVR
0x00C6       [6]    ?lstr29_Click_FM_AVR
0x00CC      [14]    ?lstr49_Click_FM_AVR
0x00DA      [17]    ?lstr50_Click_FM_AVR
0x00EB       [5]    ?lstr26_Click_FM_AVR
0x00F0       [6]    ?lstr24_Click_FM_AVR
0x00F6      [17]    ?lstr25_Click_FM_AVR
0x0107       [8]    ?lstr43_Click_FM_AVR
0x010F       [5]    ?lstr47_Click_FM_AVR
0x0114       [6]    ?lstr48_Click_FM_AVR
0x011A      [17]    ?lstr46_Click_FM_AVR
0x012B       [6]    ?lstr44_Click_FM_AVR
0x0131       [6]    ?lstr45_Click_FM_AVR
0x0137       [4]    ?lstr1___Lib_Conversions
0x013B       [5]    ?lstr41_Click_FM_AVR
0x0140       [6]    ?lstr42_Click_FM_AVR
0x0146      [17]    ?lstr40_Click_FM_AVR
0x0157       [6]    ?lstr38_Click_FM_AVR
0x015D       [6]    ?lstr39_Click_FM_AVR
0x0163       [4]    ?lstr3___Lib_Conversions
0x0167       [2]    ?lstr2___Lib_Conversions
0x0169       [4]    __Lib_TWI__TWI_TIMEOUT
0x016D       [6]    ?lstr23_Click_FM_AVR
0x0173       [6]    ?lstr7_Click_FM_AVR
0x0179      [19]    ?lstr8_Click_FM_AVR
0x018C       [6]    ?lstr6_Click_FM_AVR
0x0192      [14]    ?lstr5_Click_FM_AVR
0x01A0      [14]    ?lstr21_Click_FM_AVR
0x01AE       [1]    _memory_
0x01AF      [13]    ?lstr20_Click_FM_AVR
0x01BC       [5]    ?lstr9_Click_FM_AVR
0x01C1       [1]    _mute_
0x01C2      [29]    ?lstr15_Click_FM_AVR
0x01DF      [14]    ?lstr10_Click_FM_AVR
0x01ED      [17]    ?lstr13_Click_FM_AVR
0x01FE       [5]    ?lstr14_Click_FM_AVR
0x0203       [6]    ?lstr12_Click_FM_AVR
0x0209       [6]    ?lstr11_Click_FM_AVR
0x020F       [1]    _snrThreshold_
0x0210       [2]    _seekThreshold_
0x0212       [1]    _impulseDetectionThreshold_
0x0213       [1]    _volumeLevel_
0x0214      [10]    ?lstr1_Click_FM_AVR
0x021E      [11]    ?lstr2_Click_FM_AVR
0x0229      [16]    ?lstr22_Click_FM_AVR
0x0239      [22]    ?lstr51_Click_FM_AVR
0x024F      [12]    ?lstr3_Click_FM_AVR
0x025B      [11]    ?lstr4_Click_FM_AVR
0x0266      [20]    ?lstr17_Click_FM_AVR
0x027A      [20]    ?lstr18_Click_FM_AVR
0x028E      [20]    ?lstr16_Click_FM_AVR
0x02A2      [20]    ?lstr19_Click_FM_AVR
0x02B6       [2]    __fm_Driver_fp_i2cWrite
0x02B8       [2]    __fm_Driver_fp_i2cStop
0x02BA       [2]    __fm_Driver_fp_i2cRead
0x02BC       [2]    _logger
0x02BE       [2]    __fm_Driver_fp_i2cStart
0x02C0       [2]    __fm_Driver_hal_gpio_csSet
0x02C2       [2]    __fm_Driver_hal_gpio_rstSet
0x02C4       [2]    __fm_Driver_hal_gpio_anGet
0x02C6       [1]    __fm_Driver__slaveAddress
0x02C7       [2]    __fm_Driver_hal_gpio_intGet
0x02C9       [2]    _UART_Tx_Idle_Ptr
0x02CB       [2]    _UART_Wr_Ptr
0x02CD       [2]    _TWI_Timeout_Ptr
0x02CF       [4]    _channelFrequency_
0x02D3       [2]    _stationFrequency_
0x02D5       [4]    _tunedFrequency_
0x02D9       [1]    _errorFlag_
0x02DA       [2]    _receivedSignalStrengthIndicator
0x02DC      [50]    _text
0x030E       [1]    _receivedData_
0x030F       [2]    _UART_Rd_Ptr
0x0311       [2]    _UART_Rdy_Ptr
0x0313       [2]    _station3_
0x0315       [2]    _station1_
0x0317       [2]    _station2_
0x0319       [1]    _dataReady_
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x3694      [17]    ?ICS?lstr35_Click_FM_AVR
0x36A5       [5]    ?ICS?lstr36_Click_FM_AVR
0x36AA       [6]    ?ICS?lstr34_Click_FM_AVR
0x36B0      [16]    ?ICS?lstr32_Click_FM_AVR
0x36C0       [6]    ?ICS?lstr33_Click_FM_AVR
0x36C6      [16]    ?ICS?lstr27_Click_FM_AVR
0x36D6       [5]    ?ICS?lstr31_Click_FM_AVR
0x36DB       [8]    ?ICS?lstr37_Click_FM_AVR
0x36E3      [17]    ?ICS?lstr30_Click_FM_AVR
0x36F4       [6]    ?ICS?lstr28_Click_FM_AVR
0x36FA       [6]    ?ICS?lstr29_Click_FM_AVR
0x3700      [14]    ?ICS?lstr49_Click_FM_AVR
0x370E      [17]    ?ICS?lstr50_Click_FM_AVR
0x371F       [5]    ?ICS?lstr26_Click_FM_AVR
0x3724       [6]    ?ICS?lstr24_Click_FM_AVR
0x372A      [17]    ?ICS?lstr25_Click_FM_AVR
0x373B       [8]    ?ICS?lstr43_Click_FM_AVR
0x3743       [5]    ?ICS?lstr47_Click_FM_AVR
0x3748       [6]    ?ICS?lstr48_Click_FM_AVR
0x374E      [17]    ?ICS?lstr46_Click_FM_AVR
0x375F       [6]    ?ICS?lstr44_Click_FM_AVR
0x3765       [6]    ?ICS?lstr45_Click_FM_AVR
0x376B       [4]    ?ICS?lstr1___Lib_Conversions
0x376F       [5]    ?ICS?lstr41_Click_FM_AVR
0x3774       [6]    ?ICS?lstr42_Click_FM_AVR
0x377A      [17]    ?ICS?lstr40_Click_FM_AVR
0x378B       [6]    ?ICS?lstr38_Click_FM_AVR
0x3791       [6]    ?ICS?lstr39_Click_FM_AVR
0x3797       [4]    ?ICS?lstr3___Lib_Conversions
0x379B       [2]    ?ICS?lstr2___Lib_Conversions
0x379D       [4]    ?ICS__Lib_TWI__TWI_TIMEOUT
0x37A1       [6]    ?ICS?lstr23_Click_FM_AVR
0x37A7       [6]    ?ICS?lstr7_Click_FM_AVR
0x37AD      [19]    ?ICS?lstr8_Click_FM_AVR
0x37C0       [6]    ?ICS?lstr6_Click_FM_AVR
0x37C6      [14]    ?ICS?lstr5_Click_FM_AVR
0x37D4      [14]    ?ICS?lstr21_Click_FM_AVR
0x37E2       [1]    ?ICS_memory_
0x37E3      [13]    ?ICS?lstr20_Click_FM_AVR
0x37F0       [5]    ?ICS?lstr9_Click_FM_AVR
0x37F5       [1]    ?ICS_mute_
0x37F6      [29]    ?ICS?lstr15_Click_FM_AVR
0x3813      [14]    ?ICS?lstr10_Click_FM_AVR
0x3821      [17]    ?ICS?lstr13_Click_FM_AVR
0x3832       [5]    ?ICS?lstr14_Click_FM_AVR
0x3837       [6]    ?ICS?lstr12_Click_FM_AVR
0x383D       [6]    ?ICS?lstr11_Click_FM_AVR
0x3843       [1]    ?ICS_snrThreshold_
0x3844       [2]    ?ICS_seekThreshold_
0x3846       [1]    ?ICS_impulseDetectionThreshold_
0x3847       [1]    ?ICS_volumeLevel_
0x3848      [10]    ?ICS?lstr1_Click_FM_AVR
0x3852      [11]    ?ICS?lstr2_Click_FM_AVR
0x385D      [16]    ?ICS?lstr22_Click_FM_AVR
0x386D      [22]    ?ICS?lstr51_Click_FM_AVR
0x3883      [12]    ?ICS?lstr3_Click_FM_AVR
0x388F      [11]    ?ICS?lstr4_Click_FM_AVR
0x389A      [20]    ?ICS?lstr17_Click_FM_AVR
0x38AE      [20]    ?ICS?lstr18_Click_FM_AVR
0x38C2      [20]    ?ICS?lstr16_Click_FM_AVR
0x38D6      [20]    ?ICS?lstr19_Click_FM_AVR
0x38EA      [48]    __MIKROBUS1_GPIO
0x391A       [8]    __MIKROBUS1_I2C
0x3922       [4]    __FM_I2C_CFG
