;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 11/20/2018 9:52:26 AM
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2000  	536936444
0x0004	0x3B650000  	15205
0x0008	0x3B490000  	15177
0x000C	0x3B490000  	15177
0x0010	0x3B490000  	15177
0x0014	0x3B490000  	15177
0x0018	0x3B490000  	15177
0x001C	0x3B490000  	15177
0x0020	0x3B490000  	15177
0x0024	0x3B490000  	15177
0x0028	0x3B490000  	15177
0x002C	0x3B490000  	15177
0x0030	0x3B490000  	15177
0x0034	0x3B490000  	15177
0x0038	0x3B490000  	15177
0x003C	0x3B490000  	15177
0x0040	0x3B490000  	15177
0x0044	0x3B490000  	15177
0x0048	0x3B490000  	15177
0x004C	0x3B490000  	15177
0x0050	0x3B490000  	15177
0x0054	0x3B490000  	15177
0x0058	0x3B490000  	15177
0x005C	0x3B490000  	15177
0x0060	0x3B490000  	15177
0x0064	0x3B490000  	15177
0x0068	0x3B490000  	15177
0x006C	0x3B490000  	15177
0x0070	0x3B490000  	15177
0x0074	0x3B490000  	15177
0x0078	0x3B490000  	15177
0x007C	0x3B490000  	15177
0x0080	0x3B490000  	15177
0x0084	0x3B490000  	15177
0x0088	0x3B490000  	15177
0x008C	0x3B490000  	15177
0x0090	0x3B490000  	15177
0x0094	0x3B490000  	15177
0x0098	0x3B490000  	15177
0x009C	0x3B490000  	15177
0x00A0	0x3B490000  	15177
0x00A4	0x3B490000  	15177
0x00A8	0x3B490000  	15177
0x00AC	0x3B490000  	15177
0x00B0	0x3B490000  	15177
0x00B4	0x3B490000  	15177
0x00B8	0x3B490000  	15177
0x00BC	0x3B490000  	15177
0x00C0	0x3B490000  	15177
0x00C4	0x3B490000  	15177
0x00C8	0x3B490000  	15177
0x00CC	0x3B490000  	15177
0x00D0	0x3B490000  	15177
0x00D4	0x3B490000  	15177
0x00D8	0x3B490000  	15177
0x00DC	0x3B490000  	15177
0x00E0	0x3B490000  	15177
0x00E4	0x3B490000  	15177
0x00E8	0x3B490000  	15177
0x00EC	0x3B490000  	15177
0x00F0	0x3B490000  	15177
0x00F4	0x3B490000  	15177
0x00F8	0x3B490000  	15177
0x00FC	0x3B490000  	15177
0x0100	0x3B490000  	15177
0x0104	0x3B490000  	15177
0x0108	0x3B490000  	15177
0x010C	0x3B490000  	15177
0x0110	0x3B490000  	15177
0x0114	0x3B490000  	15177
0x0118	0x3B490000  	15177
0x011C	0x3B490000  	15177
0x0120	0x3B490000  	15177
0x0124	0x3B490000  	15177
0x0128	0x3B490000  	15177
0x012C	0x3B490000  	15177
0x0130	0x3B490000  	15177
0x0134	0x3B490000  	15177
0x0138	0x3B490000  	15177
0x013C	0x3B490000  	15177
0x0140	0x3B490000  	15177
0x0144	0x3B490000  	15177
0x0148	0x3B490000  	15177
0x014C	0x3B490000  	15177
; end of ____SysVT
_main:
;Click_FM_STM.c, 586 :: 		void main( )
0x3B64	0xF000F80E  BL	15236
0x3B68	0xF000FBA2  BL	17072
0x3B6C	0xF7FFFFF0  BL	15184
0x3B70	0xF000FB42  BL	16888
;Click_FM_STM.c, 588 :: 		systemInit( );
0x3B74	0xF7FFFFB0  BL	_systemInit+0
;Click_FM_STM.c, 589 :: 		applicationInit( );
0x3B78	0xF7FFFE92  BL	_applicationInit+0
;Click_FM_STM.c, 591 :: 		while (1)
L_main78:
;Click_FM_STM.c, 593 :: 		applicationTask( );
0x3B7C	0xF7FFFF0E  BL	_applicationTask+0
;Click_FM_STM.c, 594 :: 		}
0x3B80	0xE7FC    B	L_main78
;Click_FM_STM.c, 595 :: 		}
L_end_main:
L__main_end_loop:
0x3B82	0xE7FE    B	L__main_end_loop
; end of _main
___CC2DW:
;__Lib_System_105_107.c, 28 :: 		
0x3988	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 30 :: 		
L_loopDW:
;__Lib_System_105_107.c, 31 :: 		
0x398A	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_105_107.c, 32 :: 		
0x398E	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_105_107.c, 33 :: 		
0x3992	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 34 :: 		
0x3996	0xD1F8    BNE	L_loopDW
;__Lib_System_105_107.c, 36 :: 		
L_end___CC2DW:
0x3998	0xB001    ADD	SP, SP, #4
0x399A	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_105_107.c, 70 :: 		
0x3A98	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 72 :: 		
0x3A9A	0xF04F0900  MOV	R9, #0
;__Lib_System_105_107.c, 73 :: 		
0x3A9E	0xF04F0C00  MOV	R12, #0
;__Lib_System_105_107.c, 74 :: 		
0x3AA2	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_105_107.c, 75 :: 		
0x3AA6	0xDC04    BGT	L_loopFZs
;__Lib_System_105_107.c, 76 :: 		
0x3AA8	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_105_107.c, 77 :: 		
0x3AAC	0xDB01    BLT	L_loopFZs
;__Lib_System_105_107.c, 78 :: 		
0x3AAE	0x46D4    MOV	R12, R10
;__Lib_System_105_107.c, 79 :: 		
0x3AB0	0x46EA    MOV	R10, SP
;__Lib_System_105_107.c, 80 :: 		
L_loopFZs:
;__Lib_System_105_107.c, 81 :: 		
0x3AB2	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_105_107.c, 82 :: 		
0x3AB6	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 83 :: 		
0x3ABA	0xD1FA    BNE	L_loopFZs
;__Lib_System_105_107.c, 84 :: 		
0x3ABC	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_105_107.c, 85 :: 		
0x3AC0	0xDD05    BLE	L_norep
;__Lib_System_105_107.c, 86 :: 		
0x3AC2	0x46E2    MOV	R10, R12
;__Lib_System_105_107.c, 87 :: 		
0x3AC4	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_105_107.c, 88 :: 		
0x3AC8	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_105_107.c, 89 :: 		
0x3ACC	0xE7F1    B	L_loopFZs
;__Lib_System_105_107.c, 90 :: 		
L_norep:
;__Lib_System_105_107.c, 92 :: 		
L_end___FillZeros:
0x3ACE	0xB001    ADD	SP, SP, #4
0x3AD0	0x4770    BX	LR
; end of ___FillZeros
_systemInit:
;Click_FM_STM.c, 451 :: 		void systemInit( )
0x3AD8	0xB081    SUB	SP, SP, #4
0x3ADA	0xF8CDE000  STR	LR, [SP, #0]
;Click_FM_STM.c, 453 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_AN_PIN,  _GPIO_INPUT );
0x3ADE	0x2201    MOVS	R2, #1
0x3AE0	0x2100    MOVS	R1, #0
0x3AE2	0x2000    MOVS	R0, #0
0x3AE4	0xF7FFFD1C  BL	_mikrobus_gpioInit+0
;Click_FM_STM.c, 454 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_RST_PIN, _GPIO_OUTPUT );
0x3AE8	0x2200    MOVS	R2, #0
0x3AEA	0x2101    MOVS	R1, #1
0x3AEC	0x2000    MOVS	R0, #0
0x3AEE	0xF7FFFD17  BL	_mikrobus_gpioInit+0
;Click_FM_STM.c, 455 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_CS_PIN,  _GPIO_OUTPUT );
0x3AF2	0x2200    MOVS	R2, #0
0x3AF4	0x2102    MOVS	R1, #2
0x3AF6	0x2000    MOVS	R0, #0
0x3AF8	0xF7FFFD12  BL	_mikrobus_gpioInit+0
;Click_FM_STM.c, 456 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_INT_PIN, _GPIO_INPUT );
0x3AFC	0x2201    MOVS	R2, #1
0x3AFE	0x2107    MOVS	R1, #7
0x3B00	0x2000    MOVS	R0, #0
0x3B02	0xF7FFFD0D  BL	_mikrobus_gpioInit+0
;Click_FM_STM.c, 458 :: 		mikrobus_i2cInit( _MIKROBUS1, &_FM_I2C_CFG[0] );
0x3B06	0x480E    LDR	R0, [PC, #56]
0x3B08	0x4601    MOV	R1, R0
0x3B0A	0x2000    MOVS	R0, #0
0x3B0C	0xF7FFFD2A  BL	_mikrobus_i2cInit+0
;Click_FM_STM.c, 460 :: 		mikrobus_logInit( _LOG_USBUART_A, 9600 );
0x3B10	0xF2425180  MOVW	R1, #9600
0x3B14	0x2020    MOVS	R0, #32
0x3B16	0xF7FFFCA7  BL	_mikrobus_logInit+0
;Click_FM_STM.c, 462 :: 		Delay_ms(100);
0x3B1A	0xF644777F  MOVW	R7, #20351
0x3B1E	0xF2C00712  MOVT	R7, #18
L_systemInit57:
0x3B22	0x1E7F    SUBS	R7, R7, #1
0x3B24	0xD1FD    BNE	L_systemInit57
0x3B26	0xBF00    NOP
0x3B28	0xBF00    NOP
0x3B2A	0xBF00    NOP
0x3B2C	0xBF00    NOP
0x3B2E	0xBF00    NOP
;Click_FM_STM.c, 464 :: 		mikrobus_logWrite( "system init done", _LOG_LINE );
0x3B30	0x4804    LDR	R0, [PC, #16]
0x3B32	0x2102    MOVS	R1, #2
0x3B34	0xF7FFFCBC  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 465 :: 		}
L_end_systemInit:
0x3B38	0xF8DDE000  LDR	LR, [SP, #0]
0x3B3C	0xB001    ADD	SP, SP, #4
0x3B3E	0x4770    BX	LR
0x3B40	0x1D3C0000  	__FM_I2C_CFG+0
0x3B44	0x027A2000  	?lstr61_Click_FM_STM+0
; end of _systemInit
_mikrobus_gpioInit:
;easymx_v7_STM32F107VC.c, 162 :: 		T_mikrobus_ret mikrobus_gpioInit(T_mikrobus_soc bus, T_mikrobus_pin pin, T_gpio_dir direction)
; direction start address is: 8 (R2)
; pin start address is: 4 (R1)
; bus start address is: 0 (R0)
0x3520	0xB081    SUB	SP, SP, #4
0x3522	0xF8CDE000  STR	LR, [SP, #0]
0x3526	0xFA5FF981  UXTB	R9, R1
0x352A	0xFA5FFA82  UXTB	R10, R2
; direction end address is: 8 (R2)
; pin end address is: 4 (R1)
; bus end address is: 0 (R0)
; bus start address is: 0 (R0)
; pin start address is: 36 (R9)
; direction start address is: 40 (R10)
;easymx_v7_STM32F107VC.c, 164 :: 		switch( bus )
0x352E	0xE00F    B	L_mikrobus_gpioInit78
; bus end address is: 0 (R0)
;easymx_v7_STM32F107VC.c, 167 :: 		case _MIKROBUS1 : return _gpioInit_1(pin, direction);
L_mikrobus_gpioInit80:
0x3530	0xFA5FF18A  UXTB	R1, R10
; direction end address is: 40 (R10)
0x3534	0xFA5FF089  UXTB	R0, R9
; pin end address is: 36 (R9)
0x3538	0xF7FFF902  BL	easymx_v7_STM32F107VC__gpioInit_1+0
0x353C	0xE00D    B	L_end_mikrobus_gpioInit
;easymx_v7_STM32F107VC.c, 170 :: 		case _MIKROBUS2 : return _gpioInit_2(pin, direction);
L_mikrobus_gpioInit81:
; direction start address is: 40 (R10)
; pin start address is: 36 (R9)
0x353E	0xFA5FF18A  UXTB	R1, R10
; direction end address is: 40 (R10)
0x3542	0xFA5FF089  UXTB	R0, R9
; pin end address is: 36 (R9)
0x3546	0xF7FEFF4B  BL	easymx_v7_STM32F107VC__gpioInit_2+0
0x354A	0xE006    B	L_end_mikrobus_gpioInit
;easymx_v7_STM32F107VC.c, 184 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_gpioInit82:
0x354C	0x2001    MOVS	R0, #1
0x354E	0xE004    B	L_end_mikrobus_gpioInit
;easymx_v7_STM32F107VC.c, 185 :: 		}
L_mikrobus_gpioInit78:
; direction start address is: 40 (R10)
; pin start address is: 36 (R9)
; bus start address is: 0 (R0)
0x3550	0x2800    CMP	R0, #0
0x3552	0xD0ED    BEQ	L_mikrobus_gpioInit80
0x3554	0x2801    CMP	R0, #1
0x3556	0xD0F2    BEQ	L_mikrobus_gpioInit81
; bus end address is: 0 (R0)
; pin end address is: 36 (R9)
; direction end address is: 40 (R10)
0x3558	0xE7F8    B	L_mikrobus_gpioInit82
;easymx_v7_STM32F107VC.c, 187 :: 		}
L_end_mikrobus_gpioInit:
0x355A	0xF8DDE000  LDR	LR, [SP, #0]
0x355E	0xB001    ADD	SP, SP, #4
0x3560	0x4770    BX	LR
; end of _mikrobus_gpioInit
easymx_v7_STM32F107VC__gpioInit_1:
;__em_f107vc_gpio.c, 81 :: 		static T_mikrobus_ret _gpioInit_1(T_mikrobus_pin pin, T_gpio_dir dir)
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x2740	0xB081    SUB	SP, SP, #4
0x2742	0xF8CDE000  STR	LR, [SP, #0]
; dir end address is: 4 (R1)
; pin end address is: 0 (R0)
; pin start address is: 0 (R0)
; dir start address is: 4 (R1)
;__em_f107vc_gpio.c, 83 :: 		switch( pin )
0x2746	0xE0A9    B	L_easymx_v7_STM32F107VC__gpioInit_10
; pin end address is: 0 (R0)
;__em_f107vc_gpio.c, 85 :: 		case _MIKROBUS_AN_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOA_BASE, _GPIO_PINMASK_4 ); else GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_4 ); break;
L_easymx_v7_STM32F107VC__gpioInit_12:
0x2748	0x2901    CMP	R1, #1
0x274A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_13
; dir end address is: 4 (R1)
0x274C	0xF2400110  MOVW	R1, #16
0x2750	0x4865    LDR	R0, [PC, #404]
0x2752	0xF7FFF997  BL	_GPIO_Digital_Input+0
0x2756	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_14
L_easymx_v7_STM32F107VC__gpioInit_13:
0x2758	0xF2400110  MOVW	R1, #16
0x275C	0x4862    LDR	R0, [PC, #392]
0x275E	0xF7FFF94B  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_14:
0x2762	0xE0BB    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 86 :: 		case _MIKROBUS_RST_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_2 ); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_2 ); break;
L_easymx_v7_STM32F107VC__gpioInit_15:
; dir start address is: 4 (R1)
0x2764	0x2901    CMP	R1, #1
0x2766	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_16
; dir end address is: 4 (R1)
0x2768	0xF2400104  MOVW	R1, #4
0x276C	0x485F    LDR	R0, [PC, #380]
0x276E	0xF7FFF989  BL	_GPIO_Digital_Input+0
0x2772	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_17
L_easymx_v7_STM32F107VC__gpioInit_16:
0x2774	0xF2400104  MOVW	R1, #4
0x2778	0x485C    LDR	R0, [PC, #368]
0x277A	0xF7FFF93D  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_17:
0x277E	0xE0AD    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 87 :: 		case _MIKROBUS_CS_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_13); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_13); break;
L_easymx_v7_STM32F107VC__gpioInit_18:
; dir start address is: 4 (R1)
0x2780	0x2901    CMP	R1, #1
0x2782	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_19
; dir end address is: 4 (R1)
0x2784	0xF2420100  MOVW	R1, #8192
0x2788	0x4859    LDR	R0, [PC, #356]
0x278A	0xF7FFF97B  BL	_GPIO_Digital_Input+0
0x278E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_110
L_easymx_v7_STM32F107VC__gpioInit_19:
0x2790	0xF2420100  MOVW	R1, #8192
0x2794	0x4856    LDR	R0, [PC, #344]
0x2796	0xF7FFF92F  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_110:
0x279A	0xE09F    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 88 :: 		case _MIKROBUS_SCK_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_10); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_10); break;
L_easymx_v7_STM32F107VC__gpioInit_111:
; dir start address is: 4 (R1)
0x279C	0x2901    CMP	R1, #1
0x279E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_112
; dir end address is: 4 (R1)
0x27A0	0xF2404100  MOVW	R1, #1024
0x27A4	0x4851    LDR	R0, [PC, #324]
0x27A6	0xF7FFF96D  BL	_GPIO_Digital_Input+0
0x27AA	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_113
L_easymx_v7_STM32F107VC__gpioInit_112:
0x27AC	0xF2404100  MOVW	R1, #1024
0x27B0	0x484E    LDR	R0, [PC, #312]
0x27B2	0xF7FFF921  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_113:
0x27B6	0xE091    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 89 :: 		case _MIKROBUS_MISO_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_11); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_11); break;
L_easymx_v7_STM32F107VC__gpioInit_114:
; dir start address is: 4 (R1)
0x27B8	0x2901    CMP	R1, #1
0x27BA	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_115
; dir end address is: 4 (R1)
0x27BC	0xF6400100  MOVW	R1, #2048
0x27C0	0x484A    LDR	R0, [PC, #296]
0x27C2	0xF7FFF95F  BL	_GPIO_Digital_Input+0
0x27C6	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_116
L_easymx_v7_STM32F107VC__gpioInit_115:
0x27C8	0xF6400100  MOVW	R1, #2048
0x27CC	0x4847    LDR	R0, [PC, #284]
0x27CE	0xF7FFF913  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_116:
0x27D2	0xE083    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 90 :: 		case _MIKROBUS_MOSI_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_12); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_12); break;
L_easymx_v7_STM32F107VC__gpioInit_117:
; dir start address is: 4 (R1)
0x27D4	0x2901    CMP	R1, #1
0x27D6	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_118
; dir end address is: 4 (R1)
0x27D8	0xF2410100  MOVW	R1, #4096
0x27DC	0x4843    LDR	R0, [PC, #268]
0x27DE	0xF7FFF951  BL	_GPIO_Digital_Input+0
0x27E2	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_119
L_easymx_v7_STM32F107VC__gpioInit_118:
0x27E4	0xF2410100  MOVW	R1, #4096
0x27E8	0x4840    LDR	R0, [PC, #256]
0x27EA	0xF7FFF905  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_119:
0x27EE	0xE075    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 91 :: 		case _MIKROBUS_PWM_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOA_BASE, _GPIO_PINMASK_0 ); else GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_0 ); break;
L_easymx_v7_STM32F107VC__gpioInit_120:
; dir start address is: 4 (R1)
0x27F0	0x2901    CMP	R1, #1
0x27F2	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_121
; dir end address is: 4 (R1)
0x27F4	0xF2400101  MOVW	R1, #1
0x27F8	0x483B    LDR	R0, [PC, #236]
0x27FA	0xF7FFF943  BL	_GPIO_Digital_Input+0
0x27FE	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_122
L_easymx_v7_STM32F107VC__gpioInit_121:
0x2800	0xF2400101  MOVW	R1, #1
0x2804	0x4838    LDR	R0, [PC, #224]
0x2806	0xF7FFF8F7  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_122:
0x280A	0xE067    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 92 :: 		case _MIKROBUS_INT_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_10); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_10); break;
L_easymx_v7_STM32F107VC__gpioInit_123:
; dir start address is: 4 (R1)
0x280C	0x2901    CMP	R1, #1
0x280E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_124
; dir end address is: 4 (R1)
0x2810	0xF2404100  MOVW	R1, #1024
0x2814	0x4836    LDR	R0, [PC, #216]
0x2816	0xF7FFF935  BL	_GPIO_Digital_Input+0
0x281A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_125
L_easymx_v7_STM32F107VC__gpioInit_124:
0x281C	0xF2404100  MOVW	R1, #1024
0x2820	0x4833    LDR	R0, [PC, #204]
0x2822	0xF7FFF8E9  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_125:
0x2826	0xE059    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 93 :: 		case _MIKROBUS_RX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_9 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_9 ); break;
L_easymx_v7_STM32F107VC__gpioInit_126:
; dir start address is: 4 (R1)
0x2828	0x2901    CMP	R1, #1
0x282A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_127
; dir end address is: 4 (R1)
0x282C	0xF2402100  MOVW	R1, #512
0x2830	0x482F    LDR	R0, [PC, #188]
0x2832	0xF7FFF927  BL	_GPIO_Digital_Input+0
0x2836	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_128
L_easymx_v7_STM32F107VC__gpioInit_127:
0x2838	0xF2402100  MOVW	R1, #512
0x283C	0x482C    LDR	R0, [PC, #176]
0x283E	0xF7FFF8DB  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_128:
0x2842	0xE04B    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 94 :: 		case _MIKROBUS_TX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_8 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_8 ); break;
L_easymx_v7_STM32F107VC__gpioInit_129:
; dir start address is: 4 (R1)
0x2844	0x2901    CMP	R1, #1
0x2846	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_130
; dir end address is: 4 (R1)
0x2848	0xF2401100  MOVW	R1, #256
0x284C	0x4828    LDR	R0, [PC, #160]
0x284E	0xF7FFF919  BL	_GPIO_Digital_Input+0
0x2852	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_131
L_easymx_v7_STM32F107VC__gpioInit_130:
0x2854	0xF2401100  MOVW	R1, #256
0x2858	0x4825    LDR	R0, [PC, #148]
0x285A	0xF7FFF8CD  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_131:
0x285E	0xE03D    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 95 :: 		case _MIKROBUS_SCL_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_6 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_6 ); break;
L_easymx_v7_STM32F107VC__gpioInit_132:
; dir start address is: 4 (R1)
0x2860	0x2901    CMP	R1, #1
0x2862	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_133
; dir end address is: 4 (R1)
0x2864	0xF2400140  MOVW	R1, #64
0x2868	0x4822    LDR	R0, [PC, #136]
0x286A	0xF7FFF90B  BL	_GPIO_Digital_Input+0
0x286E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_134
L_easymx_v7_STM32F107VC__gpioInit_133:
0x2870	0xF2400140  MOVW	R1, #64
0x2874	0x481F    LDR	R0, [PC, #124]
0x2876	0xF7FFF8BF  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_134:
0x287A	0xE02F    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 96 :: 		case _MIKROBUS_SDA_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_7 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_7 ); break;
L_easymx_v7_STM32F107VC__gpioInit_135:
; dir start address is: 4 (R1)
0x287C	0x2901    CMP	R1, #1
0x287E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_136
; dir end address is: 4 (R1)
0x2880	0xF2400180  MOVW	R1, #128
0x2884	0x481B    LDR	R0, [PC, #108]
0x2886	0xF7FFF8FD  BL	_GPIO_Digital_Input+0
0x288A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_137
L_easymx_v7_STM32F107VC__gpioInit_136:
0x288C	0xF2400180  MOVW	R1, #128
0x2890	0x4818    LDR	R0, [PC, #96]
0x2892	0xF7FFF8B1  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_137:
0x2896	0xE021    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 97 :: 		default                  : return _MIKROBUS_ERR_PIN;
L_easymx_v7_STM32F107VC__gpioInit_138:
0x2898	0x2001    MOVS	R0, #1
0x289A	0xE020    B	L_end__gpioInit_1
;__em_f107vc_gpio.c, 98 :: 		}
L_easymx_v7_STM32F107VC__gpioInit_10:
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x289C	0x2800    CMP	R0, #0
0x289E	0xF43FAF53  BEQ	L_easymx_v7_STM32F107VC__gpioInit_12
0x28A2	0x2801    CMP	R0, #1
0x28A4	0xF43FAF5E  BEQ	L_easymx_v7_STM32F107VC__gpioInit_15
0x28A8	0x2802    CMP	R0, #2
0x28AA	0xF43FAF69  BEQ	L_easymx_v7_STM32F107VC__gpioInit_18
0x28AE	0x2803    CMP	R0, #3
0x28B0	0xF43FAF74  BEQ	L_easymx_v7_STM32F107VC__gpioInit_111
0x28B4	0x2804    CMP	R0, #4
0x28B6	0xF43FAF7F  BEQ	L_easymx_v7_STM32F107VC__gpioInit_114
0x28BA	0x2805    CMP	R0, #5
0x28BC	0xF43FAF8A  BEQ	L_easymx_v7_STM32F107VC__gpioInit_117
0x28C0	0x2806    CMP	R0, #6
0x28C2	0xF43FAF95  BEQ	L_easymx_v7_STM32F107VC__gpioInit_120
0x28C6	0x2807    CMP	R0, #7
0x28C8	0xD0A0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_123
0x28CA	0x2808    CMP	R0, #8
0x28CC	0xD0AC    BEQ	L_easymx_v7_STM32F107VC__gpioInit_126
0x28CE	0x2809    CMP	R0, #9
0x28D0	0xD0B8    BEQ	L_easymx_v7_STM32F107VC__gpioInit_129
0x28D2	0x280A    CMP	R0, #10
0x28D4	0xD0C4    BEQ	L_easymx_v7_STM32F107VC__gpioInit_132
0x28D6	0x280B    CMP	R0, #11
0x28D8	0xD0D0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_135
; pin end address is: 0 (R0)
; dir end address is: 4 (R1)
0x28DA	0xE7DD    B	L_easymx_v7_STM32F107VC__gpioInit_138
L_easymx_v7_STM32F107VC__gpioInit_11:
;__em_f107vc_gpio.c, 99 :: 		return _MIKROBUS_OK;
0x28DC	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_gpio.c, 100 :: 		}
L_end__gpioInit_1:
0x28DE	0xF8DDE000  LDR	LR, [SP, #0]
0x28E2	0xB001    ADD	SP, SP, #4
0x28E4	0x4770    BX	LR
0x28E6	0xBF00    NOP
0x28E8	0x08004001  	GPIOA_BASE+0
0x28EC	0x10004001  	GPIOC_BASE+0
0x28F0	0x14004001  	GPIOD_BASE+0
0x28F4	0x0C004001  	GPIOB_BASE+0
; end of easymx_v7_STM32F107VC__gpioInit_1
_GPIO_Digital_Input:
;__Lib_GPIO_32F10x.c, 369 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x1A84	0xB081    SUB	SP, SP, #4
0x1A86	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 370 :: 		
0x1A8A	0xF04F0242  MOV	R2, #66
0x1A8E	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x1A90	0xF7FFF9F4  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 371 :: 		
L_end_GPIO_Digital_Input:
0x1A94	0xF8DDE000  LDR	LR, [SP, #0]
0x1A98	0xB001    ADD	SP, SP, #4
0x1A9A	0x4770    BX	LR
; end of _GPIO_Digital_Input
_GPIO_Config:
;__Lib_GPIO_32F10x.c, 124 :: 		
; config start address is: 8 (R2)
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0E7C	0xB081    SUB	SP, SP, #4
0x0E7E	0xF8CDE000  STR	LR, [SP, #0]
0x0E82	0xB28C    UXTH	R4, R1
0x0E84	0x4615    MOV	R5, R2
; config end address is: 8 (R2)
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 16 (R4)
; config start address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 129 :: 		
0x0E86	0x4B77    LDR	R3, [PC, #476]
0x0E88	0xEA000303  AND	R3, R0, R3, LSL #0
; port end address is: 0 (R0)
; port start address is: 24 (R6)
0x0E8C	0x461E    MOV	R6, R3
;__Lib_GPIO_32F10x.c, 131 :: 		
0x0E8E	0x4618    MOV	R0, R3
0x0E90	0xF7FFFE6C  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_32F10x.c, 134 :: 		
0x0E94	0xF1B40FFF  CMP	R4, #255
0x0E98	0xD10C    BNE	L_GPIO_Config18
;__Lib_GPIO_32F10x.c, 135 :: 		
0x0E9A	0x4B73    LDR	R3, [PC, #460]
0x0E9C	0x429D    CMP	R5, R3
0x0E9E	0xD103    BNE	L_GPIO_Config19
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 136 :: 		
0x0EA0	0xF04F3333  MOV	R3, #858993459
0x0EA4	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 137 :: 		
0x0EA6	0xE0D9    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 138 :: 		
L_GPIO_Config19:
;__Lib_GPIO_32F10x.c, 139 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x0EA8	0x2D42    CMP	R5, #66
0x0EAA	0xD103    BNE	L_GPIO_Config20
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 140 :: 		
0x0EAC	0xF04F3344  MOV	R3, #1145324612
0x0EB0	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 141 :: 		
0x0EB2	0xE0D3    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 142 :: 		
L_GPIO_Config20:
;__Lib_GPIO_32F10x.c, 143 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config18:
;__Lib_GPIO_32F10x.c, 145 :: 		
0x0EB4	0xF64F73FF  MOVW	R3, #65535
0x0EB8	0x429C    CMP	R4, R3
0x0EBA	0xD114    BNE	L_GPIO_Config21
;__Lib_GPIO_32F10x.c, 146 :: 		
0x0EBC	0x4B6A    LDR	R3, [PC, #424]
0x0EBE	0x429D    CMP	R5, R3
0x0EC0	0xD107    BNE	L_GPIO_Config22
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 147 :: 		
0x0EC2	0xF04F3333  MOV	R3, #858993459
0x0EC6	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 148 :: 		
0x0EC8	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x0ECA	0xF04F3333  MOV	R3, #858993459
0x0ECE	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 149 :: 		
0x0ED0	0xE0C4    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 150 :: 		
L_GPIO_Config22:
;__Lib_GPIO_32F10x.c, 151 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x0ED2	0x2D42    CMP	R5, #66
0x0ED4	0xD107    BNE	L_GPIO_Config23
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 152 :: 		
0x0ED6	0xF04F3344  MOV	R3, #1145324612
0x0EDA	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 153 :: 		
0x0EDC	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x0EDE	0xF04F3344  MOV	R3, #1145324612
0x0EE2	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 154 :: 		
0x0EE4	0xE0BA    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 155 :: 		
L_GPIO_Config23:
;__Lib_GPIO_32F10x.c, 156 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config21:
;__Lib_GPIO_32F10x.c, 158 :: 		
; currentmode start address is: 4 (R1)
0x0EE6	0x2100    MOVS	R1, #0
;__Lib_GPIO_32F10x.c, 159 :: 		
; speed start address is: 0 (R0)
0x0EE8	0x2000    MOVS	R0, #0
;__Lib_GPIO_32F10x.c, 161 :: 		
0x0EEA	0xF0050301  AND	R3, R5, #1
0x0EEE	0xB10B    CBZ	R3, L_GPIO_Config24
;__Lib_GPIO_32F10x.c, 162 :: 		
0x0EF0	0x2100    MOVS	R1, #0
0x0EF2	0xE01D    B	L_GPIO_Config25
L_GPIO_Config24:
;__Lib_GPIO_32F10x.c, 163 :: 		
0x0EF4	0xF0050302  AND	R3, R5, #2
0x0EF8	0xB133    CBZ	R3, L_GPIO_Config26
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 164 :: 		
0x0EFA	0xF40573C0  AND	R3, R5, #384
0x0EFE	0xB10B    CBZ	R3, L_GPIO_Config27
;__Lib_GPIO_32F10x.c, 165 :: 		
; currentmode start address is: 4 (R1)
0x0F00	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
0x0F02	0xE000    B	L_GPIO_Config28
L_GPIO_Config27:
;__Lib_GPIO_32F10x.c, 167 :: 		
; currentmode start address is: 4 (R1)
0x0F04	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
L_GPIO_Config28:
;__Lib_GPIO_32F10x.c, 168 :: 		
; currentmode start address is: 4 (R1)
0x0F06	0xE013    B	L_GPIO_Config29
L_GPIO_Config26:
;__Lib_GPIO_32F10x.c, 169 :: 		
0x0F08	0xF0050304  AND	R3, R5, #4
0x0F0C	0xB133    CBZ	R3, L_GPIO_Config30
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 170 :: 		
0x0F0E	0xF0050320  AND	R3, R5, #32
0x0F12	0xB10B    CBZ	R3, L_GPIO_Config31
;__Lib_GPIO_32F10x.c, 171 :: 		
; currentmode start address is: 4 (R1)
0x0F14	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
0x0F16	0xE000    B	L_GPIO_Config32
L_GPIO_Config31:
;__Lib_GPIO_32F10x.c, 173 :: 		
; currentmode start address is: 4 (R1)
0x0F18	0x2100    MOVS	R1, #0
; currentmode end address is: 4 (R1)
L_GPIO_Config32:
;__Lib_GPIO_32F10x.c, 174 :: 		
; currentmode start address is: 4 (R1)
0x0F1A	0xE009    B	L_GPIO_Config33
L_GPIO_Config30:
;__Lib_GPIO_32F10x.c, 175 :: 		
0x0F1C	0xF0050308  AND	R3, R5, #8
0x0F20	0xB133    CBZ	R3, L__GPIO_Config100
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 176 :: 		
0x0F22	0xF0050320  AND	R3, R5, #32
0x0F26	0xB10B    CBZ	R3, L_GPIO_Config35
;__Lib_GPIO_32F10x.c, 177 :: 		
; currentmode start address is: 4 (R1)
0x0F28	0x210C    MOVS	R1, #12
; currentmode end address is: 4 (R1)
0x0F2A	0xE000    B	L_GPIO_Config36
L_GPIO_Config35:
;__Lib_GPIO_32F10x.c, 179 :: 		
; currentmode start address is: 4 (R1)
0x0F2C	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
L_GPIO_Config36:
;__Lib_GPIO_32F10x.c, 180 :: 		
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
0x0F2E	0xE7FF    B	L_GPIO_Config34
L__GPIO_Config100:
;__Lib_GPIO_32F10x.c, 175 :: 		
;__Lib_GPIO_32F10x.c, 180 :: 		
L_GPIO_Config34:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config33:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config29:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config25:
;__Lib_GPIO_32F10x.c, 182 :: 		
; currentmode start address is: 4 (R1)
0x0F30	0x4B4E    LDR	R3, [PC, #312]
0x0F32	0xEA050303  AND	R3, R5, R3, LSL #0
0x0F36	0xB10B    CBZ	R3, L_GPIO_Config37
;__Lib_GPIO_32F10x.c, 183 :: 		
0x0F38	0x2003    MOVS	R0, #3
0x0F3A	0xE009    B	L_GPIO_Config38
L_GPIO_Config37:
;__Lib_GPIO_32F10x.c, 184 :: 		
0x0F3C	0xF4057300  AND	R3, R5, #512
0x0F40	0xB10B    CBZ	R3, L_GPIO_Config39
;__Lib_GPIO_32F10x.c, 185 :: 		
0x0F42	0x2002    MOVS	R0, #2
0x0F44	0xE004    B	L_GPIO_Config40
L_GPIO_Config39:
;__Lib_GPIO_32F10x.c, 186 :: 		
0x0F46	0xF4056380  AND	R3, R5, #1024
0x0F4A	0xB10B    CBZ	R3, L__GPIO_Config101
;__Lib_GPIO_32F10x.c, 187 :: 		
0x0F4C	0x2001    MOVS	R0, #1
; speed end address is: 0 (R0)
0x0F4E	0xE7FF    B	L_GPIO_Config41
L__GPIO_Config101:
;__Lib_GPIO_32F10x.c, 186 :: 		
;__Lib_GPIO_32F10x.c, 187 :: 		
L_GPIO_Config41:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config40:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config38:
;__Lib_GPIO_32F10x.c, 189 :: 		
; speed start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 195 :: 		
0x0F50	0xF005030C  AND	R3, R5, #12
0x0F54	0xB10B    CBZ	R3, L__GPIO_Config102
;__Lib_GPIO_32F10x.c, 198 :: 		
0x0F56	0x4301    ORRS	R1, R0
; speed end address is: 0 (R0)
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 199 :: 		
0x0F58	0xE7FF    B	L_GPIO_Config42
L__GPIO_Config102:
;__Lib_GPIO_32F10x.c, 195 :: 		
;__Lib_GPIO_32F10x.c, 199 :: 		
L_GPIO_Config42:
;__Lib_GPIO_32F10x.c, 201 :: 		
; currentmode start address is: 4 (R1)
0x0F5A	0xF00403FF  AND	R3, R4, #255
0x0F5E	0xB29B    UXTH	R3, R3
0x0F60	0x2B00    CMP	R3, #0
0x0F62	0xD03B    BEQ	L__GPIO_Config104
;__Lib_GPIO_32F10x.c, 202 :: 		
0x0F64	0x6837    LDR	R7, [R6, #0]
; tmpreg start address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 204 :: 		
; pinpos start address is: 0 (R0)
0x0F66	0x2000    MOVS	R0, #0
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
; currentmode end address is: 4 (R1)
; tmpreg end address is: 28 (R7)
; pinpos end address is: 0 (R0)
; port end address is: 24 (R6)
0x0F68	0xFA1FF884  UXTH	R8, R4
0x0F6C	0x4632    MOV	R2, R6
0x0F6E	0x462E    MOV	R6, R5
L_GPIO_Config44:
; pinpos start address is: 0 (R0)
; tmpreg start address is: 28 (R7)
; currentmode start address is: 4 (R1)
; port start address is: 8 (R2)
; config start address is: 24 (R6)
; pin_mask start address is: 32 (R8)
0x0F70	0x2808    CMP	R0, #8
0x0F72	0xD22C    BCS	L_GPIO_Config45
;__Lib_GPIO_32F10x.c, 206 :: 		
0x0F74	0xF04F0301  MOV	R3, #1
0x0F78	0xFA03F400  LSL	R4, R3, R0
;__Lib_GPIO_32F10x.c, 208 :: 		
0x0F7C	0xEA080304  AND	R3, R8, R4, LSL #0
;__Lib_GPIO_32F10x.c, 210 :: 		
0x0F80	0x42A3    CMP	R3, R4
0x0F82	0xD122    BNE	L__GPIO_Config103
;__Lib_GPIO_32F10x.c, 212 :: 		
0x0F84	0x0085    LSLS	R5, R0, #2
;__Lib_GPIO_32F10x.c, 214 :: 		
0x0F86	0xF04F030F  MOV	R3, #15
0x0F8A	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 215 :: 		
0x0F8C	0x43DB    MVN	R3, R3
0x0F8E	0xEA070403  AND	R4, R7, R3, LSL #0
; tmpreg end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 218 :: 		
0x0F92	0xFA01F305  LSL	R3, R1, R5
0x0F96	0xEA440303  ORR	R3, R4, R3, LSL #0
; tmpreg start address is: 20 (R5)
0x0F9A	0x461D    MOV	R5, R3
;__Lib_GPIO_32F10x.c, 221 :: 		
0x0F9C	0xF4067381  AND	R3, R6, #258
0x0FA0	0xF5B37F81  CMP	R3, #258
0x0FA4	0xD105    BNE	L_GPIO_Config48
;__Lib_GPIO_32F10x.c, 223 :: 		
0x0FA6	0xF2020414  ADDW	R4, R2, #20
0x0FAA	0xF04F0301  MOV	R3, #1
0x0FAE	0x4083    LSLS	R3, R0
0x0FB0	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 224 :: 		
L_GPIO_Config48:
;__Lib_GPIO_32F10x.c, 226 :: 		
0x0FB2	0xF0060382  AND	R3, R6, #130
0x0FB6	0x2B82    CMP	R3, #130
0x0FB8	0xD105    BNE	L_GPIO_Config49
;__Lib_GPIO_32F10x.c, 228 :: 		
0x0FBA	0xF2020410  ADDW	R4, R2, #16
0x0FBE	0xF04F0301  MOV	R3, #1
0x0FC2	0x4083    LSLS	R3, R0
0x0FC4	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 229 :: 		
L_GPIO_Config49:
;__Lib_GPIO_32F10x.c, 230 :: 		
0x0FC6	0x462F    MOV	R7, R5
0x0FC8	0xE7FF    B	L_GPIO_Config47
; tmpreg end address is: 20 (R5)
L__GPIO_Config103:
;__Lib_GPIO_32F10x.c, 210 :: 		
;__Lib_GPIO_32F10x.c, 230 :: 		
L_GPIO_Config47:
;__Lib_GPIO_32F10x.c, 204 :: 		
; tmpreg start address is: 28 (R7)
0x0FCA	0x1C40    ADDS	R0, R0, #1
;__Lib_GPIO_32F10x.c, 231 :: 		
; pinpos end address is: 0 (R0)
0x0FCC	0xE7D0    B	L_GPIO_Config44
L_GPIO_Config45:
;__Lib_GPIO_32F10x.c, 232 :: 		
0x0FCE	0x6017    STR	R7, [R2, #0]
; currentmode end address is: 4 (R1)
; port end address is: 8 (R2)
; config end address is: 24 (R6)
; pin_mask end address is: 32 (R8)
; tmpreg end address is: 28 (R7)
0x0FD0	0xFA1FF088  UXTH	R0, R8
0x0FD4	0x460F    MOV	R7, R1
0x0FD6	0x4631    MOV	R1, R6
0x0FD8	0x4616    MOV	R6, R2
;__Lib_GPIO_32F10x.c, 234 :: 		
0x0FDA	0xE002    B	L_GPIO_Config43
L__GPIO_Config104:
;__Lib_GPIO_32F10x.c, 201 :: 		
0x0FDC	0x460F    MOV	R7, R1
0x0FDE	0x4629    MOV	R1, R5
0x0FE0	0xB2A0    UXTH	R0, R4
;__Lib_GPIO_32F10x.c, 234 :: 		
L_GPIO_Config43:
;__Lib_GPIO_32F10x.c, 238 :: 		
; currentmode start address is: 28 (R7)
; port start address is: 24 (R6)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x0FE2	0xF1B00FFF  CMP	R0, #255
0x0FE6	0xD939    BLS	L_GPIO_Config50
;__Lib_GPIO_32F10x.c, 240 :: 		
0x0FE8	0x1D33    ADDS	R3, R6, #4
0x0FEA	0xF8D38000  LDR	R8, [R3, #0]
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 241 :: 		
; pinpos start address is: 8 (R2)
0x0FEE	0x2200    MOVS	R2, #0
; port end address is: 24 (R6)
; tmpreg end address is: 32 (R8)
; pinpos end address is: 8 (R2)
L_GPIO_Config51:
; pinpos start address is: 8 (R2)
; tmpreg start address is: 32 (R8)
; pin_mask start address is: 0 (R0)
; pin_mask end address is: 0 (R0)
; config start address is: 4 (R1)
; config end address is: 4 (R1)
; port start address is: 24 (R6)
; currentmode start address is: 28 (R7)
; currentmode end address is: 28 (R7)
0x0FF0	0x2A08    CMP	R2, #8
0x0FF2	0xD230    BCS	L_GPIO_Config52
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 243 :: 		
; currentmode start address is: 28 (R7)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x0FF4	0xF2020408  ADDW	R4, R2, #8
0x0FF8	0xF04F0301  MOV	R3, #1
0x0FFC	0xFA03F404  LSL	R4, R3, R4
;__Lib_GPIO_32F10x.c, 245 :: 		
0x1000	0xEA000304  AND	R3, R0, R4, LSL #0
;__Lib_GPIO_32F10x.c, 246 :: 		
0x1004	0x42A3    CMP	R3, R4
0x1006	0xD124    BNE	L__GPIO_Config105
;__Lib_GPIO_32F10x.c, 248 :: 		
0x1008	0x0095    LSLS	R5, R2, #2
;__Lib_GPIO_32F10x.c, 250 :: 		
0x100A	0xF04F030F  MOV	R3, #15
0x100E	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 251 :: 		
0x1010	0x43DB    MVN	R3, R3
0x1012	0xEA080803  AND	R8, R8, R3, LSL #0
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 254 :: 		
0x1016	0xFA07F305  LSL	R3, R7, R5
0x101A	0xEA480803  ORR	R8, R8, R3, LSL #0
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 257 :: 		
0x101E	0xF4017381  AND	R3, R1, #258
0x1022	0xF5B37F81  CMP	R3, #258
0x1026	0xD107    BNE	L_GPIO_Config55
;__Lib_GPIO_32F10x.c, 259 :: 		
0x1028	0xF2060514  ADDW	R5, R6, #20
0x102C	0xF2020408  ADDW	R4, R2, #8
0x1030	0xF04F0301  MOV	R3, #1
0x1034	0x40A3    LSLS	R3, R4
0x1036	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 260 :: 		
L_GPIO_Config55:
;__Lib_GPIO_32F10x.c, 262 :: 		
0x1038	0xF0010382  AND	R3, R1, #130
0x103C	0x2B82    CMP	R3, #130
0x103E	0xD107    BNE	L_GPIO_Config56
;__Lib_GPIO_32F10x.c, 264 :: 		
0x1040	0xF2060510  ADDW	R5, R6, #16
0x1044	0xF2020408  ADDW	R4, R2, #8
0x1048	0xF04F0301  MOV	R3, #1
0x104C	0x40A3    LSLS	R3, R4
0x104E	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 265 :: 		
L_GPIO_Config56:
;__Lib_GPIO_32F10x.c, 266 :: 		
0x1050	0xE7FF    B	L_GPIO_Config54
; tmpreg end address is: 32 (R8)
L__GPIO_Config105:
;__Lib_GPIO_32F10x.c, 246 :: 		
;__Lib_GPIO_32F10x.c, 266 :: 		
L_GPIO_Config54:
;__Lib_GPIO_32F10x.c, 241 :: 		
; tmpreg start address is: 32 (R8)
0x1052	0x1C52    ADDS	R2, R2, #1
;__Lib_GPIO_32F10x.c, 267 :: 		
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
; pinpos end address is: 8 (R2)
0x1054	0xE7CC    B	L_GPIO_Config51
L_GPIO_Config52:
;__Lib_GPIO_32F10x.c, 268 :: 		
0x1056	0x1D33    ADDS	R3, R6, #4
; port end address is: 24 (R6)
0x1058	0xF8C38000  STR	R8, [R3, #0]
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 269 :: 		
L_GPIO_Config50:
;__Lib_GPIO_32F10x.c, 270 :: 		
L_end_GPIO_Config:
0x105C	0xF8DDE000  LDR	LR, [SP, #0]
0x1060	0xB001    ADD	SP, SP, #4
0x1062	0x4770    BX	LR
0x1064	0xFC00FFFF  	#-1024
0x1068	0x00140008  	#524308
0x106C	0x08000008  	#526336
; end of _GPIO_Config
_GPIO_Clk_Enable:
;__Lib_GPIO_32F10x.c, 83 :: 		
; gpio_port start address is: 0 (R0)
0x0B6C	0xB081    SUB	SP, SP, #4
; gpio_port end address is: 0 (R0)
; gpio_port start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 85 :: 		
0x0B6E	0x4919    LDR	R1, [PC, #100]
0x0B70	0xEA000101  AND	R1, R0, R1, LSL #0
; gpio_port end address is: 0 (R0)
; prt start address is: 0 (R0)
0x0B74	0x4608    MOV	R0, R1
;__Lib_GPIO_32F10x.c, 86 :: 		
; pos start address is: 8 (R2)
0x0B76	0x2200    MOVS	R2, #0
;__Lib_GPIO_32F10x.c, 87 :: 		
0x0B78	0xE00E    B	L_GPIO_Clk_Enable0
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 88 :: 		
L_GPIO_Clk_Enable2:
; pos start address is: 0 (R0)
0x0B7A	0x2004    MOVS	R0, #4
; pos end address is: 0 (R0)
0x0B7C	0xE022    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 89 :: 		
L_GPIO_Clk_Enable3:
; pos start address is: 0 (R0)
0x0B7E	0x2008    MOVS	R0, #8
; pos end address is: 0 (R0)
0x0B80	0xE020    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 90 :: 		
L_GPIO_Clk_Enable4:
; pos start address is: 0 (R0)
0x0B82	0x2010    MOVS	R0, #16
; pos end address is: 0 (R0)
0x0B84	0xE01E    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 91 :: 		
L_GPIO_Clk_Enable5:
; pos start address is: 0 (R0)
0x0B86	0x2020    MOVS	R0, #32
; pos end address is: 0 (R0)
0x0B88	0xE01C    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 92 :: 		
L_GPIO_Clk_Enable6:
; pos start address is: 0 (R0)
0x0B8A	0x2040    MOVS	R0, #64
; pos end address is: 0 (R0)
0x0B8C	0xE01A    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 93 :: 		
L_GPIO_Clk_Enable7:
; pos start address is: 0 (R0)
0x0B8E	0x2080    MOVS	R0, #128
; pos end address is: 0 (R0)
0x0B90	0xE018    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 94 :: 		
L_GPIO_Clk_Enable8:
; pos start address is: 0 (R0)
0x0B92	0xF2401000  MOVW	R0, #256
; pos end address is: 0 (R0)
0x0B96	0xE015    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 95 :: 		
L_GPIO_Clk_Enable0:
; pos start address is: 8 (R2)
; prt start address is: 0 (R0)
0x0B98	0x490F    LDR	R1, [PC, #60]
0x0B9A	0x4288    CMP	R0, R1
0x0B9C	0xD0ED    BEQ	L_GPIO_Clk_Enable2
0x0B9E	0x490F    LDR	R1, [PC, #60]
0x0BA0	0x4288    CMP	R0, R1
0x0BA2	0xD0EC    BEQ	L_GPIO_Clk_Enable3
0x0BA4	0x490E    LDR	R1, [PC, #56]
0x0BA6	0x4288    CMP	R0, R1
0x0BA8	0xD0EB    BEQ	L_GPIO_Clk_Enable4
0x0BAA	0x490E    LDR	R1, [PC, #56]
0x0BAC	0x4288    CMP	R0, R1
0x0BAE	0xD0EA    BEQ	L_GPIO_Clk_Enable5
0x0BB0	0x490D    LDR	R1, [PC, #52]
0x0BB2	0x4288    CMP	R0, R1
0x0BB4	0xD0E9    BEQ	L_GPIO_Clk_Enable6
0x0BB6	0x490D    LDR	R1, [PC, #52]
0x0BB8	0x4288    CMP	R0, R1
0x0BBA	0xD0E8    BEQ	L_GPIO_Clk_Enable7
0x0BBC	0x490C    LDR	R1, [PC, #48]
0x0BBE	0x4288    CMP	R0, R1
0x0BC0	0xD0E7    BEQ	L_GPIO_Clk_Enable8
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
0x0BC2	0x4610    MOV	R0, R2
L_GPIO_Clk_Enable1:
;__Lib_GPIO_32F10x.c, 97 :: 		
; pos start address is: 0 (R0)
0x0BC4	0x490B    LDR	R1, [PC, #44]
0x0BC6	0x6809    LDR	R1, [R1, #0]
0x0BC8	0xEA410200  ORR	R2, R1, R0, LSL #0
; pos end address is: 0 (R0)
0x0BCC	0x4909    LDR	R1, [PC, #36]
0x0BCE	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 98 :: 		
L_end_GPIO_Clk_Enable:
0x0BD0	0xB001    ADD	SP, SP, #4
0x0BD2	0x4770    BX	LR
0x0BD4	0xFC00FFFF  	#-1024
0x0BD8	0x08004001  	#1073809408
0x0BDC	0x0C004001  	#1073810432
0x0BE0	0x10004001  	#1073811456
0x0BE4	0x14004001  	#1073812480
0x0BE8	0x18004001  	#1073813504
0x0BEC	0x1C004001  	#1073814528
0x0BF0	0x20004001  	#1073815552
0x0BF4	0x10184002  	RCC_APB2ENR+0
; end of _GPIO_Clk_Enable
_GPIO_Digital_Output:
;__Lib_GPIO_32F10x.c, 365 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x19F8	0xB081    SUB	SP, SP, #4
0x19FA	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 366 :: 		
0x19FE	0x4A04    LDR	R2, [PC, #16]
0x1A00	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x1A02	0xF7FFFA3B  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 367 :: 		
L_end_GPIO_Digital_Output:
0x1A06	0xF8DDE000  LDR	LR, [SP, #0]
0x1A0A	0xB001    ADD	SP, SP, #4
0x1A0C	0x4770    BX	LR
0x1A0E	0xBF00    NOP
0x1A10	0x00140008  	#524308
; end of _GPIO_Digital_Output
easymx_v7_STM32F107VC__gpioInit_2:
;__em_f107vc_gpio.c, 102 :: 		static T_mikrobus_ret _gpioInit_2(T_mikrobus_pin pin, T_gpio_dir dir)
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x23E0	0xB081    SUB	SP, SP, #4
0x23E2	0xF8CDE000  STR	LR, [SP, #0]
; dir end address is: 4 (R1)
; pin end address is: 0 (R0)
; pin start address is: 0 (R0)
; dir start address is: 4 (R1)
;__em_f107vc_gpio.c, 104 :: 		switch( pin )
0x23E6	0xE0A9    B	L_easymx_v7_STM32F107VC__gpioInit_239
; pin end address is: 0 (R0)
;__em_f107vc_gpio.c, 106 :: 		case _MIKROBUS_AN_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOA_BASE, _GPIO_PINMASK_5 ); else GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_5 ); break;
L_easymx_v7_STM32F107VC__gpioInit_241:
0x23E8	0x2901    CMP	R1, #1
0x23EA	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_242
; dir end address is: 4 (R1)
0x23EC	0xF2400120  MOVW	R1, #32
0x23F0	0x4865    LDR	R0, [PC, #404]
0x23F2	0xF7FFFB47  BL	_GPIO_Digital_Input+0
0x23F6	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_243
L_easymx_v7_STM32F107VC__gpioInit_242:
0x23F8	0xF2400120  MOVW	R1, #32
0x23FC	0x4862    LDR	R0, [PC, #392]
0x23FE	0xF7FFFAFB  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_243:
0x2402	0xE0BB    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 107 :: 		case _MIKROBUS_RST_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_3 ); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_3 ); break;
L_easymx_v7_STM32F107VC__gpioInit_244:
; dir start address is: 4 (R1)
0x2404	0x2901    CMP	R1, #1
0x2406	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_245
; dir end address is: 4 (R1)
0x2408	0xF2400108  MOVW	R1, #8
0x240C	0x485F    LDR	R0, [PC, #380]
0x240E	0xF7FFFB39  BL	_GPIO_Digital_Input+0
0x2412	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_246
L_easymx_v7_STM32F107VC__gpioInit_245:
0x2414	0xF2400108  MOVW	R1, #8
0x2418	0x485C    LDR	R0, [PC, #368]
0x241A	0xF7FFFAED  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_246:
0x241E	0xE0AD    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 108 :: 		case _MIKROBUS_CS_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_14); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_14); break;
L_easymx_v7_STM32F107VC__gpioInit_247:
; dir start address is: 4 (R1)
0x2420	0x2901    CMP	R1, #1
0x2422	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_248
; dir end address is: 4 (R1)
0x2424	0xF2440100  MOVW	R1, #16384
0x2428	0x4859    LDR	R0, [PC, #356]
0x242A	0xF7FFFB2B  BL	_GPIO_Digital_Input+0
0x242E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_249
L_easymx_v7_STM32F107VC__gpioInit_248:
0x2430	0xF2440100  MOVW	R1, #16384
0x2434	0x4856    LDR	R0, [PC, #344]
0x2436	0xF7FFFADF  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_249:
0x243A	0xE09F    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 109 :: 		case _MIKROBUS_SCK_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_10); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_10); break;
L_easymx_v7_STM32F107VC__gpioInit_250:
; dir start address is: 4 (R1)
0x243C	0x2901    CMP	R1, #1
0x243E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_251
; dir end address is: 4 (R1)
0x2440	0xF2404100  MOVW	R1, #1024
0x2444	0x4851    LDR	R0, [PC, #324]
0x2446	0xF7FFFB1D  BL	_GPIO_Digital_Input+0
0x244A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_252
L_easymx_v7_STM32F107VC__gpioInit_251:
0x244C	0xF2404100  MOVW	R1, #1024
0x2450	0x484E    LDR	R0, [PC, #312]
0x2452	0xF7FFFAD1  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_252:
0x2456	0xE091    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 110 :: 		case _MIKROBUS_MISO_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_11); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_11); break;
L_easymx_v7_STM32F107VC__gpioInit_253:
; dir start address is: 4 (R1)
0x2458	0x2901    CMP	R1, #1
0x245A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_254
; dir end address is: 4 (R1)
0x245C	0xF6400100  MOVW	R1, #2048
0x2460	0x484A    LDR	R0, [PC, #296]
0x2462	0xF7FFFB0F  BL	_GPIO_Digital_Input+0
0x2466	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_255
L_easymx_v7_STM32F107VC__gpioInit_254:
0x2468	0xF6400100  MOVW	R1, #2048
0x246C	0x4847    LDR	R0, [PC, #284]
0x246E	0xF7FFFAC3  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_255:
0x2472	0xE083    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 111 :: 		case _MIKROBUS_MOSI_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_12); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_12); break;
L_easymx_v7_STM32F107VC__gpioInit_256:
; dir start address is: 4 (R1)
0x2474	0x2901    CMP	R1, #1
0x2476	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_257
; dir end address is: 4 (R1)
0x2478	0xF2410100  MOVW	R1, #4096
0x247C	0x4843    LDR	R0, [PC, #268]
0x247E	0xF7FFFB01  BL	_GPIO_Digital_Input+0
0x2482	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_258
L_easymx_v7_STM32F107VC__gpioInit_257:
0x2484	0xF2410100  MOVW	R1, #4096
0x2488	0x4840    LDR	R0, [PC, #256]
0x248A	0xF7FFFAB5  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_258:
0x248E	0xE075    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 112 :: 		case _MIKROBUS_PWM_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_12); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_12); break;
L_easymx_v7_STM32F107VC__gpioInit_259:
; dir start address is: 4 (R1)
0x2490	0x2901    CMP	R1, #1
0x2492	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_260
; dir end address is: 4 (R1)
0x2494	0xF2410100  MOVW	R1, #4096
0x2498	0x483D    LDR	R0, [PC, #244]
0x249A	0xF7FFFAF3  BL	_GPIO_Digital_Input+0
0x249E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_261
L_easymx_v7_STM32F107VC__gpioInit_260:
0x24A0	0xF2410100  MOVW	R1, #4096
0x24A4	0x483A    LDR	R0, [PC, #232]
0x24A6	0xF7FFFAA7  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_261:
0x24AA	0xE067    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 113 :: 		case _MIKROBUS_INT_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_11); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_11); break;
L_easymx_v7_STM32F107VC__gpioInit_262:
; dir start address is: 4 (R1)
0x24AC	0x2901    CMP	R1, #1
0x24AE	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_263
; dir end address is: 4 (R1)
0x24B0	0xF6400100  MOVW	R1, #2048
0x24B4	0x4836    LDR	R0, [PC, #216]
0x24B6	0xF7FFFAE5  BL	_GPIO_Digital_Input+0
0x24BA	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_264
L_easymx_v7_STM32F107VC__gpioInit_263:
0x24BC	0xF6400100  MOVW	R1, #2048
0x24C0	0x4833    LDR	R0, [PC, #204]
0x24C2	0xF7FFFA99  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_264:
0x24C6	0xE059    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 114 :: 		case _MIKROBUS_RX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_6 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_6 ); break;
L_easymx_v7_STM32F107VC__gpioInit_265:
; dir start address is: 4 (R1)
0x24C8	0x2901    CMP	R1, #1
0x24CA	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_266
; dir end address is: 4 (R1)
0x24CC	0xF2400140  MOVW	R1, #64
0x24D0	0x482F    LDR	R0, [PC, #188]
0x24D2	0xF7FFFAD7  BL	_GPIO_Digital_Input+0
0x24D6	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_267
L_easymx_v7_STM32F107VC__gpioInit_266:
0x24D8	0xF2400140  MOVW	R1, #64
0x24DC	0x482C    LDR	R0, [PC, #176]
0x24DE	0xF7FFFA8B  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_267:
0x24E2	0xE04B    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 115 :: 		case _MIKROBUS_TX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_5 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_5 ); break;
L_easymx_v7_STM32F107VC__gpioInit_268:
; dir start address is: 4 (R1)
0x24E4	0x2901    CMP	R1, #1
0x24E6	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_269
; dir end address is: 4 (R1)
0x24E8	0xF2400120  MOVW	R1, #32
0x24EC	0x4828    LDR	R0, [PC, #160]
0x24EE	0xF7FFFAC9  BL	_GPIO_Digital_Input+0
0x24F2	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_270
L_easymx_v7_STM32F107VC__gpioInit_269:
0x24F4	0xF2400120  MOVW	R1, #32
0x24F8	0x4825    LDR	R0, [PC, #148]
0x24FA	0xF7FFFA7D  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_270:
0x24FE	0xE03D    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 116 :: 		case _MIKROBUS_SCL_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_6 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_6 ); break;
L_easymx_v7_STM32F107VC__gpioInit_271:
; dir start address is: 4 (R1)
0x2500	0x2901    CMP	R1, #1
0x2502	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_272
; dir end address is: 4 (R1)
0x2504	0xF2400140  MOVW	R1, #64
0x2508	0x4822    LDR	R0, [PC, #136]
0x250A	0xF7FFFABB  BL	_GPIO_Digital_Input+0
0x250E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_273
L_easymx_v7_STM32F107VC__gpioInit_272:
0x2510	0xF2400140  MOVW	R1, #64
0x2514	0x481F    LDR	R0, [PC, #124]
0x2516	0xF7FFFA6F  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_273:
0x251A	0xE02F    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 117 :: 		case _MIKROBUS_SDA_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_7 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_7 ); break;
L_easymx_v7_STM32F107VC__gpioInit_274:
; dir start address is: 4 (R1)
0x251C	0x2901    CMP	R1, #1
0x251E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_275
; dir end address is: 4 (R1)
0x2520	0xF2400180  MOVW	R1, #128
0x2524	0x481B    LDR	R0, [PC, #108]
0x2526	0xF7FFFAAD  BL	_GPIO_Digital_Input+0
0x252A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_276
L_easymx_v7_STM32F107VC__gpioInit_275:
0x252C	0xF2400180  MOVW	R1, #128
0x2530	0x4818    LDR	R0, [PC, #96]
0x2532	0xF7FFFA61  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_276:
0x2536	0xE021    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 118 :: 		default                  : return _MIKROBUS_ERR_PIN;
L_easymx_v7_STM32F107VC__gpioInit_277:
0x2538	0x2001    MOVS	R0, #1
0x253A	0xE020    B	L_end__gpioInit_2
;__em_f107vc_gpio.c, 119 :: 		}
L_easymx_v7_STM32F107VC__gpioInit_239:
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x253C	0x2800    CMP	R0, #0
0x253E	0xF43FAF53  BEQ	L_easymx_v7_STM32F107VC__gpioInit_241
0x2542	0x2801    CMP	R0, #1
0x2544	0xF43FAF5E  BEQ	L_easymx_v7_STM32F107VC__gpioInit_244
0x2548	0x2802    CMP	R0, #2
0x254A	0xF43FAF69  BEQ	L_easymx_v7_STM32F107VC__gpioInit_247
0x254E	0x2803    CMP	R0, #3
0x2550	0xF43FAF74  BEQ	L_easymx_v7_STM32F107VC__gpioInit_250
0x2554	0x2804    CMP	R0, #4
0x2556	0xF43FAF7F  BEQ	L_easymx_v7_STM32F107VC__gpioInit_253
0x255A	0x2805    CMP	R0, #5
0x255C	0xF43FAF8A  BEQ	L_easymx_v7_STM32F107VC__gpioInit_256
0x2560	0x2806    CMP	R0, #6
0x2562	0xF43FAF95  BEQ	L_easymx_v7_STM32F107VC__gpioInit_259
0x2566	0x2807    CMP	R0, #7
0x2568	0xD0A0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_262
0x256A	0x2808    CMP	R0, #8
0x256C	0xD0AC    BEQ	L_easymx_v7_STM32F107VC__gpioInit_265
0x256E	0x2809    CMP	R0, #9
0x2570	0xD0B8    BEQ	L_easymx_v7_STM32F107VC__gpioInit_268
0x2572	0x280A    CMP	R0, #10
0x2574	0xD0C4    BEQ	L_easymx_v7_STM32F107VC__gpioInit_271
0x2576	0x280B    CMP	R0, #11
0x2578	0xD0D0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_274
; pin end address is: 0 (R0)
; dir end address is: 4 (R1)
0x257A	0xE7DD    B	L_easymx_v7_STM32F107VC__gpioInit_277
L_easymx_v7_STM32F107VC__gpioInit_240:
;__em_f107vc_gpio.c, 120 :: 		return _MIKROBUS_OK;
0x257C	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_gpio.c, 121 :: 		}
L_end__gpioInit_2:
0x257E	0xF8DDE000  LDR	LR, [SP, #0]
0x2582	0xB001    ADD	SP, SP, #4
0x2584	0x4770    BX	LR
0x2586	0xBF00    NOP
0x2588	0x08004001  	GPIOA_BASE+0
0x258C	0x10004001  	GPIOC_BASE+0
0x2590	0x14004001  	GPIOD_BASE+0
0x2594	0x0C004001  	GPIOB_BASE+0
; end of easymx_v7_STM32F107VC__gpioInit_2
_mikrobus_i2cInit:
;easymx_v7_STM32F107VC.c, 222 :: 		T_mikrobus_ret mikrobus_i2cInit(T_mikrobus_soc bus, const uint32_t *cfg)
; cfg start address is: 4 (R1)
; bus start address is: 0 (R0)
0x3564	0xB081    SUB	SP, SP, #4
0x3566	0xF8CDE000  STR	LR, [SP, #0]
0x356A	0x468B    MOV	R11, R1
; cfg end address is: 4 (R1)
; bus end address is: 0 (R0)
; bus start address is: 0 (R0)
; cfg start address is: 44 (R11)
;easymx_v7_STM32F107VC.c, 224 :: 		switch( bus )
0x356C	0xE009    B	L_mikrobus_i2cInit83
; bus end address is: 0 (R0)
;easymx_v7_STM32F107VC.c, 227 :: 		case _MIKROBUS1 : return _i2cInit_1( cfg );
L_mikrobus_i2cInit85:
0x356E	0x4658    MOV	R0, R11
; cfg end address is: 44 (R11)
0x3570	0xF7FFF812  BL	easymx_v7_STM32F107VC__i2cInit_1+0
0x3574	0xE00A    B	L_end_mikrobus_i2cInit
;easymx_v7_STM32F107VC.c, 230 :: 		case _MIKROBUS2 : return _i2cInit_2( cfg );
L_mikrobus_i2cInit86:
; cfg start address is: 44 (R11)
0x3576	0x4658    MOV	R0, R11
; cfg end address is: 44 (R11)
0x3578	0xF7FEFF22  BL	easymx_v7_STM32F107VC__i2cInit_2+0
0x357C	0xE006    B	L_end_mikrobus_i2cInit
;easymx_v7_STM32F107VC.c, 244 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_i2cInit87:
0x357E	0x2001    MOVS	R0, #1
0x3580	0xE004    B	L_end_mikrobus_i2cInit
;easymx_v7_STM32F107VC.c, 245 :: 		}
L_mikrobus_i2cInit83:
; cfg start address is: 44 (R11)
; bus start address is: 0 (R0)
0x3582	0x2800    CMP	R0, #0
0x3584	0xD0F3    BEQ	L_mikrobus_i2cInit85
0x3586	0x2801    CMP	R0, #1
0x3588	0xD0F5    BEQ	L_mikrobus_i2cInit86
; bus end address is: 0 (R0)
; cfg end address is: 44 (R11)
0x358A	0xE7F8    B	L_mikrobus_i2cInit87
;easymx_v7_STM32F107VC.c, 248 :: 		}
L_end_mikrobus_i2cInit:
0x358C	0xF8DDE000  LDR	LR, [SP, #0]
0x3590	0xB001    ADD	SP, SP, #4
0x3592	0x4770    BX	LR
; end of _mikrobus_i2cInit
easymx_v7_STM32F107VC__i2cInit_1:
;__em_f107vc_i2c.c, 29 :: 		static T_mikrobus_ret _i2cInit_1(const uint32_t* cfg)
; cfg start address is: 0 (R0)
0x2598	0xB081    SUB	SP, SP, #4
0x259A	0xF8CDE000  STR	LR, [SP, #0]
; cfg end address is: 0 (R0)
; cfg start address is: 0 (R0)
;__em_f107vc_i2c.c, 31 :: 		I2C1_Init_Advanced( cfg[0], &_GPIO_MODULE_I2C1_PB67);
0x259E	0x6801    LDR	R1, [R0, #0]
; cfg end address is: 0 (R0)
0x25A0	0x4608    MOV	R0, R1
0x25A2	0x4904    LDR	R1, [PC, #16]
0x25A4	0xF7FFFA36  BL	_I2C1_Init_Advanced+0
;__em_f107vc_i2c.c, 32 :: 		return _MIKROBUS_OK;
0x25A8	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_i2c.c, 33 :: 		}
L_end__i2cInit_1:
0x25AA	0xF8DDE000  LDR	LR, [SP, #0]
0x25AE	0xB001    ADD	SP, SP, #4
0x25B0	0x4770    BX	LR
0x25B2	0xBF00    NOP
0x25B4	0x40A80000  	__GPIO_MODULE_I2C1_PB67+0
; end of easymx_v7_STM32F107VC__i2cInit_1
_I2C1_Init_Advanced:
;__Lib_I2C_12.c, 544 :: 		
; module start address is: 4 (R1)
; I2C_ClockSpeed start address is: 0 (R0)
0x1A14	0xB081    SUB	SP, SP, #4
0x1A16	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 4 (R1)
; I2C_ClockSpeed end address is: 0 (R0)
; I2C_ClockSpeed start address is: 0 (R0)
; module start address is: 4 (R1)
;__Lib_I2C_12.c, 545 :: 		
0x1A1A	0x460A    MOV	R2, R1
; module end address is: 4 (R1)
0x1A1C	0x4601    MOV	R1, R0
; I2C_ClockSpeed end address is: 0 (R0)
0x1A1E	0x4803    LDR	R0, [PC, #12]
0x1A20	0xF7FFFB36  BL	_I2Cx_Init_Advanced+0
;__Lib_I2C_12.c, 546 :: 		
L_end_I2C1_Init_Advanced:
0x1A24	0xF8DDE000  LDR	LR, [SP, #0]
0x1A28	0xB001    ADD	SP, SP, #4
0x1A2A	0x4770    BX	LR
0x1A2C	0x54004000  	I2C1_CR1+0
; end of _I2C1_Init_Advanced
_I2Cx_Init_Advanced:
;__Lib_I2C_12.c, 591 :: 		
; module start address is: 8 (R2)
; I2C_ClockSpeed start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x1090	0xB088    SUB	SP, SP, #32
0x1092	0xF8CDE000  STR	LR, [SP, #0]
0x1096	0x460E    MOV	R6, R1
; module end address is: 8 (R2)
; I2C_ClockSpeed end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; I2C_ClockSpeed start address is: 24 (R6)
; module start address is: 8 (R2)
;__Lib_I2C_12.c, 593 :: 		
;__Lib_I2C_12.c, 600 :: 		
0x1098	0x4B55    LDR	R3, [PC, #340]
0x109A	0x4298    CMP	R0, R3
0x109C	0xD10D    BNE	L_I2Cx_Init_Advanced112
;__Lib_I2C_12.c, 601 :: 		
0x109E	0x2401    MOVS	R4, #1
0x10A0	0xB264    SXTB	R4, R4
0x10A2	0x4B54    LDR	R3, [PC, #336]
0x10A4	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 602 :: 		
0x10A6	0x4C54    LDR	R4, [PC, #336]
0x10A8	0x4B54    LDR	R3, [PC, #336]
0x10AA	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 603 :: 		
0x10AC	0x4C54    LDR	R4, [PC, #336]
0x10AE	0x4B55    LDR	R3, [PC, #340]
0x10B0	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 604 :: 		
0x10B2	0x4C55    LDR	R4, [PC, #340]
0x10B4	0x4B55    LDR	R3, [PC, #340]
0x10B6	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 605 :: 		
0x10B8	0xE00F    B	L_I2Cx_Init_Advanced113
L_I2Cx_Init_Advanced112:
;__Lib_I2C_12.c, 606 :: 		
0x10BA	0x4B55    LDR	R3, [PC, #340]
0x10BC	0x4298    CMP	R0, R3
0x10BE	0xD10C    BNE	L_I2Cx_Init_Advanced114
;__Lib_I2C_12.c, 607 :: 		
0x10C0	0x2401    MOVS	R4, #1
0x10C2	0xB264    SXTB	R4, R4
0x10C4	0x4B53    LDR	R3, [PC, #332]
0x10C6	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 608 :: 		
0x10C8	0x4C53    LDR	R4, [PC, #332]
0x10CA	0x4B4C    LDR	R3, [PC, #304]
0x10CC	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 609 :: 		
0x10CE	0x4C53    LDR	R4, [PC, #332]
0x10D0	0x4B4C    LDR	R3, [PC, #304]
0x10D2	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 610 :: 		
0x10D4	0x4C52    LDR	R4, [PC, #328]
0x10D6	0x4B4D    LDR	R3, [PC, #308]
0x10D8	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 611 :: 		
L_I2Cx_Init_Advanced114:
L_I2Cx_Init_Advanced113:
;__Lib_I2C_12.c, 612 :: 		
0x10DA	0x9601    STR	R6, [SP, #4]
; module end address is: 8 (R2)
0x10DC	0x9002    STR	R0, [SP, #8]
0x10DE	0x4610    MOV	R0, R2
0x10E0	0xF7FFF9D4  BL	_GPIO_Alternate_Function_Enable+0
0x10E4	0x9802    LDR	R0, [SP, #8]
0x10E6	0x9E01    LDR	R6, [SP, #4]
;__Lib_I2C_12.c, 617 :: 		
0x10E8	0x1D03    ADDS	R3, R0, #4
0x10EA	0x681B    LDR	R3, [R3, #0]
;__Lib_I2C_12.c, 619 :: 		
0x10EC	0xB29C    UXTH	R4, R3
0x10EE	0xF06F033F  MVN	R3, #63
0x10F2	0xEA040303  AND	R3, R4, R3, LSL #0
; tmpreg start address is: 20 (R5)
0x10F6	0xB29D    UXTH	R5, R3
;__Lib_I2C_12.c, 621 :: 		
0x10F8	0xAB03    ADD	R3, SP, #12
0x10FA	0x9001    STR	R0, [SP, #4]
0x10FC	0x4618    MOV	R0, R3
0x10FE	0xF7FFFC7B  BL	_RCC_GetClocksFrequency+0
0x1102	0x9801    LDR	R0, [SP, #4]
;__Lib_I2C_12.c, 622 :: 		
; pclk1 start address is: 28 (R7)
0x1104	0x9F05    LDR	R7, [SP, #20]
;__Lib_I2C_12.c, 624 :: 		
0x1106	0x9C05    LDR	R4, [SP, #20]
0x1108	0x4B46    LDR	R3, [PC, #280]
0x110A	0xFBB4F3F3  UDIV	R3, R4, R3
; freqrange start address is: 4 (R1)
0x110E	0xB299    UXTH	R1, R3
;__Lib_I2C_12.c, 625 :: 		
0x1110	0xB29B    UXTH	R3, R3
0x1112	0xEA450403  ORR	R4, R5, R3, LSL #0
0x1116	0xB2A4    UXTH	R4, R4
; tmpreg end address is: 20 (R5)
;__Lib_I2C_12.c, 627 :: 		
0x1118	0x1D03    ADDS	R3, R0, #4
0x111A	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 631 :: 		
0x111C	0x2400    MOVS	R4, #0
0x111E	0x6803    LDR	R3, [R0, #0]
0x1120	0xF3640300  BFI	R3, R4, #0, #1
0x1124	0x6003    STR	R3, [R0, #0]
;__Lib_I2C_12.c, 634 :: 		
; tmpreg start address is: 8 (R2)
0x1126	0x2200    MOVS	R2, #0
;__Lib_I2C_12.c, 637 :: 		
0x1128	0x4B3F    LDR	R3, [PC, #252]
0x112A	0x429E    CMP	R6, R3
0x112C	0xD812    BHI	L_I2Cx_Init_Advanced115
;__Lib_I2C_12.c, 640 :: 		
0x112E	0x0073    LSLS	R3, R6, #1
; I2C_ClockSpeed end address is: 24 (R6)
0x1130	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x1134	0xB2A4    UXTH	R4, R4
;__Lib_I2C_12.c, 642 :: 		
0x1136	0x2C04    CMP	R4, #4
0x1138	0xD202    BCS	L__I2Cx_Init_Advanced144
; result end address is: 16 (R4)
;__Lib_I2C_12.c, 645 :: 		
; result start address is: 12 (R3)
0x113A	0x2304    MOVS	R3, #4
; result end address is: 12 (R3)
0x113C	0x461C    MOV	R4, R3
;__Lib_I2C_12.c, 646 :: 		
0x113E	0xE7FF    B	L_I2Cx_Init_Advanced116
L__I2Cx_Init_Advanced144:
;__Lib_I2C_12.c, 642 :: 		
;__Lib_I2C_12.c, 646 :: 		
L_I2Cx_Init_Advanced116:
;__Lib_I2C_12.c, 648 :: 		
; result start address is: 16 (R4)
0x1140	0xEA420304  ORR	R3, R2, R4, LSL #0
; result end address is: 16 (R4)
0x1144	0xB29A    UXTH	R2, R3
;__Lib_I2C_12.c, 650 :: 		
0x1146	0xF2000420  ADDW	R4, R0, #32
0x114A	0x1C4B    ADDS	R3, R1, #1
0x114C	0xB29B    UXTH	R3, R3
; freqrange end address is: 4 (R1)
0x114E	0x6023    STR	R3, [R4, #0]
;__Lib_I2C_12.c, 651 :: 		
0x1150	0xB291    UXTH	R1, R2
0x1152	0xE03F    B	L_I2Cx_Init_Advanced117
L_I2Cx_Init_Advanced115:
;__Lib_I2C_12.c, 656 :: 		
; freqrange start address is: 4 (R1)
; pclk1 start address is: 28 (R7)
; I2C_ClockSpeed start address is: 24 (R6)
0x1154	0x2303    MOVS	R3, #3
0x1156	0xFB06F403  MUL	R4, R6, R3
0x115A	0xFBB7F3F4  UDIV	R3, R7, R4
; result start address is: 32 (R8)
0x115E	0xFA1FF883  UXTH	R8, R3
;__Lib_I2C_12.c, 659 :: 		
0x1162	0x2319    MOVS	R3, #25
0x1164	0xFB06F503  MUL	R5, R6, R3
0x1168	0xFBB7F3F5  UDIV	R3, R7, R5
; result25 start address is: 36 (R9)
0x116C	0xFA1FF983  UXTH	R9, R3
;__Lib_I2C_12.c, 661 :: 		
0x1170	0xFB08F404  MUL	R4, R8, R4
; result end address is: 32 (R8)
;__Lib_I2C_12.c, 663 :: 		
0x1174	0xFB09F305  MUL	R3, R9, R5
; result25 end address is: 36 (R9)
;__Lib_I2C_12.c, 665 :: 		
0x1178	0x1B3C    SUB	R4, R7, R4
0x117A	0x1AFB    SUB	R3, R7, R3
0x117C	0x429C    CMP	R4, R3
0x117E	0xD205    BCS	L_I2Cx_Init_Advanced118
;__Lib_I2C_12.c, 666 :: 		
0x1180	0x2303    MOVS	R3, #3
0x1182	0x4373    MULS	R3, R6, R3
; I2C_ClockSpeed end address is: 24 (R6)
0x1184	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x1188	0xB2A4    UXTH	R4, R4
;__Lib_I2C_12.c, 667 :: 		
; result end address is: 16 (R4)
0x118A	0xE006    B	L_I2Cx_Init_Advanced119
L_I2Cx_Init_Advanced118:
;__Lib_I2C_12.c, 669 :: 		
; pclk1 start address is: 28 (R7)
; I2C_ClockSpeed start address is: 24 (R6)
0x118C	0x2319    MOVS	R3, #25
0x118E	0x4373    MULS	R3, R6, R3
; I2C_ClockSpeed end address is: 24 (R6)
0x1190	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x1194	0xB2A4    UXTH	R4, R4
;__Lib_I2C_12.c, 670 :: 		
0x1196	0xF4444480  ORR	R4, R4, #16384
; result end address is: 16 (R4)
;__Lib_I2C_12.c, 671 :: 		
L_I2Cx_Init_Advanced119:
;__Lib_I2C_12.c, 674 :: 		
; result start address is: 16 (R4)
0x119A	0xF64073FF  MOVW	R3, #4095
0x119E	0xEA040303  AND	R3, R4, R3, LSL #0
0x11A2	0xB913    CBNZ	R3, L__I2Cx_Init_Advanced145
;__Lib_I2C_12.c, 677 :: 		
0x11A4	0xF0440401  ORR	R4, R4, #1
; result end address is: 16 (R4)
;__Lib_I2C_12.c, 678 :: 		
0x11A8	0xE7FF    B	L_I2Cx_Init_Advanced120
L__I2Cx_Init_Advanced145:
;__Lib_I2C_12.c, 674 :: 		
;__Lib_I2C_12.c, 678 :: 		
L_I2Cx_Init_Advanced120:
;__Lib_I2C_12.c, 680 :: 		
; result start address is: 16 (R4)
0x11AA	0xF4444300  ORR	R3, R4, #32768
; result end address is: 16 (R4)
0x11AE	0xB29B    UXTH	R3, R3
0x11B0	0x431A    ORRS	R2, R3
0x11B2	0xB292    UXTH	R2, R2
;__Lib_I2C_12.c, 682 :: 		
0x11B4	0xF2000520  ADDW	R5, R0, #32
0x11B8	0xF240132C  MOVW	R3, #300
0x11BC	0xFB01F403  MUL	R4, R1, R3
0x11C0	0xB2A4    UXTH	R4, R4
; freqrange end address is: 4 (R1)
0x11C2	0xF24033E8  MOVW	R3, #1000
0x11C6	0xFBB4F3F3  UDIV	R3, R4, R3
0x11CA	0xB29B    UXTH	R3, R3
0x11CC	0x1C5B    ADDS	R3, R3, #1
0x11CE	0xB29B    UXTH	R3, R3
0x11D0	0x602B    STR	R3, [R5, #0]
; tmpreg end address is: 8 (R2)
0x11D2	0xB291    UXTH	R1, R2
;__Lib_I2C_12.c, 683 :: 		
L_I2Cx_Init_Advanced117:
;__Lib_I2C_12.c, 685 :: 		
; tmpreg start address is: 4 (R1)
0x11D4	0xF200031C  ADDW	R3, R0, #28
0x11D8	0x6019    STR	R1, [R3, #0]
; tmpreg end address is: 4 (R1)
;__Lib_I2C_12.c, 687 :: 		
0x11DA	0x2300    MOVS	R3, #0
0x11DC	0x6003    STR	R3, [R0, #0]
;__Lib_I2C_12.c, 688 :: 		
0x11DE	0x2401    MOVS	R4, #1
0x11E0	0x6803    LDR	R3, [R0, #0]
0x11E2	0xF3640300  BFI	R3, R4, #0, #1
0x11E6	0x6003    STR	R3, [R0, #0]
; I2C_BASE end address is: 0 (R0)
;__Lib_I2C_12.c, 689 :: 		
L_end_I2Cx_Init_Advanced:
0x11E8	0xF8DDE000  LDR	LR, [SP, #0]
0x11EC	0xB008    ADD	SP, SP, #32
0x11EE	0x4770    BX	LR
0x11F0	0x54004000  	I2C1_CR1+0
0x11F4	0x03D44242  	RCC_APB1ENR+0
0x11F8	0x0CA90000  	_I2C1_Start+0
0x11FC	0x03842000  	_I2C_Start_Ptr+0
0x1200	0x0D750000  	_I2C1_Read+0
0x1204	0x03882000  	_I2C_Read_Ptr+0
0x1208	0x0CF10000  	_I2C1_Write+0
0x120C	0x038C2000  	_I2C_Write_Ptr+0
0x1210	0x58004000  	I2C2_CR1+0
0x1214	0x03D84242  	RCC_APB1ENR+0
0x1218	0x0CD90000  	_I2C2_Start+0
0x121C	0x0E410000  	_I2C2_Read+0
0x1220	0x0C410000  	_I2C2_Write+0
0x1224	0x4240000F  	#1000000
0x1228	0x86A00001  	#100000
; end of _I2Cx_Init_Advanced
_RCC_GetClocksFrequency:
;__Lib_System_105_107.c, 452 :: 		
; RCC_Clocks start address is: 0 (R0)
0x09F8	0xB082    SUB	SP, SP, #8
0x09FA	0xF8CDE000  STR	LR, [SP, #0]
0x09FE	0x4603    MOV	R3, R0
; RCC_Clocks end address is: 0 (R0)
; RCC_Clocks start address is: 12 (R3)
;__Lib_System_105_107.c, 455 :: 		
0x0A00	0x4619    MOV	R1, R3
0x0A02	0x9101    STR	R1, [SP, #4]
0x0A04	0xF7FFFBBE  BL	_Get_Fosc_kHz+0
0x0A08	0xF24031E8  MOVW	R1, #1000
0x0A0C	0xFB00F201  MUL	R2, R0, R1
0x0A10	0x9901    LDR	R1, [SP, #4]
0x0A12	0x600A    STR	R2, [R1, #0]
;__Lib_System_105_107.c, 458 :: 		
0x0A14	0x491F    LDR	R1, [PC, #124]
0x0A16	0x7809    LDRB	R1, [R1, #0]
0x0A18	0xF3C11103  UBFX	R1, R1, #4, #4
; tmp start address is: 0 (R0)
0x0A1C	0xB2C8    UXTB	R0, R1
;__Lib_System_105_107.c, 459 :: 		
0x0A1E	0x491E    LDR	R1, [PC, #120]
0x0A20	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x0A22	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0A24	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 461 :: 		
0x0A26	0x1D1A    ADDS	R2, R3, #4
0x0A28	0x6819    LDR	R1, [R3, #0]
0x0A2A	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x0A2C	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 463 :: 		
0x0A2E	0x4919    LDR	R1, [PC, #100]
0x0A30	0x8809    LDRH	R1, [R1, #0]
0x0A32	0xF3C12102  UBFX	R1, R1, #8, #3
; tmp start address is: 0 (R0)
0x0A36	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 464 :: 		
0x0A38	0x4917    LDR	R1, [PC, #92]
0x0A3A	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x0A3C	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0A3E	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 466 :: 		
0x0A40	0xF2030208  ADDW	R2, R3, #8
0x0A44	0x1D19    ADDS	R1, R3, #4
0x0A46	0x6809    LDR	R1, [R1, #0]
0x0A48	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x0A4A	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 468 :: 		
0x0A4C	0x4911    LDR	R1, [PC, #68]
0x0A4E	0x8809    LDRH	R1, [R1, #0]
0x0A50	0xF3C121C2  UBFX	R1, R1, #11, #3
; tmp start address is: 0 (R0)
0x0A54	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 469 :: 		
0x0A56	0x4910    LDR	R1, [PC, #64]
0x0A58	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x0A5A	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0A5C	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 471 :: 		
0x0A5E	0xF203020C  ADDW	R2, R3, #12
0x0A62	0x1D19    ADDS	R1, R3, #4
0x0A64	0x6809    LDR	R1, [R1, #0]
0x0A66	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x0A68	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 473 :: 		
0x0A6A	0x490A    LDR	R1, [PC, #40]
0x0A6C	0x8809    LDRH	R1, [R1, #0]
0x0A6E	0xF3C13181  UBFX	R1, R1, #14, #2
; tmp start address is: 0 (R0)
0x0A72	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 474 :: 		
0x0A74	0x4909    LDR	R1, [PC, #36]
0x0A76	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x0A78	0x7809    LDRB	R1, [R1, #0]
; presc start address is: 0 (R0)
0x0A7A	0xB2C8    UXTB	R0, R1
;__Lib_System_105_107.c, 476 :: 		
0x0A7C	0xF2030210  ADDW	R2, R3, #16
0x0A80	0xF203010C  ADDW	R1, R3, #12
; RCC_Clocks end address is: 12 (R3)
0x0A84	0x6809    LDR	R1, [R1, #0]
0x0A86	0xFBB1F1F0  UDIV	R1, R1, R0
; presc end address is: 0 (R0)
0x0A8A	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 477 :: 		
L_end_RCC_GetClocksFrequency:
0x0A8C	0xF8DDE000  LDR	LR, [SP, #0]
0x0A90	0xB002    ADD	SP, SP, #8
0x0A92	0x4770    BX	LR
0x0A94	0x10044002  	RCC_CFGRbits+0
0x0A98	0x41CD0000  	__Lib_System_105_107_APBAHBPrescTable+0
0x0A9C	0x14C40000  	__Lib_System_105_107_ADCPrescTable+0
; end of _RCC_GetClocksFrequency
_Get_Fosc_kHz:
;__Lib_Delays.c, 9 :: 		unsigned long Get_Fosc_kHz(){
;__Lib_Delays.c, 10 :: 		return __System_CLOCK_IN_KHZ;
0x0184	0x4801    LDR	R0, [PC, #4]
0x0186	0x6800    LDR	R0, [R0, #0]
;__Lib_Delays.c, 11 :: 		}
L_end_Get_Fosc_kHz:
0x0188	0x4770    BX	LR
0x018A	0xBF00    NOP
0x018C	0x03742000  	___System_CLOCK_IN_KHZ+0
; end of _Get_Fosc_kHz
_GPIO_Alternate_Function_Enable:
;__Lib_GPIO_32F10x.c, 303 :: 		
; module start address is: 0 (R0)
0x048C	0xB081    SUB	SP, SP, #4
0x048E	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 0 (R0)
; module start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 304 :: 		
;__Lib_GPIO_32F10x.c, 305 :: 		
;__Lib_GPIO_32F10x.c, 307 :: 		
0x0492	0x2201    MOVS	R2, #1
0x0494	0xB252    SXTB	R2, R2
0x0496	0x493E    LDR	R1, [PC, #248]
0x0498	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 309 :: 		
0x049A	0xF2000168  ADDW	R1, R0, #104
0x049E	0x680B    LDR	R3, [R1, #0]
0x04A0	0xF06F6100  MVN	R1, #134217728
0x04A4	0xEA030201  AND	R2, R3, R1, LSL #0
; gpio_remap start address is: 16 (R4)
0x04A8	0x4614    MOV	R4, R2
;__Lib_GPIO_32F10x.c, 310 :: 		
0x04AA	0xF0036100  AND	R1, R3, #134217728
0x04AE	0x0EC9    LSRS	R1, R1, #27
; newstate start address is: 12 (R3)
0x04B0	0x460B    MOV	R3, R1
;__Lib_GPIO_32F10x.c, 312 :: 		
0x04B2	0xF0024100  AND	R1, R2, #-2147483648
0x04B6	0xF1B14F00  CMP	R1, #-2147483648
0x04BA	0xD102    BNE	L_GPIO_Alternate_Function_Enable66
;__Lib_GPIO_32F10x.c, 314 :: 		
0x04BC	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x04BE	0x680A    LDR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 315 :: 		
; tmpreg end address is: 8 (R2)
0x04C0	0xE001    B	L_GPIO_Alternate_Function_Enable67
L_GPIO_Alternate_Function_Enable66:
;__Lib_GPIO_32F10x.c, 318 :: 		
0x04C2	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x04C4	0x680A    LDR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 319 :: 		
L_GPIO_Alternate_Function_Enable67:
;__Lib_GPIO_32F10x.c, 321 :: 		
; tmpreg start address is: 8 (R2)
0x04C6	0xF4042170  AND	R1, R4, #983040
0x04CA	0x0C09    LSRS	R1, R1, #16
; tmpmask start address is: 24 (R6)
0x04CC	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 322 :: 		
0x04CE	0xF64F71FF  MOVW	R1, #65535
0x04D2	0xEA040101  AND	R1, R4, R1, LSL #0
; tmp start address is: 20 (R5)
0x04D6	0x460D    MOV	R5, R1
;__Lib_GPIO_32F10x.c, 324 :: 		
0x04D8	0xF4041140  AND	R1, R4, #3145728
0x04DC	0xF5B11F40  CMP	R1, #3145728
0x04E0	0xD10D    BNE	L_GPIO_Alternate_Function_Enable68
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 326 :: 		
0x04E2	0xF06F6170  MVN	R1, #251658240
0x04E6	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
; tmpreg start address is: 24 (R6)
0x04EA	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 327 :: 		
0x04EC	0x492A    LDR	R1, [PC, #168]
0x04EE	0x680A    LDR	R2, [R1, #0]
0x04F0	0xF06F6170  MVN	R1, #251658240
0x04F4	0x400A    ANDS	R2, R1
0x04F6	0x4928    LDR	R1, [PC, #160]
0x04F8	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 328 :: 		
0x04FA	0x4632    MOV	R2, R6
; tmpreg end address is: 24 (R6)
0x04FC	0xE016    B	L_GPIO_Alternate_Function_Enable69
L_GPIO_Alternate_Function_Enable68:
;__Lib_GPIO_32F10x.c, 329 :: 		
; tmpreg start address is: 8 (R2)
; tmpmask start address is: 24 (R6)
0x04FE	0xF4041180  AND	R1, R4, #1048576
0x0502	0xF5B11F80  CMP	R1, #1048576
0x0506	0xD109    BNE	L_GPIO_Alternate_Function_Enable70
;__Lib_GPIO_32F10x.c, 331 :: 		
0x0508	0xF04F0103  MOV	R1, #3
0x050C	0x40B1    LSLS	R1, R6
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 332 :: 		
0x050E	0x43C9    MVN	R1, R1
0x0510	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 333 :: 		
0x0514	0xF0416170  ORR	R1, R1, #251658240
; tmpreg start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 334 :: 		
0x0518	0x460A    MOV	R2, R1
; tmpreg end address is: 4 (R1)
0x051A	0xE007    B	L_GPIO_Alternate_Function_Enable71
L_GPIO_Alternate_Function_Enable70:
;__Lib_GPIO_32F10x.c, 337 :: 		
; tmpreg start address is: 8 (R2)
0x051C	0x0D61    LSRS	R1, R4, #21
0x051E	0x0109    LSLS	R1, R1, #4
0x0520	0xFA05F101  LSL	R1, R5, R1
0x0524	0x43C9    MVN	R1, R1
0x0526	0x400A    ANDS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 338 :: 		
0x0528	0xF0426270  ORR	R2, R2, #251658240
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 339 :: 		
L_GPIO_Alternate_Function_Enable71:
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
L_GPIO_Alternate_Function_Enable69:
;__Lib_GPIO_32F10x.c, 341 :: 		
; tmpreg start address is: 8 (R2)
0x052C	0xB12B    CBZ	R3, L__GPIO_Alternate_Function_Enable106
; newstate end address is: 12 (R3)
;__Lib_GPIO_32F10x.c, 343 :: 		
0x052E	0x0D61    LSRS	R1, R4, #21
0x0530	0x0109    LSLS	R1, R1, #4
0x0532	0xFA05F101  LSL	R1, R5, R1
; tmp end address is: 20 (R5)
0x0536	0x430A    ORRS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 344 :: 		
0x0538	0xE7FF    B	L_GPIO_Alternate_Function_Enable72
L__GPIO_Alternate_Function_Enable106:
;__Lib_GPIO_32F10x.c, 341 :: 		
;__Lib_GPIO_32F10x.c, 344 :: 		
L_GPIO_Alternate_Function_Enable72:
;__Lib_GPIO_32F10x.c, 346 :: 		
; tmpreg start address is: 8 (R2)
0x053A	0xF0044100  AND	R1, R4, #-2147483648
; gpio_remap end address is: 16 (R4)
0x053E	0xF1B14F00  CMP	R1, #-2147483648
0x0542	0xD102    BNE	L_GPIO_Alternate_Function_Enable73
;__Lib_GPIO_32F10x.c, 348 :: 		
0x0544	0x4913    LDR	R1, [PC, #76]
0x0546	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 349 :: 		
0x0548	0xE001    B	L_GPIO_Alternate_Function_Enable74
L_GPIO_Alternate_Function_Enable73:
;__Lib_GPIO_32F10x.c, 352 :: 		
; tmpreg start address is: 8 (R2)
0x054A	0x4913    LDR	R1, [PC, #76]
0x054C	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 353 :: 		
L_GPIO_Alternate_Function_Enable74:
;__Lib_GPIO_32F10x.c, 356 :: 		
; i start address is: 40 (R10)
0x054E	0xF2400A00  MOVW	R10, #0
; module end address is: 0 (R0)
; i end address is: 40 (R10)
0x0552	0x4681    MOV	R9, R0
;__Lib_GPIO_32F10x.c, 357 :: 		
L_GPIO_Alternate_Function_Enable75:
; i start address is: 40 (R10)
; module start address is: 36 (R9)
0x0554	0xEA4F018A  LSL	R1, R10, #2
0x0558	0xEB090101  ADD	R1, R9, R1, LSL #0
0x055C	0x6809    LDR	R1, [R1, #0]
0x055E	0xF1B13FFF  CMP	R1, #-1
0x0562	0xD010    BEQ	L_GPIO_Alternate_Function_Enable76
;__Lib_GPIO_32F10x.c, 358 :: 		
0x0564	0xF1090134  ADD	R1, R9, #52
0x0568	0xEA4F038A  LSL	R3, R10, #2
0x056C	0x18C9    ADDS	R1, R1, R3
0x056E	0x6809    LDR	R1, [R1, #0]
0x0570	0x460A    MOV	R2, R1
0x0572	0xEB090103  ADD	R1, R9, R3, LSL #0
0x0576	0x6809    LDR	R1, [R1, #0]
0x0578	0x4608    MOV	R0, R1
0x057A	0x4611    MOV	R1, R2
0x057C	0xF7FFFE08  BL	__Lib_GPIO_32F10x_GPIO_Configure_Pin+0
;__Lib_GPIO_32F10x.c, 359 :: 		
0x0580	0xF10A0A01  ADD	R10, R10, #1
;__Lib_GPIO_32F10x.c, 360 :: 		
; module end address is: 36 (R9)
; i end address is: 40 (R10)
0x0584	0xE7E6    B	L_GPIO_Alternate_Function_Enable75
L_GPIO_Alternate_Function_Enable76:
;__Lib_GPIO_32F10x.c, 363 :: 		
L_end_GPIO_Alternate_Function_Enable:
0x0586	0xF8DDE000  LDR	LR, [SP, #0]
0x058A	0xB001    ADD	SP, SP, #4
0x058C	0x4770    BX	LR
0x058E	0xBF00    NOP
0x0590	0x03004242  	RCC_APB2ENRbits+0
0x0594	0x001C4001  	AFIO_MAPR2+0
0x0598	0x00044001  	AFIO_MAPR+0
; end of _GPIO_Alternate_Function_Enable
__Lib_GPIO_32F10x_GPIO_Configure_Pin:
;__Lib_GPIO_32F10x.c, 282 :: 		
; config start address is: 4 (R1)
; af_pin start address is: 0 (R0)
0x0190	0xB083    SUB	SP, SP, #12
0x0192	0xF8CDE000  STR	LR, [SP, #0]
; config end address is: 4 (R1)
; af_pin end address is: 0 (R0)
; af_pin start address is: 0 (R0)
; config start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 286 :: 		
0x0196	0xF00003FF  AND	R3, R0, #255
; af_pin end address is: 0 (R0)
0x019A	0x091A    LSRS	R2, R3, #4
; port start address is: 0 (R0)
0x019C	0x4610    MOV	R0, R2
;__Lib_GPIO_32F10x.c, 287 :: 		
0x019E	0xF003020F  AND	R2, R3, #15
; pin start address is: 12 (R3)
0x01A2	0x4613    MOV	R3, R2
;__Lib_GPIO_32F10x.c, 290 :: 		
0x01A4	0xE014    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin57
; port end address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 291 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin59:
0x01A6	0x4A19    LDR	R2, [PC, #100]
0x01A8	0x9202    STR	R2, [SP, #8]
0x01AA	0xE01F    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 292 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin60:
0x01AC	0x4A18    LDR	R2, [PC, #96]
0x01AE	0x9202    STR	R2, [SP, #8]
0x01B0	0xE01C    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 293 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin61:
0x01B2	0x4A18    LDR	R2, [PC, #96]
0x01B4	0x9202    STR	R2, [SP, #8]
0x01B6	0xE019    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 294 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin62:
0x01B8	0x4A17    LDR	R2, [PC, #92]
0x01BA	0x9202    STR	R2, [SP, #8]
0x01BC	0xE016    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 295 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin63:
0x01BE	0x4A17    LDR	R2, [PC, #92]
0x01C0	0x9202    STR	R2, [SP, #8]
0x01C2	0xE013    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 296 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin64:
0x01C4	0x4A16    LDR	R2, [PC, #88]
0x01C6	0x9202    STR	R2, [SP, #8]
0x01C8	0xE010    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 297 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin65:
0x01CA	0x4A16    LDR	R2, [PC, #88]
0x01CC	0x9202    STR	R2, [SP, #8]
0x01CE	0xE00D    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 298 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin57:
; port start address is: 0 (R0)
0x01D0	0x2800    CMP	R0, #0
0x01D2	0xD0E8    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin59
0x01D4	0x2801    CMP	R0, #1
0x01D6	0xD0E9    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin60
0x01D8	0x2802    CMP	R0, #2
0x01DA	0xD0EA    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin61
0x01DC	0x2803    CMP	R0, #3
0x01DE	0xD0EB    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin62
0x01E0	0x2804    CMP	R0, #4
0x01E2	0xD0EC    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin63
0x01E4	0x2805    CMP	R0, #5
0x01E6	0xD0ED    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin64
0x01E8	0x2806    CMP	R0, #6
0x01EA	0xD0EE    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin65
; port end address is: 0 (R0)
L___Lib_GPIO_32F10x_GPIO_Configure_Pin58:
;__Lib_GPIO_32F10x.c, 300 :: 		
0x01EC	0x2201    MOVS	R2, #1
0x01EE	0xB212    SXTH	R2, R2
0x01F0	0x409A    LSLS	R2, R3
; pin end address is: 12 (R3)
0x01F2	0xF8AD2004  STRH	R2, [SP, #4]
; config end address is: 4 (R1)
0x01F6	0x9802    LDR	R0, [SP, #8]
0x01F8	0x460A    MOV	R2, R1
0x01FA	0xF8BD1004  LDRH	R1, [SP, #4]
0x01FE	0xF000FE3D  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 301 :: 		
L_end_GPIO_Configure_Pin:
0x0202	0xF8DDE000  LDR	LR, [SP, #0]
0x0206	0xB003    ADD	SP, SP, #12
0x0208	0x4770    BX	LR
0x020A	0xBF00    NOP
0x020C	0x08004001  	#1073809408
0x0210	0x0C004001  	#1073810432
0x0214	0x10004001  	#1073811456
0x0218	0x14004001  	#1073812480
0x021C	0x18004001  	#1073813504
0x0220	0x1C004001  	#1073814528
0x0224	0x20004001  	#1073815552
; end of __Lib_GPIO_32F10x_GPIO_Configure_Pin
easymx_v7_STM32F107VC__i2cInit_2:
;__em_f107vc_i2c.c, 35 :: 		static T_mikrobus_ret _i2cInit_2(const uint32_t* cfg)
; cfg start address is: 0 (R0)
0x23C0	0xB081    SUB	SP, SP, #4
0x23C2	0xF8CDE000  STR	LR, [SP, #0]
; cfg end address is: 0 (R0)
; cfg start address is: 0 (R0)
;__em_f107vc_i2c.c, 37 :: 		I2C1_Init_Advanced( cfg[0], &_GPIO_MODULE_I2C1_PB67);
0x23C6	0x6801    LDR	R1, [R0, #0]
; cfg end address is: 0 (R0)
0x23C8	0x4608    MOV	R0, R1
0x23CA	0x4904    LDR	R1, [PC, #16]
0x23CC	0xF7FFFB22  BL	_I2C1_Init_Advanced+0
;__em_f107vc_i2c.c, 38 :: 		return _MIKROBUS_OK;
0x23D0	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_i2c.c, 39 :: 		}
L_end__i2cInit_2:
0x23D2	0xF8DDE000  LDR	LR, [SP, #0]
0x23D6	0xB001    ADD	SP, SP, #4
0x23D8	0x4770    BX	LR
0x23DA	0xBF00    NOP
0x23DC	0x40A80000  	__GPIO_MODULE_I2C1_PB67+0
; end of easymx_v7_STM32F107VC__i2cInit_2
_mikrobus_logInit:
;easymx_v7_STM32F107VC.c, 283 :: 		T_mikrobus_ret mikrobus_logInit(T_log_bus port, const uint32_t baud)
; baud start address is: 4 (R1)
; port start address is: 0 (R0)
0x3468	0xB081    SUB	SP, SP, #4
0x346A	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; baud start address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 285 :: 		switch( port )
0x346E	0xE011    B	L_mikrobus_logInit88
; port end address is: 0 (R0)
;easymx_v7_STM32F107VC.c, 288 :: 		case _MIKROBUS1 : return _log_init1( baud );
L_mikrobus_logInit90:
0x3470	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x3472	0xF7FEFF89  BL	easymx_v7_STM32F107VC__log_init1+0
0x3476	0xE016    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 291 :: 		case _MIKROBUS2: return _log_init2( baud );
L_mikrobus_logInit91:
; baud start address is: 4 (R1)
0x3478	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x347A	0xF7FFF89D  BL	easymx_v7_STM32F107VC__log_init2+0
0x347E	0xE012    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 309 :: 		case _LOG_USBUART_A : return _log_initUartA( baud );
L_mikrobus_logInit92:
; baud start address is: 4 (R1)
0x3480	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x3482	0xF7FFF925  BL	easymx_v7_STM32F107VC__log_initUartA+0
0x3486	0xE00E    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 312 :: 		case _LOG_USBUART_B : return _log_initUartB( baud );
L_mikrobus_logInit93:
; baud start address is: 4 (R1)
0x3488	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x348A	0xF7FFF93D  BL	easymx_v7_STM32F107VC__log_initUartB+0
0x348E	0xE00A    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 314 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_logInit94:
0x3490	0x2001    MOVS	R0, #1
0x3492	0xE008    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 315 :: 		}
L_mikrobus_logInit88:
; baud start address is: 4 (R1)
; port start address is: 0 (R0)
0x3494	0x2800    CMP	R0, #0
0x3496	0xD0EB    BEQ	L_mikrobus_logInit90
0x3498	0x2801    CMP	R0, #1
0x349A	0xD0ED    BEQ	L_mikrobus_logInit91
0x349C	0x2820    CMP	R0, #32
0x349E	0xD0EF    BEQ	L_mikrobus_logInit92
0x34A0	0x2830    CMP	R0, #48
0x34A2	0xD0F1    BEQ	L_mikrobus_logInit93
; port end address is: 0 (R0)
; baud end address is: 4 (R1)
0x34A4	0xE7F4    B	L_mikrobus_logInit94
;easymx_v7_STM32F107VC.c, 317 :: 		}
L_end_mikrobus_logInit:
0x34A6	0xF8DDE000  LDR	LR, [SP, #0]
0x34AA	0xB001    ADD	SP, SP, #4
0x34AC	0x4770    BX	LR
; end of _mikrobus_logInit
easymx_v7_STM32F107VC__log_init1:
;__em_f107vc_log.c, 23 :: 		static T_mikrobus_ret _log_init1(uint32_t baud)
; baud start address is: 0 (R0)
0x2388	0xB081    SUB	SP, SP, #4
0x238A	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 25 :: 		UART3_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART3_PD89);
0x238E	0x4909    LDR	R1, [PC, #36]
0x2390	0xB402    PUSH	(R1)
0x2392	0xF2400300  MOVW	R3, #0
0x2396	0xF2400200  MOVW	R2, #0
0x239A	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x239E	0xF7FFF8A5  BL	_UART3_Init_Advanced+0
0x23A2	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 26 :: 		logger = UART3_Write;
0x23A4	0x4A04    LDR	R2, [PC, #16]
0x23A6	0x4905    LDR	R1, [PC, #20]
0x23A8	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 27 :: 		return 0;
0x23AA	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 28 :: 		}
L_end__log_init1:
0x23AC	0xF8DDE000  LDR	LR, [SP, #0]
0x23B0	0xB001    ADD	SP, SP, #4
0x23B2	0x4770    BX	LR
0x23B4	0x3F640000  	__GPIO_MODULE_USART3_PD89+0
0x23B8	0x153D0000  	_UART3_Write+0
0x23BC	0x03542000  	_logger+0
; end of easymx_v7_STM32F107VC__log_init1
_UART3_Init_Advanced:
;__Lib_UART_123_45.c, 384 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x14EC	0xB081    SUB	SP, SP, #4
0x14EE	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x14F2	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 386 :: 		
0x14F4	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x14F6	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x14F8	0xB408    PUSH	(R3)
0x14FA	0xB293    UXTH	R3, R2
0x14FC	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x14FE	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x1500	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x1502	0xF7FFFE93  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x1506	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 387 :: 		
L_end_UART3_Init_Advanced:
0x1508	0xF8DDE000  LDR	LR, [SP, #0]
0x150C	0xB001    ADD	SP, SP, #4
0x150E	0x4770    BX	LR
0x1510	0x48004000  	USART3_SR+0
; end of _UART3_Init_Advanced
__Lib_UART_123_45_UARTx_Init_Advanced:
;__Lib_UART_123_45.c, 294 :: 		
; parity start address is: 12 (R3)
; baud_rate start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x122C	0xB089    SUB	SP, SP, #36
0x122E	0xF8CDE000  STR	LR, [SP, #0]
0x1232	0x4683    MOV	R11, R0
0x1234	0xB298    UXTH	R0, R3
0x1236	0x468C    MOV	R12, R1
; parity end address is: 12 (R3)
; baud_rate end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 44 (R11)
; baud_rate start address is: 48 (R12)
; parity start address is: 0 (R0)
; stop_bits start address is: 4 (R1)
0x1238	0xF8BD1024  LDRH	R1, [SP, #36]
; module start address is: 24 (R6)
0x123C	0x9E0A    LDR	R6, [SP, #40]
;__Lib_UART_123_45.c, 298 :: 		
0x123E	0xAC04    ADD	R4, SP, #16
0x1240	0xF8AD1004  STRH	R1, [SP, #4]
0x1244	0xF8AD0008  STRH	R0, [SP, #8]
0x1248	0x4620    MOV	R0, R4
0x124A	0xF7FFFBD5  BL	_RCC_GetClocksFrequency+0
0x124E	0xF8BD0008  LDRH	R0, [SP, #8]
0x1252	0xF8BD1004  LDRH	R1, [SP, #4]
;__Lib_UART_123_45.c, 301 :: 		
0x1256	0x4C64    LDR	R4, [PC, #400]
0x1258	0x45A3    CMP	R11, R4
0x125A	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced15
;__Lib_UART_123_45.c, 302 :: 		
0x125C	0x2501    MOVS	R5, #1
0x125E	0xB26D    SXTB	R5, R5
0x1260	0x4C62    LDR	R4, [PC, #392]
0x1262	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 303 :: 		
0x1264	0x4D62    LDR	R5, [PC, #392]
0x1266	0x4C63    LDR	R4, [PC, #396]
0x1268	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 304 :: 		
0x126A	0x4D63    LDR	R5, [PC, #396]
0x126C	0x4C63    LDR	R4, [PC, #396]
0x126E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 305 :: 		
0x1270	0x4D63    LDR	R5, [PC, #396]
0x1272	0x4C64    LDR	R4, [PC, #400]
0x1274	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 306 :: 		
0x1276	0x4D64    LDR	R5, [PC, #400]
0x1278	0x4C64    LDR	R4, [PC, #400]
0x127A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 307 :: 		
0x127C	0x9C07    LDR	R4, [SP, #28]
0x127E	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 308 :: 		
0x1280	0xE056    B	L___Lib_UART_123_45_UARTx_Init_Advanced16
L___Lib_UART_123_45_UARTx_Init_Advanced15:
;__Lib_UART_123_45.c, 309 :: 		
0x1282	0x4C63    LDR	R4, [PC, #396]
0x1284	0x45A3    CMP	R11, R4
0x1286	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced17
;__Lib_UART_123_45.c, 310 :: 		
0x1288	0x2501    MOVS	R5, #1
0x128A	0xB26D    SXTB	R5, R5
0x128C	0x4C61    LDR	R4, [PC, #388]
0x128E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 311 :: 		
0x1290	0x4D61    LDR	R5, [PC, #388]
0x1292	0x4C58    LDR	R4, [PC, #352]
0x1294	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 312 :: 		
0x1296	0x4D61    LDR	R5, [PC, #388]
0x1298	0x4C58    LDR	R4, [PC, #352]
0x129A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 313 :: 		
0x129C	0x4D60    LDR	R5, [PC, #384]
0x129E	0x4C59    LDR	R4, [PC, #356]
0x12A0	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 314 :: 		
0x12A2	0x4D60    LDR	R5, [PC, #384]
0x12A4	0x4C59    LDR	R4, [PC, #356]
0x12A6	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 315 :: 		
0x12A8	0x9C06    LDR	R4, [SP, #24]
0x12AA	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 316 :: 		
0x12AC	0xE040    B	L___Lib_UART_123_45_UARTx_Init_Advanced18
L___Lib_UART_123_45_UARTx_Init_Advanced17:
;__Lib_UART_123_45.c, 317 :: 		
0x12AE	0x4C5E    LDR	R4, [PC, #376]
0x12B0	0x45A3    CMP	R11, R4
0x12B2	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced19
;__Lib_UART_123_45.c, 318 :: 		
0x12B4	0x2501    MOVS	R5, #1
0x12B6	0xB26D    SXTB	R5, R5
0x12B8	0x4C5C    LDR	R4, [PC, #368]
0x12BA	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 319 :: 		
0x12BC	0x4D5C    LDR	R5, [PC, #368]
0x12BE	0x4C4D    LDR	R4, [PC, #308]
0x12C0	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 320 :: 		
0x12C2	0x4D5C    LDR	R5, [PC, #368]
0x12C4	0x4C4D    LDR	R4, [PC, #308]
0x12C6	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 321 :: 		
0x12C8	0x4D5B    LDR	R5, [PC, #364]
0x12CA	0x4C4E    LDR	R4, [PC, #312]
0x12CC	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 322 :: 		
0x12CE	0x4D5B    LDR	R5, [PC, #364]
0x12D0	0x4C4E    LDR	R4, [PC, #312]
0x12D2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 323 :: 		
0x12D4	0x9C06    LDR	R4, [SP, #24]
0x12D6	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 324 :: 		
0x12D8	0xE02A    B	L___Lib_UART_123_45_UARTx_Init_Advanced20
L___Lib_UART_123_45_UARTx_Init_Advanced19:
;__Lib_UART_123_45.c, 325 :: 		
0x12DA	0x4C59    LDR	R4, [PC, #356]
0x12DC	0x45A3    CMP	R11, R4
0x12DE	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced21
;__Lib_UART_123_45.c, 326 :: 		
0x12E0	0x2501    MOVS	R5, #1
0x12E2	0xB26D    SXTB	R5, R5
0x12E4	0x4C57    LDR	R4, [PC, #348]
0x12E6	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 327 :: 		
0x12E8	0x4D57    LDR	R5, [PC, #348]
0x12EA	0x4C42    LDR	R4, [PC, #264]
0x12EC	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 328 :: 		
0x12EE	0x4D57    LDR	R5, [PC, #348]
0x12F0	0x4C42    LDR	R4, [PC, #264]
0x12F2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 329 :: 		
0x12F4	0x4D56    LDR	R5, [PC, #344]
0x12F6	0x4C43    LDR	R4, [PC, #268]
0x12F8	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 330 :: 		
0x12FA	0x4D56    LDR	R5, [PC, #344]
0x12FC	0x4C43    LDR	R4, [PC, #268]
0x12FE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 331 :: 		
0x1300	0x9C06    LDR	R4, [SP, #24]
0x1302	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 332 :: 		
0x1304	0xE014    B	L___Lib_UART_123_45_UARTx_Init_Advanced22
L___Lib_UART_123_45_UARTx_Init_Advanced21:
;__Lib_UART_123_45.c, 333 :: 		
0x1306	0x4C54    LDR	R4, [PC, #336]
0x1308	0x45A3    CMP	R11, R4
0x130A	0xD111    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced23
;__Lib_UART_123_45.c, 334 :: 		
0x130C	0x2501    MOVS	R5, #1
0x130E	0xB26D    SXTB	R5, R5
0x1310	0x4C52    LDR	R4, [PC, #328]
0x1312	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 335 :: 		
0x1314	0x4D52    LDR	R5, [PC, #328]
0x1316	0x4C37    LDR	R4, [PC, #220]
0x1318	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 336 :: 		
0x131A	0x4D52    LDR	R5, [PC, #328]
0x131C	0x4C37    LDR	R4, [PC, #220]
0x131E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 337 :: 		
0x1320	0x4D51    LDR	R5, [PC, #324]
0x1322	0x4C38    LDR	R4, [PC, #224]
0x1324	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 338 :: 		
0x1326	0x4D51    LDR	R5, [PC, #324]
0x1328	0x4C38    LDR	R4, [PC, #224]
0x132A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 339 :: 		
0x132C	0x9C06    LDR	R4, [SP, #24]
0x132E	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 340 :: 		
L___Lib_UART_123_45_UARTx_Init_Advanced23:
L___Lib_UART_123_45_UARTx_Init_Advanced22:
L___Lib_UART_123_45_UARTx_Init_Advanced20:
L___Lib_UART_123_45_UARTx_Init_Advanced18:
L___Lib_UART_123_45_UARTx_Init_Advanced16:
;__Lib_UART_123_45.c, 342 :: 		
0x1330	0xF8AD1004  STRH	R1, [SP, #4]
; module end address is: 24 (R6)
0x1334	0xF8AD0008  STRH	R0, [SP, #8]
0x1338	0x4630    MOV	R0, R6
0x133A	0xF7FFF8A7  BL	_GPIO_Alternate_Function_Enable+0
0x133E	0xF8BD0008  LDRH	R0, [SP, #8]
0x1342	0xF8BD1004  LDRH	R1, [SP, #4]
;__Lib_UART_123_45.c, 344 :: 		
0x1346	0xF10B0510  ADD	R5, R11, #16
0x134A	0x2400    MOVS	R4, #0
0x134C	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 345 :: 		
0x134E	0xF10B0510  ADD	R5, R11, #16
0x1352	0x682C    LDR	R4, [R5, #0]
0x1354	0x430C    ORRS	R4, R1
; stop_bits end address is: 4 (R1)
0x1356	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 346 :: 		
0x1358	0xF10B050C  ADD	R5, R11, #12
0x135C	0x2400    MOVS	R4, #0
0x135E	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 348 :: 		
0x1360	0xB118    CBZ	R0, L___Lib_UART_123_45_UARTx_Init_Advanced38
;__Lib_UART_123_45.c, 349 :: 		
0x1362	0xF4406080  ORR	R0, R0, #1024
0x1366	0xB280    UXTH	R0, R0
; parity end address is: 0 (R0)
;__Lib_UART_123_45.c, 350 :: 		
0x1368	0xE7FF    B	L___Lib_UART_123_45_UARTx_Init_Advanced24
L___Lib_UART_123_45_UARTx_Init_Advanced38:
;__Lib_UART_123_45.c, 348 :: 		
;__Lib_UART_123_45.c, 350 :: 		
L___Lib_UART_123_45_UARTx_Init_Advanced24:
;__Lib_UART_123_45.c, 352 :: 		
; parity start address is: 0 (R0)
0x136A	0xF10B050C  ADD	R5, R11, #12
0x136E	0x682C    LDR	R4, [R5, #0]
0x1370	0x4304    ORRS	R4, R0
; parity end address is: 0 (R0)
0x1372	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 354 :: 		
0x1374	0xF10B060C  ADD	R6, R11, #12
0x1378	0x2501    MOVS	R5, #1
0x137A	0x6834    LDR	R4, [R6, #0]
0x137C	0xF365344D  BFI	R4, R5, #13, #1
0x1380	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 355 :: 		
0x1382	0xF10B060C  ADD	R6, R11, #12
0x1386	0x2501    MOVS	R5, #1
0x1388	0x6834    LDR	R4, [R6, #0]
0x138A	0xF36504C3  BFI	R4, R5, #3, #1
0x138E	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 356 :: 		
0x1390	0xF10B060C  ADD	R6, R11, #12
0x1394	0x2501    MOVS	R5, #1
0x1396	0x6834    LDR	R4, [R6, #0]
0x1398	0xF3650482  BFI	R4, R5, #2, #1
0x139C	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 357 :: 		
0x139E	0xF10B0514  ADD	R5, R11, #20
0x13A2	0x2400    MOVS	R4, #0
0x13A4	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 362 :: 		
0x13A6	0x9D03    LDR	R5, [SP, #12]
0x13A8	0x2419    MOVS	R4, #25
0x13AA	0x4365    MULS	R5, R4, R5
0x13AC	0xEA4F048C  LSL	R4, R12, #2
; baud_rate end address is: 48 (R12)
0x13B0	0xFBB5F7F4  UDIV	R7, R5, R4
;__Lib_UART_123_45.c, 363 :: 		
0x13B4	0x2464    MOVS	R4, #100
0x13B6	0xFBB7F4F4  UDIV	R4, R7, R4
0x13BA	0x0126    LSLS	R6, R4, #4
;__Lib_UART_123_45.c, 365 :: 		
0x13BC	0x0935    LSRS	R5, R6, #4
0x13BE	0x2464    MOVS	R4, #100
0x13C0	0x436C    MULS	R4, R5, R4
0x13C2	0x1B3C    SUB	R4, R7, R4
;__Lib_UART_123_45.c, 366 :: 		
0x13C4	0x0124    LSLS	R4, R4, #4
0x13C6	0xF2040532  ADDW	R5, R4, #50
0x13CA	0x2464    MOVS	R4, #100
0x13CC	0xFBB5F4F4  UDIV	R4, R5, R4
0x13D0	0xF004040F  AND	R4, R4, #15
0x13D4	0xEA460404  ORR	R4, R6, R4, LSL #0
;__Lib_UART_123_45.c, 368 :: 		
0x13D8	0xF10B0508  ADD	R5, R11, #8
; UART_Base end address is: 44 (R11)
0x13DC	0xB2A4    UXTH	R4, R4
0x13DE	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 369 :: 		
L_end_UARTx_Init_Advanced:
0x13E0	0xF8DDE000  LDR	LR, [SP, #0]
0x13E4	0xB009    ADD	SP, SP, #36
0x13E6	0x4770    BX	LR
0x13E8	0x38004001  	USART1_SR+0
0x13EC	0x03384242  	RCC_APB2ENR+0
0x13F0	0x15910000  	_UART1_Write+0
0x13F4	0x03902000  	_UART_Wr_Ptr+0
0x13F8	0x0CC10000  	_UART1_Read+0
0x13FC	0x034C2000  	_UART_Rd_Ptr+0
0x1400	0x0C110000  	_UART1_Data_Ready+0
0x1404	0x03482000  	_UART_Rdy_Ptr+0
0x1408	0x0C290000  	_UART1_Tx_Idle+0
0x140C	0x03942000  	_UART_Tx_Idle_Ptr+0
0x1410	0x44004000  	USART2_SR+0
0x1414	0x03C44242  	RCC_APB1ENR+0
0x1418	0x15750000  	_UART2_Write+0
0x141C	0x0D150000  	_UART2_Read+0
0x1420	0x0E110000  	_UART2_Data_Ready+0
0x1424	0x0DF90000  	_UART2_Tx_Idle+0
0x1428	0x48004000  	USART3_SR+0
0x142C	0x03C84242  	RCC_APB1ENR+0
0x1430	0x153D0000  	_UART3_Write+0
0x1434	0x0DE10000  	_UART3_Read+0
0x1438	0x0E650000  	_UART3_Data_Ready+0
0x143C	0x0E290000  	_UART3_Tx_Idle+0
0x1440	0x4C004000  	UART4_SR+0
0x1444	0x03CC4242  	RCC_APB1ENR+0
0x1448	0x15590000  	_UART4_Write+0
0x144C	0x0DC90000  	_UART4_Read+0
0x1450	0x0D5D0000  	_UART4_Data_Ready+0
0x1454	0x0D450000  	_UART4_Tx_Idle+0
0x1458	0x50004000  	UART5_SR+0
0x145C	0x03D04242  	RCC_APB1ENR+0
0x1460	0x15AD0000  	_UART5_Write+0
0x1464	0x0D2D0000  	_UART5_Read+0
0x1468	0x0DB10000  	_UART5_Data_Ready+0
0x146C	0x0D990000  	_UART5_Tx_Idle+0
; end of __Lib_UART_123_45_UARTx_Init_Advanced
easymx_v7_STM32F107VC__log_init2:
;__em_f107vc_log.c, 30 :: 		static T_mikrobus_ret _log_init2(uint32_t baud)
; baud start address is: 0 (R0)
0x25B8	0xB081    SUB	SP, SP, #4
0x25BA	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 32 :: 		UART2_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART2_PD56);
0x25BE	0x4909    LDR	R1, [PC, #36]
0x25C0	0xB402    PUSH	(R1)
0x25C2	0xF2400300  MOVW	R3, #0
0x25C6	0xF2400200  MOVW	R2, #0
0x25CA	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x25CE	0xF7FEFF65  BL	_UART2_Init_Advanced+0
0x25D2	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 33 :: 		logger = UART2_Write;
0x25D4	0x4A04    LDR	R2, [PC, #16]
0x25D6	0x4905    LDR	R1, [PC, #20]
0x25D8	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 34 :: 		return 0;
0x25DA	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 35 :: 		}
L_end__log_init2:
0x25DC	0xF8DDE000  LDR	LR, [SP, #0]
0x25E0	0xB001    ADD	SP, SP, #4
0x25E2	0x4770    BX	LR
0x25E4	0x403C0000  	__GPIO_MODULE_USART2_PD56+0
0x25E8	0x15750000  	_UART2_Write+0
0x25EC	0x03542000  	_logger+0
; end of easymx_v7_STM32F107VC__log_init2
_UART2_Init_Advanced:
;__Lib_UART_123_45.c, 378 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x149C	0xB081    SUB	SP, SP, #4
0x149E	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x14A2	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 380 :: 		
0x14A4	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x14A6	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x14A8	0xB408    PUSH	(R3)
0x14AA	0xB293    UXTH	R3, R2
0x14AC	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x14AE	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x14B0	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x14B2	0xF7FFFEBB  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x14B6	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 381 :: 		
L_end_UART2_Init_Advanced:
0x14B8	0xF8DDE000  LDR	LR, [SP, #0]
0x14BC	0xB001    ADD	SP, SP, #4
0x14BE	0x4770    BX	LR
0x14C0	0x44004000  	USART2_SR+0
; end of _UART2_Init_Advanced
easymx_v7_STM32F107VC__log_initUartA:
;__em_f107vc_log.c, 37 :: 		static T_mikrobus_ret _log_initUartA(uint32_t baud)
; baud start address is: 0 (R0)
0x26D0	0xB081    SUB	SP, SP, #4
0x26D2	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 39 :: 		UART1_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART1_PA9_10);
0x26D6	0x4909    LDR	R1, [PC, #36]
0x26D8	0xB402    PUSH	(R1)
0x26DA	0xF2400300  MOVW	R3, #0
0x26DE	0xF2400200  MOVW	R2, #0
0x26E2	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x26E6	0xF7FEFF15  BL	_UART1_Init_Advanced+0
0x26EA	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 40 :: 		logger = UART1_Write;
0x26EC	0x4A04    LDR	R2, [PC, #16]
0x26EE	0x4905    LDR	R1, [PC, #20]
0x26F0	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 41 :: 		return 0;
0x26F2	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 42 :: 		}
L_end__log_initUartA:
0x26F4	0xF8DDE000  LDR	LR, [SP, #0]
0x26F8	0xB001    ADD	SP, SP, #4
0x26FA	0x4770    BX	LR
0x26FC	0x3FD00000  	__GPIO_MODULE_USART1_PA9_10+0
0x2700	0x15910000  	_UART1_Write+0
0x2704	0x03542000  	_logger+0
; end of easymx_v7_STM32F107VC__log_initUartA
_UART1_Init_Advanced:
;__Lib_UART_123_45.c, 372 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x1514	0xB081    SUB	SP, SP, #4
0x1516	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x151A	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 374 :: 		
0x151C	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x151E	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x1520	0xB408    PUSH	(R3)
0x1522	0xB293    UXTH	R3, R2
0x1524	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x1526	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x1528	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x152A	0xF7FFFE7F  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x152E	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 375 :: 		
L_end_UART1_Init_Advanced:
0x1530	0xF8DDE000  LDR	LR, [SP, #0]
0x1534	0xB001    ADD	SP, SP, #4
0x1536	0x4770    BX	LR
0x1538	0x38004001  	USART1_SR+0
; end of _UART1_Init_Advanced
easymx_v7_STM32F107VC__log_initUartB:
;__em_f107vc_log.c, 44 :: 		static T_mikrobus_ret _log_initUartB(uint32_t baud)
; baud start address is: 0 (R0)
0x2708	0xB081    SUB	SP, SP, #4
0x270A	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 46 :: 		UART2_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART2_PD56);
0x270E	0x4909    LDR	R1, [PC, #36]
0x2710	0xB402    PUSH	(R1)
0x2712	0xF2400300  MOVW	R3, #0
0x2716	0xF2400200  MOVW	R2, #0
0x271A	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x271E	0xF7FEFEBD  BL	_UART2_Init_Advanced+0
0x2722	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 47 :: 		logger = UART2_Write;
0x2724	0x4A04    LDR	R2, [PC, #16]
0x2726	0x4905    LDR	R1, [PC, #20]
0x2728	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 48 :: 		return 0;
0x272A	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 49 :: 		}
L_end__log_initUartB:
0x272C	0xF8DDE000  LDR	LR, [SP, #0]
0x2730	0xB001    ADD	SP, SP, #4
0x2732	0x4770    BX	LR
0x2734	0x403C0000  	__GPIO_MODULE_USART2_PD56+0
0x2738	0x15750000  	_UART2_Write+0
0x273C	0x03542000  	_logger+0
; end of easymx_v7_STM32F107VC__log_initUartB
_mikrobus_logWrite:
;easymx_v7_STM32F107VC.c, 319 :: 		T_mikrobus_ret mikrobus_logWrite(uint8_t* data_, T_log_format format)
; format start address is: 4 (R1)
; data_ start address is: 0 (R0)
0x34B0	0xB083    SUB	SP, SP, #12
0x34B2	0xF8CDE000  STR	LR, [SP, #0]
0x34B6	0x4602    MOV	R2, R0
; format end address is: 4 (R1)
; data_ end address is: 0 (R0)
; data_ start address is: 8 (R2)
; format start address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 321 :: 		uint8_t *ptr = data_;
; ptr start address is: 0 (R0)
0x34B8	0x4610    MOV	R0, R2
; data_ end address is: 8 (R2)
;easymx_v7_STM32F107VC.c, 322 :: 		uint8_t row = 13;
0x34BA	0x220D    MOVS	R2, #13
0x34BC	0xF88D2008  STRB	R2, [SP, #8]
0x34C0	0x220A    MOVS	R2, #10
0x34C2	0xF88D2009  STRB	R2, [SP, #9]
;easymx_v7_STM32F107VC.c, 323 :: 		uint8_t line = 10;
;easymx_v7_STM32F107VC.c, 324 :: 		switch( format )
0x34C6	0xE01F    B	L_mikrobus_logWrite95
; format end address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 326 :: 		case _LOG_BYTE :
L_mikrobus_logWrite97:
;easymx_v7_STM32F107VC.c, 327 :: 		_log_write( ptr );
; ptr end address is: 0 (R0)
0x34C8	0xF7FFF8F2  BL	easymx_v7_STM32F107VC__log_write+0
;easymx_v7_STM32F107VC.c, 328 :: 		break;
0x34CC	0xE023    B	L_mikrobus_logWrite96
;easymx_v7_STM32F107VC.c, 329 :: 		case _LOG_TEXT :
L_mikrobus_logWrite98:
;easymx_v7_STM32F107VC.c, 330 :: 		while( *ptr )
; ptr start address is: 0 (R0)
L_mikrobus_logWrite99:
; ptr end address is: 0 (R0)
; ptr start address is: 0 (R0)
0x34CE	0x7802    LDRB	R2, [R0, #0]
0x34D0	0xB12A    CBZ	R2, L_mikrobus_logWrite100
;easymx_v7_STM32F107VC.c, 332 :: 		_log_write( ptr );
0x34D2	0x9001    STR	R0, [SP, #4]
0x34D4	0xF7FFF8EC  BL	easymx_v7_STM32F107VC__log_write+0
0x34D8	0x9801    LDR	R0, [SP, #4]
;easymx_v7_STM32F107VC.c, 333 :: 		ptr++;
0x34DA	0x1C40    ADDS	R0, R0, #1
;easymx_v7_STM32F107VC.c, 334 :: 		}
; ptr end address is: 0 (R0)
0x34DC	0xE7F7    B	L_mikrobus_logWrite99
L_mikrobus_logWrite100:
;easymx_v7_STM32F107VC.c, 335 :: 		break;
0x34DE	0xE01A    B	L_mikrobus_logWrite96
;easymx_v7_STM32F107VC.c, 336 :: 		case _LOG_LINE :
L_mikrobus_logWrite101:
;easymx_v7_STM32F107VC.c, 337 :: 		while( *ptr )
; ptr start address is: 0 (R0)
L_mikrobus_logWrite102:
; ptr end address is: 0 (R0)
; ptr start address is: 0 (R0)
0x34E0	0x7802    LDRB	R2, [R0, #0]
0x34E2	0xB12A    CBZ	R2, L_mikrobus_logWrite103
;easymx_v7_STM32F107VC.c, 339 :: 		_log_write( ptr );
0x34E4	0x9001    STR	R0, [SP, #4]
0x34E6	0xF7FFF8E3  BL	easymx_v7_STM32F107VC__log_write+0
0x34EA	0x9801    LDR	R0, [SP, #4]
;easymx_v7_STM32F107VC.c, 340 :: 		ptr++;
0x34EC	0x1C40    ADDS	R0, R0, #1
;easymx_v7_STM32F107VC.c, 341 :: 		}
; ptr end address is: 0 (R0)
0x34EE	0xE7F7    B	L_mikrobus_logWrite102
L_mikrobus_logWrite103:
;easymx_v7_STM32F107VC.c, 342 :: 		_log_write( &row );
0x34F0	0xAA02    ADD	R2, SP, #8
0x34F2	0x4610    MOV	R0, R2
0x34F4	0xF7FFF8DC  BL	easymx_v7_STM32F107VC__log_write+0
;easymx_v7_STM32F107VC.c, 343 :: 		_log_write( &line );
0x34F8	0xF10D0209  ADD	R2, SP, #9
0x34FC	0x4610    MOV	R0, R2
0x34FE	0xF7FFF8D7  BL	easymx_v7_STM32F107VC__log_write+0
;easymx_v7_STM32F107VC.c, 344 :: 		break;
0x3502	0xE008    B	L_mikrobus_logWrite96
;easymx_v7_STM32F107VC.c, 345 :: 		default :
L_mikrobus_logWrite104:
;easymx_v7_STM32F107VC.c, 346 :: 		return _MIKROBUS_ERR_LOG;
0x3504	0x2006    MOVS	R0, #6
0x3506	0xE007    B	L_end_mikrobus_logWrite
;easymx_v7_STM32F107VC.c, 347 :: 		}
L_mikrobus_logWrite95:
; ptr start address is: 0 (R0)
; format start address is: 4 (R1)
0x3508	0x2900    CMP	R1, #0
0x350A	0xD0DD    BEQ	L_mikrobus_logWrite97
0x350C	0x2901    CMP	R1, #1
0x350E	0xD0DE    BEQ	L_mikrobus_logWrite98
0x3510	0x2902    CMP	R1, #2
0x3512	0xD0E5    BEQ	L_mikrobus_logWrite101
; format end address is: 4 (R1)
; ptr end address is: 0 (R0)
0x3514	0xE7F6    B	L_mikrobus_logWrite104
L_mikrobus_logWrite96:
;easymx_v7_STM32F107VC.c, 348 :: 		return 0;
0x3516	0x2000    MOVS	R0, #0
;easymx_v7_STM32F107VC.c, 349 :: 		}
L_end_mikrobus_logWrite:
0x3518	0xF8DDE000  LDR	LR, [SP, #0]
0x351C	0xB003    ADD	SP, SP, #12
0x351E	0x4770    BX	LR
; end of _mikrobus_logWrite
easymx_v7_STM32F107VC__log_write:
;__em_f107vc_log.c, 17 :: 		static T_mikrobus_ret _log_write(uint8_t *data_)
; data_ start address is: 0 (R0)
0x26B0	0xB081    SUB	SP, SP, #4
0x26B2	0xF8CDE000  STR	LR, [SP, #0]
; data_ end address is: 0 (R0)
; data_ start address is: 0 (R0)
;__em_f107vc_log.c, 19 :: 		logger( *data_ );
0x26B6	0x7801    LDRB	R1, [R0, #0]
; data_ end address is: 0 (R0)
0x26B8	0xB2CC    UXTB	R4, R1
0x26BA	0xB2A0    UXTH	R0, R4
0x26BC	0x4C03    LDR	R4, [PC, #12]
0x26BE	0x6824    LDR	R4, [R4, #0]
0x26C0	0x47A0    BLX	R4
;__em_f107vc_log.c, 20 :: 		return 0;
0x26C2	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 21 :: 		}
L_end__log_write:
0x26C4	0xF8DDE000  LDR	LR, [SP, #0]
0x26C8	0xB001    ADD	SP, SP, #4
0x26CA	0x4770    BX	LR
0x26CC	0x03542000  	_logger+0
; end of easymx_v7_STM32F107VC__log_write
_UART1_Write:
;__Lib_UART_123_45.c, 41 :: 		
; _data start address is: 0 (R0)
0x1590	0xB081    SUB	SP, SP, #4
0x1592	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 42 :: 		
0x1596	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x1598	0x4803    LDR	R0, [PC, #12]
0x159A	0xF7FFFD69  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 43 :: 		
L_end_UART1_Write:
0x159E	0xF8DDE000  LDR	LR, [SP, #0]
0x15A2	0xB001    ADD	SP, SP, #4
0x15A4	0x4770    BX	LR
0x15A6	0xBF00    NOP
0x15A8	0x38004001  	USART1_SR+0
; end of _UART1_Write
__Lib_UART_123_45_UARTx_Write:
;__Lib_UART_123_45.c, 35 :: 		
; _data start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x1070	0xB081    SUB	SP, SP, #4
; _data end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; _data start address is: 4 (R1)
0x1072	0xF8AD1000  STRH	R1, [SP, #0]
; UART_Base end address is: 0 (R0)
; _data end address is: 4 (R1)
0x1076	0x4601    MOV	R1, R0
0x1078	0xF8BD0000  LDRH	R0, [SP, #0]
;__Lib_UART_123_45.c, 36 :: 		
L___Lib_UART_123_45_UARTx_Write0:
; _data start address is: 0 (R0)
; UART_Base start address is: 4 (R1)
0x107C	0x680B    LDR	R3, [R1, #0]
0x107E	0xF3C312C0  UBFX	R2, R3, #7, #1
0x1082	0xB902    CBNZ	R2, L___Lib_UART_123_45_UARTx_Write1
;__Lib_UART_123_45.c, 37 :: 		
0x1084	0xE7FA    B	L___Lib_UART_123_45_UARTx_Write0
L___Lib_UART_123_45_UARTx_Write1:
;__Lib_UART_123_45.c, 38 :: 		
0x1086	0x1D0A    ADDS	R2, R1, #4
; UART_Base end address is: 4 (R1)
0x1088	0x6010    STR	R0, [R2, #0]
; _data end address is: 0 (R0)
;__Lib_UART_123_45.c, 39 :: 		
L_end_UARTx_Write:
0x108A	0xB001    ADD	SP, SP, #4
0x108C	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Write
_UART2_Write:
;__Lib_UART_123_45.c, 45 :: 		
; _data start address is: 0 (R0)
0x1574	0xB081    SUB	SP, SP, #4
0x1576	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 46 :: 		
0x157A	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x157C	0x4803    LDR	R0, [PC, #12]
0x157E	0xF7FFFD77  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 47 :: 		
L_end_UART2_Write:
0x1582	0xF8DDE000  LDR	LR, [SP, #0]
0x1586	0xB001    ADD	SP, SP, #4
0x1588	0x4770    BX	LR
0x158A	0xBF00    NOP
0x158C	0x44004000  	USART2_SR+0
; end of _UART2_Write
_UART3_Write:
;__Lib_UART_123_45.c, 49 :: 		
; _data start address is: 0 (R0)
0x153C	0xB081    SUB	SP, SP, #4
0x153E	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 50 :: 		
0x1542	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x1544	0x4803    LDR	R0, [PC, #12]
0x1546	0xF7FFFD93  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 51 :: 		
L_end_UART3_Write:
0x154A	0xF8DDE000  LDR	LR, [SP, #0]
0x154E	0xB001    ADD	SP, SP, #4
0x1550	0x4770    BX	LR
0x1552	0xBF00    NOP
0x1554	0x48004000  	USART3_SR+0
; end of _UART3_Write
_UART4_Write:
;__Lib_UART_123_45.c, 53 :: 		
; _data start address is: 0 (R0)
0x1558	0xB081    SUB	SP, SP, #4
0x155A	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 54 :: 		
0x155E	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x1560	0x4803    LDR	R0, [PC, #12]
0x1562	0xF7FFFD85  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 55 :: 		
L_end_UART4_Write:
0x1566	0xF8DDE000  LDR	LR, [SP, #0]
0x156A	0xB001    ADD	SP, SP, #4
0x156C	0x4770    BX	LR
0x156E	0xBF00    NOP
0x1570	0x4C004000  	UART4_SR+0
; end of _UART4_Write
_UART5_Write:
;__Lib_UART_123_45.c, 57 :: 		
; _data start address is: 0 (R0)
0x15AC	0xB081    SUB	SP, SP, #4
0x15AE	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 58 :: 		
0x15B2	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x15B4	0x4803    LDR	R0, [PC, #12]
0x15B6	0xF7FFFD5B  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 59 :: 		
L_end_UART5_Write:
0x15BA	0xF8DDE000  LDR	LR, [SP, #0]
0x15BE	0xB001    ADD	SP, SP, #4
0x15C0	0x4770    BX	LR
0x15C2	0xBF00    NOP
0x15C4	0x50004000  	UART5_SR+0
; end of _UART5_Write
_applicationInit:
;Click_FM_STM.c, 467 :: 		void applicationInit( )
0x38A0	0xB081    SUB	SP, SP, #4
0x38A2	0xF8CDE000  STR	LR, [SP, #0]
;Click_FM_STM.c, 469 :: 		fm_i2cDriverInit( (T_FM_P)&_MIKROBUS1_GPIO, (T_FM_P)&_MIKROBUS1_I2C, 0x10 );
0x38A6	0x2210    MOVS	R2, #16
0x38A8	0x4915    LDR	R1, [PC, #84]
0x38AA	0x4816    LDR	R0, [PC, #88]
0x38AC	0xF7FFF8EC  BL	_fm_i2cDriverInit+0
;Click_FM_STM.c, 471 :: 		Delay_ms(500);
0x38B0	0xF648577F  MOVW	R7, #36223
0x38B4	0xF2C0075B  MOVT	R7, #91
L_applicationInit59:
0x38B8	0x1E7F    SUBS	R7, R7, #1
0x38BA	0xD1FD    BNE	L_applicationInit59
0x38BC	0xBF00    NOP
0x38BE	0xBF00    NOP
0x38C0	0xBF00    NOP
0x38C2	0xBF00    NOP
0x38C4	0xBF00    NOP
;Click_FM_STM.c, 473 :: 		fm_powerUp( );
0x38C6	0xF7FFFF6B  BL	_fm_powerup+0
;Click_FM_STM.c, 475 :: 		fm_basicSettings( );
0x38CA	0xF7FFFC9B  BL	_fm_basicSettings+0
;Click_FM_STM.c, 477 :: 		fm_setVolume( volumeLevel_ );
0x38CE	0x480E    LDR	R0, [PC, #56]
0x38D0	0x7800    LDRB	R0, [R0, #0]
0x38D2	0xF7FFFC73  BL	_fm_setVolume+0
;Click_FM_STM.c, 479 :: 		fm_setSnrThreshold( snrThreshold_ );
0x38D6	0x480D    LDR	R0, [PC, #52]
0x38D8	0x7800    LDRB	R0, [R0, #0]
0x38DA	0xF7FFFD9D  BL	_fm_setSnrThreshold+0
;Click_FM_STM.c, 481 :: 		fm_setSeekThreshold( seekThreshold_ );
0x38DE	0x480C    LDR	R0, [PC, #48]
0x38E0	0x8800    LDRH	R0, [R0, #0]
0x38E2	0xF7FFFD75  BL	_fm_setSeekThreshold+0
;Click_FM_STM.c, 483 :: 		fm_setSeekImpulseDetectionThreshold( impulseDetectionThreshold_ );
0x38E6	0x480B    LDR	R0, [PC, #44]
0x38E8	0x7800    LDRB	R0, [R0, #0]
0x38EA	0xF7FFFE53  BL	_fm_setSeekImpulseDetectionThreshold+0
;Click_FM_STM.c, 485 :: 		mikrobus_logWrite( "application init done", _LOG_LINE );
0x38EE	0x480A    LDR	R0, [PC, #40]
0x38F0	0x2102    MOVS	R1, #2
0x38F2	0xF7FFFDDD  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 486 :: 		}
L_end_applicationInit:
0x38F6	0xF8DDE000  LDR	LR, [SP, #0]
0x38FA	0xB001    ADD	SP, SP, #4
0x38FC	0x4770    BX	LR
0x38FE	0xBF00    NOP
0x3900	0x41EC0000  	__MIKROBUS1_I2C+0
0x3904	0x41140000  	__MIKROBUS1_GPIO+0
0x3908	0x00C42000  	_volumeLevel_+0
0x390C	0x00C52000  	_snrThreshold_+0
0x3910	0x00C62000  	_seekThreshold_+0
0x3914	0x00C82000  	_impulseDetectionThreshold_+0
0x3918	0x00C92000  	?lstr62_Click_FM_STM+0
; end of _applicationInit
_fm_i2cDriverInit:
;__fm_driver.c, 208 :: 		void fm_i2cDriverInit(T_FM_P gpioObj, T_FM_P i2cObj, uint8_t slave)
; slave start address is: 8 (R2)
; i2cObj start address is: 4 (R1)
; gpioObj start address is: 0 (R0)
0x2A88	0xB081    SUB	SP, SP, #4
0x2A8A	0xF8CDE000  STR	LR, [SP, #0]
0x2A8E	0x4604    MOV	R4, R0
; slave end address is: 8 (R2)
; i2cObj end address is: 4 (R1)
; gpioObj end address is: 0 (R0)
; gpioObj start address is: 16 (R4)
; i2cObj start address is: 4 (R1)
; slave start address is: 8 (R2)
;__fm_driver.c, 210 :: 		_slaveAddress = slave;
0x2A90	0x4B05    LDR	R3, [PC, #20]
0x2A92	0x701A    STRB	R2, [R3, #0]
; slave end address is: 8 (R2)
;__fm_driver.c, 211 :: 		hal_i2cMap( (T_HAL_P)i2cObj );
0x2A94	0x4608    MOV	R0, R1
; i2cObj end address is: 4 (R1)
0x2A96	0xF7FFFB5B  BL	__fm_driver_hal_i2cMap+0
;__fm_driver.c, 212 :: 		hal_gpioMap( (T_HAL_P)gpioObj );
0x2A9A	0x4620    MOV	R0, R4
; gpioObj end address is: 16 (R4)
0x2A9C	0xF7FFF9D8  BL	__fm_driver_hal_gpioMap+0
;__fm_driver.c, 216 :: 		}
L_end_fm_i2cDriverInit:
0x2AA0	0xF8DDE000  LDR	LR, [SP, #0]
0x2AA4	0xB001    ADD	SP, SP, #4
0x2AA6	0x4770    BX	LR
0x2AA8	0x03472000  	__fm_driver__slaveAddress+0
; end of _fm_i2cDriverInit
__fm_driver_hal_i2cMap:
;__hal_stm32.c, 82 :: 		static void hal_i2cMap(T_HAL_P i2cObj)
; i2cObj start address is: 0 (R0)
; i2cObj end address is: 0 (R0)
; i2cObj start address is: 0 (R0)
;__hal_stm32.c, 86 :: 		fp_i2cStart    = tmp->i2cStart;
0x2150	0x6802    LDR	R2, [R0, #0]
0x2152	0x4906    LDR	R1, [PC, #24]
0x2154	0x600A    STR	R2, [R1, #0]
;__hal_stm32.c, 87 :: 		fp_i2cWrite    = tmp->i2cWrite;
0x2156	0x1D01    ADDS	R1, R0, #4
0x2158	0x680A    LDR	R2, [R1, #0]
0x215A	0x4905    LDR	R1, [PC, #20]
0x215C	0x600A    STR	R2, [R1, #0]
;__hal_stm32.c, 88 :: 		fp_i2cRead     = tmp->i2cRead;
0x215E	0xF2000108  ADDW	R1, R0, #8
; i2cObj end address is: 0 (R0)
0x2162	0x680A    LDR	R2, [R1, #0]
0x2164	0x4903    LDR	R1, [PC, #12]
0x2166	0x600A    STR	R2, [R1, #0]
;__hal_stm32.c, 89 :: 		}
L_end_hal_i2cMap:
0x2168	0x4770    BX	LR
0x216A	0xBF00    NOP
0x216C	0x03602000  	__fm_driver_fp_i2cStart+0
0x2170	0x03582000  	__fm_driver_fp_i2cWrite+0
0x2174	0x035C2000  	__fm_driver_fp_i2cRead+0
; end of __fm_driver_hal_i2cMap
__fm_driver_hal_gpioMap:
;__fm_hal.c, 321 :: 		static void hal_gpioMap(T_HAL_P gpioObj)
; gpioObj start address is: 0 (R0)
; gpioObj end address is: 0 (R0)
; gpioObj start address is: 0 (R0)
;__fm_hal.c, 326 :: 		hal_gpio_anGet = tmp->gpioGet[ __AN_PIN_INPUT__ ];
0x1E50	0xF2000330  ADDW	R3, R0, #48
0x1E54	0x681A    LDR	R2, [R3, #0]
0x1E56	0x4908    LDR	R1, [PC, #32]
0x1E58	0x600A    STR	R2, [R1, #0]
;__fm_hal.c, 347 :: 		hal_gpio_intGet = tmp->gpioGet[ __INT_PIN_INPUT__ ];
0x1E5A	0xF203011C  ADDW	R1, R3, #28
0x1E5E	0x680A    LDR	R2, [R1, #0]
0x1E60	0x4906    LDR	R1, [PC, #24]
0x1E62	0x600A    STR	R2, [R1, #0]
;__fm_hal.c, 365 :: 		hal_gpio_csSet = tmp->gpioSet[ __CS_PIN_OUTPUT__ ];
0x1E64	0xF2000108  ADDW	R1, R0, #8
0x1E68	0x680A    LDR	R2, [R1, #0]
0x1E6A	0x4905    LDR	R1, [PC, #20]
0x1E6C	0x600A    STR	R2, [R1, #0]
;__fm_hal.c, 368 :: 		hal_gpio_rstSet = tmp->gpioSet[ __RST_PIN_OUTPUT__ ];
0x1E6E	0x1D01    ADDS	R1, R0, #4
; gpioObj end address is: 0 (R0)
0x1E70	0x680A    LDR	R2, [R1, #0]
0x1E72	0x4904    LDR	R1, [PC, #16]
0x1E74	0x600A    STR	R2, [R1, #0]
;__fm_hal.c, 397 :: 		}
L_end_hal_gpioMap:
0x1E76	0x4770    BX	LR
0x1E78	0x03642000  	__fm_driver_hal_gpio_anGet+0
0x1E7C	0x03682000  	__fm_driver_hal_gpio_intGet+0
0x1E80	0x036C2000  	__fm_driver_hal_gpio_csSet+0
0x1E84	0x03702000  	__fm_driver_hal_gpio_rstSet+0
; end of __fm_driver_hal_gpioMap
_fm_powerup:
;__fm_driver.c, 533 :: 		void fm_powerup( void )
0x37A0	0xB089    SUB	SP, SP, #36
0x37A2	0xF8CDE000  STR	LR, [SP, #0]
;__fm_driver.c, 537 :: 		fm_modeSelect( );
0x37A6	0xF7FEFB6F  BL	__fm_driver_fm_modeSelect+0
;__fm_driver.c, 539 :: 		Delay_100ms( );    /* wait for device to settle */
0x37AA	0xF7FEFF75  BL	_Delay_100ms+0
;__fm_driver.c, 541 :: 		fm_readRegisters( regBuffer );
0x37AE	0xA801    ADD	R0, SP, #4
0x37B0	0xF7FEFF1E  BL	_fm_readRegisters+0
;__fm_driver.c, 543 :: 		fm_setBits( regBuffer,   _FM_TEST_1,   _FM_AUDIO_HIGH_Z_MASK,        _FM_AUDIO_HIGH_Z_DISABLE );
0x37B4	0xA801    ADD	R0, SP, #4
0x37B6	0xF2400300  MOVW	R3, #0
0x37BA	0xF64B72FF  MOVW	R2, #49151
0x37BE	0xF2400105  MOVW	R1, #5
0x37C2	0xF7FFF899  BL	_fm_setBits+0
;__fm_driver.c, 544 :: 		fm_setBits( regBuffer,   _FM_TEST_1,   _FM_CRYSTAL_OSCYLATOR_MASK,   _FM_CRYSTAL_OSCYLATOR_ENABLE );
0x37C6	0xA801    ADD	R0, SP, #4
0x37C8	0xF2480300  MOVW	R3, #32768
0x37CC	0xF64772FF  MOVW	R2, #32767
0x37D0	0xF2400105  MOVW	R1, #5
0x37D4	0xF7FFF890  BL	_fm_setBits+0
;__fm_driver.c, 546 :: 		fm_writeRegisters( regBuffer );
0x37D8	0xA801    ADD	R0, SP, #4
0x37DA	0xF7FFF899  BL	_fm_writeRegisters+0
;__fm_driver.c, 548 :: 		Delay_1sec( );     /* waiting for crystal oscylator to settle -- minimum 500 ms */
0x37DE	0xF7FEFAAF  BL	_Delay_1sec+0
;__fm_driver.c, 550 :: 		fm_readRegisters( regBuffer );
0x37E2	0xA801    ADD	R0, SP, #4
0x37E4	0xF7FEFF04  BL	_fm_readRegisters+0
;__fm_driver.c, 552 :: 		fm_setBits( regBuffer,   _FM_POWER_CONFIGURATION,   _FM_POWERUP_ENABLE_MASK,    _FM_POWERUP_ENABLE_HIGH );
0x37E8	0xA801    ADD	R0, SP, #4
0x37EA	0xF2400301  MOVW	R3, #1
0x37EE	0xF64F72FE  MOVW	R2, #65534
0x37F2	0xF2400100  MOVW	R1, #0
0x37F6	0xF7FFF87F  BL	_fm_setBits+0
;__fm_driver.c, 553 :: 		fm_setBits( regBuffer,   _FM_POWER_CONFIGURATION,   _FM_POWERUP_DISABLE_MASK,   _FM_POWERUP_DISABLE_LOW );
0x37FA	0xA801    ADD	R0, SP, #4
0x37FC	0xF2400300  MOVW	R3, #0
0x3800	0xF64F72BF  MOVW	R2, #65471
0x3804	0xF2400100  MOVW	R1, #0
0x3808	0xF7FFF876  BL	_fm_setBits+0
;__fm_driver.c, 554 :: 		fm_setBits( regBuffer,   _FM_POWER_CONFIGURATION,   _FM_MUTE_MASK,              _FM_MUTE_DISABLE );
0x380C	0xA801    ADD	R0, SP, #4
0x380E	0xF2440300  MOVW	R3, #16384
0x3812	0xF64B72FF  MOVW	R2, #49151
0x3816	0xF2400100  MOVW	R1, #0
0x381A	0xF7FFF86D  BL	_fm_setBits+0
;__fm_driver.c, 556 :: 		fm_writeRegisters( regBuffer );
0x381E	0xA801    ADD	R0, SP, #4
0x3820	0xF7FFF876  BL	_fm_writeRegisters+0
;__fm_driver.c, 558 :: 		Delay_100ms( );    /* waiting for device to powerup */
0x3824	0xF7FEFF38  BL	_Delay_100ms+0
;__fm_driver.c, 559 :: 		}
L_end_fm_powerup:
0x3828	0xF8DDE000  LDR	LR, [SP, #0]
0x382C	0xB009    ADD	SP, SP, #36
0x382E	0x4770    BX	LR
; end of _fm_powerup
__fm_driver_fm_modeSelect:
;__fm_driver.c, 182 :: 		static void fm_modeSelect( void )
0x1E88	0xB081    SUB	SP, SP, #4
0x1E8A	0xF8CDE000  STR	LR, [SP, #0]
;__fm_driver.c, 184 :: 		hal_gpio_rstSet(0);
0x1E8E	0x2000    MOVS	R0, #0
0x1E90	0x4C08    LDR	R4, [PC, #32]
0x1E92	0x6824    LDR	R4, [R4, #0]
0x1E94	0x47A0    BLX	R4
;__fm_driver.c, 186 :: 		hal_gpio_csSet(1);
0x1E96	0x2001    MOVS	R0, #1
0x1E98	0x4C07    LDR	R4, [PC, #28]
0x1E9A	0x6824    LDR	R4, [R4, #0]
0x1E9C	0x47A0    BLX	R4
;__fm_driver.c, 187 :: 		Delay_10ms( );
0x1E9E	0xF7FFFB13  BL	_Delay_10ms+0
;__fm_driver.c, 189 :: 		hal_gpio_rstSet(1);
0x1EA2	0x2001    MOVS	R0, #1
0x1EA4	0x4C03    LDR	R4, [PC, #12]
0x1EA6	0x6824    LDR	R4, [R4, #0]
0x1EA8	0x47A0    BLX	R4
;__fm_driver.c, 190 :: 		}
L_end_fm_modeSelect:
0x1EAA	0xF8DDE000  LDR	LR, [SP, #0]
0x1EAE	0xB001    ADD	SP, SP, #4
0x1EB0	0x4770    BX	LR
0x1EB2	0xBF00    NOP
0x1EB4	0x03702000  	__fm_driver_hal_gpio_rstSet+0
0x1EB8	0x036C2000  	__fm_driver_hal_gpio_csSet+0
; end of __fm_driver_fm_modeSelect
easymx_v7_STM32F107VC__setAN_1:
;__em_f107vc_gpio.c, 43 :: 		static void _setAN_1  (uint8_t value) 	{ GPIOA_ODR.B4  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1AB4	0x4901    LDR	R1, [PC, #4]
0x1AB6	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setAN_1:
0x1AB8	0x4770    BX	LR
0x1ABA	0xBF00    NOP
0x1ABC	0x01904221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setAN_1
easymx_v7_STM32F107VC__setRST_1:
;__em_f107vc_gpio.c, 44 :: 		static void _setRST_1 (uint8_t value) 	{ GPIOC_ODR.B2  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1AC0	0x4901    LDR	R1, [PC, #4]
0x1AC2	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRST_1:
0x1AC4	0x4770    BX	LR
0x1AC6	0xBF00    NOP
0x1AC8	0x01884222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setRST_1
easymx_v7_STM32F107VC__setCS_1:
;__em_f107vc_gpio.c, 45 :: 		static void _setCS_1  (uint8_t value) 	{ GPIOD_ODR.B13 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1B14	0x4901    LDR	R1, [PC, #4]
0x1B16	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setCS_1:
0x1B18	0x4770    BX	LR
0x1B1A	0xBF00    NOP
0x1B1C	0x81B44222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setCS_1
easymx_v7_STM32F107VC__setSCK_1:
;__em_f107vc_gpio.c, 46 :: 		static void _setSCK_1 (uint8_t value) 	{ GPIOC_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1B08	0x4901    LDR	R1, [PC, #4]
0x1B0A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCK_1:
0x1B0C	0x4770    BX	LR
0x1B0E	0xBF00    NOP
0x1B10	0x01A84222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setSCK_1
easymx_v7_STM32F107VC__setMISO_1:
;__em_f107vc_gpio.c, 47 :: 		static void _setMISO_1(uint8_t value) 	{ GPIOC_ODR.B11 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1AFC	0x4901    LDR	R1, [PC, #4]
0x1AFE	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMISO_1:
0x1B00	0x4770    BX	LR
0x1B02	0xBF00    NOP
0x1B04	0x01AC4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMISO_1
easymx_v7_STM32F107VC__setMOSI_1:
;__em_f107vc_gpio.c, 48 :: 		static void _setMOSI_1(uint8_t value) 	{ GPIOC_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1B38	0x4901    LDR	R1, [PC, #4]
0x1B3A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMOSI_1:
0x1B3C	0x4770    BX	LR
0x1B3E	0xBF00    NOP
0x1B40	0x01B04222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMOSI_1
easymx_v7_STM32F107VC__setPWM_1:
;__em_f107vc_gpio.c, 49 :: 		static void _setPWM_1 (uint8_t value) 	{ GPIOA_ODR.B0  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1B2C	0x4901    LDR	R1, [PC, #4]
0x1B2E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setPWM_1:
0x1B30	0x4770    BX	LR
0x1B32	0xBF00    NOP
0x1B34	0x01804221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setPWM_1
easymx_v7_STM32F107VC__setINT_1:
;__em_f107vc_gpio.c, 50 :: 		static void _setINT_1 (uint8_t value) 	{ GPIOD_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1B20	0x4901    LDR	R1, [PC, #4]
0x1B22	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setINT_1:
0x1B24	0x4770    BX	LR
0x1B26	0xBF00    NOP
0x1B28	0x81A84222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setINT_1
easymx_v7_STM32F107VC__setRX_1:
;__em_f107vc_gpio.c, 51 :: 		static void _setRX_1  (uint8_t value) 	{ GPIOD_ODR.B9  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1AF0	0x4901    LDR	R1, [PC, #4]
0x1AF2	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRX_1:
0x1AF4	0x4770    BX	LR
0x1AF6	0xBF00    NOP
0x1AF8	0x81A44222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setRX_1
easymx_v7_STM32F107VC__setTX_1:
;__em_f107vc_gpio.c, 52 :: 		static void _setTX_1  (uint8_t value) 	{ GPIOD_ODR.B8  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1AA8	0x4901    LDR	R1, [PC, #4]
0x1AAA	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setTX_1:
0x1AAC	0x4770    BX	LR
0x1AAE	0xBF00    NOP
0x1AB0	0x81A04222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setTX_1
easymx_v7_STM32F107VC__setSCL_1:
;__em_f107vc_gpio.c, 53 :: 		static void _setSCL_1 (uint8_t value) 	{ GPIOB_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1AE4	0x4901    LDR	R1, [PC, #4]
0x1AE6	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCL_1:
0x1AE8	0x4770    BX	LR
0x1AEA	0xBF00    NOP
0x1AEC	0x81984221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSCL_1
easymx_v7_STM32F107VC__setSDA_1:
;__em_f107vc_gpio.c, 54 :: 		static void _setSDA_1 (uint8_t value) 	{ GPIOB_ODR.B7  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1AD8	0x4901    LDR	R1, [PC, #4]
0x1ADA	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSDA_1:
0x1ADC	0x4770    BX	LR
0x1ADE	0xBF00    NOP
0x1AE0	0x819C4221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSDA_1
easymx_v7_STM32F107VC__setAN_2:
;__em_f107vc_gpio.c, 68 :: 		static void _setAN_2  (uint8_t value)   { GPIOA_ODR.B5  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1ACC	0x4901    LDR	R1, [PC, #4]
0x1ACE	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setAN_2:
0x1AD0	0x4770    BX	LR
0x1AD2	0xBF00    NOP
0x1AD4	0x01944221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setAN_2
easymx_v7_STM32F107VC__setRST_2:
;__em_f107vc_gpio.c, 69 :: 		static void _setRST_2 (uint8_t value)   { GPIOC_ODR.B3  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1BA4	0x4901    LDR	R1, [PC, #4]
0x1BA6	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRST_2:
0x1BA8	0x4770    BX	LR
0x1BAA	0xBF00    NOP
0x1BAC	0x018C4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setRST_2
easymx_v7_STM32F107VC__setCS_2:
;__em_f107vc_gpio.c, 70 :: 		static void _setCS_2  (uint8_t value)   { GPIOD_ODR.B14 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1B8C	0x4901    LDR	R1, [PC, #4]
0x1B8E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setCS_2:
0x1B90	0x4770    BX	LR
0x1B92	0xBF00    NOP
0x1B94	0x81B84222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setCS_2
easymx_v7_STM32F107VC__setSCK_2:
;__em_f107vc_gpio.c, 71 :: 		static void _setSCK_2 (uint8_t value)   { GPIOC_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1B5C	0x4901    LDR	R1, [PC, #4]
0x1B5E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCK_2:
0x1B60	0x4770    BX	LR
0x1B62	0xBF00    NOP
0x1B64	0x01A84222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setSCK_2
easymx_v7_STM32F107VC__setMISO_2:
;__em_f107vc_gpio.c, 72 :: 		static void _setMISO_2(uint8_t value)   { GPIOC_ODR.B11 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1B50	0x4901    LDR	R1, [PC, #4]
0x1B52	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMISO_2:
0x1B54	0x4770    BX	LR
0x1B56	0xBF00    NOP
0x1B58	0x01AC4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMISO_2
easymx_v7_STM32F107VC__setMOSI_2:
;__em_f107vc_gpio.c, 73 :: 		static void _setMOSI_2(uint8_t value)   { GPIOC_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1B44	0x4901    LDR	R1, [PC, #4]
0x1B46	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMOSI_2:
0x1B48	0x4770    BX	LR
0x1B4A	0xBF00    NOP
0x1B4C	0x01B04222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMOSI_2
easymx_v7_STM32F107VC__setPWM_2:
;__em_f107vc_gpio.c, 74 :: 		static void _setPWM_2 (uint8_t value)   { GPIOD_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1B80	0x4901    LDR	R1, [PC, #4]
0x1B82	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setPWM_2:
0x1B84	0x4770    BX	LR
0x1B86	0xBF00    NOP
0x1B88	0x81B04222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setPWM_2
easymx_v7_STM32F107VC__setINT_2:
;__em_f107vc_gpio.c, 75 :: 		static void _setINT_2 (uint8_t value)   { GPIOD_ODR.B11 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1B68	0x4901    LDR	R1, [PC, #4]
0x1B6A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setINT_2:
0x1B6C	0x4770    BX	LR
0x1B6E	0xBF00    NOP
0x1B70	0x81AC4222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setINT_2
easymx_v7_STM32F107VC__setRX_2:
;__em_f107vc_gpio.c, 76 :: 		static void _setRX_2  (uint8_t value)   { GPIOD_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1B74	0x4901    LDR	R1, [PC, #4]
0x1B76	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRX_2:
0x1B78	0x4770    BX	LR
0x1B7A	0xBF00    NOP
0x1B7C	0x81984222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setRX_2
easymx_v7_STM32F107VC__setTX_2:
;__em_f107vc_gpio.c, 77 :: 		static void _setTX_2  (uint8_t value)   { GPIOD_ODR.B5  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1B98	0x4901    LDR	R1, [PC, #4]
0x1B9A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setTX_2:
0x1B9C	0x4770    BX	LR
0x1B9E	0xBF00    NOP
0x1BA0	0x81944222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setTX_2
easymx_v7_STM32F107VC__setSCL_2:
;__em_f107vc_gpio.c, 78 :: 		static void _setSCL_2 (uint8_t value)   { GPIOB_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1A9C	0x4901    LDR	R1, [PC, #4]
0x1A9E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCL_2:
0x1AA0	0x4770    BX	LR
0x1AA2	0xBF00    NOP
0x1AA4	0x81984221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSCL_2
easymx_v7_STM32F107VC__setSDA_2:
;__em_f107vc_gpio.c, 79 :: 		static void _setSDA_2 (uint8_t value)   { GPIOB_ODR.B7  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x14E0	0x4901    LDR	R1, [PC, #4]
0x14E2	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSDA_2:
0x14E4	0x4770    BX	LR
0x14E6	0xBF00    NOP
0x14E8	0x819C4221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSDA_2
_Delay_10ms:
;__Lib_Delays.c, 57 :: 		void Delay_10ms() {
;__Lib_Delays.c, 58 :: 		Delay_ms(10);
0x14C8	0xF24D47BF  MOVW	R7, #54463
0x14CC	0xF2C00701  MOVT	R7, #1
L_Delay_10ms22:
0x14D0	0x1E7F    SUBS	R7, R7, #1
0x14D2	0xD1FD    BNE	L_Delay_10ms22
0x14D4	0xBF00    NOP
0x14D6	0xBF00    NOP
0x14D8	0xBF00    NOP
0x14DA	0xBF00    NOP
0x14DC	0xBF00    NOP
;__Lib_Delays.c, 59 :: 		}
L_end_Delay_10ms:
0x14DE	0x4770    BX	LR
; end of _Delay_10ms
_Delay_100ms:
;__Lib_Delays.c, 53 :: 		void Delay_100ms() {
;__Lib_Delays.c, 54 :: 		Delay_ms(100);
0x2698	0xF644777F  MOVW	R7, #20351
0x269C	0xF2C00712  MOVT	R7, #18
L_Delay_100ms20:
0x26A0	0x1E7F    SUBS	R7, R7, #1
0x26A2	0xD1FD    BNE	L_Delay_100ms20
0x26A4	0xBF00    NOP
0x26A6	0xBF00    NOP
0x26A8	0xBF00    NOP
0x26AA	0xBF00    NOP
0x26AC	0xBF00    NOP
;__Lib_Delays.c, 55 :: 		}
L_end_Delay_100ms:
0x26AE	0x4770    BX	LR
; end of _Delay_100ms
_fm_readRegisters:
;__fm_driver.c, 234 :: 		void fm_readRegisters( uint16_t *registerBuffer )
; registerBuffer start address is: 0 (R0)
0x25F0	0xB092    SUB	SP, SP, #72
0x25F2	0xF8CDE000  STR	LR, [SP, #0]
; registerBuffer end address is: 0 (R0)
; registerBuffer start address is: 0 (R0)
;__fm_driver.c, 241 :: 		hal_i2cStart( );
0x25F6	0x9001    STR	R0, [SP, #4]
0x25F8	0xF7FEFF3A  BL	__fm_driver_hal_i2cStart+0
;__fm_driver.c, 242 :: 		hal_i2cRead( _slaveAddress, auxBuffer1, 32, END_MODE_STOP );
0x25FC	0xAA02    ADD	R2, SP, #8
0x25FE	0x4925    LDR	R1, [PC, #148]
0x2600	0x7809    LDRB	R1, [R1, #0]
0x2602	0x2301    MOVS	R3, #1
0x2604	0xB2C8    UXTB	R0, R1
0x2606	0x4611    MOV	R1, R2
0x2608	0x2220    MOVS	R2, #32
0x260A	0xF7FFF9E3  BL	__fm_driver_hal_i2cRead+0
0x260E	0x9801    LDR	R0, [SP, #4]
;__fm_driver.c, 244 :: 		for (i = 0; i < 16; i++)
; i start address is: 12 (R3)
0x2610	0x2300    MOVS	R3, #0
; i end address is: 12 (R3)
; registerBuffer end address is: 0 (R0)
L_fm_readRegisters0:
; i start address is: 12 (R3)
; registerBuffer start address is: 0 (R0)
0x2612	0x2B10    CMP	R3, #16
0x2614	0xD20B    BCS	L_fm_readRegisters1
;__fm_driver.c, 246 :: 		auxBuffer2[ i + 16 ] = auxBuffer1[ i ];
0x2616	0xF2030210  ADDW	R2, R3, #16
0x261A	0xB212    SXTH	R2, R2
0x261C	0xA90A    ADD	R1, SP, #40
0x261E	0x188A    ADDS	R2, R1, R2
0x2620	0xA902    ADD	R1, SP, #8
0x2622	0x18C9    ADDS	R1, R1, R3
0x2624	0x7809    LDRB	R1, [R1, #0]
0x2626	0x7011    STRB	R1, [R2, #0]
;__fm_driver.c, 244 :: 		for (i = 0; i < 16; i++)
0x2628	0x1C5B    ADDS	R3, R3, #1
0x262A	0xB2DB    UXTB	R3, R3
;__fm_driver.c, 247 :: 		}
; i end address is: 12 (R3)
0x262C	0xE7F1    B	L_fm_readRegisters0
L_fm_readRegisters1:
;__fm_driver.c, 248 :: 		for (i = 0; i < 16; i++)
; i start address is: 16 (R4)
0x262E	0x2400    MOVS	R4, #0
; i end address is: 16 (R4)
; registerBuffer end address is: 0 (R0)
L_fm_readRegisters3:
; i start address is: 16 (R4)
; registerBuffer start address is: 0 (R0)
0x2630	0x2C10    CMP	R4, #16
0x2632	0xD20B    BCS	L_fm_readRegisters4
;__fm_driver.c, 250 :: 		auxBuffer2[ i ] = auxBuffer1[ i + 16 ];
0x2634	0xA90A    ADD	R1, SP, #40
0x2636	0x190B    ADDS	R3, R1, R4
0x2638	0xF2040210  ADDW	R2, R4, #16
0x263C	0xB212    SXTH	R2, R2
0x263E	0xA902    ADD	R1, SP, #8
0x2640	0x1889    ADDS	R1, R1, R2
0x2642	0x7809    LDRB	R1, [R1, #0]
0x2644	0x7019    STRB	R1, [R3, #0]
;__fm_driver.c, 248 :: 		for (i = 0; i < 16; i++)
0x2646	0x1C64    ADDS	R4, R4, #1
0x2648	0xB2E4    UXTB	R4, R4
;__fm_driver.c, 251 :: 		}
; i end address is: 16 (R4)
0x264A	0xE7F1    B	L_fm_readRegisters3
L_fm_readRegisters4:
;__fm_driver.c, 253 :: 		j = 0;
; j start address is: 12 (R3)
0x264C	0x2300    MOVS	R3, #0
;__fm_driver.c, 255 :: 		for (i = 0; i < 16; i ++)
; i start address is: 20 (R5)
0x264E	0x2500    MOVS	R5, #0
; j end address is: 12 (R3)
; i end address is: 20 (R5)
L_fm_readRegisters6:
; i start address is: 20 (R5)
; j start address is: 12 (R3)
; registerBuffer start address is: 0 (R0)
; registerBuffer end address is: 0 (R0)
0x2650	0x2D10    CMP	R5, #16
0x2652	0xD21A    BCS	L_fm_readRegisters7
; registerBuffer end address is: 0 (R0)
;__fm_driver.c, 257 :: 		registerBuffer[ i ] = auxBuffer2[ j ];
; registerBuffer start address is: 0 (R0)
0x2654	0x0069    LSLS	R1, R5, #1
0x2656	0x1842    ADDS	R2, R0, R1
0x2658	0xAC0A    ADD	R4, SP, #40
0x265A	0x18E1    ADDS	R1, R4, R3
0x265C	0x7809    LDRB	R1, [R1, #0]
0x265E	0x8011    STRH	R1, [R2, #0]
;__fm_driver.c, 258 :: 		registerBuffer[ i ] <<= 8;
0x2660	0x0069    LSLS	R1, R5, #1
0x2662	0x1842    ADDS	R2, R0, R1
0x2664	0x8811    LDRH	R1, [R2, #0]
0x2666	0x0209    LSLS	R1, R1, #8
0x2668	0x8011    STRH	R1, [R2, #0]
;__fm_driver.c, 259 :: 		j += 1;
0x266A	0x1C5A    ADDS	R2, R3, #1
0x266C	0xB212    SXTH	R2, R2
; j end address is: 12 (R3)
; j start address is: 24 (R6)
0x266E	0xB2D6    UXTB	R6, R2
;__fm_driver.c, 260 :: 		registerBuffer[ i ] |= auxBuffer2[ j ];
0x2670	0x0069    LSLS	R1, R5, #1
0x2672	0x1843    ADDS	R3, R0, R1
0x2674	0xB2D1    UXTB	R1, R2
0x2676	0x1861    ADDS	R1, R4, R1
0x2678	0x780A    LDRB	R2, [R1, #0]
0x267A	0x8819    LDRH	R1, [R3, #0]
0x267C	0x4311    ORRS	R1, R2
0x267E	0x8019    STRH	R1, [R3, #0]
;__fm_driver.c, 261 :: 		j += 1;
0x2680	0x1C71    ADDS	R1, R6, #1
; j end address is: 24 (R6)
; j start address is: 12 (R3)
0x2682	0xB2CB    UXTB	R3, R1
;__fm_driver.c, 255 :: 		for (i = 0; i < 16; i ++)
0x2684	0x1C6D    ADDS	R5, R5, #1
0x2686	0xB2ED    UXTB	R5, R5
;__fm_driver.c, 262 :: 		}
; registerBuffer end address is: 0 (R0)
; j end address is: 12 (R3)
; i end address is: 20 (R5)
0x2688	0xE7E2    B	L_fm_readRegisters6
L_fm_readRegisters7:
;__fm_driver.c, 263 :: 		}
L_end_fm_readRegisters:
0x268A	0xF8DDE000  LDR	LR, [SP, #0]
0x268E	0xB012    ADD	SP, SP, #72
0x2690	0x4770    BX	LR
0x2692	0xBF00    NOP
0x2694	0x03472000  	__fm_driver__slaveAddress+0
; end of _fm_readRegisters
__fm_driver_hal_i2cStart:
;__hal_stm32.c, 91 :: 		static int hal_i2cStart()
0x1470	0xB082    SUB	SP, SP, #8
0x1472	0xF8CDE000  STR	LR, [SP, #0]
;__hal_stm32.c, 93 :: 		int res = 0;
0x1476	0xF2400400  MOVW	R4, #0
0x147A	0xF8AD4004  STRH	R4, [SP, #4]
;__hal_stm32.c, 94 :: 		res |= fp_i2cStart();
0x147E	0x4C06    LDR	R4, [PC, #24]
0x1480	0x6824    LDR	R4, [R4, #0]
0x1482	0x47A0    BLX	R4
0x1484	0xF9BD1004  LDRSH	R1, [SP, #4]
0x1488	0xEA410000  ORR	R0, R1, R0, LSL #0
;__hal_stm32.c, 95 :: 		return res;
0x148C	0xB200    SXTH	R0, R0
;__hal_stm32.c, 96 :: 		}
L_end_hal_i2cStart:
0x148E	0xF8DDE000  LDR	LR, [SP, #0]
0x1492	0xB002    ADD	SP, SP, #8
0x1494	0x4770    BX	LR
0x1496	0xBF00    NOP
0x1498	0x03602000  	__fm_driver_fp_i2cStart+0
; end of __fm_driver_hal_i2cStart
_I2C1_Start:
;__Lib_I2C_12.c, 536 :: 		
0x0CA8	0xB081    SUB	SP, SP, #4
0x0CAA	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_I2C_12.c, 537 :: 		
0x0CAE	0x4803    LDR	R0, [PC, #12]
0x0CB0	0xF7FFFEF6  BL	_I2Cx_Start+0
;__Lib_I2C_12.c, 538 :: 		
L_end_I2C1_Start:
0x0CB4	0xF8DDE000  LDR	LR, [SP, #0]
0x0CB8	0xB001    ADD	SP, SP, #4
0x0CBA	0x4770    BX	LR
0x0CBC	0x54004000  	I2C1_CR1+0
; end of _I2C1_Start
_I2Cx_Start:
;__Lib_I2C_12.c, 204 :: 		
; I2C_BASE start address is: 0 (R0)
0x0AA0	0xB083    SUB	SP, SP, #12
0x0AA2	0xF8CDE000  STR	LR, [SP, #0]
0x0AA6	0x4603    MOV	R3, R0
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 12 (R3)
;__Lib_I2C_12.c, 205 :: 		
; timeout start address is: 0 (R0)
0x0AA8	0xF04F0000  MOV	R0, #0
;__Lib_I2C_12.c, 208 :: 		
0x0AAC	0x4926    LDR	R1, [PC, #152]
0x0AAE	0x428B    CMP	R3, R1
0x0AB0	0xD106    BNE	L_I2Cx_Start7
; timeout end address is: 0 (R0)
;__Lib_I2C_12.c, 209 :: 		
0x0AB2	0x4926    LDR	R1, [PC, #152]
; timeout start address is: 16 (R4)
0x0AB4	0x680C    LDR	R4, [R1, #0]
;__Lib_I2C_12.c, 210 :: 		
0x0AB6	0x4926    LDR	R1, [PC, #152]
0x0AB8	0x680A    LDR	R2, [R1, #0]
0x0ABA	0x4926    LDR	R1, [PC, #152]
0x0ABC	0x600A    STR	R2, [R1, #0]
;__Lib_I2C_12.c, 211 :: 		
; timeout end address is: 16 (R4)
0x0ABE	0xE00B    B	L_I2Cx_Start8
L_I2Cx_Start7:
;__Lib_I2C_12.c, 212 :: 		
; timeout start address is: 0 (R0)
0x0AC0	0x4925    LDR	R1, [PC, #148]
0x0AC2	0x428B    CMP	R3, R1
0x0AC4	0xD107    BNE	L__I2Cx_Start123
; timeout end address is: 0 (R0)
;__Lib_I2C_12.c, 213 :: 		
0x0AC6	0x4925    LDR	R1, [PC, #148]
; timeout start address is: 0 (R0)
0x0AC8	0x6808    LDR	R0, [R1, #0]
;__Lib_I2C_12.c, 214 :: 		
0x0ACA	0x4925    LDR	R1, [PC, #148]
0x0ACC	0x680A    LDR	R2, [R1, #0]
0x0ACE	0x4921    LDR	R1, [PC, #132]
0x0AD0	0x600A    STR	R2, [R1, #0]
; timeout end address is: 0 (R0)
0x0AD2	0x4604    MOV	R4, R0
;__Lib_I2C_12.c, 215 :: 		
0x0AD4	0xE000    B	L_I2Cx_Start9
L__I2Cx_Start123:
;__Lib_I2C_12.c, 212 :: 		
0x0AD6	0x4604    MOV	R4, R0
;__Lib_I2C_12.c, 215 :: 		
L_I2Cx_Start9:
; timeout start address is: 16 (R4)
; timeout end address is: 16 (R4)
L_I2Cx_Start8:
;__Lib_I2C_12.c, 217 :: 		
; timeout start address is: 16 (R4)
0x0AD8	0x4922    LDR	R1, [PC, #136]
0x0ADA	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 219 :: 		
0x0ADC	0x9401    STR	R4, [SP, #4]
0x0ADE	0x9302    STR	R3, [SP, #8]
0x0AE0	0x4618    MOV	R0, R3
0x0AE2	0xF7FFFBA1  BL	__Lib_I2C_12_I2Cx_Wait_For_Idle+0
0x0AE6	0x9B02    LDR	R3, [SP, #8]
0x0AE8	0x9C01    LDR	R4, [SP, #4]
0x0AEA	0xB910    CBNZ	R0, L_I2Cx_Start10
; I2C_BASE end address is: 12 (R3)
; timeout end address is: 16 (R4)
;__Lib_I2C_12.c, 220 :: 		
0x0AEC	0xF64F70FF  MOVW	R0, #65535
0x0AF0	0xE025    B	L_end_I2Cx_Start
;__Lib_I2C_12.c, 221 :: 		
L_I2Cx_Start10:
;__Lib_I2C_12.c, 224 :: 		
; timeout start address is: 16 (R4)
; I2C_BASE start address is: 12 (R3)
0x0AF2	0x2201    MOVS	R2, #1
0x0AF4	0x6819    LDR	R1, [R3, #0]
0x0AF6	0xF3622108  BFI	R1, R2, #8, #1
0x0AFA	0x6019    STR	R1, [R3, #0]
;__Lib_I2C_12.c, 226 :: 		
0x0AFC	0xF2030114  ADDW	R1, R3, #20
0x0B00	0x680A    LDR	R2, [R1, #0]
0x0B02	0xF3C22140  UBFX	R1, R2, #9, #1
0x0B06	0xB111    CBZ	R1, L_I2Cx_Start11
; I2C_BASE end address is: 12 (R3)
; timeout end address is: 16 (R4)
;__Lib_I2C_12.c, 227 :: 		
0x0B08	0xF64F70FF  MOVW	R0, #65535
0x0B0C	0xE017    B	L_end_I2Cx_Start
;__Lib_I2C_12.c, 228 :: 		
L_I2Cx_Start11:
;__Lib_I2C_12.c, 229 :: 		
; timeout start address is: 16 (R4)
; I2C_BASE start address is: 12 (R3)
0x0B0E	0x4625    MOV	R5, R4
; timeout end address is: 16 (R4)
0x0B10	0x461C    MOV	R4, R3
L_I2Cx_Start12:
; I2C_BASE end address is: 12 (R3)
; timeout start address is: 20 (R5)
; I2C_BASE start address is: 16 (R4)
0x0B12	0x4915    LDR	R1, [PC, #84]
0x0B14	0x4620    MOV	R0, R4
0x0B16	0xF7FFFBCF  BL	_ChekXForEvent+0
0x0B1A	0xB978    CBNZ	R0, L_I2Cx_Start13
;__Lib_I2C_12.c, 230 :: 		
0x0B1C	0x4911    LDR	R1, [PC, #68]
0x0B1E	0x6809    LDR	R1, [R1, #0]
0x0B20	0xB159    CBZ	R1, L__I2Cx_Start124
;__Lib_I2C_12.c, 231 :: 		
0x0B22	0xB935    CBNZ	R5, L_I2Cx_Start15
; I2C_BASE end address is: 16 (R4)
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 232 :: 		
0x0B24	0x2006    MOVS	R0, #6
0x0B26	0x4C0B    LDR	R4, [PC, #44]
0x0B28	0x6824    LDR	R4, [R4, #0]
0x0B2A	0x47A0    BLX	R4
;__Lib_I2C_12.c, 233 :: 		
0x0B2C	0xF64F70FF  MOVW	R0, #65535
0x0B30	0xE005    B	L_end_I2Cx_Start
;__Lib_I2C_12.c, 234 :: 		
L_I2Cx_Start15:
;__Lib_I2C_12.c, 235 :: 		
; timeout start address is: 20 (R5)
; I2C_BASE start address is: 16 (R4)
0x0B32	0x1E69    SUBS	R1, R5, #1
; timeout end address is: 20 (R5)
; timeout start address is: 0 (R0)
0x0B34	0x4608    MOV	R0, R1
; timeout end address is: 0 (R0)
0x0B36	0x4605    MOV	R5, R0
;__Lib_I2C_12.c, 236 :: 		
0x0B38	0xE7FF    B	L_I2Cx_Start14
L__I2Cx_Start124:
;__Lib_I2C_12.c, 230 :: 		
;__Lib_I2C_12.c, 236 :: 		
L_I2Cx_Start14:
;__Lib_I2C_12.c, 237 :: 		
; timeout start address is: 20 (R5)
; I2C_BASE end address is: 16 (R4)
; timeout end address is: 20 (R5)
0x0B3A	0xE7EA    B	L_I2Cx_Start12
L_I2Cx_Start13:
;__Lib_I2C_12.c, 238 :: 		
0x0B3C	0x2000    MOVS	R0, #0
;__Lib_I2C_12.c, 239 :: 		
L_end_I2Cx_Start:
0x0B3E	0xF8DDE000  LDR	LR, [SP, #0]
0x0B42	0xB003    ADD	SP, SP, #12
0x0B44	0x4770    BX	LR
0x0B46	0xBF00    NOP
0x0B48	0x54004000  	I2C1_CR1+0
0x0B4C	0x02F82000  	__Lib_I2C_12__I2C1_TIMEOUT+0
0x0B50	0x037C2000  	_I2C1_Timeout_Ptr+0
0x0B54	0x03782000  	_I2Cx_Timeout_Ptr+0
0x0B58	0x58004000  	I2C2_CR1+0
0x0B5C	0x02FC2000  	__Lib_I2C_12__I2C2_TIMEOUT+0
0x0B60	0x03802000  	_I2C2_Timeout_Ptr+0
0x0B64	0x03002000  	__Lib_I2C_12__I2Cx_TIMEOUT+0
0x0B68	0x00010003  	#196609
; end of _I2Cx_Start
__Lib_I2C_12_I2Cx_Wait_For_Idle:
;__Lib_I2C_12.c, 172 :: 		
; I2C_BASE start address is: 0 (R0)
0x0228	0xB081    SUB	SP, SP, #4
0x022A	0xF8CDE000  STR	LR, [SP, #0]
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
;__Lib_I2C_12.c, 173 :: 		
; timeout start address is: 8 (R2)
0x022E	0xF04F0200  MOV	R2, #0
;__Lib_I2C_12.c, 176 :: 		
0x0232	0x4919    LDR	R1, [PC, #100]
0x0234	0x4288    CMP	R0, R1
0x0236	0xD107    BNE	L___Lib_I2C_12_I2Cx_Wait_For_Idle0
; timeout end address is: 8 (R2)
;__Lib_I2C_12.c, 177 :: 		
0x0238	0x4918    LDR	R1, [PC, #96]
; timeout start address is: 12 (R3)
0x023A	0x680B    LDR	R3, [R1, #0]
;__Lib_I2C_12.c, 178 :: 		
0x023C	0x4918    LDR	R1, [PC, #96]
0x023E	0x680A    LDR	R2, [R1, #0]
0x0240	0x4918    LDR	R1, [PC, #96]
0x0242	0x600A    STR	R2, [R1, #0]
;__Lib_I2C_12.c, 179 :: 		
0x0244	0x461C    MOV	R4, R3
; timeout end address is: 12 (R3)
0x0246	0xE00B    B	L___Lib_I2C_12_I2Cx_Wait_For_Idle1
L___Lib_I2C_12_I2Cx_Wait_For_Idle0:
;__Lib_I2C_12.c, 180 :: 		
; timeout start address is: 8 (R2)
0x0248	0x4917    LDR	R1, [PC, #92]
0x024A	0x4288    CMP	R0, R1
0x024C	0xD107    BNE	L___Lib_I2C_12_I2Cx_Wait_For_Idle121
; timeout end address is: 8 (R2)
;__Lib_I2C_12.c, 181 :: 		
0x024E	0x4917    LDR	R1, [PC, #92]
; timeout start address is: 12 (R3)
0x0250	0x680B    LDR	R3, [R1, #0]
;__Lib_I2C_12.c, 182 :: 		
0x0252	0x4917    LDR	R1, [PC, #92]
0x0254	0x680A    LDR	R2, [R1, #0]
0x0256	0x4913    LDR	R1, [PC, #76]
0x0258	0x600A    STR	R2, [R1, #0]
; timeout end address is: 12 (R3)
0x025A	0x461C    MOV	R4, R3
;__Lib_I2C_12.c, 183 :: 		
0x025C	0xE000    B	L___Lib_I2C_12_I2Cx_Wait_For_Idle2
L___Lib_I2C_12_I2Cx_Wait_For_Idle121:
;__Lib_I2C_12.c, 180 :: 		
0x025E	0x4614    MOV	R4, R2
;__Lib_I2C_12.c, 183 :: 		
L___Lib_I2C_12_I2Cx_Wait_For_Idle2:
; timeout start address is: 16 (R4)
; timeout end address is: 16 (R4)
L___Lib_I2C_12_I2Cx_Wait_For_Idle1:
;__Lib_I2C_12.c, 185 :: 		
; timeout start address is: 16 (R4)
0x0260	0x4914    LDR	R1, [PC, #80]
0x0262	0x600C    STR	R4, [R1, #0]
; I2C_BASE end address is: 0 (R0)
; timeout end address is: 16 (R4)
0x0264	0x4603    MOV	R3, R0
;__Lib_I2C_12.c, 187 :: 		
L___Lib_I2C_12_I2Cx_Wait_For_Idle3:
; timeout start address is: 16 (R4)
; I2C_BASE start address is: 12 (R3)
0x0266	0x4618    MOV	R0, R3
0x0268	0xF7FFFF80  BL	_I2Cx_Is_Idle+0
0x026C	0xB970    CBNZ	R0, L___Lib_I2C_12_I2Cx_Wait_For_Idle4
;__Lib_I2C_12.c, 188 :: 		
0x026E	0x4911    LDR	R1, [PC, #68]
0x0270	0x6809    LDR	R1, [R1, #0]
0x0272	0xB151    CBZ	R1, L___Lib_I2C_12_I2Cx_Wait_For_Idle122
;__Lib_I2C_12.c, 189 :: 		
0x0274	0xB92C    CBNZ	R4, L___Lib_I2C_12_I2Cx_Wait_For_Idle6
; I2C_BASE end address is: 12 (R3)
; timeout end address is: 16 (R4)
;__Lib_I2C_12.c, 190 :: 		
0x0276	0x2005    MOVS	R0, #5
0x0278	0x4C0A    LDR	R4, [PC, #40]
0x027A	0x6824    LDR	R4, [R4, #0]
0x027C	0x47A0    BLX	R4
;__Lib_I2C_12.c, 191 :: 		
0x027E	0x2000    MOVS	R0, #0
0x0280	0xE005    B	L_end_I2Cx_Wait_For_Idle
;__Lib_I2C_12.c, 192 :: 		
L___Lib_I2C_12_I2Cx_Wait_For_Idle6:
;__Lib_I2C_12.c, 193 :: 		
; timeout start address is: 16 (R4)
; I2C_BASE start address is: 12 (R3)
0x0282	0x1E61    SUBS	R1, R4, #1
; timeout end address is: 16 (R4)
; timeout start address is: 0 (R0)
0x0284	0x4608    MOV	R0, R1
; timeout end address is: 0 (R0)
0x0286	0x4604    MOV	R4, R0
;__Lib_I2C_12.c, 194 :: 		
0x0288	0xE7FF    B	L___Lib_I2C_12_I2Cx_Wait_For_Idle5
L___Lib_I2C_12_I2Cx_Wait_For_Idle122:
;__Lib_I2C_12.c, 188 :: 		
;__Lib_I2C_12.c, 194 :: 		
L___Lib_I2C_12_I2Cx_Wait_For_Idle5:
;__Lib_I2C_12.c, 195 :: 		
; timeout start address is: 16 (R4)
; I2C_BASE end address is: 12 (R3)
; timeout end address is: 16 (R4)
0x028A	0xE7EC    B	L___Lib_I2C_12_I2Cx_Wait_For_Idle3
L___Lib_I2C_12_I2Cx_Wait_For_Idle4:
;__Lib_I2C_12.c, 196 :: 		
0x028C	0x2001    MOVS	R0, #1
;__Lib_I2C_12.c, 197 :: 		
L_end_I2Cx_Wait_For_Idle:
0x028E	0xF8DDE000  LDR	LR, [SP, #0]
0x0292	0xB001    ADD	SP, SP, #4
0x0294	0x4770    BX	LR
0x0296	0xBF00    NOP
0x0298	0x54004000  	I2C1_CR1+0
0x029C	0x02F82000  	__Lib_I2C_12__I2C1_TIMEOUT+0
0x02A0	0x037C2000  	_I2C1_Timeout_Ptr+0
0x02A4	0x03782000  	_I2Cx_Timeout_Ptr+0
0x02A8	0x58004000  	I2C2_CR1+0
0x02AC	0x02FC2000  	__Lib_I2C_12__I2C2_TIMEOUT+0
0x02B0	0x03802000  	_I2C2_Timeout_Ptr+0
0x02B4	0x03002000  	__Lib_I2C_12__I2Cx_TIMEOUT+0
; end of __Lib_I2C_12_I2Cx_Wait_For_Idle
_I2Cx_Is_Idle:
;__Lib_I2C_12.c, 167 :: 		
; I2C_BASE start address is: 0 (R0)
0x016C	0xB081    SUB	SP, SP, #4
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
;__Lib_I2C_12.c, 168 :: 		
0x016E	0xF2000118  ADDW	R1, R0, #24
; I2C_BASE end address is: 0 (R0)
0x0172	0x680A    LDR	R2, [R1, #0]
0x0174	0xF3C20140  UBFX	R1, R2, #1, #1
0x0178	0xF0810101  EOR	R1, R1, #1
0x017C	0xB2C9    UXTB	R1, R1
0x017E	0xB2C8    UXTB	R0, R1
;__Lib_I2C_12.c, 169 :: 		
L_end_I2Cx_Is_Idle:
0x0180	0xB001    ADD	SP, SP, #4
0x0182	0x4770    BX	LR
; end of _I2Cx_Is_Idle
_ChekXForEvent:
;__Lib_I2C_12.c, 199 :: 		
; Event start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x02B8	0xB081    SUB	SP, SP, #4
0x02BA	0xF8CDE000  STR	LR, [SP, #0]
0x02BE	0x460B    MOV	R3, R1
; Event end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; Event start address is: 12 (R3)
;__Lib_I2C_12.c, 200 :: 		
; I2C_BASE end address is: 0 (R0)
0x02C0	0xF7FFFF46  BL	_I2Cx_Get_Status+0
0x02C4	0xEA000203  AND	R2, R0, R3, LSL #0
0x02C8	0x429A    CMP	R2, R3
0x02CA	0xF2400200  MOVW	R2, #0
0x02CE	0xD100    BNE	L__ChekXForEvent156
0x02D0	0x2201    MOVS	R2, #1
L__ChekXForEvent156:
; Event end address is: 12 (R3)
0x02D2	0xB2D0    UXTB	R0, R2
;__Lib_I2C_12.c, 201 :: 		
L_end_ChekXForEvent:
0x02D4	0xF8DDE000  LDR	LR, [SP, #0]
0x02D8	0xB001    ADD	SP, SP, #4
0x02DA	0x4770    BX	LR
; end of _ChekXForEvent
_I2Cx_Get_Status:
;__Lib_I2C_12.c, 154 :: 		
; I2C_BASE start address is: 0 (R0)
0x0150	0xB081    SUB	SP, SP, #4
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
;__Lib_I2C_12.c, 157 :: 		
0x0152	0xF2000114  ADDW	R1, R0, #20
0x0156	0x680A    LDR	R2, [R1, #0]
;__Lib_I2C_12.c, 158 :: 		
0x0158	0xF2000118  ADDW	R1, R0, #24
; I2C_BASE end address is: 0 (R0)
0x015C	0x6809    LDR	R1, [R1, #0]
;__Lib_I2C_12.c, 160 :: 		
0x015E	0x0409    LSLS	R1, R1, #16
0x0160	0xEA420101  ORR	R1, R2, R1, LSL #0
0x0164	0x4608    MOV	R0, R1
;__Lib_I2C_12.c, 161 :: 		
L_end_I2Cx_Get_Status:
0x0166	0xB001    ADD	SP, SP, #4
0x0168	0x4770    BX	LR
; end of _I2Cx_Get_Status
_I2C2_Start:
;__Lib_I2C_12.c, 566 :: 		
0x0CD8	0xB081    SUB	SP, SP, #4
0x0CDA	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_I2C_12.c, 567 :: 		
0x0CDE	0x4803    LDR	R0, [PC, #12]
0x0CE0	0xF7FFFEDE  BL	_I2Cx_Start+0
;__Lib_I2C_12.c, 568 :: 		
L_end_I2C2_Start:
0x0CE4	0xF8DDE000  LDR	LR, [SP, #0]
0x0CE8	0xB001    ADD	SP, SP, #4
0x0CEA	0x4770    BX	LR
0x0CEC	0x58004000  	I2C2_CR1+0
; end of _I2C2_Start
_UART1_Read:
;__Lib_UART_123_45.c, 104 :: 		
0x0CC0	0xB081    SUB	SP, SP, #4
0x0CC2	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 105 :: 		
0x0CC6	0x4803    LDR	R0, [PC, #12]
0x0CC8	0xF7FFFB08  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 106 :: 		
L_end_UART1_Read:
0x0CCC	0xF8DDE000  LDR	LR, [SP, #0]
0x0CD0	0xB001    ADD	SP, SP, #4
0x0CD2	0x4770    BX	LR
0x0CD4	0x38004001  	USART1_SR+0
; end of _UART1_Read
__Lib_UART_123_45_UARTx_Read:
;__Lib_UART_123_45.c, 96 :: 		
; UART_Base start address is: 0 (R0)
0x02DC	0xB081    SUB	SP, SP, #4
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; UART_Base end address is: 0 (R0)
;__Lib_UART_123_45.c, 98 :: 		
L___Lib_UART_123_45_UARTx_Read4:
; UART_Base start address is: 0 (R0)
0x02DE	0x6802    LDR	R2, [R0, #0]
0x02E0	0xF3C21140  UBFX	R1, R2, #5, #1
0x02E4	0xB901    CBNZ	R1, L___Lib_UART_123_45_UARTx_Read5
0x02E6	0xE7FA    B	L___Lib_UART_123_45_UARTx_Read4
L___Lib_UART_123_45_UARTx_Read5:
;__Lib_UART_123_45.c, 101 :: 		
0x02E8	0x1D01    ADDS	R1, R0, #4
; UART_Base end address is: 0 (R0)
0x02EA	0x6809    LDR	R1, [R1, #0]
0x02EC	0xB288    UXTH	R0, R1
;__Lib_UART_123_45.c, 102 :: 		
L_end_UARTx_Read:
0x02EE	0xB001    ADD	SP, SP, #4
0x02F0	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Read
_UART1_Data_Ready:
;__Lib_UART_123_45.c, 131 :: 		
0x0C10	0xB081    SUB	SP, SP, #4
0x0C12	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 132 :: 		
0x0C16	0x4803    LDR	R0, [PC, #12]
0x0C18	0xF7FFFFEE  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 133 :: 		
L_end_UART1_Data_Ready:
0x0C1C	0xF8DDE000  LDR	LR, [SP, #0]
0x0C20	0xB001    ADD	SP, SP, #4
0x0C22	0x4770    BX	LR
0x0C24	0x38004001  	USART1_SR+0
; end of _UART1_Data_Ready
__Lib_UART_123_45_UARTx_Data_Ready:
;__Lib_UART_123_45.c, 126 :: 		
; UART_Base start address is: 0 (R0)
0x0BF8	0xB081    SUB	SP, SP, #4
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
;__Lib_UART_123_45.c, 128 :: 		
0x0BFA	0x6801    LDR	R1, [R0, #0]
; UART_Base end address is: 0 (R0)
0x0BFC	0xF3C11040  UBFX	R0, R1, #5, #1
;__Lib_UART_123_45.c, 129 :: 		
L_end_UARTx_Data_Ready:
0x0C00	0xB001    ADD	SP, SP, #4
0x0C02	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Data_Ready
_UART1_Tx_Idle:
;__Lib_UART_123_45.c, 212 :: 		
0x0C28	0xB081    SUB	SP, SP, #4
0x0C2A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 213 :: 		
0x0C2E	0x4803    LDR	R0, [PC, #12]
0x0C30	0xF7FFFFE8  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 214 :: 		
L_end_UART1_Tx_Idle:
0x0C34	0xF8DDE000  LDR	LR, [SP, #0]
0x0C38	0xB001    ADD	SP, SP, #4
0x0C3A	0x4770    BX	LR
0x0C3C	0x38004001  	USART1_SR+0
; end of _UART1_Tx_Idle
__Lib_UART_123_45_UARTx_Tx_Idle:
;__Lib_UART_123_45.c, 208 :: 		
; UART_Base start address is: 0 (R0)
0x0C04	0xB081    SUB	SP, SP, #4
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
;__Lib_UART_123_45.c, 209 :: 		
0x0C06	0x6801    LDR	R1, [R0, #0]
; UART_Base end address is: 0 (R0)
0x0C08	0xF3C11080  UBFX	R0, R1, #6, #1
;__Lib_UART_123_45.c, 210 :: 		
L_end_UARTx_Tx_Idle:
0x0C0C	0xB001    ADD	SP, SP, #4
0x0C0E	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Tx_Idle
_UART2_Read:
;__Lib_UART_123_45.c, 108 :: 		
0x0D14	0xB081    SUB	SP, SP, #4
0x0D16	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 109 :: 		
0x0D1A	0x4803    LDR	R0, [PC, #12]
0x0D1C	0xF7FFFADE  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 110 :: 		
L_end_UART2_Read:
0x0D20	0xF8DDE000  LDR	LR, [SP, #0]
0x0D24	0xB001    ADD	SP, SP, #4
0x0D26	0x4770    BX	LR
0x0D28	0x44004000  	USART2_SR+0
; end of _UART2_Read
_UART2_Data_Ready:
;__Lib_UART_123_45.c, 135 :: 		
0x0E10	0xB081    SUB	SP, SP, #4
0x0E12	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 136 :: 		
0x0E16	0x4803    LDR	R0, [PC, #12]
0x0E18	0xF7FFFEEE  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 137 :: 		
L_end_UART2_Data_Ready:
0x0E1C	0xF8DDE000  LDR	LR, [SP, #0]
0x0E20	0xB001    ADD	SP, SP, #4
0x0E22	0x4770    BX	LR
0x0E24	0x44004000  	USART2_SR+0
; end of _UART2_Data_Ready
_UART2_Tx_Idle:
;__Lib_UART_123_45.c, 216 :: 		
0x0DF8	0xB081    SUB	SP, SP, #4
0x0DFA	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 217 :: 		
0x0DFE	0x4803    LDR	R0, [PC, #12]
0x0E00	0xF7FFFF00  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 218 :: 		
L_end_UART2_Tx_Idle:
0x0E04	0xF8DDE000  LDR	LR, [SP, #0]
0x0E08	0xB001    ADD	SP, SP, #4
0x0E0A	0x4770    BX	LR
0x0E0C	0x44004000  	USART2_SR+0
; end of _UART2_Tx_Idle
_UART3_Read:
;__Lib_UART_123_45.c, 112 :: 		
0x0DE0	0xB081    SUB	SP, SP, #4
0x0DE2	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 113 :: 		
0x0DE6	0x4803    LDR	R0, [PC, #12]
0x0DE8	0xF7FFFA78  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 114 :: 		
L_end_UART3_Read:
0x0DEC	0xF8DDE000  LDR	LR, [SP, #0]
0x0DF0	0xB001    ADD	SP, SP, #4
0x0DF2	0x4770    BX	LR
0x0DF4	0x48004000  	USART3_SR+0
; end of _UART3_Read
_UART3_Data_Ready:
;__Lib_UART_123_45.c, 139 :: 		
0x0E64	0xB081    SUB	SP, SP, #4
0x0E66	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 140 :: 		
0x0E6A	0x4803    LDR	R0, [PC, #12]
0x0E6C	0xF7FFFEC4  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 141 :: 		
L_end_UART3_Data_Ready:
0x0E70	0xF8DDE000  LDR	LR, [SP, #0]
0x0E74	0xB001    ADD	SP, SP, #4
0x0E76	0x4770    BX	LR
0x0E78	0x48004000  	USART3_SR+0
; end of _UART3_Data_Ready
_UART3_Tx_Idle:
;__Lib_UART_123_45.c, 220 :: 		
0x0E28	0xB081    SUB	SP, SP, #4
0x0E2A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 221 :: 		
0x0E2E	0x4803    LDR	R0, [PC, #12]
0x0E30	0xF7FFFEE8  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 222 :: 		
L_end_UART3_Tx_Idle:
0x0E34	0xF8DDE000  LDR	LR, [SP, #0]
0x0E38	0xB001    ADD	SP, SP, #4
0x0E3A	0x4770    BX	LR
0x0E3C	0x48004000  	USART3_SR+0
; end of _UART3_Tx_Idle
_UART4_Read:
;__Lib_UART_123_45.c, 116 :: 		
0x0DC8	0xB081    SUB	SP, SP, #4
0x0DCA	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 117 :: 		
0x0DCE	0x4803    LDR	R0, [PC, #12]
0x0DD0	0xF7FFFA84  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 118 :: 		
L_end_UART4_Read:
0x0DD4	0xF8DDE000  LDR	LR, [SP, #0]
0x0DD8	0xB001    ADD	SP, SP, #4
0x0DDA	0x4770    BX	LR
0x0DDC	0x4C004000  	UART4_SR+0
; end of _UART4_Read
_UART4_Data_Ready:
;__Lib_UART_123_45.c, 143 :: 		
0x0D5C	0xB081    SUB	SP, SP, #4
0x0D5E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 144 :: 		
0x0D62	0x4803    LDR	R0, [PC, #12]
0x0D64	0xF7FFFF48  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 145 :: 		
L_end_UART4_Data_Ready:
0x0D68	0xF8DDE000  LDR	LR, [SP, #0]
0x0D6C	0xB001    ADD	SP, SP, #4
0x0D6E	0x4770    BX	LR
0x0D70	0x4C004000  	UART4_SR+0
; end of _UART4_Data_Ready
_UART4_Tx_Idle:
;__Lib_UART_123_45.c, 224 :: 		
0x0D44	0xB081    SUB	SP, SP, #4
0x0D46	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 225 :: 		
0x0D4A	0x4803    LDR	R0, [PC, #12]
0x0D4C	0xF7FFFF5A  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 226 :: 		
L_end_UART4_Tx_Idle:
0x0D50	0xF8DDE000  LDR	LR, [SP, #0]
0x0D54	0xB001    ADD	SP, SP, #4
0x0D56	0x4770    BX	LR
0x0D58	0x4C004000  	UART4_SR+0
; end of _UART4_Tx_Idle
_UART5_Read:
;__Lib_UART_123_45.c, 120 :: 		
0x0D2C	0xB081    SUB	SP, SP, #4
0x0D2E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 121 :: 		
0x0D32	0x4803    LDR	R0, [PC, #12]
0x0D34	0xF7FFFAD2  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 122 :: 		
L_end_UART5_Read:
0x0D38	0xF8DDE000  LDR	LR, [SP, #0]
0x0D3C	0xB001    ADD	SP, SP, #4
0x0D3E	0x4770    BX	LR
0x0D40	0x50004000  	UART5_SR+0
; end of _UART5_Read
_UART5_Data_Ready:
;__Lib_UART_123_45.c, 147 :: 		
0x0DB0	0xB081    SUB	SP, SP, #4
0x0DB2	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 148 :: 		
0x0DB6	0x4803    LDR	R0, [PC, #12]
0x0DB8	0xF7FFFF1E  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 149 :: 		
L_end_UART5_Data_Ready:
0x0DBC	0xF8DDE000  LDR	LR, [SP, #0]
0x0DC0	0xB001    ADD	SP, SP, #4
0x0DC2	0x4770    BX	LR
0x0DC4	0x50004000  	UART5_SR+0
; end of _UART5_Data_Ready
_UART5_Tx_Idle:
;__Lib_UART_123_45.c, 228 :: 		
0x0D98	0xB081    SUB	SP, SP, #4
0x0D9A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 229 :: 		
0x0D9E	0x4803    LDR	R0, [PC, #12]
0x0DA0	0xF7FFFF30  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 230 :: 		
L_end_UART5_Tx_Idle:
0x0DA4	0xF8DDE000  LDR	LR, [SP, #0]
0x0DA8	0xB001    ADD	SP, SP, #4
0x0DAA	0x4770    BX	LR
0x0DAC	0x50004000  	UART5_SR+0
; end of _UART5_Tx_Idle
__fm_driver_hal_i2cRead:
;__hal_stm32.c, 106 :: 		static int hal_i2cRead(uint8_t slaveAddress, uint8_t *pBuf, uint16_t nBytes, uint8_t endMode)
; endMode start address is: 12 (R3)
; nBytes start address is: 8 (R2)
; pBuf start address is: 4 (R1)
; slaveAddress start address is: 0 (R0)
0x19D4	0xB082    SUB	SP, SP, #8
0x19D6	0xF8CDE000  STR	LR, [SP, #0]
; endMode end address is: 12 (R3)
; nBytes end address is: 8 (R2)
; pBuf end address is: 4 (R1)
; slaveAddress end address is: 0 (R0)
; slaveAddress start address is: 0 (R0)
; pBuf start address is: 4 (R1)
; nBytes start address is: 8 (R2)
; endMode start address is: 12 (R3)
;__hal_stm32.c, 108 :: 		int res = 0;
0x19DA	0xF2400400  MOVW	R4, #0
0x19DE	0xF8AD4004  STRH	R4, [SP, #4]
;__hal_stm32.c, 110 :: 		fp_i2cRead(slaveAddress, ptr, nBytes, endMode);
; endMode end address is: 12 (R3)
; nBytes end address is: 8 (R2)
; pBuf end address is: 4 (R1)
; slaveAddress end address is: 0 (R0)
0x19E2	0x4C04    LDR	R4, [PC, #16]
0x19E4	0x6824    LDR	R4, [R4, #0]
0x19E6	0x47A0    BLX	R4
;__hal_stm32.c, 111 :: 		return res;
0x19E8	0xF9BD0004  LDRSH	R0, [SP, #4]
;__hal_stm32.c, 112 :: 		}
L_end_hal_i2cRead:
0x19EC	0xF8DDE000  LDR	LR, [SP, #0]
0x19F0	0xB002    ADD	SP, SP, #8
0x19F2	0x4770    BX	LR
0x19F4	0x035C2000  	__fm_driver_fp_i2cRead+0
; end of __fm_driver_hal_i2cRead
_I2C1_Read:
;__Lib_I2C_12.c, 552 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x0D74	0xB081    SUB	SP, SP, #4
0x0D76	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_12.c, 553 :: 		
0x0D7A	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x0D7C	0x4613    MOV	R3, R2
0x0D7E	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x0D80	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x0D82	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x0D84	0xF7FFFC0A  BL	_I2Cx_Read+0
0x0D88	0xB001    ADD	SP, SP, #4
;__Lib_I2C_12.c, 554 :: 		
L_end_I2C1_Read:
0x0D8A	0xF8DDE000  LDR	LR, [SP, #0]
0x0D8E	0xB001    ADD	SP, SP, #4
0x0D90	0x4770    BX	LR
0x0D92	0xBF00    NOP
0x0D94	0x54004000  	I2C1_CR1+0
; end of _I2C1_Read
_I2Cx_Read:
;__Lib_I2C_12.c, 319 :: 		
; count start address is: 12 (R3)
; buf start address is: 8 (R2)
; slave_address start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x059C	0xB082    SUB	SP, SP, #8
0x059E	0xF8CDE000  STR	LR, [SP, #0]
0x05A2	0xB2CF    UXTB	R7, R1
0x05A4	0x4601    MOV	R1, R0
0x05A6	0x4698    MOV	R8, R3
; count end address is: 12 (R3)
; buf end address is: 8 (R2)
; slave_address end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 4 (R1)
; slave_address start address is: 28 (R7)
; buf start address is: 8 (R2)
; count start address is: 32 (R8)
; END_mode start address is: 12 (R3)
0x05A8	0x9B02    LDR	R3, [SP, #8]
;__Lib_I2C_12.c, 321 :: 		
; i start address is: 24 (R6)
0x05AA	0xF04F0600  MOV	R6, #0
;__Lib_I2C_12.c, 322 :: 		
; timeout start address is: 20 (R5)
0x05AE	0xF04F0500  MOV	R5, #0
;__Lib_I2C_12.c, 325 :: 		
0x05B2	0x4CC4    LDR	R4, [PC, #784]
0x05B4	0x42A1    CMP	R1, R4
0x05B6	0xD107    BNE	L_I2Cx_Read40
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 326 :: 		
0x05B8	0x4CC3    LDR	R4, [PC, #780]
; timeout start address is: 36 (R9)
0x05BA	0xF8D49000  LDR	R9, [R4, #0]
;__Lib_I2C_12.c, 327 :: 		
0x05BE	0x4CC3    LDR	R4, [PC, #780]
0x05C0	0x6825    LDR	R5, [R4, #0]
0x05C2	0x4CC3    LDR	R4, [PC, #780]
0x05C4	0x6025    STR	R5, [R4, #0]
;__Lib_I2C_12.c, 328 :: 		
; timeout end address is: 36 (R9)
0x05C6	0xE00B    B	L_I2Cx_Read41
L_I2Cx_Read40:
;__Lib_I2C_12.c, 329 :: 		
; timeout start address is: 20 (R5)
0x05C8	0x4CC2    LDR	R4, [PC, #776]
0x05CA	0x42A1    CMP	R1, R4
0x05CC	0xD107    BNE	L__I2Cx_Read130
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 330 :: 		
0x05CE	0x4CC2    LDR	R4, [PC, #776]
; timeout start address is: 0 (R0)
0x05D0	0x6820    LDR	R0, [R4, #0]
;__Lib_I2C_12.c, 331 :: 		
0x05D2	0x4CC2    LDR	R4, [PC, #776]
0x05D4	0x6825    LDR	R5, [R4, #0]
0x05D6	0x4CBE    LDR	R4, [PC, #760]
0x05D8	0x6025    STR	R5, [R4, #0]
; timeout end address is: 0 (R0)
0x05DA	0x4681    MOV	R9, R0
;__Lib_I2C_12.c, 332 :: 		
0x05DC	0xE000    B	L_I2Cx_Read42
L__I2Cx_Read130:
;__Lib_I2C_12.c, 329 :: 		
0x05DE	0x46A9    MOV	R9, R5
;__Lib_I2C_12.c, 332 :: 		
L_I2Cx_Read42:
; timeout start address is: 36 (R9)
; timeout end address is: 36 (R9)
L_I2Cx_Read41:
;__Lib_I2C_12.c, 334 :: 		
; timeout start address is: 36 (R9)
0x05E0	0x4CBF    LDR	R4, [PC, #764]
0x05E2	0xF8C49000  STR	R9, [R4, #0]
;__Lib_I2C_12.c, 336 :: 		
0x05E6	0xE1F4    B	L_I2Cx_Read43
; count end address is: 32 (R8)
;__Lib_I2C_12.c, 337 :: 		
L_I2Cx_Read45:
;__Lib_I2C_12.c, 338 :: 		
0x05E8	0xF2010510  ADDW	R5, R1, #16
0x05EC	0x007C    LSLS	R4, R7, #1
0x05EE	0xB2A4    UXTH	R4, R4
; slave_address end address is: 28 (R7)
0x05F0	0xF0440401  ORR	R4, R4, #1
0x05F4	0xB2A4    UXTH	R4, R4
0x05F6	0x602C    STR	R4, [R5, #0]
; timeout end address is: 36 (R9)
; buf end address is: 8 (R2)
; i end address is: 24 (R6)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
0x05F8	0x9601    STR	R6, [SP, #4]
0x05FA	0x4616    MOV	R6, R2
0x05FC	0x464F    MOV	R7, R9
0x05FE	0x9A01    LDR	R2, [SP, #4]
;__Lib_I2C_12.c, 339 :: 		
L_I2Cx_Read46:
; timeout start address is: 28 (R7)
; i start address is: 8 (R2)
; END_mode start address is: 12 (R3)
; buf start address is: 24 (R6)
; I2C_BASE start address is: 4 (R1)
0x0600	0xF2010414  ADDW	R4, R1, #20
0x0604	0x6825    LDR	R5, [R4, #0]
0x0606	0xF3C50440  UBFX	R4, R5, #1, #1
0x060A	0xB964    CBNZ	R4, L_I2Cx_Read47
;__Lib_I2C_12.c, 340 :: 		
0x060C	0x4CB4    LDR	R4, [PC, #720]
0x060E	0x6824    LDR	R4, [R4, #0]
0x0610	0xB144    CBZ	R4, L__I2Cx_Read131
;__Lib_I2C_12.c, 341 :: 		
0x0612	0xB927    CBNZ	R7, L_I2Cx_Read49
; i end address is: 8 (R2)
; END_mode end address is: 12 (R3)
; buf end address is: 24 (R6)
; I2C_BASE end address is: 4 (R1)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 342 :: 		
0x0614	0x2003    MOVS	R0, #3
0x0616	0x4CAE    LDR	R4, [PC, #696]
0x0618	0x6824    LDR	R4, [R4, #0]
0x061A	0x47A0    BLX	R4
;__Lib_I2C_12.c, 343 :: 		
0x061C	0xE1E2    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 344 :: 		
L_I2Cx_Read49:
;__Lib_I2C_12.c, 345 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 4 (R1)
; buf start address is: 24 (R6)
; END_mode start address is: 12 (R3)
; i start address is: 8 (R2)
0x061E	0x1E78    SUBS	R0, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0620	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 346 :: 		
0x0622	0xE7FF    B	L_I2Cx_Read48
L__I2Cx_Read131:
;__Lib_I2C_12.c, 340 :: 		
;__Lib_I2C_12.c, 346 :: 		
L_I2Cx_Read48:
;__Lib_I2C_12.c, 347 :: 		
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
0x0624	0xE7EC    B	L_I2Cx_Read46
L_I2Cx_Read47:
;__Lib_I2C_12.c, 348 :: 		
0x0626	0x2500    MOVS	R5, #0
0x0628	0x680C    LDR	R4, [R1, #0]
0x062A	0xF365248A  BFI	R4, R5, #10, #1
0x062E	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 349 :: 		
0x0630	0xF2010414  ADDW	R4, R1, #20
0x0634	0x6820    LDR	R0, [R4, #0]
; temp start address is: 0 (R0)
;__Lib_I2C_12.c, 350 :: 		
0x0636	0xBF00    NOP
;__Lib_I2C_12.c, 351 :: 		
0x0638	0xF2010418  ADDW	R4, R1, #24
0x063C	0x6824    LDR	R4, [R4, #0]
0x063E	0x0424    LSLS	R4, R4, #16
0x0640	0xEA400404  ORR	R4, R0, R4, LSL #0
0x0644	0x4620    MOV	R0, R4
; temp end address is: 0 (R0)
;__Lib_I2C_12.c, 352 :: 		
0x0646	0x2B01    CMP	R3, #1
0x0648	0xD105    BNE	L_I2Cx_Read50
;__Lib_I2C_12.c, 353 :: 		
0x064A	0x2501    MOVS	R5, #1
0x064C	0x680C    LDR	R4, [R1, #0]
0x064E	0xF3652449  BFI	R4, R5, #9, #1
0x0652	0x600C    STR	R4, [R1, #0]
0x0654	0xE004    B	L_I2Cx_Read51
L_I2Cx_Read50:
;__Lib_I2C_12.c, 355 :: 		
0x0656	0x2501    MOVS	R5, #1
0x0658	0x680C    LDR	R4, [R1, #0]
0x065A	0xF3652408  BFI	R4, R5, #8, #1
0x065E	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 356 :: 		
L_I2Cx_Read51:
;__Lib_I2C_12.c, 358 :: 		
0x0660	0x4C9F    LDR	R4, [PC, #636]
; timeout start address is: 20 (R5)
0x0662	0x6825    LDR	R5, [R4, #0]
; i end address is: 8 (R2)
; END_mode end address is: 12 (R3)
; buf end address is: 24 (R6)
; I2C_BASE end address is: 4 (R1)
; timeout end address is: 20 (R5)
0x0664	0x4691    MOV	R9, R2
0x0666	0x4698    MOV	R8, R3
0x0668	0x4637    MOV	R7, R6
0x066A	0x460E    MOV	R6, R1
;__Lib_I2C_12.c, 359 :: 		
L_I2Cx_Read52:
; timeout start address is: 20 (R5)
; I2C_BASE start address is: 24 (R6)
; buf start address is: 28 (R7)
; END_mode start address is: 32 (R8)
; i start address is: 36 (R9)
0x066C	0x499D    LDR	R1, [PC, #628]
0x066E	0x4630    MOV	R0, R6
0x0670	0xF7FFFE22  BL	_ChekXForEvent+0
0x0674	0xB968    CBNZ	R0, L_I2Cx_Read53
;__Lib_I2C_12.c, 360 :: 		
0x0676	0x4C9A    LDR	R4, [PC, #616]
0x0678	0x6824    LDR	R4, [R4, #0]
0x067A	0xB14C    CBZ	R4, L__I2Cx_Read132
;__Lib_I2C_12.c, 361 :: 		
0x067C	0xB925    CBNZ	R5, L_I2Cx_Read55
; I2C_BASE end address is: 24 (R6)
; buf end address is: 28 (R7)
; END_mode end address is: 32 (R8)
; i end address is: 36 (R9)
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 362 :: 		
0x067E	0x2003    MOVS	R0, #3
0x0680	0x4C93    LDR	R4, [PC, #588]
0x0682	0x6824    LDR	R4, [R4, #0]
0x0684	0x47A0    BLX	R4
;__Lib_I2C_12.c, 363 :: 		
0x0686	0xE1AD    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 364 :: 		
L_I2Cx_Read55:
;__Lib_I2C_12.c, 365 :: 		
; timeout start address is: 20 (R5)
; i start address is: 36 (R9)
; END_mode start address is: 32 (R8)
; buf start address is: 28 (R7)
; I2C_BASE start address is: 24 (R6)
0x0688	0x1E6C    SUBS	R4, R5, #1
; timeout end address is: 20 (R5)
; timeout start address is: 0 (R0)
0x068A	0x4620    MOV	R0, R4
; timeout end address is: 0 (R0)
0x068C	0x4605    MOV	R5, R0
;__Lib_I2C_12.c, 366 :: 		
0x068E	0xE7FF    B	L_I2Cx_Read54
L__I2Cx_Read132:
;__Lib_I2C_12.c, 360 :: 		
;__Lib_I2C_12.c, 366 :: 		
L_I2Cx_Read54:
;__Lib_I2C_12.c, 367 :: 		
; timeout start address is: 20 (R5)
; timeout end address is: 20 (R5)
0x0690	0xE7EC    B	L_I2Cx_Read52
L_I2Cx_Read53:
;__Lib_I2C_12.c, 368 :: 		
0x0692	0xEB070509  ADD	R5, R7, R9, LSL #0
; buf end address is: 28 (R7)
; i end address is: 36 (R9)
0x0696	0xF2060410  ADDW	R4, R6, #16
0x069A	0x6824    LDR	R4, [R4, #0]
0x069C	0x702C    STRB	R4, [R5, #0]
;__Lib_I2C_12.c, 369 :: 		
0x069E	0xF1B80F01  CMP	R8, #1
0x06A2	0xD113    BNE	L_I2Cx_Read56
; END_mode end address is: 32 (R8)
;__Lib_I2C_12.c, 370 :: 		
0x06A4	0x4C8E    LDR	R4, [PC, #568]
; timeout start address is: 4 (R1)
0x06A6	0x6821    LDR	R1, [R4, #0]
; I2C_BASE end address is: 24 (R6)
; timeout end address is: 4 (R1)
0x06A8	0x4630    MOV	R0, R6
;__Lib_I2C_12.c, 371 :: 		
L_I2Cx_Read57:
; timeout start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x06AA	0x6805    LDR	R5, [R0, #0]
0x06AC	0xF3C52440  UBFX	R4, R5, #9, #1
0x06B0	0xB95C    CBNZ	R4, L_I2Cx_Read58
;__Lib_I2C_12.c, 372 :: 		
0x06B2	0x4C8B    LDR	R4, [PC, #556]
0x06B4	0x6824    LDR	R4, [R4, #0]
0x06B6	0xB13C    CBZ	R4, L__I2Cx_Read133
;__Lib_I2C_12.c, 373 :: 		
0x06B8	0xB921    CBNZ	R1, L_I2Cx_Read60
; I2C_BASE end address is: 0 (R0)
; timeout end address is: 4 (R1)
;__Lib_I2C_12.c, 374 :: 		
0x06BA	0x2003    MOVS	R0, #3
0x06BC	0x4C84    LDR	R4, [PC, #528]
0x06BE	0x6824    LDR	R4, [R4, #0]
0x06C0	0x47A0    BLX	R4
;__Lib_I2C_12.c, 375 :: 		
0x06C2	0xE18F    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 376 :: 		
L_I2Cx_Read60:
;__Lib_I2C_12.c, 377 :: 		
; timeout start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x06C4	0x1E49    SUBS	R1, R1, #1
; timeout end address is: 4 (R1)
;__Lib_I2C_12.c, 378 :: 		
0x06C6	0xE7FF    B	L_I2Cx_Read59
L__I2Cx_Read133:
;__Lib_I2C_12.c, 372 :: 		
;__Lib_I2C_12.c, 378 :: 		
L_I2Cx_Read59:
;__Lib_I2C_12.c, 379 :: 		
; timeout start address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; timeout end address is: 4 (R1)
0x06C8	0xE7EF    B	L_I2Cx_Read57
L_I2Cx_Read58:
;__Lib_I2C_12.c, 380 :: 		
0x06CA	0xE012    B	L_I2Cx_Read61
L_I2Cx_Read56:
;__Lib_I2C_12.c, 382 :: 		
; I2C_BASE start address is: 24 (R6)
0x06CC	0x4C84    LDR	R4, [PC, #528]
; timeout start address is: 4 (R1)
0x06CE	0x6821    LDR	R1, [R4, #0]
; I2C_BASE end address is: 24 (R6)
; timeout end address is: 4 (R1)
0x06D0	0x4630    MOV	R0, R6
;__Lib_I2C_12.c, 383 :: 		
L_I2Cx_Read62:
; timeout start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x06D2	0x6805    LDR	R5, [R0, #0]
0x06D4	0xF3C52400  UBFX	R4, R5, #8, #1
0x06D8	0xB95C    CBNZ	R4, L_I2Cx_Read63
;__Lib_I2C_12.c, 384 :: 		
0x06DA	0x4C81    LDR	R4, [PC, #516]
0x06DC	0x6824    LDR	R4, [R4, #0]
0x06DE	0xB13C    CBZ	R4, L__I2Cx_Read134
;__Lib_I2C_12.c, 385 :: 		
0x06E0	0xB921    CBNZ	R1, L_I2Cx_Read65
; I2C_BASE end address is: 0 (R0)
; timeout end address is: 4 (R1)
;__Lib_I2C_12.c, 386 :: 		
0x06E2	0x2003    MOVS	R0, #3
0x06E4	0x4C7A    LDR	R4, [PC, #488]
0x06E6	0x6824    LDR	R4, [R4, #0]
0x06E8	0x47A0    BLX	R4
;__Lib_I2C_12.c, 387 :: 		
0x06EA	0xE17B    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 388 :: 		
L_I2Cx_Read65:
;__Lib_I2C_12.c, 389 :: 		
; timeout start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x06EC	0x1E49    SUBS	R1, R1, #1
; timeout end address is: 4 (R1)
;__Lib_I2C_12.c, 390 :: 		
0x06EE	0xE7FF    B	L_I2Cx_Read64
L__I2Cx_Read134:
;__Lib_I2C_12.c, 384 :: 		
;__Lib_I2C_12.c, 390 :: 		
L_I2Cx_Read64:
;__Lib_I2C_12.c, 391 :: 		
; timeout start address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; timeout end address is: 4 (R1)
0x06F0	0xE7EF    B	L_I2Cx_Read62
L_I2Cx_Read63:
;__Lib_I2C_12.c, 392 :: 		
L_I2Cx_Read61:
;__Lib_I2C_12.c, 393 :: 		
0x06F2	0xE177    B	L_I2Cx_Read44
;__Lib_I2C_12.c, 395 :: 		
L_I2Cx_Read66:
;__Lib_I2C_12.c, 396 :: 		
; I2C_BASE start address is: 4 (R1)
; END_mode start address is: 12 (R3)
; i start address is: 24 (R6)
; buf start address is: 8 (R2)
; timeout start address is: 36 (R9)
; slave_address start address is: 28 (R7)
0x06F4	0x2501    MOVS	R5, #1
0x06F6	0x680C    LDR	R4, [R1, #0]
0x06F8	0xF365248A  BFI	R4, R5, #10, #1
0x06FC	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 397 :: 		
0x06FE	0x2501    MOVS	R5, #1
0x0700	0x680C    LDR	R4, [R1, #0]
0x0702	0xF36524CB  BFI	R4, R5, #11, #1
0x0706	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 398 :: 		
0x0708	0xF2010510  ADDW	R5, R1, #16
0x070C	0x007C    LSLS	R4, R7, #1
0x070E	0xB2A4    UXTH	R4, R4
; slave_address end address is: 28 (R7)
0x0710	0xF0440401  ORR	R4, R4, #1
0x0714	0xB2A4    UXTH	R4, R4
0x0716	0x602C    STR	R4, [R5, #0]
; timeout end address is: 36 (R9)
; buf end address is: 8 (R2)
; i end address is: 24 (R6)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
0x0718	0x464F    MOV	R7, R9
;__Lib_I2C_12.c, 399 :: 		
L_I2Cx_Read67:
; timeout start address is: 28 (R7)
; i start address is: 24 (R6)
; END_mode start address is: 12 (R3)
; buf start address is: 8 (R2)
; I2C_BASE start address is: 4 (R1)
0x071A	0xF2010414  ADDW	R4, R1, #20
0x071E	0x6825    LDR	R5, [R4, #0]
0x0720	0xF3C50440  UBFX	R4, R5, #1, #1
0x0724	0xB964    CBNZ	R4, L_I2Cx_Read68
;__Lib_I2C_12.c, 400 :: 		
0x0726	0x4C6E    LDR	R4, [PC, #440]
0x0728	0x6824    LDR	R4, [R4, #0]
0x072A	0xB144    CBZ	R4, L__I2Cx_Read135
;__Lib_I2C_12.c, 401 :: 		
0x072C	0xB927    CBNZ	R7, L_I2Cx_Read70
; buf end address is: 8 (R2)
; i end address is: 24 (R6)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 402 :: 		
0x072E	0x2003    MOVS	R0, #3
0x0730	0x4C67    LDR	R4, [PC, #412]
0x0732	0x6824    LDR	R4, [R4, #0]
0x0734	0x47A0    BLX	R4
;__Lib_I2C_12.c, 403 :: 		
0x0736	0xE155    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 404 :: 		
L_I2Cx_Read70:
;__Lib_I2C_12.c, 405 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 4 (R1)
; END_mode start address is: 12 (R3)
; i start address is: 24 (R6)
; buf start address is: 8 (R2)
0x0738	0x1E78    SUBS	R0, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x073A	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 406 :: 		
0x073C	0xE7FF    B	L_I2Cx_Read69
L__I2Cx_Read135:
;__Lib_I2C_12.c, 400 :: 		
;__Lib_I2C_12.c, 406 :: 		
L_I2Cx_Read69:
;__Lib_I2C_12.c, 407 :: 		
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
0x073E	0xE7EC    B	L_I2Cx_Read67
L_I2Cx_Read68:
;__Lib_I2C_12.c, 408 :: 		
0x0740	0xF2010414  ADDW	R4, R1, #20
0x0744	0x6820    LDR	R0, [R4, #0]
; temp start address is: 0 (R0)
;__Lib_I2C_12.c, 409 :: 		
0x0746	0xBF00    NOP
;__Lib_I2C_12.c, 410 :: 		
0x0748	0xF2010418  ADDW	R4, R1, #24
0x074C	0x6824    LDR	R4, [R4, #0]
0x074E	0x0424    LSLS	R4, R4, #16
0x0750	0x4320    ORRS	R0, R4
; temp end address is: 0 (R0)
;__Lib_I2C_12.c, 411 :: 		
0x0752	0x2500    MOVS	R5, #0
0x0754	0x680C    LDR	R4, [R1, #0]
0x0756	0xF365248A  BFI	R4, R5, #10, #1
0x075A	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 413 :: 		
0x075C	0x4C60    LDR	R4, [PC, #384]
; timeout start address is: 28 (R7)
0x075E	0x6827    LDR	R7, [R4, #0]
; buf end address is: 8 (R2)
; i end address is: 24 (R6)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 414 :: 		
L_I2Cx_Read71:
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 4 (R1)
; buf start address is: 8 (R2)
; END_mode start address is: 12 (R3)
; i start address is: 24 (R6)
0x0760	0xF2010414  ADDW	R4, R1, #20
0x0764	0x6825    LDR	R5, [R4, #0]
0x0766	0xF3C50480  UBFX	R4, R5, #2, #1
0x076A	0xB964    CBNZ	R4, L_I2Cx_Read72
;__Lib_I2C_12.c, 415 :: 		
0x076C	0x4C5C    LDR	R4, [PC, #368]
0x076E	0x6824    LDR	R4, [R4, #0]
0x0770	0xB144    CBZ	R4, L__I2Cx_Read136
;__Lib_I2C_12.c, 416 :: 		
0x0772	0xB927    CBNZ	R7, L_I2Cx_Read74
; buf end address is: 8 (R2)
; i end address is: 24 (R6)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 417 :: 		
0x0774	0x2003    MOVS	R0, #3
0x0776	0x4C56    LDR	R4, [PC, #344]
0x0778	0x6824    LDR	R4, [R4, #0]
0x077A	0x47A0    BLX	R4
;__Lib_I2C_12.c, 418 :: 		
0x077C	0xE132    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 419 :: 		
L_I2Cx_Read74:
;__Lib_I2C_12.c, 420 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 4 (R1)
; END_mode start address is: 12 (R3)
; i start address is: 24 (R6)
; buf start address is: 8 (R2)
0x077E	0x1E78    SUBS	R0, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0780	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 421 :: 		
0x0782	0xE7FF    B	L_I2Cx_Read73
L__I2Cx_Read136:
;__Lib_I2C_12.c, 415 :: 		
;__Lib_I2C_12.c, 421 :: 		
L_I2Cx_Read73:
;__Lib_I2C_12.c, 422 :: 		
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
0x0784	0xE7EC    B	L_I2Cx_Read71
L_I2Cx_Read72:
;__Lib_I2C_12.c, 423 :: 		
0x0786	0x2B01    CMP	R3, #1
0x0788	0xD105    BNE	L_I2Cx_Read75
;__Lib_I2C_12.c, 424 :: 		
0x078A	0x2501    MOVS	R5, #1
0x078C	0x680C    LDR	R4, [R1, #0]
0x078E	0xF3652449  BFI	R4, R5, #9, #1
0x0792	0x600C    STR	R4, [R1, #0]
0x0794	0xE004    B	L_I2Cx_Read76
L_I2Cx_Read75:
;__Lib_I2C_12.c, 426 :: 		
0x0796	0x2501    MOVS	R5, #1
0x0798	0x680C    LDR	R4, [R1, #0]
0x079A	0xF3652408  BFI	R4, R5, #8, #1
0x079E	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 427 :: 		
L_I2Cx_Read76:
;__Lib_I2C_12.c, 428 :: 		
0x07A0	0x1995    ADDS	R5, R2, R6
0x07A2	0xF2010410  ADDW	R4, R1, #16
0x07A6	0x6824    LDR	R4, [R4, #0]
0x07A8	0x702C    STRB	R4, [R5, #0]
0x07AA	0x1C74    ADDS	R4, R6, #1
; i end address is: 24 (R6)
;__Lib_I2C_12.c, 429 :: 		
0x07AC	0x1915    ADDS	R5, R2, R4
; buf end address is: 8 (R2)
0x07AE	0xF2010410  ADDW	R4, R1, #16
0x07B2	0x6824    LDR	R4, [R4, #0]
0x07B4	0x702C    STRB	R4, [R5, #0]
;__Lib_I2C_12.c, 430 :: 		
0x07B6	0x2B01    CMP	R3, #1
0x07B8	0xD114    BNE	L_I2Cx_Read77
; END_mode end address is: 12 (R3)
;__Lib_I2C_12.c, 431 :: 		
0x07BA	0x4C49    LDR	R4, [PC, #292]
; timeout start address is: 8 (R2)
0x07BC	0x6822    LDR	R2, [R4, #0]
; timeout end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_12.c, 432 :: 		
L_I2Cx_Read78:
; timeout start address is: 8 (R2)
; I2C_BASE start address is: 4 (R1)
0x07BE	0x680D    LDR	R5, [R1, #0]
0x07C0	0xF3C52440  UBFX	R4, R5, #9, #1
0x07C4	0xB964    CBNZ	R4, L_I2Cx_Read79
;__Lib_I2C_12.c, 433 :: 		
0x07C6	0x4C46    LDR	R4, [PC, #280]
0x07C8	0x6824    LDR	R4, [R4, #0]
0x07CA	0xB144    CBZ	R4, L__I2Cx_Read137
;__Lib_I2C_12.c, 434 :: 		
0x07CC	0xB922    CBNZ	R2, L_I2Cx_Read81
; timeout end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_12.c, 435 :: 		
0x07CE	0x2003    MOVS	R0, #3
0x07D0	0x4C3F    LDR	R4, [PC, #252]
0x07D2	0x6824    LDR	R4, [R4, #0]
0x07D4	0x47A0    BLX	R4
;__Lib_I2C_12.c, 436 :: 		
0x07D6	0xE105    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 437 :: 		
L_I2Cx_Read81:
;__Lib_I2C_12.c, 438 :: 		
; I2C_BASE start address is: 4 (R1)
; timeout start address is: 8 (R2)
0x07D8	0x1E50    SUBS	R0, R2, #1
; timeout end address is: 8 (R2)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x07DA	0x4602    MOV	R2, R0
;__Lib_I2C_12.c, 439 :: 		
0x07DC	0xE7FF    B	L_I2Cx_Read80
L__I2Cx_Read137:
;__Lib_I2C_12.c, 433 :: 		
;__Lib_I2C_12.c, 439 :: 		
L_I2Cx_Read80:
;__Lib_I2C_12.c, 440 :: 		
; timeout start address is: 8 (R2)
; timeout end address is: 8 (R2)
0x07DE	0xE7EE    B	L_I2Cx_Read78
L_I2Cx_Read79:
;__Lib_I2C_12.c, 441 :: 		
0x07E0	0x4608    MOV	R0, R1
0x07E2	0xE013    B	L_I2Cx_Read82
L_I2Cx_Read77:
;__Lib_I2C_12.c, 443 :: 		
0x07E4	0x4C3E    LDR	R4, [PC, #248]
; timeout start address is: 8 (R2)
0x07E6	0x6822    LDR	R2, [R4, #0]
; timeout end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_12.c, 444 :: 		
L_I2Cx_Read83:
; timeout start address is: 8 (R2)
; I2C_BASE start address is: 4 (R1)
0x07E8	0x680D    LDR	R5, [R1, #0]
0x07EA	0xF3C52400  UBFX	R4, R5, #8, #1
0x07EE	0xB964    CBNZ	R4, L_I2Cx_Read84
;__Lib_I2C_12.c, 445 :: 		
0x07F0	0x4C3B    LDR	R4, [PC, #236]
0x07F2	0x6824    LDR	R4, [R4, #0]
0x07F4	0xB144    CBZ	R4, L__I2Cx_Read138
;__Lib_I2C_12.c, 446 :: 		
0x07F6	0xB922    CBNZ	R2, L_I2Cx_Read86
; timeout end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_12.c, 447 :: 		
0x07F8	0x2003    MOVS	R0, #3
0x07FA	0x4C35    LDR	R4, [PC, #212]
0x07FC	0x6824    LDR	R4, [R4, #0]
0x07FE	0x47A0    BLX	R4
;__Lib_I2C_12.c, 448 :: 		
0x0800	0xE0F0    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 449 :: 		
L_I2Cx_Read86:
;__Lib_I2C_12.c, 450 :: 		
; I2C_BASE start address is: 4 (R1)
; timeout start address is: 8 (R2)
0x0802	0x1E50    SUBS	R0, R2, #1
; timeout end address is: 8 (R2)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0804	0x4602    MOV	R2, R0
;__Lib_I2C_12.c, 451 :: 		
0x0806	0xE7FF    B	L_I2Cx_Read85
L__I2Cx_Read138:
;__Lib_I2C_12.c, 445 :: 		
;__Lib_I2C_12.c, 451 :: 		
L_I2Cx_Read85:
;__Lib_I2C_12.c, 452 :: 		
; timeout start address is: 8 (R2)
; timeout end address is: 8 (R2)
0x0808	0xE7EE    B	L_I2Cx_Read83
L_I2Cx_Read84:
;__Lib_I2C_12.c, 453 :: 		
0x080A	0x4608    MOV	R0, R1
L_I2Cx_Read82:
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_12.c, 455 :: 		
; I2C_BASE start address is: 0 (R0)
0x080C	0x2500    MOVS	R5, #0
0x080E	0x6804    LDR	R4, [R0, #0]
0x0810	0xF36524CB  BFI	R4, R5, #11, #1
0x0814	0x6004    STR	R4, [R0, #0]
; I2C_BASE end address is: 0 (R0)
;__Lib_I2C_12.c, 457 :: 		
0x0816	0xE0E5    B	L_I2Cx_Read44
;__Lib_I2C_12.c, 459 :: 		
L_I2Cx_Read87:
;__Lib_I2C_12.c, 460 :: 		
; I2C_BASE start address is: 4 (R1)
; END_mode start address is: 12 (R3)
; buf start address is: 8 (R2)
; timeout start address is: 36 (R9)
; count start address is: 32 (R8)
; slave_address start address is: 28 (R7)
0x0818	0x2501    MOVS	R5, #1
0x081A	0x680C    LDR	R4, [R1, #0]
0x081C	0xF365248A  BFI	R4, R5, #10, #1
0x0820	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 461 :: 		
0x0822	0xF2010510  ADDW	R5, R1, #16
0x0826	0x007C    LSLS	R4, R7, #1
0x0828	0xB2A4    UXTH	R4, R4
; slave_address end address is: 28 (R7)
0x082A	0xF0440401  ORR	R4, R4, #1
0x082E	0xB2A4    UXTH	R4, R4
0x0830	0x602C    STR	R4, [R5, #0]
; count end address is: 32 (R8)
; timeout end address is: 36 (R9)
; buf end address is: 8 (R2)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
0x0832	0x4646    MOV	R6, R8
0x0834	0x46C8    MOV	R8, R9
0x0836	0x4689    MOV	R9, R1
0x0838	0x4617    MOV	R7, R2
0x083A	0x461D    MOV	R5, R3
;__Lib_I2C_12.c, 462 :: 		
L_I2Cx_Read88:
; timeout start address is: 32 (R8)
; END_mode start address is: 20 (R5)
; count start address is: 24 (R6)
; buf start address is: 28 (R7)
; I2C_BASE start address is: 36 (R9)
0x083C	0x492A    LDR	R1, [PC, #168]
0x083E	0x4648    MOV	R0, R9
0x0840	0xF7FFFD3A  BL	_ChekXForEvent+0
0x0844	0xB978    CBNZ	R0, L_I2Cx_Read89
;__Lib_I2C_12.c, 463 :: 		
0x0846	0x4C26    LDR	R4, [PC, #152]
0x0848	0x6824    LDR	R4, [R4, #0]
0x084A	0xB15C    CBZ	R4, L__I2Cx_Read139
;__Lib_I2C_12.c, 464 :: 		
0x084C	0xF1B80F00  CMP	R8, #0
0x0850	0xD104    BNE	L_I2Cx_Read91
; END_mode end address is: 20 (R5)
; count end address is: 24 (R6)
; I2C_BASE end address is: 36 (R9)
; timeout end address is: 32 (R8)
; buf end address is: 28 (R7)
;__Lib_I2C_12.c, 465 :: 		
0x0852	0x2003    MOVS	R0, #3
0x0854	0x4C1E    LDR	R4, [PC, #120]
0x0856	0x6824    LDR	R4, [R4, #0]
0x0858	0x47A0    BLX	R4
;__Lib_I2C_12.c, 466 :: 		
0x085A	0xE0C3    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 467 :: 		
L_I2Cx_Read91:
;__Lib_I2C_12.c, 468 :: 		
; buf start address is: 28 (R7)
; timeout start address is: 32 (R8)
; I2C_BASE start address is: 36 (R9)
; count start address is: 24 (R6)
; END_mode start address is: 20 (R5)
0x085C	0xF1A80001  SUB	R0, R8, #1
; timeout end address is: 32 (R8)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0860	0x4680    MOV	R8, R0
;__Lib_I2C_12.c, 469 :: 		
0x0862	0xE7FF    B	L_I2Cx_Read90
L__I2Cx_Read139:
;__Lib_I2C_12.c, 463 :: 		
;__Lib_I2C_12.c, 469 :: 		
L_I2Cx_Read90:
;__Lib_I2C_12.c, 470 :: 		
; timeout start address is: 32 (R8)
; timeout end address is: 32 (R8)
0x0864	0xE7EA    B	L_I2Cx_Read88
L_I2Cx_Read89:
;__Lib_I2C_12.c, 471 :: 		
; i start address is: 4 (R1)
0x0866	0x2100    MOVS	R1, #0
; END_mode end address is: 20 (R5)
; count end address is: 24 (R6)
; I2C_BASE end address is: 36 (R9)
; i end address is: 4 (R1)
; buf end address is: 28 (R7)
0x0868	0x46A8    MOV	R8, R5
0x086A	0x464A    MOV	R2, R9
0x086C	0x46B1    MOV	R9, R6
0x086E	0x463B    MOV	R3, R7
;__Lib_I2C_12.c, 472 :: 		
L_I2Cx_Read92:
; i start address is: 4 (R1)
; I2C_BASE start address is: 8 (R2)
; buf start address is: 12 (R3)
; count start address is: 36 (R9)
; END_mode start address is: 32 (R8)
0x0870	0xF1A90403  SUB	R4, R9, #3
0x0874	0x42A1    CMP	R1, R4
0x0876	0xD222    BCS	L_I2Cx_Read93
;__Lib_I2C_12.c, 473 :: 		
0x0878	0x4C19    LDR	R4, [PC, #100]
; timeout start address is: 20 (R5)
0x087A	0x6825    LDR	R5, [R4, #0]
; buf end address is: 12 (R3)
; count end address is: 36 (R9)
; i end address is: 4 (R1)
; I2C_BASE end address is: 8 (R2)
; END_mode end address is: 32 (R8)
; timeout end address is: 20 (R5)
0x087C	0x468A    MOV	R10, R1
0x087E	0x4617    MOV	R7, R2
0x0880	0x461E    MOV	R6, R3
;__Lib_I2C_12.c, 474 :: 		
L_I2Cx_Read94:
; timeout start address is: 20 (R5)
; END_mode start address is: 32 (R8)
; count start address is: 36 (R9)
; buf start address is: 24 (R6)
; I2C_BASE start address is: 28 (R7)
; i start address is: 40 (R10)
0x0882	0x4918    LDR	R1, [PC, #96]
0x0884	0x4638    MOV	R0, R7
0x0886	0xF7FFFD17  BL	_ChekXForEvent+0
0x088A	0xB960    CBNZ	R0, L_I2Cx_Read95
;__Lib_I2C_12.c, 475 :: 		
0x088C	0x4C14    LDR	R4, [PC, #80]
0x088E	0x6824    LDR	R4, [R4, #0]
0x0890	0xB144    CBZ	R4, L__I2Cx_Read140
;__Lib_I2C_12.c, 476 :: 		
0x0892	0xB925    CBNZ	R5, L_I2Cx_Read97
; count end address is: 36 (R9)
; I2C_BASE end address is: 28 (R7)
; i end address is: 40 (R10)
; buf end address is: 24 (R6)
; END_mode end address is: 32 (R8)
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 477 :: 		
0x0894	0x2003    MOVS	R0, #3
0x0896	0x4C0E    LDR	R4, [PC, #56]
0x0898	0x6824    LDR	R4, [R4, #0]
0x089A	0x47A0    BLX	R4
;__Lib_I2C_12.c, 478 :: 		
0x089C	0xE0A2    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 479 :: 		
L_I2Cx_Read97:
;__Lib_I2C_12.c, 480 :: 		
; timeout start address is: 20 (R5)
; END_mode start address is: 32 (R8)
; buf start address is: 24 (R6)
; i start address is: 40 (R10)
; I2C_BASE start address is: 28 (R7)
; count start address is: 36 (R9)
0x089E	0x1E68    SUBS	R0, R5, #1
; timeout end address is: 20 (R5)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x08A0	0x4605    MOV	R5, R0
;__Lib_I2C_12.c, 481 :: 		
0x08A2	0xE7FF    B	L_I2Cx_Read96
L__I2Cx_Read140:
;__Lib_I2C_12.c, 475 :: 		
;__Lib_I2C_12.c, 481 :: 		
L_I2Cx_Read96:
;__Lib_I2C_12.c, 482 :: 		
; timeout start address is: 20 (R5)
; timeout end address is: 20 (R5)
0x08A4	0xE7ED    B	L_I2Cx_Read94
L_I2Cx_Read95:
;__Lib_I2C_12.c, 483 :: 		
0x08A6	0xEB06050A  ADD	R5, R6, R10, LSL #0
0x08AA	0xF2070410  ADDW	R4, R7, #16
0x08AE	0x6824    LDR	R4, [R4, #0]
0x08B0	0x702C    STRB	R4, [R5, #0]
0x08B2	0xF10A0401  ADD	R4, R10, #1
; i end address is: 40 (R10)
; i start address is: 4 (R1)
0x08B6	0x4621    MOV	R1, R4
;__Lib_I2C_12.c, 484 :: 		
; count end address is: 36 (R9)
; I2C_BASE end address is: 28 (R7)
; buf end address is: 24 (R6)
0x08B8	0x4633    MOV	R3, R6
0x08BA	0x463A    MOV	R2, R7
0x08BC	0xE7D8    B	L_I2Cx_Read92
L_I2Cx_Read93:
;__Lib_I2C_12.c, 485 :: 		
; I2C_BASE start address is: 8 (R2)
; buf start address is: 12 (R3)
0x08BE	0x4C08    LDR	R4, [PC, #32]
0x08C0	0xF000B814  B	#40
0x08C4	0x54004000  	I2C1_CR1+0
0x08C8	0x02F82000  	__Lib_I2C_12__I2C1_TIMEOUT+0
0x08CC	0x037C2000  	_I2C1_Timeout_Ptr+0
0x08D0	0x03782000  	_I2Cx_Timeout_Ptr+0
0x08D4	0x58004000  	I2C2_CR1+0
0x08D8	0x02FC2000  	__Lib_I2C_12__I2C2_TIMEOUT+0
0x08DC	0x03802000  	_I2C2_Timeout_Ptr+0
0x08E0	0x03002000  	__Lib_I2C_12__I2Cx_TIMEOUT+0
0x08E4	0x00400003  	#196672
0x08E8	0x00020003  	#196610
; timeout start address is: 28 (R7)
0x08EC	0x6827    LDR	R7, [R4, #0]
; buf end address is: 12 (R3)
; i end address is: 4 (R1)
; I2C_BASE end address is: 8 (R2)
; timeout end address is: 28 (R7)
; END_mode end address is: 32 (R8)
0x08EE	0x9301    STR	R3, [SP, #4]
0x08F0	0x460B    MOV	R3, R1
0x08F2	0x4616    MOV	R6, R2
0x08F4	0x4642    MOV	R2, R8
0x08F6	0x9901    LDR	R1, [SP, #4]
;__Lib_I2C_12.c, 486 :: 		
L_I2Cx_Read98:
; timeout start address is: 28 (R7)
; END_mode start address is: 8 (R2)
; buf start address is: 4 (R1)
; I2C_BASE start address is: 24 (R6)
; i start address is: 12 (R3)
0x08F8	0xF2060414  ADDW	R4, R6, #20
0x08FC	0x6825    LDR	R5, [R4, #0]
0x08FE	0xF3C50480  UBFX	R4, R5, #2, #1
0x0902	0xB964    CBNZ	R4, L_I2Cx_Read99
;__Lib_I2C_12.c, 487 :: 		
0x0904	0x4C39    LDR	R4, [PC, #228]
0x0906	0x6824    LDR	R4, [R4, #0]
0x0908	0xB144    CBZ	R4, L__I2Cx_Read141
;__Lib_I2C_12.c, 488 :: 		
0x090A	0xB927    CBNZ	R7, L_I2Cx_Read101
; END_mode end address is: 8 (R2)
; i end address is: 12 (R3)
; buf end address is: 4 (R1)
; timeout end address is: 28 (R7)
; I2C_BASE end address is: 24 (R6)
;__Lib_I2C_12.c, 489 :: 		
0x090C	0x2003    MOVS	R0, #3
0x090E	0x4C38    LDR	R4, [PC, #224]
0x0910	0x6824    LDR	R4, [R4, #0]
0x0912	0x47A0    BLX	R4
;__Lib_I2C_12.c, 490 :: 		
0x0914	0xE066    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 491 :: 		
L_I2Cx_Read101:
;__Lib_I2C_12.c, 492 :: 		
; I2C_BASE start address is: 24 (R6)
; timeout start address is: 28 (R7)
; buf start address is: 4 (R1)
; i start address is: 12 (R3)
; END_mode start address is: 8 (R2)
0x0916	0x1E78    SUBS	R0, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0918	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 493 :: 		
0x091A	0xE7FF    B	L_I2Cx_Read100
L__I2Cx_Read141:
;__Lib_I2C_12.c, 487 :: 		
;__Lib_I2C_12.c, 493 :: 		
L_I2Cx_Read100:
;__Lib_I2C_12.c, 494 :: 		
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
0x091C	0xE7EC    B	L_I2Cx_Read98
L_I2Cx_Read99:
;__Lib_I2C_12.c, 495 :: 		
0x091E	0x2500    MOVS	R5, #0
0x0920	0x6834    LDR	R4, [R6, #0]
0x0922	0xF365248A  BFI	R4, R5, #10, #1
0x0926	0x6034    STR	R4, [R6, #0]
;__Lib_I2C_12.c, 496 :: 		
0x0928	0x18CD    ADDS	R5, R1, R3
0x092A	0xF2060410  ADDW	R4, R6, #16
0x092E	0x6824    LDR	R4, [R4, #0]
0x0930	0x702C    STRB	R4, [R5, #0]
0x0932	0x1C58    ADDS	R0, R3, #1
; i end address is: 12 (R3)
; i start address is: 0 (R0)
;__Lib_I2C_12.c, 498 :: 		
0x0934	0x4C2D    LDR	R4, [PC, #180]
; timeout start address is: 12 (R3)
0x0936	0x6823    LDR	R3, [R4, #0]
; END_mode end address is: 8 (R2)
; timeout end address is: 12 (R3)
; i end address is: 0 (R0)
; buf end address is: 4 (R1)
; I2C_BASE end address is: 24 (R6)
0x0938	0x4617    MOV	R7, R2
0x093A	0x4602    MOV	R2, R0
;__Lib_I2C_12.c, 499 :: 		
L_I2Cx_Read102:
; timeout start address is: 12 (R3)
; i start address is: 8 (R2)
; I2C_BASE start address is: 24 (R6)
; buf start address is: 4 (R1)
; END_mode start address is: 28 (R7)
0x093C	0xF2060414  ADDW	R4, R6, #20
0x0940	0x6825    LDR	R5, [R4, #0]
0x0942	0xF3C50480  UBFX	R4, R5, #2, #1
0x0946	0xB964    CBNZ	R4, L_I2Cx_Read103
;__Lib_I2C_12.c, 500 :: 		
0x0948	0x4C28    LDR	R4, [PC, #160]
0x094A	0x6824    LDR	R4, [R4, #0]
0x094C	0xB144    CBZ	R4, L__I2Cx_Read142
;__Lib_I2C_12.c, 501 :: 		
0x094E	0xB923    CBNZ	R3, L_I2Cx_Read105
; END_mode end address is: 28 (R7)
; timeout end address is: 12 (R3)
; buf end address is: 4 (R1)
; i end address is: 8 (R2)
; I2C_BASE end address is: 24 (R6)
;__Lib_I2C_12.c, 502 :: 		
0x0950	0x2003    MOVS	R0, #3
0x0952	0x4C27    LDR	R4, [PC, #156]
0x0954	0x6824    LDR	R4, [R4, #0]
0x0956	0x47A0    BLX	R4
;__Lib_I2C_12.c, 503 :: 		
0x0958	0xE044    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 504 :: 		
L_I2Cx_Read105:
;__Lib_I2C_12.c, 505 :: 		
; I2C_BASE start address is: 24 (R6)
; i start address is: 8 (R2)
; buf start address is: 4 (R1)
; timeout start address is: 12 (R3)
; END_mode start address is: 28 (R7)
0x095A	0x1E58    SUBS	R0, R3, #1
; timeout end address is: 12 (R3)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x095C	0x4603    MOV	R3, R0
;__Lib_I2C_12.c, 506 :: 		
0x095E	0xE7FF    B	L_I2Cx_Read104
L__I2Cx_Read142:
;__Lib_I2C_12.c, 500 :: 		
;__Lib_I2C_12.c, 506 :: 		
L_I2Cx_Read104:
;__Lib_I2C_12.c, 507 :: 		
; timeout start address is: 12 (R3)
; timeout end address is: 12 (R3)
0x0960	0xE7EC    B	L_I2Cx_Read102
L_I2Cx_Read103:
;__Lib_I2C_12.c, 508 :: 		
0x0962	0x2F01    CMP	R7, #1
0x0964	0xD107    BNE	L_I2Cx_Read106
; END_mode end address is: 28 (R7)
;__Lib_I2C_12.c, 509 :: 		
0x0966	0x2501    MOVS	R5, #1
0x0968	0x6834    LDR	R4, [R6, #0]
0x096A	0xF3652449  BFI	R4, R5, #9, #1
0x096E	0x6034    STR	R4, [R6, #0]
0x0970	0x4610    MOV	R0, R2
0x0972	0x4632    MOV	R2, R6
0x0974	0xE021    B	L_I2Cx_Read107
L_I2Cx_Read106:
;__Lib_I2C_12.c, 511 :: 		
0x0976	0x2501    MOVS	R5, #1
0x0978	0x6834    LDR	R4, [R6, #0]
0x097A	0xF3652408  BFI	R4, R5, #8, #1
0x097E	0x6034    STR	R4, [R6, #0]
;__Lib_I2C_12.c, 513 :: 		
0x0980	0x4C1A    LDR	R4, [PC, #104]
; timeout start address is: 32 (R8)
0x0982	0xF8D48000  LDR	R8, [R4, #0]
; timeout end address is: 32 (R8)
; buf end address is: 4 (R1)
; i end address is: 8 (R2)
; I2C_BASE end address is: 24 (R6)
0x0986	0x4617    MOV	R7, R2
0x0988	0x460D    MOV	R5, R1
;__Lib_I2C_12.c, 514 :: 		
L_I2Cx_Read108:
; timeout start address is: 32 (R8)
; buf start address is: 20 (R5)
; I2C_BASE start address is: 24 (R6)
; i start address is: 28 (R7)
0x098A	0x491A    LDR	R1, [PC, #104]
0x098C	0x4630    MOV	R0, R6
0x098E	0xF7FFFC93  BL	_ChekXForEvent+0
0x0992	0xB978    CBNZ	R0, L_I2Cx_Read109
;__Lib_I2C_12.c, 515 :: 		
0x0994	0x4C15    LDR	R4, [PC, #84]
0x0996	0x6824    LDR	R4, [R4, #0]
0x0998	0xB15C    CBZ	R4, L__I2Cx_Read143
;__Lib_I2C_12.c, 516 :: 		
0x099A	0xF1B80F00  CMP	R8, #0
0x099E	0xD104    BNE	L_I2Cx_Read111
; buf end address is: 20 (R5)
; i end address is: 28 (R7)
; timeout end address is: 32 (R8)
; I2C_BASE end address is: 24 (R6)
;__Lib_I2C_12.c, 517 :: 		
0x09A0	0x2003    MOVS	R0, #3
0x09A2	0x4C13    LDR	R4, [PC, #76]
0x09A4	0x6824    LDR	R4, [R4, #0]
0x09A6	0x47A0    BLX	R4
;__Lib_I2C_12.c, 518 :: 		
0x09A8	0xE01C    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 519 :: 		
L_I2Cx_Read111:
;__Lib_I2C_12.c, 520 :: 		
; I2C_BASE start address is: 24 (R6)
; timeout start address is: 32 (R8)
; i start address is: 28 (R7)
; buf start address is: 20 (R5)
0x09AA	0xF1A80001  SUB	R0, R8, #1
; timeout end address is: 32 (R8)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x09AE	0x4680    MOV	R8, R0
;__Lib_I2C_12.c, 521 :: 		
0x09B0	0xE7FF    B	L_I2Cx_Read110
L__I2Cx_Read143:
;__Lib_I2C_12.c, 515 :: 		
;__Lib_I2C_12.c, 521 :: 		
L_I2Cx_Read110:
;__Lib_I2C_12.c, 522 :: 		
; timeout start address is: 32 (R8)
; timeout end address is: 32 (R8)
0x09B2	0xE7EA    B	L_I2Cx_Read108
L_I2Cx_Read109:
;__Lib_I2C_12.c, 523 :: 		
0x09B4	0x4629    MOV	R1, R5
; i end address is: 28 (R7)
; I2C_BASE end address is: 24 (R6)
0x09B6	0x4632    MOV	R2, R6
0x09B8	0x4638    MOV	R0, R7
L_I2Cx_Read107:
; buf end address is: 20 (R5)
;__Lib_I2C_12.c, 524 :: 		
; i start address is: 0 (R0)
; I2C_BASE start address is: 8 (R2)
; buf start address is: 4 (R1)
0x09BA	0x180D    ADDS	R5, R1, R0
0x09BC	0xF2020410  ADDW	R4, R2, #16
0x09C0	0x6824    LDR	R4, [R4, #0]
0x09C2	0x702C    STRB	R4, [R5, #0]
0x09C4	0x1C44    ADDS	R4, R0, #1
; i end address is: 0 (R0)
;__Lib_I2C_12.c, 525 :: 		
0x09C6	0x190D    ADDS	R5, R1, R4
; buf end address is: 4 (R1)
0x09C8	0xF2020410  ADDW	R4, R2, #16
; I2C_BASE end address is: 8 (R2)
0x09CC	0x6824    LDR	R4, [R4, #0]
0x09CE	0x702C    STRB	R4, [R5, #0]
;__Lib_I2C_12.c, 526 :: 		
0x09D0	0xE008    B	L_I2Cx_Read44
;__Lib_I2C_12.c, 528 :: 		
L_I2Cx_Read43:
; I2C_BASE start address is: 4 (R1)
; END_mode start address is: 12 (R3)
; i start address is: 24 (R6)
; buf start address is: 8 (R2)
; timeout start address is: 36 (R9)
; count start address is: 32 (R8)
; slave_address start address is: 28 (R7)
0x09D2	0xF1B80F01  CMP	R8, #1
0x09D6	0xF43FAE07  BEQ	L_I2Cx_Read45
0x09DA	0xF1B80F02  CMP	R8, #2
0x09DE	0xF43FAE89  BEQ	L_I2Cx_Read66
; i end address is: 24 (R6)
0x09E2	0xE719    B	L_I2Cx_Read87
; slave_address end address is: 28 (R7)
; count end address is: 32 (R8)
; timeout end address is: 36 (R9)
; buf end address is: 8 (R2)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
L_I2Cx_Read44:
;__Lib_I2C_12.c, 529 :: 		
L_end_I2Cx_Read:
0x09E4	0xF8DDE000  LDR	LR, [SP, #0]
0x09E8	0xB002    ADD	SP, SP, #8
0x09EA	0x4770    BX	LR
0x09EC	0x03002000  	__Lib_I2C_12__I2Cx_TIMEOUT+0
0x09F0	0x03782000  	_I2Cx_Timeout_Ptr+0
0x09F4	0x00010003  	#196609
; end of _I2Cx_Read
_I2C2_Read:
;__Lib_I2C_12.c, 582 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x0E40	0xB081    SUB	SP, SP, #4
0x0E42	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_12.c, 583 :: 		
0x0E46	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x0E48	0x4613    MOV	R3, R2
0x0E4A	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x0E4C	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x0E4E	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x0E50	0xF7FFFBA4  BL	_I2Cx_Read+0
0x0E54	0xB001    ADD	SP, SP, #4
;__Lib_I2C_12.c, 584 :: 		
L_end_I2C2_Read:
0x0E56	0xF8DDE000  LDR	LR, [SP, #0]
0x0E5A	0xB001    ADD	SP, SP, #4
0x0E5C	0x4770    BX	LR
0x0E5E	0xBF00    NOP
0x0E60	0x58004000  	I2C2_CR1+0
; end of _I2C2_Read
_fm_setBits:
;__fm_driver.c, 285 :: 		void fm_setBits( uint16_t *registerBuffer, uint16_t registerAddress, uint16_t bitsMask, uint16_t bitsValue )
; bitsValue start address is: 12 (R3)
; bitsMask start address is: 8 (R2)
; registerAddress start address is: 4 (R1)
; registerBuffer start address is: 0 (R0)
; bitsValue end address is: 12 (R3)
; bitsMask end address is: 8 (R2)
; registerAddress end address is: 4 (R1)
; registerBuffer end address is: 0 (R0)
; registerBuffer start address is: 0 (R0)
; registerAddress start address is: 4 (R1)
; bitsMask start address is: 8 (R2)
; bitsValue start address is: 12 (R3)
;__fm_driver.c, 287 :: 		registerBuffer[ registerAddress ] &= bitsMask;
0x28F8	0x004C    LSLS	R4, R1, #1
0x28FA	0x1905    ADDS	R5, R0, R4
0x28FC	0x882C    LDRH	R4, [R5, #0]
0x28FE	0x4014    ANDS	R4, R2
; bitsMask end address is: 8 (R2)
0x2900	0x802C    STRH	R4, [R5, #0]
;__fm_driver.c, 288 :: 		registerBuffer[ registerAddress ] |= bitsValue;
0x2902	0x004C    LSLS	R4, R1, #1
; registerAddress end address is: 4 (R1)
0x2904	0x1905    ADDS	R5, R0, R4
; registerBuffer end address is: 0 (R0)
0x2906	0x882C    LDRH	R4, [R5, #0]
0x2908	0x431C    ORRS	R4, R3
; bitsValue end address is: 12 (R3)
0x290A	0x802C    STRH	R4, [R5, #0]
;__fm_driver.c, 289 :: 		}
L_end_fm_setBits:
0x290C	0x4770    BX	LR
; end of _fm_setBits
_fm_writeRegisters:
;__fm_driver.c, 265 :: 		void fm_writeRegisters( uint16_t *registerBuffer )
; registerBuffer start address is: 0 (R0)
0x2910	0xB089    SUB	SP, SP, #36
0x2912	0xF8CDE000  STR	LR, [SP, #0]
; registerBuffer end address is: 0 (R0)
; registerBuffer start address is: 0 (R0)
;__fm_driver.c, 271 :: 		j = 0;
; j start address is: 20 (R5)
0x2916	0x2500    MOVS	R5, #0
;__fm_driver.c, 273 :: 		for (i = 0; i < 16; i ++)
; i start address is: 16 (R4)
0x2918	0x2400    MOVS	R4, #0
; j end address is: 20 (R5)
; i end address is: 16 (R4)
L_fm_writeRegisters9:
; i start address is: 16 (R4)
; j start address is: 20 (R5)
; registerBuffer start address is: 0 (R0)
; registerBuffer end address is: 0 (R0)
0x291A	0x2C10    CMP	R4, #16
0x291C	0xD214    BCS	L_fm_writeRegisters10
; registerBuffer end address is: 0 (R0)
;__fm_driver.c, 275 :: 		auxBuffer[ j ] = registerBuffer[ i ] >> 8;
; registerBuffer start address is: 0 (R0)
0x291E	0xAB01    ADD	R3, SP, #4
0x2920	0x195A    ADDS	R2, R3, R5
0x2922	0x0061    LSLS	R1, R4, #1
0x2924	0x1841    ADDS	R1, R0, R1
0x2926	0x8809    LDRH	R1, [R1, #0]
0x2928	0x0A09    LSRS	R1, R1, #8
0x292A	0x7011    STRB	R1, [R2, #0]
;__fm_driver.c, 276 :: 		j += 1;
0x292C	0x1C69    ADDS	R1, R5, #1
0x292E	0xB209    SXTH	R1, R1
0x2930	0xB2CD    UXTB	R5, R1
;__fm_driver.c, 277 :: 		auxBuffer[ j ] = registerBuffer[ i ];
0x2932	0xB2C9    UXTB	R1, R1
0x2934	0x185A    ADDS	R2, R3, R1
0x2936	0x0061    LSLS	R1, R4, #1
0x2938	0x1841    ADDS	R1, R0, R1
0x293A	0x8809    LDRH	R1, [R1, #0]
0x293C	0x7011    STRB	R1, [R2, #0]
;__fm_driver.c, 278 :: 		j += 1;
0x293E	0x1C69    ADDS	R1, R5, #1
0x2940	0xB2CD    UXTB	R5, R1
;__fm_driver.c, 273 :: 		for (i = 0; i < 16; i ++)
0x2942	0x1C64    ADDS	R4, R4, #1
0x2944	0xB2E4    UXTB	R4, R4
;__fm_driver.c, 279 :: 		}
; registerBuffer end address is: 0 (R0)
; j end address is: 20 (R5)
; i end address is: 16 (R4)
0x2946	0xE7E8    B	L_fm_writeRegisters9
L_fm_writeRegisters10:
;__fm_driver.c, 281 :: 		hal_i2cStart( );
0x2948	0xF7FEFD92  BL	__fm_driver_hal_i2cStart+0
;__fm_driver.c, 282 :: 		hal_i2cWrite( _slaveAddress, auxBuffer, 32, END_MODE_STOP );
0x294C	0xAA01    ADD	R2, SP, #4
0x294E	0x4906    LDR	R1, [PC, #24]
0x2950	0x7809    LDRB	R1, [R1, #0]
0x2952	0x2301    MOVS	R3, #1
0x2954	0xB2C8    UXTB	R0, R1
0x2956	0x4611    MOV	R1, R2
0x2958	0x2220    MOVS	R2, #32
0x295A	0xF7FFF87F  BL	__fm_driver_hal_i2cWrite+0
;__fm_driver.c, 283 :: 		}
L_end_fm_writeRegisters:
0x295E	0xF8DDE000  LDR	LR, [SP, #0]
0x2962	0xB009    ADD	SP, SP, #36
0x2964	0x4770    BX	LR
0x2966	0xBF00    NOP
0x2968	0x03472000  	__fm_driver__slaveAddress+0
; end of _fm_writeRegisters
__fm_driver_hal_i2cWrite:
;__hal_stm32.c, 98 :: 		static int hal_i2cWrite(uint8_t slaveAddress, uint8_t *pBuf, uint16_t nBytes, uint8_t endMode)
; endMode start address is: 12 (R3)
; nBytes start address is: 8 (R2)
; pBuf start address is: 4 (R1)
; slaveAddress start address is: 0 (R0)
0x1A5C	0xB082    SUB	SP, SP, #8
0x1A5E	0xF8CDE000  STR	LR, [SP, #0]
; endMode end address is: 12 (R3)
; nBytes end address is: 8 (R2)
; pBuf end address is: 4 (R1)
; slaveAddress end address is: 0 (R0)
; slaveAddress start address is: 0 (R0)
; pBuf start address is: 4 (R1)
; nBytes start address is: 8 (R2)
; endMode start address is: 12 (R3)
;__hal_stm32.c, 100 :: 		int res = 0;
0x1A62	0xF2400400  MOVW	R4, #0
0x1A66	0xF8AD4004  STRH	R4, [SP, #4]
;__hal_stm32.c, 102 :: 		res |= fp_i2cWrite(slaveAddress, ptr, nBytes, endMode);
; endMode end address is: 12 (R3)
; nBytes end address is: 8 (R2)
; pBuf end address is: 4 (R1)
; slaveAddress end address is: 0 (R0)
0x1A6A	0x4C05    LDR	R4, [PC, #20]
0x1A6C	0x6824    LDR	R4, [R4, #0]
0x1A6E	0x47A0    BLX	R4
0x1A70	0xF9BD4004  LDRSH	R4, [SP, #4]
0x1A74	0x4304    ORRS	R4, R0
;__hal_stm32.c, 103 :: 		return res;
0x1A76	0xB220    SXTH	R0, R4
;__hal_stm32.c, 104 :: 		}
L_end_hal_i2cWrite:
0x1A78	0xF8DDE000  LDR	LR, [SP, #0]
0x1A7C	0xB002    ADD	SP, SP, #8
0x1A7E	0x4770    BX	LR
0x1A80	0x03582000  	__fm_driver_fp_i2cWrite+0
; end of __fm_driver_hal_i2cWrite
_I2C1_Write:
;__Lib_I2C_12.c, 556 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x0CF0	0xB081    SUB	SP, SP, #4
0x0CF2	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_12.c, 557 :: 		
0x0CF6	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x0CF8	0x4613    MOV	R3, R2
0x0CFA	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x0CFC	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x0CFE	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x0D00	0xF7FFFAF8  BL	_I2Cx_Write+0
0x0D04	0xB001    ADD	SP, SP, #4
;__Lib_I2C_12.c, 558 :: 		
L_end_I2C1_Write:
0x0D06	0xF8DDE000  LDR	LR, [SP, #0]
0x0D0A	0xB001    ADD	SP, SP, #4
0x0D0C	0x4770    BX	LR
0x0D0E	0xBF00    NOP
0x0D10	0x54004000  	I2C1_CR1+0
; end of _I2C1_Write
_I2Cx_Write:
;__Lib_I2C_12.c, 245 :: 		
; count start address is: 12 (R3)
; buf start address is: 8 (R2)
; slave_address start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x02F4	0xB082    SUB	SP, SP, #8
0x02F6	0xF8CDE000  STR	LR, [SP, #0]
; count end address is: 12 (R3)
; buf end address is: 8 (R2)
; slave_address end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; slave_address start address is: 4 (R1)
; buf start address is: 8 (R2)
; count start address is: 12 (R3)
; END_mode start address is: 24 (R6)
0x02FA	0x9E02    LDR	R6, [SP, #8]
;__Lib_I2C_12.c, 247 :: 		
; timeout start address is: 20 (R5)
0x02FC	0xF04F0500  MOV	R5, #0
;__Lib_I2C_12.c, 250 :: 		
0x0300	0x4C56    LDR	R4, [PC, #344]
0x0302	0x42A0    CMP	R0, R4
0x0304	0xD106    BNE	L_I2Cx_Write16
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 251 :: 		
0x0306	0x4C56    LDR	R4, [PC, #344]
; timeout start address is: 28 (R7)
0x0308	0x6827    LDR	R7, [R4, #0]
;__Lib_I2C_12.c, 252 :: 		
0x030A	0x4C56    LDR	R4, [PC, #344]
0x030C	0x6825    LDR	R5, [R4, #0]
0x030E	0x4C56    LDR	R4, [PC, #344]
0x0310	0x6025    STR	R5, [R4, #0]
;__Lib_I2C_12.c, 253 :: 		
; timeout end address is: 28 (R7)
0x0312	0xE00A    B	L_I2Cx_Write17
L_I2Cx_Write16:
;__Lib_I2C_12.c, 254 :: 		
; timeout start address is: 20 (R5)
0x0314	0x4C55    LDR	R4, [PC, #340]
0x0316	0x42A0    CMP	R0, R4
0x0318	0xD106    BNE	L__I2Cx_Write125
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 255 :: 		
0x031A	0x4C55    LDR	R4, [PC, #340]
; timeout start address is: 28 (R7)
0x031C	0x6827    LDR	R7, [R4, #0]
;__Lib_I2C_12.c, 256 :: 		
0x031E	0x4C55    LDR	R4, [PC, #340]
0x0320	0x6825    LDR	R5, [R4, #0]
0x0322	0x4C51    LDR	R4, [PC, #324]
0x0324	0x6025    STR	R5, [R4, #0]
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 257 :: 		
0x0326	0xE000    B	L_I2Cx_Write18
L__I2Cx_Write125:
;__Lib_I2C_12.c, 254 :: 		
0x0328	0x462F    MOV	R7, R5
;__Lib_I2C_12.c, 257 :: 		
L_I2Cx_Write18:
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
L_I2Cx_Write17:
;__Lib_I2C_12.c, 259 :: 		
; timeout start address is: 28 (R7)
0x032A	0x4C53    LDR	R4, [PC, #332]
0x032C	0x6027    STR	R7, [R4, #0]
;__Lib_I2C_12.c, 261 :: 		
0x032E	0xF2000510  ADDW	R5, R0, #16
0x0332	0x004C    LSLS	R4, R1, #1
0x0334	0xB2A4    UXTH	R4, R4
; slave_address end address is: 4 (R1)
0x0336	0x602C    STR	R4, [R5, #0]
; I2C_BASE end address is: 0 (R0)
; buf end address is: 8 (R2)
; count end address is: 12 (R3)
; END_mode end address is: 24 (R6)
; timeout end address is: 28 (R7)
0x0338	0x46B9    MOV	R9, R7
0x033A	0x4607    MOV	R7, R0
0x033C	0x4690    MOV	R8, R2
0x033E	0x4635    MOV	R5, R6
0x0340	0x461E    MOV	R6, R3
;__Lib_I2C_12.c, 262 :: 		
L_I2Cx_Write19:
; timeout start address is: 36 (R9)
; END_mode start address is: 20 (R5)
; count start address is: 24 (R6)
; buf start address is: 32 (R8)
; I2C_BASE start address is: 28 (R7)
0x0342	0x494E    LDR	R1, [PC, #312]
0x0344	0x4638    MOV	R0, R7
0x0346	0xF7FFFFB7  BL	_ChekXForEvent+0
0x034A	0xB988    CBNZ	R0, L_I2Cx_Write20
;__Lib_I2C_12.c, 263 :: 		
0x034C	0x4C4A    LDR	R4, [PC, #296]
0x034E	0x6824    LDR	R4, [R4, #0]
0x0350	0xB16C    CBZ	R4, L__I2Cx_Write126
;__Lib_I2C_12.c, 264 :: 		
0x0352	0xF1B90F00  CMP	R9, #0
0x0356	0xD106    BNE	L_I2Cx_Write22
; count end address is: 24 (R6)
; I2C_BASE end address is: 28 (R7)
; buf end address is: 32 (R8)
; timeout end address is: 36 (R9)
; END_mode end address is: 20 (R5)
;__Lib_I2C_12.c, 265 :: 		
0x0358	0x2004    MOVS	R0, #4
0x035A	0x4C43    LDR	R4, [PC, #268]
0x035C	0x6824    LDR	R4, [R4, #0]
0x035E	0x47A0    BLX	R4
;__Lib_I2C_12.c, 266 :: 		
0x0360	0xF64F70FF  MOVW	R0, #65535
0x0364	0xE076    B	L_end_I2Cx_Write
;__Lib_I2C_12.c, 267 :: 		
L_I2Cx_Write22:
;__Lib_I2C_12.c, 268 :: 		
; END_mode start address is: 20 (R5)
; timeout start address is: 36 (R9)
; buf start address is: 32 (R8)
; I2C_BASE start address is: 28 (R7)
; count start address is: 24 (R6)
0x0366	0xF1A90001  SUB	R0, R9, #1
; timeout end address is: 36 (R9)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x036A	0x4681    MOV	R9, R0
;__Lib_I2C_12.c, 269 :: 		
0x036C	0xE7FF    B	L_I2Cx_Write21
L__I2Cx_Write126:
;__Lib_I2C_12.c, 263 :: 		
;__Lib_I2C_12.c, 269 :: 		
L_I2Cx_Write21:
;__Lib_I2C_12.c, 270 :: 		
; timeout start address is: 36 (R9)
; timeout end address is: 36 (R9)
0x036E	0xE7E8    B	L_I2Cx_Write19
L_I2Cx_Write20:
;__Lib_I2C_12.c, 271 :: 		
; i start address is: 0 (R0)
0x0370	0x2000    MOVS	R0, #0
; count end address is: 24 (R6)
; I2C_BASE end address is: 28 (R7)
; buf end address is: 32 (R8)
; i end address is: 0 (R0)
; END_mode end address is: 20 (R5)
0x0372	0x9701    STR	R7, [SP, #4]
0x0374	0x4629    MOV	R1, R5
0x0376	0x4637    MOV	R7, R6
0x0378	0x9E01    LDR	R6, [SP, #4]
L_I2Cx_Write23:
; i start address is: 0 (R0)
; I2C_BASE start address is: 24 (R6)
; buf start address is: 32 (R8)
; count start address is: 28 (R7)
; END_mode start address is: 4 (R1)
0x037A	0x1E7C    SUBS	R4, R7, #1
0x037C	0x42A0    CMP	R0, R4
0x037E	0xD226    BCS	L_I2Cx_Write24
;__Lib_I2C_12.c, 272 :: 		
0x0380	0xF2060510  ADDW	R5, R6, #16
0x0384	0xEB080400  ADD	R4, R8, R0, LSL #0
0x0388	0x7824    LDRB	R4, [R4, #0]
0x038A	0x602C    STR	R4, [R5, #0]
;__Lib_I2C_12.c, 274 :: 		
0x038C	0x4C3A    LDR	R4, [PC, #232]
; timeout start address is: 36 (R9)
0x038E	0xF8D49000  LDR	R9, [R4, #0]
; END_mode end address is: 4 (R1)
; count end address is: 28 (R7)
; buf end address is: 32 (R8)
; timeout end address is: 36 (R9)
; i end address is: 0 (R0)
; I2C_BASE end address is: 24 (R6)
0x0392	0x4682    MOV	R10, R0
0x0394	0x460D    MOV	R5, R1
;__Lib_I2C_12.c, 275 :: 		
L_I2Cx_Write26:
; timeout start address is: 36 (R9)
; END_mode start address is: 20 (R5)
; count start address is: 28 (R7)
; buf start address is: 32 (R8)
; I2C_BASE start address is: 24 (R6)
; i start address is: 40 (R10)
0x0396	0x493A    LDR	R1, [PC, #232]
0x0398	0x4630    MOV	R0, R6
0x039A	0xF7FFFF8D  BL	_ChekXForEvent+0
0x039E	0xB988    CBNZ	R0, L_I2Cx_Write27
;__Lib_I2C_12.c, 276 :: 		
0x03A0	0x4C35    LDR	R4, [PC, #212]
0x03A2	0x6824    LDR	R4, [R4, #0]
0x03A4	0xB16C    CBZ	R4, L__I2Cx_Write127
;__Lib_I2C_12.c, 277 :: 		
0x03A6	0xF1B90F00  CMP	R9, #0
0x03AA	0xD106    BNE	L_I2Cx_Write29
; count end address is: 28 (R7)
; buf end address is: 32 (R8)
; i end address is: 40 (R10)
; timeout end address is: 36 (R9)
; END_mode end address is: 20 (R5)
; I2C_BASE end address is: 24 (R6)
;__Lib_I2C_12.c, 278 :: 		
0x03AC	0x2004    MOVS	R0, #4
0x03AE	0x4C2E    LDR	R4, [PC, #184]
0x03B0	0x6824    LDR	R4, [R4, #0]
0x03B2	0x47A0    BLX	R4
;__Lib_I2C_12.c, 279 :: 		
0x03B4	0xF64F70FF  MOVW	R0, #65535
0x03B8	0xE04C    B	L_end_I2Cx_Write
;__Lib_I2C_12.c, 280 :: 		
L_I2Cx_Write29:
;__Lib_I2C_12.c, 281 :: 		
; I2C_BASE start address is: 24 (R6)
; END_mode start address is: 20 (R5)
; timeout start address is: 36 (R9)
; i start address is: 40 (R10)
; buf start address is: 32 (R8)
; count start address is: 28 (R7)
0x03BA	0xF1A90001  SUB	R0, R9, #1
; timeout end address is: 36 (R9)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x03BE	0x4681    MOV	R9, R0
;__Lib_I2C_12.c, 282 :: 		
0x03C0	0xE7FF    B	L_I2Cx_Write28
L__I2Cx_Write127:
;__Lib_I2C_12.c, 276 :: 		
;__Lib_I2C_12.c, 282 :: 		
L_I2Cx_Write28:
;__Lib_I2C_12.c, 283 :: 		
; timeout start address is: 36 (R9)
; timeout end address is: 36 (R9)
0x03C2	0xE7E8    B	L_I2Cx_Write26
L_I2Cx_Write27:
;__Lib_I2C_12.c, 271 :: 		
0x03C4	0xF10A0401  ADD	R4, R10, #1
; i end address is: 40 (R10)
; i start address is: 0 (R0)
0x03C8	0x4620    MOV	R0, R4
;__Lib_I2C_12.c, 284 :: 		
0x03CA	0x4629    MOV	R1, R5
; count end address is: 28 (R7)
; END_mode end address is: 20 (R5)
0x03CC	0xE7D5    B	L_I2Cx_Write23
L_I2Cx_Write24:
;__Lib_I2C_12.c, 286 :: 		
; END_mode start address is: 4 (R1)
0x03CE	0xF2060510  ADDW	R5, R6, #16
0x03D2	0xEB080400  ADD	R4, R8, R0, LSL #0
; buf end address is: 32 (R8)
; i end address is: 0 (R0)
0x03D6	0x7824    LDRB	R4, [R4, #0]
0x03D8	0x602C    STR	R4, [R5, #0]
;__Lib_I2C_12.c, 288 :: 		
0x03DA	0x4C27    LDR	R4, [PC, #156]
; timeout start address is: 28 (R7)
0x03DC	0x6827    LDR	R7, [R4, #0]
; END_mode end address is: 4 (R1)
; I2C_BASE end address is: 24 (R6)
; timeout end address is: 28 (R7)
0x03DE	0x460D    MOV	R5, R1
;__Lib_I2C_12.c, 289 :: 		
L_I2Cx_Write30:
; timeout start address is: 28 (R7)
; END_mode start address is: 20 (R5)
; I2C_BASE start address is: 24 (R6)
0x03E0	0x4928    LDR	R1, [PC, #160]
0x03E2	0x4630    MOV	R0, R6
0x03E4	0xF7FFFF68  BL	_ChekXForEvent+0
0x03E8	0xB970    CBNZ	R0, L_I2Cx_Write31
;__Lib_I2C_12.c, 290 :: 		
0x03EA	0x4C23    LDR	R4, [PC, #140]
0x03EC	0x6824    LDR	R4, [R4, #0]
0x03EE	0xB154    CBZ	R4, L__I2Cx_Write128
;__Lib_I2C_12.c, 291 :: 		
0x03F0	0xB937    CBNZ	R7, L_I2Cx_Write33
; END_mode end address is: 20 (R5)
; I2C_BASE end address is: 24 (R6)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 292 :: 		
0x03F2	0x2004    MOVS	R0, #4
0x03F4	0x4C1C    LDR	R4, [PC, #112]
0x03F6	0x6824    LDR	R4, [R4, #0]
0x03F8	0x47A0    BLX	R4
;__Lib_I2C_12.c, 293 :: 		
0x03FA	0xF64F70FF  MOVW	R0, #65535
0x03FE	0xE029    B	L_end_I2Cx_Write
;__Lib_I2C_12.c, 294 :: 		
L_I2Cx_Write33:
;__Lib_I2C_12.c, 295 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 24 (R6)
; END_mode start address is: 20 (R5)
0x0400	0x1E78    SUBS	R0, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0402	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 296 :: 		
0x0404	0xE7FF    B	L_I2Cx_Write32
L__I2Cx_Write128:
;__Lib_I2C_12.c, 290 :: 		
;__Lib_I2C_12.c, 296 :: 		
L_I2Cx_Write32:
;__Lib_I2C_12.c, 297 :: 		
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
0x0406	0xE7EB    B	L_I2Cx_Write30
L_I2Cx_Write31:
;__Lib_I2C_12.c, 298 :: 		
0x0408	0x2D01    CMP	R5, #1
0x040A	0xD105    BNE	L_I2Cx_Write34
; END_mode end address is: 20 (R5)
;__Lib_I2C_12.c, 299 :: 		
0x040C	0x2501    MOVS	R5, #1
0x040E	0x6834    LDR	R4, [R6, #0]
0x0410	0xF3652449  BFI	R4, R5, #9, #1
0x0414	0x6034    STR	R4, [R6, #0]
; I2C_BASE end address is: 24 (R6)
0x0416	0xE01C    B	L_I2Cx_Write35
L_I2Cx_Write34:
;__Lib_I2C_12.c, 301 :: 		
; I2C_BASE start address is: 24 (R6)
0x0418	0x2501    MOVS	R5, #1
0x041A	0x6834    LDR	R4, [R6, #0]
0x041C	0xF3652408  BFI	R4, R5, #8, #1
0x0420	0x6034    STR	R4, [R6, #0]
;__Lib_I2C_12.c, 303 :: 		
0x0422	0x4C15    LDR	R4, [PC, #84]
; timeout start address is: 28 (R7)
0x0424	0x6827    LDR	R7, [R4, #0]
; I2C_BASE end address is: 24 (R6)
; timeout end address is: 28 (R7)
0x0426	0x4635    MOV	R5, R6
;__Lib_I2C_12.c, 304 :: 		
L_I2Cx_Write36:
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 20 (R5)
0x0428	0x4917    LDR	R1, [PC, #92]
0x042A	0x4628    MOV	R0, R5
0x042C	0xF7FFFF44  BL	_ChekXForEvent+0
0x0430	0xB978    CBNZ	R0, L_I2Cx_Write37
;__Lib_I2C_12.c, 305 :: 		
0x0432	0x4C11    LDR	R4, [PC, #68]
0x0434	0x6824    LDR	R4, [R4, #0]
0x0436	0xB15C    CBZ	R4, L__I2Cx_Write129
;__Lib_I2C_12.c, 306 :: 		
0x0438	0xB937    CBNZ	R7, L_I2Cx_Write39
; I2C_BASE end address is: 20 (R5)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 307 :: 		
0x043A	0x2004    MOVS	R0, #4
0x043C	0x4C0A    LDR	R4, [PC, #40]
0x043E	0x6824    LDR	R4, [R4, #0]
0x0440	0x47A0    BLX	R4
;__Lib_I2C_12.c, 308 :: 		
0x0442	0xF64F70FF  MOVW	R0, #65535
0x0446	0xE005    B	L_end_I2Cx_Write
;__Lib_I2C_12.c, 309 :: 		
L_I2Cx_Write39:
;__Lib_I2C_12.c, 310 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 20 (R5)
0x0448	0x1E7C    SUBS	R4, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
0x044A	0x4620    MOV	R0, R4
; timeout end address is: 0 (R0)
0x044C	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 311 :: 		
0x044E	0xE7FF    B	L_I2Cx_Write38
L__I2Cx_Write129:
;__Lib_I2C_12.c, 305 :: 		
;__Lib_I2C_12.c, 311 :: 		
L_I2Cx_Write38:
;__Lib_I2C_12.c, 312 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE end address is: 20 (R5)
; timeout end address is: 28 (R7)
0x0450	0xE7EA    B	L_I2Cx_Write36
L_I2Cx_Write37:
;__Lib_I2C_12.c, 313 :: 		
L_I2Cx_Write35:
;__Lib_I2C_12.c, 314 :: 		
0x0452	0x2000    MOVS	R0, #0
;__Lib_I2C_12.c, 315 :: 		
L_end_I2Cx_Write:
0x0454	0xF8DDE000  LDR	LR, [SP, #0]
0x0458	0xB002    ADD	SP, SP, #8
0x045A	0x4770    BX	LR
0x045C	0x54004000  	I2C1_CR1+0
0x0460	0x02F82000  	__Lib_I2C_12__I2C1_TIMEOUT+0
0x0464	0x037C2000  	_I2C1_Timeout_Ptr+0
0x0468	0x03782000  	_I2Cx_Timeout_Ptr+0
0x046C	0x58004000  	I2C2_CR1+0
0x0470	0x02FC2000  	__Lib_I2C_12__I2C2_TIMEOUT+0
0x0474	0x03802000  	_I2C2_Timeout_Ptr+0
0x0478	0x03002000  	__Lib_I2C_12__I2Cx_TIMEOUT+0
0x047C	0x00820007  	#458882
0x0480	0x00800007  	#458880
0x0484	0x00840007  	#458884
0x0488	0x00010003  	#196609
; end of _I2Cx_Write
_I2C2_Write:
;__Lib_I2C_12.c, 586 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x0C40	0xB081    SUB	SP, SP, #4
0x0C42	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_12.c, 587 :: 		
0x0C46	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x0C48	0x4613    MOV	R3, R2
0x0C4A	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x0C4C	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x0C4E	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x0C50	0xF7FFFB50  BL	_I2Cx_Write+0
0x0C54	0xB001    ADD	SP, SP, #4
;__Lib_I2C_12.c, 588 :: 		
L_end_I2C2_Write:
0x0C56	0xF8DDE000  LDR	LR, [SP, #0]
0x0C5A	0xB001    ADD	SP, SP, #4
0x0C5C	0x4770    BX	LR
0x0C5E	0xBF00    NOP
0x0C60	0x58004000  	I2C2_CR1+0
; end of _I2C2_Write
_Delay_1sec:
;__Lib_Delays.c, 62 :: 		void Delay_1sec() {
;__Lib_Delays.c, 63 :: 		Delay_ms(1000);
0x1D40	0xF64127FF  MOVW	R7, #6911
0x1D44	0xF2C007B7  MOVT	R7, #183
L_Delay_1sec24:
0x1D48	0x1E7F    SUBS	R7, R7, #1
0x1D4A	0xD1FD    BNE	L_Delay_1sec24
0x1D4C	0xBF00    NOP
0x1D4E	0xBF00    NOP
0x1D50	0xBF00    NOP
0x1D52	0xBF00    NOP
0x1D54	0xBF00    NOP
;__Lib_Delays.c, 64 :: 		}
L_end_Delay_1sec:
0x1D56	0x4770    BX	LR
; end of _Delay_1sec
_fm_basicSettings:
;__fm_driver.c, 561 :: 		void fm_basicSettings( void )
0x3204	0xB089    SUB	SP, SP, #36
0x3206	0xF8CDE000  STR	LR, [SP, #0]
;__fm_driver.c, 565 :: 		fm_readRegisters( regBuffer );
0x320A	0xA801    ADD	R0, SP, #4
0x320C	0xF7FFF9F0  BL	_fm_readRegisters+0
;__fm_driver.c, 567 :: 		fm_setBits( regBuffer,   _FM_POWER_CONFIGURATION,   _FM_SOFTMUTE_MASK,          _FM_SOFTMUTE_DISABLE );
0x3210	0xA801    ADD	R0, SP, #4
0x3212	0xF2480300  MOVW	R3, #32768
0x3216	0xF64772FF  MOVW	R2, #32767
0x321A	0xF2400100  MOVW	R1, #0
0x321E	0xF7FFFB6B  BL	_fm_setBits+0
;__fm_driver.c, 568 :: 		fm_setBits( regBuffer,   _FM_POWER_CONFIGURATION,   _FM_MUTE_MASK,              _FM_MUTE_DISABLE );
0x3222	0xA801    ADD	R0, SP, #4
0x3224	0xF2440300  MOVW	R3, #16384
0x3228	0xF64B72FF  MOVW	R2, #49151
0x322C	0xF2400100  MOVW	R1, #0
0x3230	0xF7FFFB62  BL	_fm_setBits+0
;__fm_driver.c, 569 :: 		fm_setBits( regBuffer,   _FM_POWER_CONFIGURATION,   _FM_STEREO_MASK,            _FM_STEREO );
0x3234	0xA801    ADD	R0, SP, #4
0x3236	0xF2400300  MOVW	R3, #0
0x323A	0xF64D72FF  MOVW	R2, #57343
0x323E	0xF2400100  MOVW	R1, #0
0x3242	0xF7FFFB59  BL	_fm_setBits+0
;__fm_driver.c, 570 :: 		fm_setBits( regBuffer,   _FM_POWER_CONFIGURATION,   _FM_RDS_MODE_MASK,          _FM_RDS_MODE_STANDARD );
0x3246	0xA801    ADD	R0, SP, #4
0x3248	0xF2400300  MOVW	R3, #0
0x324C	0xF24F72FF  MOVW	R2, #63487
0x3250	0xF2400100  MOVW	R1, #0
0x3254	0xF7FFFB50  BL	_fm_setBits+0
;__fm_driver.c, 571 :: 		fm_setBits( regBuffer,   _FM_POWER_CONFIGURATION,   _FM_SEEK_MODE_MASK,         _FM_SEEK_MODE_WRAP );
0x3258	0xA801    ADD	R0, SP, #4
0x325A	0xF2400300  MOVW	R3, #0
0x325E	0xF64F32FF  MOVW	R2, #64511
0x3262	0xF2400100  MOVW	R1, #0
0x3266	0xF7FFFB47  BL	_fm_setBits+0
;__fm_driver.c, 572 :: 		fm_setBits( regBuffer,   _FM_POWER_CONFIGURATION,   _FM_SEEK_DIRECTION_MASK,    _FM_SEEK_DIRECTION_UP );
0x326A	0xA801    ADD	R0, SP, #4
0x326C	0xF2402300  MOVW	R3, #512
0x3270	0xF64F52FF  MOVW	R2, #65023
0x3274	0xF2400100  MOVW	R1, #0
0x3278	0xF7FFFB3E  BL	_fm_setBits+0
;__fm_driver.c, 573 :: 		fm_setBits( regBuffer,   _FM_POWER_CONFIGURATION,   _FM_SEEK_MASK,              _FM_SEEK_DISABLE );
0x327C	0xA801    ADD	R0, SP, #4
0x327E	0xF2400300  MOVW	R3, #0
0x3282	0xF64F62FF  MOVW	R2, #65279
0x3286	0xF2400100  MOVW	R1, #0
0x328A	0xF7FFFB35  BL	_fm_setBits+0
;__fm_driver.c, 574 :: 		fm_setBits( regBuffer,   _FM_POWER_CONFIGURATION,   _FM_POWERUP_DISABLE_MASK,   _FM_POWERUP_DISABLE_LOW );
0x328E	0xA801    ADD	R0, SP, #4
0x3290	0xF2400300  MOVW	R3, #0
0x3294	0xF64F72BF  MOVW	R2, #65471
0x3298	0xF2400100  MOVW	R1, #0
0x329C	0xF7FFFB2C  BL	_fm_setBits+0
;__fm_driver.c, 575 :: 		fm_setBits( regBuffer,   _FM_POWER_CONFIGURATION,   _FM_POWERUP_ENABLE_MASK,    _FM_POWERUP_ENABLE_HIGH );
0x32A0	0xA801    ADD	R0, SP, #4
0x32A2	0xF2400301  MOVW	R3, #1
0x32A6	0xF64F72FE  MOVW	R2, #65534
0x32AA	0xF2400100  MOVW	R1, #0
0x32AE	0xF7FFFB23  BL	_fm_setBits+0
;__fm_driver.c, 577 :: 		fm_setBits( regBuffer,   _FM_CHANNEL,   _FM_TUNE_MASK,   _FM_TUNE_DISABLE );
0x32B2	0xA801    ADD	R0, SP, #4
0x32B4	0xF2400300  MOVW	R3, #0
0x32B8	0xF64772FF  MOVW	R2, #32767
0x32BC	0xF2400101  MOVW	R1, #1
0x32C0	0xF7FFFB1A  BL	_fm_setBits+0
;__fm_driver.c, 579 :: 		fm_setBits( regBuffer,   _FM_SYSTEM_CONFIGURATION_1,   _FM_RDS_INTERRUPT_MASK,                _FM_RDS_INTERRUPT_DISABLE );
0x32C4	0xA801    ADD	R0, SP, #4
0x32C6	0xF2400300  MOVW	R3, #0
0x32CA	0xF64772FF  MOVW	R2, #32767
0x32CE	0xF2400102  MOVW	R1, #2
0x32D2	0xF7FFFB11  BL	_fm_setBits+0
;__fm_driver.c, 580 :: 		fm_setBits( regBuffer,   _FM_SYSTEM_CONFIGURATION_1,   _FM_SEEK_TUNE_COMPLETE_INTERRUPT_MASK, _FM_SEEK_TUNE_COMPLETE_INTERRUPT_ENABLE );
0x32D6	0xA801    ADD	R0, SP, #4
0x32D8	0xF2440300  MOVW	R3, #16384
0x32DC	0xF64B72FF  MOVW	R2, #49151
0x32E0	0xF2400102  MOVW	R1, #2
0x32E4	0xF7FFFB08  BL	_fm_setBits+0
;__fm_driver.c, 581 :: 		fm_setBits( regBuffer,   _FM_SYSTEM_CONFIGURATION_1,   _FM_RDS_MASK,                          _FM_RDS_DISABLE );
0x32E8	0xA801    ADD	R0, SP, #4
0x32EA	0xF2400300  MOVW	R3, #0
0x32EE	0xF64E72FF  MOVW	R2, #61439
0x32F2	0xF2400102  MOVW	R1, #2
0x32F6	0xF7FFFAFF  BL	_fm_setBits+0
;__fm_driver.c, 582 :: 		fm_setBits( regBuffer,   _FM_SYSTEM_CONFIGURATION_1,   _FM_DE_EMPHASIS_MASK,                  _FM_DE_EMPHASIS_EUROPE_AUSTRALIA_JAPAN );
0x32FA	0xA801    ADD	R0, SP, #4
0x32FC	0xF6400300  MOVW	R3, #2048
0x3300	0xF24F72FF  MOVW	R2, #63487
0x3304	0xF2400102  MOVW	R1, #2
0x3308	0xF7FFFAF6  BL	_fm_setBits+0
;__fm_driver.c, 583 :: 		fm_setBits( regBuffer,   _FM_SYSTEM_CONFIGURATION_1,   _FM_AGC_MASK,                          _FM_AGC_ENABLE );
0x330C	0xA801    ADD	R0, SP, #4
0x330E	0xF2400300  MOVW	R3, #0
0x3312	0xF64F32FF  MOVW	R2, #64511
0x3316	0xF2400102  MOVW	R1, #2
0x331A	0xF7FFFAED  BL	_fm_setBits+0
;__fm_driver.c, 584 :: 		fm_setBits( regBuffer,   _FM_SYSTEM_CONFIGURATION_1,   _FM_STEREO_MONO_BLEND_LEVEL_MASK,      _FM_STEREO_MONO_BLEND_LEVEL_31_49_RSSI );
0x331E	0xA801    ADD	R0, SP, #4
0x3320	0xF2400300  MOVW	R3, #0
0x3324	0xF64F723F  MOVW	R2, #65343
0x3328	0xF2400102  MOVW	R1, #2
0x332C	0xF7FFFAE4  BL	_fm_setBits+0
;__fm_driver.c, 585 :: 		fm_setBits( regBuffer,   _FM_SYSTEM_CONFIGURATION_1,   _FM_GPIO3_MASK,                        _FM_GPIO3_HIGH_IMPENDANCE );
0x3330	0xA801    ADD	R0, SP, #4
0x3332	0xF2400300  MOVW	R3, #0
0x3336	0xF64F72CF  MOVW	R2, #65487
0x333A	0xF2400102  MOVW	R1, #2
0x333E	0xF7FFFADB  BL	_fm_setBits+0
;__fm_driver.c, 586 :: 		fm_setBits( regBuffer,   _FM_SYSTEM_CONFIGURATION_1,   _FM_GPIO2_MASK,                        _FM_GPIO2_STC_RDS_INTERRUPT );
0x3342	0xA801    ADD	R0, SP, #4
0x3344	0xF2400304  MOVW	R3, #4
0x3348	0xF64F72F3  MOVW	R2, #65523
0x334C	0xF2400102  MOVW	R1, #2
0x3350	0xF7FFFAD2  BL	_fm_setBits+0
;__fm_driver.c, 587 :: 		fm_setBits( regBuffer,   _FM_SYSTEM_CONFIGURATION_1,   _FM_GPIO1_MASK,                        _FM_GPIO1_HIGH_IMPEDANCE );
0x3354	0xA801    ADD	R0, SP, #4
0x3356	0xF2400300  MOVW	R3, #0
0x335A	0xF64F72FC  MOVW	R2, #65532
0x335E	0xF2400102  MOVW	R1, #2
0x3362	0xF7FFFAC9  BL	_fm_setBits+0
;__fm_driver.c, 589 :: 		fm_setBits( regBuffer,   _FM_SYSTEM_CONFIGURATION_2,   _FM_BAND_MASK,                         _FM_BAND_USA_EUROPE_87P5_108_MHZ );
0x3366	0xA801    ADD	R0, SP, #4
0x3368	0xF2400300  MOVW	R3, #0
0x336C	0xF64F723F  MOVW	R2, #65343
0x3370	0xF2400103  MOVW	R1, #3
0x3374	0xF7FFFAC0  BL	_fm_setBits+0
;__fm_driver.c, 590 :: 		fm_setBits( regBuffer,   _FM_SYSTEM_CONFIGURATION_2,   _FM_CHANNEL_SPACING_MASK,              _FM_CHANNEL_SPACING_EUROPE_JAPAN_100_KHZ );
0x3378	0xA801    ADD	R0, SP, #4
0x337A	0xF2400310  MOVW	R3, #16
0x337E	0xF64F72CF  MOVW	R2, #65487
0x3382	0xF2400103  MOVW	R1, #3
0x3386	0xF7FFFAB7  BL	_fm_setBits+0
;__fm_driver.c, 592 :: 		fm_setBits( regBuffer,   _FM_SYSTEM_CONFIGURATION_3,   _FM_SOFTMUTE_ATTACK_RECOVER_RATE_MASK, _FM_SOFTMUTE_ATTACK_RECOVER_RATE_FASTEST );
0x338A	0xA801    ADD	R0, SP, #4
0x338C	0xF2400300  MOVW	R3, #0
0x3390	0xF64372FF  MOVW	R2, #16383
0x3394	0xF2400104  MOVW	R1, #4
0x3398	0xF7FFFAAE  BL	_fm_setBits+0
;__fm_driver.c, 593 :: 		fm_setBits( regBuffer,   _FM_SYSTEM_CONFIGURATION_3,   _FM_SOFTMUTE_ATTENUATION_MASK,         _FM_SOFTMUTE_ATTENUATION_16_DB );
0x339C	0xA801    ADD	R0, SP, #4
0x339E	0xF2400300  MOVW	R3, #0
0x33A2	0xF64C72FF  MOVW	R2, #53247
0x33A6	0xF2400104  MOVW	R1, #4
0x33AA	0xF7FFFAA5  BL	_fm_setBits+0
;__fm_driver.c, 594 :: 		fm_setBits( regBuffer,   _FM_SYSTEM_CONFIGURATION_3,   _FM_EXTENDED_VOLUME_RANGE_MASK,        _FM_EXTENDED_VOLUME_RANGE_DISABLED );
0x33AE	0xA801    ADD	R0, SP, #4
0x33B0	0xF2400300  MOVW	R3, #0
0x33B4	0xF64F62FF  MOVW	R2, #65279
0x33B8	0xF2400104  MOVW	R1, #4
0x33BC	0xF7FFFA9C  BL	_fm_setBits+0
;__fm_driver.c, 596 :: 		fm_writeRegisters( regBuffer );
0x33C0	0xA801    ADD	R0, SP, #4
0x33C2	0xF7FFFAA5  BL	_fm_writeRegisters+0
;__fm_driver.c, 597 :: 		}
L_end_fm_basicSettings:
0x33C6	0xF8DDE000  LDR	LR, [SP, #0]
0x33CA	0xB009    ADD	SP, SP, #36
0x33CC	0x4770    BX	LR
; end of _fm_basicSettings
_fm_setVolume:
;__fm_driver.c, 313 :: 		uint8_t fm_setVolume( uint8_t volumeLevel )
; volumeLevel start address is: 0 (R0)
0x31BC	0xB08A    SUB	SP, SP, #40
0x31BE	0xF8CDE000  STR	LR, [SP, #0]
; volumeLevel end address is: 0 (R0)
; volumeLevel start address is: 0 (R0)
;__fm_driver.c, 317 :: 		if (volumeLevel < 16)
0x31C2	0x2810    CMP	R0, #16
0x31C4	0xD218    BCS	L_fm_setVolume14
;__fm_driver.c, 319 :: 		fm_readRegisters( regBuffer );
0x31C6	0xA902    ADD	R1, SP, #8
0x31C8	0xF88D0004  STRB	R0, [SP, #4]
0x31CC	0x4608    MOV	R0, R1
0x31CE	0xF7FFFA0F  BL	_fm_readRegisters+0
0x31D2	0xF89D0004  LDRB	R0, [SP, #4]
;__fm_driver.c, 321 :: 		regBuffer[_FM_SYSTEM_CONFIGURATION_2] &= 0xFFF0;
0x31D6	0xAC02    ADD	R4, SP, #8
0x31D8	0x1DA3    ADDS	R3, R4, #6
0x31DA	0x881A    LDRH	R2, [R3, #0]
0x31DC	0xF64F71F0  MOVW	R1, #65520
0x31E0	0xEA020101  AND	R1, R2, R1, LSL #0
0x31E4	0x8019    STRH	R1, [R3, #0]
;__fm_driver.c, 322 :: 		regBuffer[_FM_SYSTEM_CONFIGURATION_2] |= volumeLevel;
0x31E6	0x1DA2    ADDS	R2, R4, #6
0x31E8	0x8811    LDRH	R1, [R2, #0]
0x31EA	0x4301    ORRS	R1, R0
; volumeLevel end address is: 0 (R0)
0x31EC	0x8011    STRH	R1, [R2, #0]
;__fm_driver.c, 324 :: 		fm_writeRegisters( regBuffer );
0x31EE	0x4620    MOV	R0, R4
0x31F0	0xF7FFFB8E  BL	_fm_writeRegisters+0
;__fm_driver.c, 326 :: 		return 0;
0x31F4	0x2000    MOVS	R0, #0
0x31F6	0xE000    B	L_end_fm_setVolume
;__fm_driver.c, 327 :: 		}
L_fm_setVolume14:
;__fm_driver.c, 330 :: 		return 1;
0x31F8	0x2001    MOVS	R0, #1
;__fm_driver.c, 332 :: 		}
L_end_fm_setVolume:
0x31FA	0xF8DDE000  LDR	LR, [SP, #0]
0x31FE	0xB00A    ADD	SP, SP, #40
0x3200	0x4770    BX	LR
; end of _fm_setVolume
_fm_setSnrThreshold:
;__fm_driver.c, 334 :: 		uint8_t fm_setSnrThreshold( uint8_t snrThreshold )
; snrThreshold start address is: 0 (R0)
0x3418	0xB08A    SUB	SP, SP, #40
0x341A	0xF8CDE000  STR	LR, [SP, #0]
; snrThreshold end address is: 0 (R0)
; snrThreshold start address is: 0 (R0)
;__fm_driver.c, 338 :: 		if (snrThreshold < 8)
0x341E	0x2808    CMP	R0, #8
0x3420	0xD21D    BCS	L_fm_setSnrThreshold16
;__fm_driver.c, 340 :: 		fm_readRegisters( regBuffer );
0x3422	0xA902    ADD	R1, SP, #8
0x3424	0xF88D0004  STRB	R0, [SP, #4]
0x3428	0x4608    MOV	R0, R1
0x342A	0xF7FFF8E1  BL	_fm_readRegisters+0
0x342E	0xF89D0004  LDRB	R0, [SP, #4]
;__fm_driver.c, 342 :: 		regBuffer[_FM_SYSTEM_CONFIGURATION_3] &= 0xFF0F;
0x3432	0xAC02    ADD	R4, SP, #8
0x3434	0xF2040308  ADDW	R3, R4, #8
0x3438	0x881A    LDRH	R2, [R3, #0]
0x343A	0xF64F710F  MOVW	R1, #65295
0x343E	0xEA020101  AND	R1, R2, R1, LSL #0
0x3442	0x8019    STRH	R1, [R3, #0]
;__fm_driver.c, 343 :: 		snrThreshold <<= 4;
0x3444	0x0101    LSLS	R1, R0, #4
; snrThreshold end address is: 0 (R0)
;__fm_driver.c, 344 :: 		regBuffer[_FM_SYSTEM_CONFIGURATION_3] |= snrThreshold;
0x3446	0xF2040308  ADDW	R3, R4, #8
0x344A	0x881A    LDRH	R2, [R3, #0]
0x344C	0xB2C9    UXTB	R1, R1
0x344E	0xEA420101  ORR	R1, R2, R1, LSL #0
0x3452	0x8019    STRH	R1, [R3, #0]
;__fm_driver.c, 346 :: 		fm_writeRegisters( regBuffer );
0x3454	0x4620    MOV	R0, R4
0x3456	0xF7FFFA5B  BL	_fm_writeRegisters+0
;__fm_driver.c, 348 :: 		return 0;
0x345A	0x2000    MOVS	R0, #0
0x345C	0xE000    B	L_end_fm_setSnrThreshold
;__fm_driver.c, 349 :: 		}
L_fm_setSnrThreshold16:
;__fm_driver.c, 352 :: 		return 1;
0x345E	0x2001    MOVS	R0, #1
;__fm_driver.c, 354 :: 		}
L_end_fm_setSnrThreshold:
0x3460	0xF8DDE000  LDR	LR, [SP, #0]
0x3464	0xB00A    ADD	SP, SP, #40
0x3466	0x4770    BX	LR
; end of _fm_setSnrThreshold
_fm_setSeekThreshold:
;__fm_driver.c, 291 :: 		uint8_t fm_setSeekThreshold( uint16_t seekThreshold )
; seekThreshold start address is: 0 (R0)
0x33D0	0xB08A    SUB	SP, SP, #40
0x33D2	0xF8CDE000  STR	LR, [SP, #0]
; seekThreshold end address is: 0 (R0)
; seekThreshold start address is: 0 (R0)
;__fm_driver.c, 295 :: 		if (seekThreshold < 128)
0x33D6	0x2880    CMP	R0, #128
0x33D8	0xD218    BCS	L_fm_setSeekThreshold12
;__fm_driver.c, 297 :: 		fm_readRegisters( regBuffer );
0x33DA	0xA902    ADD	R1, SP, #8
0x33DC	0xF8AD0004  STRH	R0, [SP, #4]
0x33E0	0x4608    MOV	R0, R1
0x33E2	0xF7FFF905  BL	_fm_readRegisters+0
0x33E6	0xF8BD0004  LDRH	R0, [SP, #4]
;__fm_driver.c, 299 :: 		regBuffer[_FM_SYSTEM_CONFIGURATION_2] &= 0x00FF;
0x33EA	0xAC02    ADD	R4, SP, #8
0x33EC	0x1DA2    ADDS	R2, R4, #6
0x33EE	0x8811    LDRH	R1, [R2, #0]
0x33F0	0xF00101FF  AND	R1, R1, #255
0x33F4	0x8011    STRH	R1, [R2, #0]
;__fm_driver.c, 300 :: 		seekThreshold <<= 8;
0x33F6	0x0203    LSLS	R3, R0, #8
0x33F8	0xB29B    UXTH	R3, R3
; seekThreshold end address is: 0 (R0)
;__fm_driver.c, 301 :: 		regBuffer[_FM_SYSTEM_CONFIGURATION_2] |= seekThreshold;
0x33FA	0x1DA2    ADDS	R2, R4, #6
0x33FC	0x8811    LDRH	R1, [R2, #0]
0x33FE	0x4319    ORRS	R1, R3
0x3400	0x8011    STRH	R1, [R2, #0]
;__fm_driver.c, 303 :: 		fm_writeRegisters( regBuffer );
0x3402	0x4620    MOV	R0, R4
0x3404	0xF7FFFA84  BL	_fm_writeRegisters+0
;__fm_driver.c, 305 :: 		return 0;
0x3408	0x2000    MOVS	R0, #0
0x340A	0xE000    B	L_end_fm_setSeekThreshold
;__fm_driver.c, 306 :: 		}
L_fm_setSeekThreshold12:
;__fm_driver.c, 309 :: 		return 1;
0x340C	0x2001    MOVS	R0, #1
;__fm_driver.c, 311 :: 		}
L_end_fm_setSeekThreshold:
0x340E	0xF8DDE000  LDR	LR, [SP, #0]
0x3412	0xB00A    ADD	SP, SP, #40
0x3414	0x4770    BX	LR
; end of _fm_setSeekThreshold
_fm_setSeekImpulseDetectionThreshold:
;__fm_driver.c, 356 :: 		uint8_t fm_setSeekImpulseDetectionThreshold( uint8_t impulseDetectionThreshold )
; impulseDetectionThreshold start address is: 0 (R0)
0x3594	0xB08A    SUB	SP, SP, #40
0x3596	0xF8CDE000  STR	LR, [SP, #0]
; impulseDetectionThreshold end address is: 0 (R0)
; impulseDetectionThreshold start address is: 0 (R0)
;__fm_driver.c, 360 :: 		if (impulseDetectionThreshold < 16)
0x359A	0x2810    CMP	R0, #16
0x359C	0xD21A    BCS	L_fm_setSeekImpulseDetectionThreshold18
;__fm_driver.c, 362 :: 		fm_readRegisters( regBuffer );
0x359E	0xA902    ADD	R1, SP, #8
0x35A0	0xF88D0004  STRB	R0, [SP, #4]
0x35A4	0x4608    MOV	R0, R1
0x35A6	0xF7FFF823  BL	_fm_readRegisters+0
0x35AA	0xF89D0004  LDRB	R0, [SP, #4]
;__fm_driver.c, 364 :: 		regBuffer[_FM_SYSTEM_CONFIGURATION_3] &= 0xFFF0;
0x35AE	0xAC02    ADD	R4, SP, #8
0x35B0	0xF2040308  ADDW	R3, R4, #8
0x35B4	0x881A    LDRH	R2, [R3, #0]
0x35B6	0xF64F71F0  MOVW	R1, #65520
0x35BA	0xEA020101  AND	R1, R2, R1, LSL #0
0x35BE	0x8019    STRH	R1, [R3, #0]
;__fm_driver.c, 365 :: 		regBuffer[_FM_SYSTEM_CONFIGURATION_3] |= impulseDetectionThreshold;
0x35C0	0xF2040208  ADDW	R2, R4, #8
0x35C4	0x8811    LDRH	R1, [R2, #0]
0x35C6	0x4301    ORRS	R1, R0
; impulseDetectionThreshold end address is: 0 (R0)
0x35C8	0x8011    STRH	R1, [R2, #0]
;__fm_driver.c, 367 :: 		fm_writeRegisters( regBuffer );
0x35CA	0x4620    MOV	R0, R4
0x35CC	0xF7FFF9A0  BL	_fm_writeRegisters+0
;__fm_driver.c, 369 :: 		return 0;
0x35D0	0x2000    MOVS	R0, #0
0x35D2	0xE000    B	L_end_fm_setSeekImpulseDetectionThreshold
;__fm_driver.c, 370 :: 		}
L_fm_setSeekImpulseDetectionThreshold18:
;__fm_driver.c, 373 :: 		return 1;
0x35D4	0x2001    MOVS	R0, #1
;__fm_driver.c, 375 :: 		}
L_end_fm_setSeekImpulseDetectionThreshold:
0x35D6	0xF8DDE000  LDR	LR, [SP, #0]
0x35DA	0xB00A    ADD	SP, SP, #40
0x35DC	0x4770    BX	LR
; end of _fm_setSeekImpulseDetectionThreshold
_applicationTask:
;Click_FM_STM.c, 488 :: 		void applicationTask( )
0x399C	0xB081    SUB	SP, SP, #4
0x399E	0xF8CDE000  STR	LR, [SP, #0]
;Click_FM_STM.c, 490 :: 		dataReady_ = UART_Rdy_Ptr( );
0x39A2	0x4C39    LDR	R4, [PC, #228]
0x39A4	0x6824    LDR	R4, [R4, #0]
0x39A6	0x47A0    BLX	R4
0x39A8	0x4938    LDR	R1, [PC, #224]
0x39AA	0x7008    STRB	R0, [R1, #0]
;Click_FM_STM.c, 492 :: 		if (dataReady_ != 0)
0x39AC	0xB2C4    UXTB	R4, R0
0x39AE	0x2C00    CMP	R4, #0
0x39B0	0xF0008065  BEQ	L_applicationTask61
;Click_FM_STM.c, 494 :: 		receivedData_ = UART_Rd_Ptr( );
0x39B4	0x4C36    LDR	R4, [PC, #216]
0x39B6	0x6824    LDR	R4, [R4, #0]
0x39B8	0x47A0    BLX	R4
0x39BA	0x4936    LDR	R1, [PC, #216]
0x39BC	0x7008    STRB	R0, [R1, #0]
;Click_FM_STM.c, 496 :: 		switch (receivedData_)
0x39BE	0xE029    B	L_applicationTask62
;Click_FM_STM.c, 498 :: 		case '+' :
L_applicationTask64:
;Click_FM_STM.c, 500 :: 		fm_casePlus( );
0x39C0	0xF7FFFF36  BL	_fm_casePlus+0
;Click_FM_STM.c, 502 :: 		break;
0x39C4	0xE05B    B	L_applicationTask63
;Click_FM_STM.c, 504 :: 		case '-' :
L_applicationTask65:
;Click_FM_STM.c, 506 :: 		fm_caseMinus( );
0x39C6	0xF7FFFF4F  BL	_fm_caseMinus+0
;Click_FM_STM.c, 508 :: 		break;
0x39CA	0xE058    B	L_applicationTask63
;Click_FM_STM.c, 510 :: 		case 's' :
L_applicationTask66:
;Click_FM_STM.c, 512 :: 		fm_caseSeek( );
0x39CC	0xF7FFFE08  BL	_fm_caseSeek+0
;Click_FM_STM.c, 514 :: 		break;
0x39D0	0xE055    B	L_applicationTask63
;Click_FM_STM.c, 516 :: 		case 't' :
L_applicationTask67:
;Click_FM_STM.c, 518 :: 		fm_caseTune( );
0x39D2	0xF7FFFE6D  BL	_fm_caseTune+0
;Click_FM_STM.c, 520 :: 		break;
0x39D6	0xE052    B	L_applicationTask63
;Click_FM_STM.c, 522 :: 		case 'm' :
L_applicationTask68:
;Click_FM_STM.c, 524 :: 		fm_caseMemorize( );
0x39D8	0xF7FFFA06  BL	_fm_caseMemorize+0
;Click_FM_STM.c, 526 :: 		break;
0x39DC	0xE04F    B	L_applicationTask63
;Click_FM_STM.c, 528 :: 		case 'i' :
L_applicationTask69:
;Click_FM_STM.c, 530 :: 		fm_caseMute( );
0x39DE	0xF7FFFAED  BL	_fm_caseMute+0
;Click_FM_STM.c, 532 :: 		break;
0x39E2	0xE04C    B	L_applicationTask63
;Click_FM_STM.c, 534 :: 		case '1' :
L_applicationTask70:
;Click_FM_STM.c, 536 :: 		fm_caseStation1( );
0x39E4	0xF7FFFB14  BL	_fm_caseStation1+0
;Click_FM_STM.c, 538 :: 		break;
0x39E8	0xE049    B	L_applicationTask63
;Click_FM_STM.c, 540 :: 		case '2' :
L_applicationTask71:
;Click_FM_STM.c, 542 :: 		fm_caseStation2( );
0x39EA	0xF7FFF935  BL	_fm_caseStation2+0
;Click_FM_STM.c, 544 :: 		break;
0x39EE	0xE046    B	L_applicationTask63
;Click_FM_STM.c, 546 :: 		case '3' :
L_applicationTask72:
;Click_FM_STM.c, 548 :: 		fm_caseStation3( );
0x39F0	0xF7FFF86A  BL	_fm_caseStation3+0
;Click_FM_STM.c, 550 :: 		break;
0x39F4	0xE043    B	L_applicationTask63
;Click_FM_STM.c, 552 :: 		case '4' :
L_applicationTask73:
;Click_FM_STM.c, 554 :: 		fm_caseStation4( );
0x39F6	0xF7FFF8CB  BL	_fm_caseStation4+0
;Click_FM_STM.c, 556 :: 		break;
0x39FA	0xE040    B	L_applicationTask63
;Click_FM_STM.c, 558 :: 		case '5' :
L_applicationTask74:
;Click_FM_STM.c, 560 :: 		fm_caseStation5( );
0x39FC	0xF7FFF990  BL	_fm_caseStation5+0
;Click_FM_STM.c, 562 :: 		break;
0x3A00	0xE03D    B	L_applicationTask63
;Click_FM_STM.c, 564 :: 		case '.' :
L_applicationTask75:
;Click_FM_STM.c, 566 :: 		fm_caseTuneUp( );
0x3A02	0xF7FFFB69  BL	_fm_caseTuneUp+0
;Click_FM_STM.c, 568 :: 		break;
0x3A06	0xE03A    B	L_applicationTask63
;Click_FM_STM.c, 570 :: 		case ',' :
L_applicationTask76:
;Click_FM_STM.c, 572 :: 		fm_caseTuneDown( );
0x3A08	0xF7FFFA66  BL	_fm_caseTuneDown+0
;Click_FM_STM.c, 574 :: 		break;
0x3A0C	0xE037    B	L_applicationTask63
;Click_FM_STM.c, 576 :: 		default :
L_applicationTask77:
;Click_FM_STM.c, 578 :: 		fm_caseWrongCommand( );
0x3A0E	0xF7FFF84D  BL	_fm_caseWrongCommand+0
;Click_FM_STM.c, 580 :: 		break;
0x3A12	0xE034    B	L_applicationTask63
;Click_FM_STM.c, 582 :: 		}
L_applicationTask62:
0x3A14	0x481F    LDR	R0, [PC, #124]
0x3A16	0x7800    LDRB	R0, [R0, #0]
0x3A18	0x282B    CMP	R0, #43
0x3A1A	0xD0D1    BEQ	L_applicationTask64
0x3A1C	0x481D    LDR	R0, [PC, #116]
0x3A1E	0x7800    LDRB	R0, [R0, #0]
0x3A20	0x282D    CMP	R0, #45
0x3A22	0xD0D0    BEQ	L_applicationTask65
0x3A24	0x481B    LDR	R0, [PC, #108]
0x3A26	0x7800    LDRB	R0, [R0, #0]
0x3A28	0x2873    CMP	R0, #115
0x3A2A	0xD0CF    BEQ	L_applicationTask66
0x3A2C	0x4819    LDR	R0, [PC, #100]
0x3A2E	0x7800    LDRB	R0, [R0, #0]
0x3A30	0x2874    CMP	R0, #116
0x3A32	0xD0CE    BEQ	L_applicationTask67
0x3A34	0x4817    LDR	R0, [PC, #92]
0x3A36	0x7800    LDRB	R0, [R0, #0]
0x3A38	0x286D    CMP	R0, #109
0x3A3A	0xD0CD    BEQ	L_applicationTask68
0x3A3C	0x4815    LDR	R0, [PC, #84]
0x3A3E	0x7800    LDRB	R0, [R0, #0]
0x3A40	0x2869    CMP	R0, #105
0x3A42	0xD0CC    BEQ	L_applicationTask69
0x3A44	0x4813    LDR	R0, [PC, #76]
0x3A46	0x7800    LDRB	R0, [R0, #0]
0x3A48	0x2831    CMP	R0, #49
0x3A4A	0xD0CB    BEQ	L_applicationTask70
0x3A4C	0x4811    LDR	R0, [PC, #68]
0x3A4E	0x7800    LDRB	R0, [R0, #0]
0x3A50	0x2832    CMP	R0, #50
0x3A52	0xD0CA    BEQ	L_applicationTask71
0x3A54	0x480F    LDR	R0, [PC, #60]
0x3A56	0x7800    LDRB	R0, [R0, #0]
0x3A58	0x2833    CMP	R0, #51
0x3A5A	0xD0C9    BEQ	L_applicationTask72
0x3A5C	0x480D    LDR	R0, [PC, #52]
0x3A5E	0x7800    LDRB	R0, [R0, #0]
0x3A60	0x2834    CMP	R0, #52
0x3A62	0xD0C8    BEQ	L_applicationTask73
0x3A64	0x480B    LDR	R0, [PC, #44]
0x3A66	0x7800    LDRB	R0, [R0, #0]
0x3A68	0x2835    CMP	R0, #53
0x3A6A	0xD0C7    BEQ	L_applicationTask74
0x3A6C	0x4809    LDR	R0, [PC, #36]
0x3A6E	0x7800    LDRB	R0, [R0, #0]
0x3A70	0x282E    CMP	R0, #46
0x3A72	0xD0C6    BEQ	L_applicationTask75
0x3A74	0x4807    LDR	R0, [PC, #28]
0x3A76	0x7800    LDRB	R0, [R0, #0]
0x3A78	0x282C    CMP	R0, #44
0x3A7A	0xD0C5    BEQ	L_applicationTask76
0x3A7C	0xE7C7    B	L_applicationTask77
L_applicationTask63:
;Click_FM_STM.c, 583 :: 		}
L_applicationTask61:
;Click_FM_STM.c, 584 :: 		}
L_end_applicationTask:
0x3A7E	0xF8DDE000  LDR	LR, [SP, #0]
0x3A82	0xB001    ADD	SP, SP, #4
0x3A84	0x4770    BX	LR
0x3A86	0xBF00    NOP
0x3A88	0x03482000  	_UART_Rdy_Ptr+0
0x3A8C	0x02F52000  	_dataReady_+0
0x3A90	0x034C2000  	_UART_Rd_Ptr+0
0x3A94	0x03462000  	_receivedData_+0
; end of _applicationTask
_fm_casePlus:
;Click_FM_STM.c, 84 :: 		void fm_casePlus( )
0x3830	0xB081    SUB	SP, SP, #4
0x3832	0xF8CDE000  STR	LR, [SP, #0]
;Click_FM_STM.c, 86 :: 		errorFlag_ = fm_volumeUp( );
0x3836	0xF7FEFA8F  BL	_fm_volumeUp+0
0x383A	0x4908    LDR	R1, [PC, #32]
0x383C	0x7008    STRB	R0, [R1, #0]
;Click_FM_STM.c, 88 :: 		if (errorFlag_ == 0)
0x383E	0xB920    CBNZ	R0, L_fm_casePlus0
;Click_FM_STM.c, 90 :: 		mikrobus_logWrite( "volume up", _LOG_LINE );
0x3840	0x4807    LDR	R0, [PC, #28]
0x3842	0x2102    MOVS	R1, #2
0x3844	0xF7FFFE34  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 91 :: 		}
0x3848	0xE003    B	L_fm_casePlus1
L_fm_casePlus0:
;Click_FM_STM.c, 94 :: 		mikrobus_logWrite( "volume max", _LOG_LINE );
0x384A	0x4806    LDR	R0, [PC, #24]
0x384C	0x2102    MOVS	R1, #2
0x384E	0xF7FFFE2F  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 95 :: 		}
L_fm_casePlus1:
;Click_FM_STM.c, 96 :: 		}
L_end_fm_casePlus:
0x3852	0xF8DDE000  LDR	LR, [SP, #0]
0x3856	0xB001    ADD	SP, SP, #4
0x3858	0x4770    BX	LR
0x385A	0xBF00    NOP
0x385C	0x029B2000  	_errorFlag_+0
0x3860	0x02652000  	?lstr1_Click_FM_STM+0
0x3864	0x026F2000  	?lstr2_Click_FM_STM+0
; end of _fm_casePlus
_fm_volumeUp:
;__fm_driver.c, 765 :: 		uint8_t fm_volumeUp( void )
0x1D58	0xB089    SUB	SP, SP, #36
0x1D5A	0xF8CDE000  STR	LR, [SP, #0]
;__fm_driver.c, 770 :: 		fm_readRegisters( regBuffer );
0x1D5E	0xA801    ADD	R0, SP, #4
0x1D60	0xF000FC46  BL	_fm_readRegisters+0
;__fm_driver.c, 772 :: 		volumeLevel  = regBuffer[ _FM_SYSTEM_CONFIGURATION_2 ];
0x1D64	0xA801    ADD	R0, SP, #4
0x1D66	0x1D80    ADDS	R0, R0, #6
0x1D68	0x8800    LDRH	R0, [R0, #0]
;__fm_driver.c, 773 :: 		volumeLevel &= 0x000F;
0x1D6A	0xB2C0    UXTB	R0, R0
0x1D6C	0xF000000F  AND	R0, R0, #15
0x1D70	0xB2C0    UXTB	R0, R0
; volumeLevel start address is: 4 (R1)
0x1D72	0xB2C1    UXTB	R1, R0
;__fm_driver.c, 775 :: 		if (volumeLevel < 15)
0x1D74	0x280F    CMP	R0, #15
0x1D76	0xD212    BCS	L_fm_volumeUp44
;__fm_driver.c, 777 :: 		volumeLevel += 1;
0x1D78	0x1C48    ADDS	R0, R1, #1
; volumeLevel end address is: 4 (R1)
; volumeLevel start address is: 16 (R4)
0x1D7A	0xB2C4    UXTB	R4, R0
;__fm_driver.c, 779 :: 		regBuffer[_FM_SYSTEM_CONFIGURATION_2] &= 0xFFF0;
0x1D7C	0xAB01    ADD	R3, SP, #4
0x1D7E	0x1D9A    ADDS	R2, R3, #6
0x1D80	0x8811    LDRH	R1, [R2, #0]
0x1D82	0xF64F70F0  MOVW	R0, #65520
0x1D86	0xEA010000  AND	R0, R1, R0, LSL #0
0x1D8A	0x8010    STRH	R0, [R2, #0]
;__fm_driver.c, 780 :: 		regBuffer[_FM_SYSTEM_CONFIGURATION_2] |= volumeLevel;
0x1D8C	0x1D99    ADDS	R1, R3, #6
0x1D8E	0x8808    LDRH	R0, [R1, #0]
0x1D90	0x4320    ORRS	R0, R4
; volumeLevel end address is: 16 (R4)
0x1D92	0x8008    STRH	R0, [R1, #0]
;__fm_driver.c, 782 :: 		fm_writeRegisters( regBuffer );
0x1D94	0x4618    MOV	R0, R3
0x1D96	0xF000FDBB  BL	_fm_writeRegisters+0
;__fm_driver.c, 784 :: 		return 0;
0x1D9A	0x2000    MOVS	R0, #0
0x1D9C	0xE000    B	L_end_fm_volumeUp
;__fm_driver.c, 785 :: 		}
L_fm_volumeUp44:
;__fm_driver.c, 788 :: 		return 1;
0x1D9E	0x2001    MOVS	R0, #1
;__fm_driver.c, 790 :: 		}
L_end_fm_volumeUp:
0x1DA0	0xF8DDE000  LDR	LR, [SP, #0]
0x1DA4	0xB009    ADD	SP, SP, #36
0x1DA6	0x4770    BX	LR
; end of _fm_volumeUp
_fm_caseMinus:
;Click_FM_STM.c, 98 :: 		void fm_caseMinus( )
0x3868	0xB081    SUB	SP, SP, #4
0x386A	0xF8CDE000  STR	LR, [SP, #0]
;Click_FM_STM.c, 100 :: 		errorFlag_ = fm_volumeDown( );
0x386E	0xF7FEFAB1  BL	_fm_volumeDown+0
0x3872	0x4908    LDR	R1, [PC, #32]
0x3874	0x7008    STRB	R0, [R1, #0]
;Click_FM_STM.c, 102 :: 		if (errorFlag_ == 0)
0x3876	0xB920    CBNZ	R0, L_fm_caseMinus2
;Click_FM_STM.c, 104 :: 		mikrobus_logWrite( "volume down", _LOG_LINE );
0x3878	0x4807    LDR	R0, [PC, #28]
0x387A	0x2102    MOVS	R1, #2
0x387C	0xF7FFFE18  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 105 :: 		}
0x3880	0xE003    B	L_fm_caseMinus3
L_fm_caseMinus2:
;Click_FM_STM.c, 108 :: 		mikrobus_logWrite( "volume min", _LOG_LINE );
0x3882	0x4806    LDR	R0, [PC, #24]
0x3884	0x2102    MOVS	R1, #2
0x3886	0xF7FFFE13  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 109 :: 		}
L_fm_caseMinus3:
;Click_FM_STM.c, 110 :: 		}
L_end_fm_caseMinus:
0x388A	0xF8DDE000  LDR	LR, [SP, #0]
0x388E	0xB001    ADD	SP, SP, #4
0x3890	0x4770    BX	LR
0x3892	0xBF00    NOP
0x3894	0x029B2000  	_errorFlag_+0
0x3898	0x021C2000  	?lstr3_Click_FM_STM+0
0x389C	0x02282000  	?lstr4_Click_FM_STM+0
; end of _fm_caseMinus
_fm_volumeDown:
;__fm_driver.c, 792 :: 		uint8_t fm_volumeDown( void )
0x1DD4	0xB089    SUB	SP, SP, #36
0x1DD6	0xF8CDE000  STR	LR, [SP, #0]
;__fm_driver.c, 797 :: 		fm_readRegisters( regBuffer );
0x1DDA	0xA801    ADD	R0, SP, #4
0x1DDC	0xF000FC08  BL	_fm_readRegisters+0
;__fm_driver.c, 799 :: 		volumeLevel  = regBuffer[ _FM_SYSTEM_CONFIGURATION_2 ];
0x1DE0	0xA801    ADD	R0, SP, #4
0x1DE2	0x1D80    ADDS	R0, R0, #6
0x1DE4	0x8800    LDRH	R0, [R0, #0]
;__fm_driver.c, 800 :: 		volumeLevel &= 0x000F;
0x1DE6	0xB2C0    UXTB	R0, R0
0x1DE8	0xF000000F  AND	R0, R0, #15
0x1DEC	0xB2C0    UXTB	R0, R0
; volumeLevel start address is: 4 (R1)
0x1DEE	0xB2C1    UXTB	R1, R0
;__fm_driver.c, 802 :: 		if (volumeLevel > 0)
0x1DF0	0x2800    CMP	R0, #0
0x1DF2	0xD912    BLS	L_fm_volumeDown46
;__fm_driver.c, 804 :: 		volumeLevel -= 1;
0x1DF4	0x1E48    SUBS	R0, R1, #1
; volumeLevel end address is: 4 (R1)
; volumeLevel start address is: 16 (R4)
0x1DF6	0xB2C4    UXTB	R4, R0
;__fm_driver.c, 806 :: 		regBuffer[_FM_SYSTEM_CONFIGURATION_2] &= 0xFFF0;
0x1DF8	0xAB01    ADD	R3, SP, #4
0x1DFA	0x1D9A    ADDS	R2, R3, #6
0x1DFC	0x8811    LDRH	R1, [R2, #0]
0x1DFE	0xF64F70F0  MOVW	R0, #65520
0x1E02	0xEA010000  AND	R0, R1, R0, LSL #0
0x1E06	0x8010    STRH	R0, [R2, #0]
;__fm_driver.c, 807 :: 		regBuffer[_FM_SYSTEM_CONFIGURATION_2] |= volumeLevel;
0x1E08	0x1D99    ADDS	R1, R3, #6
0x1E0A	0x8808    LDRH	R0, [R1, #0]
0x1E0C	0x4320    ORRS	R0, R4
; volumeLevel end address is: 16 (R4)
0x1E0E	0x8008    STRH	R0, [R1, #0]
;__fm_driver.c, 809 :: 		fm_writeRegisters( regBuffer );
0x1E10	0x4618    MOV	R0, R3
0x1E12	0xF000FD7D  BL	_fm_writeRegisters+0
;__fm_driver.c, 811 :: 		return 0;
0x1E16	0x2000    MOVS	R0, #0
0x1E18	0xE000    B	L_end_fm_volumeDown
;__fm_driver.c, 812 :: 		}
L_fm_volumeDown46:
;__fm_driver.c, 815 :: 		return 1;
0x1E1A	0x2001    MOVS	R0, #1
;__fm_driver.c, 817 :: 		}
L_end_fm_volumeDown:
0x1E1C	0xF8DDE000  LDR	LR, [SP, #0]
0x1E20	0xB009    ADD	SP, SP, #36
0x1E22	0x4770    BX	LR
; end of _fm_volumeDown
_fm_caseSeek:
;Click_FM_STM.c, 112 :: 		void fm_caseSeek( )
0x35E0	0xB081    SUB	SP, SP, #4
0x35E2	0xF8CDE000  STR	LR, [SP, #0]
;Click_FM_STM.c, 114 :: 		fm_seek( );
0x35E6	0xF7FEFD9D  BL	_fm_seek+0
;Click_FM_STM.c, 116 :: 		Delay_ms(100);
0x35EA	0xF644777F  MOVW	R7, #20351
0x35EE	0xF2C00712  MOVT	R7, #18
L_fm_caseSeek4:
0x35F2	0x1E7F    SUBS	R7, R7, #1
0x35F4	0xD1FD    BNE	L_fm_caseSeek4
0x35F6	0xBF00    NOP
0x35F8	0xBF00    NOP
0x35FA	0xBF00    NOP
0x35FC	0xBF00    NOP
0x35FE	0xBF00    NOP
;Click_FM_STM.c, 118 :: 		fm_endSeek( );
0x3600	0xF7FEFDBA  BL	_fm_endSeek+0
;Click_FM_STM.c, 120 :: 		Delay_ms(10);
0x3604	0xF24D47BF  MOVW	R7, #54463
0x3608	0xF2C00701  MOVT	R7, #1
0x360C	0xBF00    NOP
0x360E	0xBF00    NOP
L_fm_caseSeek6:
0x3610	0x1E7F    SUBS	R7, R7, #1
0x3612	0xD1FD    BNE	L_fm_caseSeek6
0x3614	0xBF00    NOP
0x3616	0xBF00    NOP
0x3618	0xBF00    NOP
;Click_FM_STM.c, 122 :: 		receivedSignalStrengthIndicator = fm_getReceivedSignalStrengthIndicator( );
0x361A	0xF7FEFE17  BL	_fm_getReceivedSignalStrengthIndicator+0
0x361E	0x491A    LDR	R1, [PC, #104]
0x3620	0x8008    STRH	R0, [R1, #0]
;Click_FM_STM.c, 123 :: 		channelFrequency_ = fm_getChannelFrequency( );
0x3622	0xF7FEFDBF  BL	_fm_getChannelFrequency+0
0x3626	0x4919    LDR	R1, [PC, #100]
0x3628	0x6008    STR	R0, [R1, #0]
;Click_FM_STM.c, 124 :: 		stationFrequency_ = fm_getChannel( );
0x362A	0xF7FEFC47  BL	_fm_getChannel+0
0x362E	0x4918    LDR	R1, [PC, #96]
0x3630	0x8008    STRH	R0, [R1, #0]
;Click_FM_STM.c, 126 :: 		WordToStr( receivedSignalStrengthIndicator, text );
0x3632	0x4815    LDR	R0, [PC, #84]
0x3634	0x8800    LDRH	R0, [R0, #0]
0x3636	0x4917    LDR	R1, [PC, #92]
0x3638	0xF7FEFC52  BL	_WordToStr+0
;Click_FM_STM.c, 127 :: 		mikrobus_logWrite( "station found", _LOG_LINE );
0x363C	0x4816    LDR	R0, [PC, #88]
0x363E	0x2102    MOVS	R1, #2
0x3640	0xF7FFFF36  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 128 :: 		mikrobus_logWrite( "rssi:", _LOG_TEXT );
0x3644	0x4815    LDR	R0, [PC, #84]
0x3646	0x2101    MOVS	R1, #1
0x3648	0xF7FFFF32  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 129 :: 		mikrobus_logWrite( text, _LOG_TEXT );
0x364C	0x2101    MOVS	R1, #1
0x364E	0x4811    LDR	R0, [PC, #68]
0x3650	0xF7FFFF2E  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 130 :: 		mikrobus_logWrite( " dBuV", _LOG_LINE );
0x3654	0x4812    LDR	R0, [PC, #72]
0x3656	0x2102    MOVS	R1, #2
0x3658	0xF7FFFF2A  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 132 :: 		FloatToStr( channelFrequency_, text );
0x365C	0x480B    LDR	R0, [PC, #44]
0x365E	0x6800    LDR	R0, [R0, #0]
0x3660	0x490C    LDR	R1, [PC, #48]
0x3662	0xF7FEFC65  BL	_FloatToStr+0
;Click_FM_STM.c, 133 :: 		mikrobus_logWrite( "channel frequency:", _LOG_TEXT );
0x3666	0x480F    LDR	R0, [PC, #60]
0x3668	0x2101    MOVS	R1, #1
0x366A	0xF7FFFF21  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 134 :: 		mikrobus_logWrite( text, _LOG_TEXT );
0x366E	0x2101    MOVS	R1, #1
0x3670	0x4808    LDR	R0, [PC, #32]
0x3672	0xF7FFFF1D  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 135 :: 		mikrobus_logWrite( " MHz", _LOG_LINE );
0x3676	0x480C    LDR	R0, [PC, #48]
0x3678	0x2102    MOVS	R1, #2
0x367A	0xF7FFFF19  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 136 :: 		}
L_end_fm_caseSeek:
0x367E	0xF8DDE000  LDR	LR, [SP, #0]
0x3682	0xB001    ADD	SP, SP, #4
0x3684	0x4770    BX	LR
0x3686	0xBF00    NOP
0x3688	0x02F62000  	_receivedSignalStrengthIndicator+0
0x368C	0x03042000  	_channelFrequency_+0
0x3690	0x03082000  	_stationFrequency_+0
0x3694	0x030A2000  	_text+0
0x3698	0x02332000  	?lstr5_Click_FM_STM+0
0x369C	0x02412000  	?lstr6_Click_FM_STM+0
0x36A0	0x02472000  	?lstr7_Click_FM_STM+0
0x36A4	0x024D2000  	?lstr8_Click_FM_STM+0
0x36A8	0x02602000  	?lstr9_Click_FM_STM+0
; end of _fm_caseSeek
_fm_seek:
;__fm_driver.c, 743 :: 		void fm_seek( void )
0x2124	0xB089    SUB	SP, SP, #36
0x2126	0xF8CDE000  STR	LR, [SP, #0]
;__fm_driver.c, 747 :: 		fm_readRegisters( regBuffer );
0x212A	0xA801    ADD	R0, SP, #4
0x212C	0xF000FA60  BL	_fm_readRegisters+0
;__fm_driver.c, 749 :: 		fm_setBits( regBuffer, _FM_POWER_CONFIGURATION, _FM_SEEK_MASK, _FM_SEEK_ENABLE );
0x2130	0xA801    ADD	R0, SP, #4
0x2132	0xF2401300  MOVW	R3, #256
0x2136	0xF64F62FF  MOVW	R2, #65279
0x213A	0xF2400100  MOVW	R1, #0
0x213E	0xF000FBDB  BL	_fm_setBits+0
;__fm_driver.c, 751 :: 		fm_writeRegisters( regBuffer );
0x2142	0xA801    ADD	R0, SP, #4
0x2144	0xF000FBE4  BL	_fm_writeRegisters+0
;__fm_driver.c, 752 :: 		}
L_end_fm_seek:
0x2148	0xF8DDE000  LDR	LR, [SP, #0]
0x214C	0xB009    ADD	SP, SP, #36
0x214E	0x4770    BX	LR
; end of _fm_seek
_fm_endSeek:
;__fm_driver.c, 754 :: 		void fm_endSeek( void )
0x2178	0xB089    SUB	SP, SP, #36
0x217A	0xF8CDE000  STR	LR, [SP, #0]
;__fm_driver.c, 758 :: 		fm_readRegisters( regBuffer );
0x217E	0xA801    ADD	R0, SP, #4
0x2180	0xF000FA36  BL	_fm_readRegisters+0
;__fm_driver.c, 760 :: 		fm_setBits( regBuffer, _FM_POWER_CONFIGURATION, _FM_SEEK_MASK, _FM_SEEK_DISABLE);
0x2184	0xA801    ADD	R0, SP, #4
0x2186	0xF2400300  MOVW	R3, #0
0x218A	0xF64F62FF  MOVW	R2, #65279
0x218E	0xF2400100  MOVW	R1, #0
0x2192	0xF000FBB1  BL	_fm_setBits+0
;__fm_driver.c, 762 :: 		fm_writeRegisters( regBuffer );
0x2196	0xA801    ADD	R0, SP, #4
0x2198	0xF000FBBA  BL	_fm_writeRegisters+0
;__fm_driver.c, 763 :: 		}
L_end_fm_endSeek:
0x219C	0xF8DDE000  LDR	LR, [SP, #0]
0x21A0	0xB009    ADD	SP, SP, #36
0x21A2	0x4770    BX	LR
; end of _fm_endSeek
_fm_getReceivedSignalStrengthIndicator:
;__fm_driver.c, 397 :: 		uint8_t fm_getReceivedSignalStrengthIndicator( void )
0x224C	0xB089    SUB	SP, SP, #36
0x224E	0xF8CDE000  STR	LR, [SP, #0]
;__fm_driver.c, 404 :: 		fm_readRegisters( regBuffer );
0x2252	0xA801    ADD	R0, SP, #4
0x2254	0xF000F9CC  BL	_fm_readRegisters+0
;__fm_driver.c, 406 :: 		auxVariable = regBuffer[_FM_STATUS_RSSI];
0x2258	0xA801    ADD	R0, SP, #4
0x225A	0x3010    ADDS	R0, #16
0x225C	0x8800    LDRH	R0, [R0, #0]
;__fm_driver.c, 408 :: 		auxVariable &= 0x00FF;
0x225E	0xF00000FF  AND	R0, R0, #255
;__fm_driver.c, 412 :: 		return rssiValue;
0x2262	0xB2C0    UXTB	R0, R0
;__fm_driver.c, 413 :: 		}
L_end_fm_getReceivedSignalStrengthIndicator:
0x2264	0xF8DDE000  LDR	LR, [SP, #0]
0x2268	0xB009    ADD	SP, SP, #36
0x226A	0x4770    BX	LR
; end of _fm_getReceivedSignalStrengthIndicator
_fm_getChannelFrequency:
;__fm_driver.c, 475 :: 		float fm_getChannelFrequency( void )
0x21A4	0xB08B    SUB	SP, SP, #44
0x21A6	0xF8CDE000  STR	LR, [SP, #0]
;__fm_driver.c, 485 :: 		fm_readRegisters( regBuffer );
0x21AA	0xA801    ADD	R0, SP, #4
0x21AC	0xF000FA20  BL	_fm_readRegisters+0
;__fm_driver.c, 487 :: 		b = regBuffer[ _FM_SYSTEM_CONFIGURATION_2 ];
0x21B0	0xAA01    ADD	R2, SP, #4
0x21B2	0x1D90    ADDS	R0, R2, #6
0x21B4	0x8800    LDRH	R0, [R0, #0]
;__fm_driver.c, 488 :: 		b &= 0x00C0;
0x21B6	0xF00000C0  AND	R0, R0, #192
0x21BA	0xB280    UXTH	R0, R0
;__fm_driver.c, 489 :: 		b >>= 6;
0x21BC	0x0980    LSRS	R0, R0, #6
0x21BE	0xB280    UXTH	R0, R0
;__fm_driver.c, 490 :: 		b &= 0x0003;
0x21C0	0xF0000103  AND	R1, R0, #3
0x21C4	0xB289    UXTH	R1, R1
; b start address is: 12 (R3)
0x21C6	0xB28B    UXTH	R3, R1
;__fm_driver.c, 492 :: 		s = regBuffer[ _FM_SYSTEM_CONFIGURATION_2 ];
0x21C8	0x1D90    ADDS	R0, R2, #6
0x21CA	0x8800    LDRH	R0, [R0, #0]
;__fm_driver.c, 493 :: 		s &= 0x0030;
0x21CC	0xF0000030  AND	R0, R0, #48
0x21D0	0xB280    UXTH	R0, R0
;__fm_driver.c, 494 :: 		s >>= 4;
0x21D2	0x0900    LSRS	R0, R0, #4
0x21D4	0xB280    UXTH	R0, R0
;__fm_driver.c, 495 :: 		s &= 0x0003;
0x21D6	0xF0000003  AND	R0, R0, #3
; s start address is: 8 (R2)
0x21DA	0xB282    UXTH	R2, R0
;__fm_driver.c, 497 :: 		if (b == 0)
0x21DC	0xB911    CBNZ	R1, L_fm_getChannelFrequency20
; b end address is: 12 (R3)
;__fm_driver.c, 499 :: 		band_ = 87.5;
0x21DE	0x4816    LDR	R0, [PC, #88]
0x21E0	0x900A    STR	R0, [SP, #40]
;__fm_driver.c, 500 :: 		}
0x21E2	0xE008    B	L_fm_getChannelFrequency21
L_fm_getChannelFrequency20:
;__fm_driver.c, 501 :: 		else if (b == 1)
; b start address is: 12 (R3)
0x21E4	0x2B01    CMP	R3, #1
0x21E6	0xD102    BNE	L_fm_getChannelFrequency22
; b end address is: 12 (R3)
;__fm_driver.c, 503 :: 		band_ = 76.0;
0x21E8	0x4814    LDR	R0, [PC, #80]
0x21EA	0x900A    STR	R0, [SP, #40]
;__fm_driver.c, 504 :: 		}
0x21EC	0xE003    B	L_fm_getChannelFrequency23
L_fm_getChannelFrequency22:
;__fm_driver.c, 505 :: 		else if (b == 2)
; b start address is: 12 (R3)
0x21EE	0x2B02    CMP	R3, #2
0x21F0	0xD101    BNE	L_fm_getChannelFrequency24
; b end address is: 12 (R3)
;__fm_driver.c, 507 :: 		band_ = 76.0;
0x21F2	0x4812    LDR	R0, [PC, #72]
0x21F4	0x900A    STR	R0, [SP, #40]
;__fm_driver.c, 508 :: 		}
L_fm_getChannelFrequency24:
L_fm_getChannelFrequency23:
L_fm_getChannelFrequency21:
;__fm_driver.c, 510 :: 		if (s == 0)
0x21F6	0xB912    CBNZ	R2, L_fm_getChannelFrequency25
; s end address is: 8 (R2)
;__fm_driver.c, 512 :: 		space_ = 0.2;
0x21F8	0x4811    LDR	R0, [PC, #68]
0x21FA	0x9009    STR	R0, [SP, #36]
;__fm_driver.c, 513 :: 		}
0x21FC	0xE008    B	L_fm_getChannelFrequency26
L_fm_getChannelFrequency25:
;__fm_driver.c, 514 :: 		else if (s == 1)
; s start address is: 8 (R2)
0x21FE	0x2A01    CMP	R2, #1
0x2200	0xD102    BNE	L_fm_getChannelFrequency27
; s end address is: 8 (R2)
;__fm_driver.c, 516 :: 		space_ = 0.1;
0x2202	0x4810    LDR	R0, [PC, #64]
0x2204	0x9009    STR	R0, [SP, #36]
;__fm_driver.c, 517 :: 		}
0x2206	0xE003    B	L_fm_getChannelFrequency28
L_fm_getChannelFrequency27:
;__fm_driver.c, 518 :: 		else if (s == 2)
; s start address is: 8 (R2)
0x2208	0x2A02    CMP	R2, #2
0x220A	0xD101    BNE	L_fm_getChannelFrequency29
; s end address is: 8 (R2)
;__fm_driver.c, 520 :: 		space_ = 0.05;
0x220C	0x480E    LDR	R0, [PC, #56]
0x220E	0x9009    STR	R0, [SP, #36]
;__fm_driver.c, 521 :: 		}
L_fm_getChannelFrequency29:
L_fm_getChannelFrequency28:
L_fm_getChannelFrequency26:
;__fm_driver.c, 523 :: 		channel_ = regBuffer[_FM_READ_CHANNEL];
0x2210	0xA801    ADD	R0, SP, #4
0x2212	0x3012    ADDS	R0, #18
0x2214	0x8801    LDRH	R1, [R0, #0]
;__fm_driver.c, 525 :: 		channel_ &= 0x03FF;
0x2216	0xF24030FF  MOVW	R0, #1023
0x221A	0xEA010000  AND	R0, R1, R0, LSL #0
0x221E	0xB280    UXTH	R0, R0
;__fm_driver.c, 527 :: 		channelFrequency_  = channel_ * space_;
0x2220	0xF7FFFC06  BL	__UnsignedIntegralToFloat+0
0x2224	0x9A09    LDR	R2, [SP, #36]
0x2226	0xF7FFFB8F  BL	__Mul_FP+0
;__fm_driver.c, 528 :: 		channelFrequency_ += band_;
0x222A	0x9A0A    LDR	R2, [SP, #40]
0x222C	0xF7FFFA14  BL	__Add_FP+0
;__fm_driver.c, 530 :: 		return channelFrequency_;
;__fm_driver.c, 531 :: 		}
L_end_fm_getChannelFrequency:
0x2230	0xF8DDE000  LDR	LR, [SP, #0]
0x2234	0xB00B    ADD	SP, SP, #44
0x2236	0x4770    BX	LR
0x2238	0x000042AF  	#1118765056
0x223C	0x00004298  	#1117257728
0x2240	0xCCCD3E4C  	#1045220557
0x2244	0xCCCD3DCC  	#1036831949
0x2248	0xCCCD3D4C  	#1028443341
; end of _fm_getChannelFrequency
__UnsignedIntegralToFloat:
;__Lib_MathDouble.c, 262 :: 		
0x1A30	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 264 :: 		
0x1A32	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 265 :: 		
0x1A34	0xBF08    IT	EQ
;__Lib_MathDouble.c, 267 :: 		
0x1A36	0xE00F    BEQ	__me_lab_end
;__Lib_MathDouble.c, 269 :: 		
0x1A38	0xB502    PUSH	(R1, R14)
;__Lib_MathDouble.c, 271 :: 		
0x1A3A	0xF04F029E  MOV	R2, #158
;__Lib_MathDouble.c, 272 :: 		
0x1A3E	0xD402    BMI	__me_label_cont
;__Lib_MathDouble.c, 274 :: 		
__me_loop:
0x1A40	0x1E52    SUBS	R2, R2, #1
;__Lib_MathDouble.c, 275 :: 		
0x1A42	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 277 :: 		
0x1A44	0xD5FC    BPL	__me_loop
;__Lib_MathDouble.c, 279 :: 		
__me_label_cont:
0x1A46	0x3080    ADDS	R0, #128
;__Lib_MathDouble.c, 280 :: 		
0x1A48	0xBF2C    ITE	CS
;__Lib_MathDouble.c, 281 :: 		
0x1A4A	0x1C52    ADDCS	R2, R2, #1
;__Lib_MathDouble.c, 282 :: 		
0x1A4C	0x0040    LSLCC	R0, R0, #1
;__Lib_MathDouble.c, 284 :: 		
0x1A4E	0x0A40    LSRS	R0, R0, #9
;__Lib_MathDouble.c, 285 :: 		
0x1A50	0xEA4050C2  ORR	R0, R0, R2, LSL #23
;__Lib_MathDouble.c, 287 :: 		
0x1A54	0xE8BD4002  POP	(R1, R14)
;__Lib_MathDouble.c, 288 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 290 :: 		
L_end__UnsignedIntegralToFloat:
0x1A58	0xB001    ADD	SP, SP, #4
0x1A5A	0x4770    BX	LR
; end of __UnsignedIntegralToFloat
__Mul_FP:
;__Lib_MathDouble.c, 666 :: 		
0x1948	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 668 :: 		
0x194A	0xB5FA    PUSH	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 670 :: 		
0x194C	0xEA900602  EORS	R6, R0, R2, LSL #0
;__Lib_MathDouble.c, 671 :: 		
0x1950	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 672 :: 		
0x1952	0xF04F4600  MOVMI	R6, #-2147483648
;__Lib_MathDouble.c, 673 :: 		
0x1956	0xF04F0600  MOVPL	R6, #0
;__Lib_MathDouble.c, 675 :: 		
0x195A	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 676 :: 		
0x195E	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 677 :: 		
0x1962	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 678 :: 		
0x1964	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 679 :: 		
0x1966	0xF0414100  ORRNE	R1, R1, #-2147483648
;__Lib_MathDouble.c, 681 :: 		
0x196A	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 683 :: 		
0x196E	0xE02C    BEQ	__me_lab_end
;__Lib_MathDouble.c, 685 :: 		
0x1970	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 686 :: 		
0x1972	0xD026    BEQ	__me_ovfl
;__Lib_MathDouble.c, 688 :: 		
0x1974	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 689 :: 		
0x1978	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 690 :: 		
0x197C	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 691 :: 		
0x197E	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 692 :: 		
0x1980	0xF0444400  ORRNE	R4, R4, #-2147483648
;__Lib_MathDouble.c, 694 :: 		
0x1984	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 696 :: 		
0x1988	0xE01F    BEQ	__me_lab_end
;__Lib_MathDouble.c, 698 :: 		
0x198A	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 699 :: 		
0x198C	0xD019    BEQ	__me_ovfl
;__Lib_MathDouble.c, 701 :: 		
0x198E	0x195B    ADDS	R3, R3, R5
;__Lib_MathDouble.c, 703 :: 		
0x1990	0xFBA15404  UMULL	R5, R4, R1, R4
;__Lib_MathDouble.c, 705 :: 		
0x1994	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 706 :: 		
0x1996	0xBF5C    ITT	PL
;__Lib_MathDouble.c, 707 :: 		
0x1998	0x0064    LSLPL	R4, R4, #1
;__Lib_MathDouble.c, 708 :: 		
0x199A	0x1E5B    SUBPL	R3, R3, #1
;__Lib_MathDouble.c, 710 :: 		
0x199C	0x3480    ADDS	R4, #128
;__Lib_MathDouble.c, 711 :: 		
0x199E	0xBF24    ITT	CS
;__Lib_MathDouble.c, 712 :: 		
0x19A0	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 713 :: 		
0x19A2	0x0864    LSRCS	R4, R4, #1
;__Lib_MathDouble.c, 715 :: 		
0x19A4	0x3B7E    SUBS	R3, #126
;__Lib_MathDouble.c, 716 :: 		
0x19A6	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 717 :: 		
0x19A8	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 719 :: 		
0x19AC	0xE00D    BLE	__me_lab_end
;__Lib_MathDouble.c, 721 :: 		
0x19AE	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 722 :: 		
0x19B0	0xD207    BCS	__me_ovfl
;__Lib_MathDouble.c, 724 :: 		
0x19B2	0xEA4F2014  LSR	R0, R4, #8
;__Lib_MathDouble.c, 725 :: 		
0x19B6	0xF4300000  BICS	R0, R0, #8388608
;__Lib_MathDouble.c, 726 :: 		
0x19BA	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 727 :: 		
0x19BE	0x4330    ORRS	R0, R6
;__Lib_MathDouble.c, 730 :: 		
0x19C0	0xE003    B	__me_lab_end
;__Lib_MathDouble.c, 732 :: 		
__me_ovfl:
0x19C2	0x27FF    MOVS	R7, #255
;__Lib_MathDouble.c, 733 :: 		
0x19C4	0x05FF    LSLS	R7, R7, #23
;__Lib_MathDouble.c, 734 :: 		
0x19C6	0xEA460007  ORR	R0, R6, R7, LSL #0
;__Lib_MathDouble.c, 735 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 736 :: 		
0x19CA	0xE8BD40FA  POP	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 738 :: 		
L_end__Mul_FP:
0x19CE	0xB001    ADD	SP, SP, #4
0x19D0	0x4770    BX	LR
; end of __Mul_FP
__Add_FP:
;__Lib_MathDouble.c, 413 :: 		
0x1658	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 415 :: 		
0x165A	0xE92D41FA  PUSH	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 417 :: 		
0x165E	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 418 :: 		
0x1662	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 419 :: 		
0x1666	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 420 :: 		
0x1668	0xD104    BNE	__me_lab1
;__Lib_MathDouble.c, 422 :: 		
0x166A	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 423 :: 		
0x166C	0xBF18    IT	NE
;__Lib_MathDouble.c, 424 :: 		
0x166E	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 426 :: 		
0x1672	0xE06C    B	__me_lab_end
;__Lib_MathDouble.c, 428 :: 		
__me_lab1:
0x1674	0xF0444400  ORR	R4, R4, #-2147483648
;__Lib_MathDouble.c, 430 :: 		
0x1678	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 432 :: 		
0x167A	0xD05F    BEQ	__me_ovfl1
;__Lib_MathDouble.c, 434 :: 		
0x167C	0xEA4F0494  LSR	R4, R4, #2
;__Lib_MathDouble.c, 435 :: 		
0x1680	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 436 :: 		
0x1682	0xBF48    IT	MI
;__Lib_MathDouble.c, 437 :: 		
0x1684	0x4264    RSBMI	R4, R4, #0
;__Lib_MathDouble.c, 439 :: 		
0x1686	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 440 :: 		
0x168A	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 441 :: 		
0x168E	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 442 :: 		
0x1690	0xD105    BNE	__me_lab2
;__Lib_MathDouble.c, 444 :: 		
0x1692	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 445 :: 		
0x1694	0xBF14    ITE	NE
;__Lib_MathDouble.c, 446 :: 		
0x1696	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 447 :: 		
0x169A	0x4610    MOVEQ	R0, R2
;__Lib_MathDouble.c, 449 :: 		
0x169C	0xE057    B	__me_lab_end
;__Lib_MathDouble.c, 451 :: 		
__me_lab2:
0x169E	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 453 :: 		
0x16A2	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 454 :: 		
0x16A4	0xD04B    BEQ	__me_ovfl0
;__Lib_MathDouble.c, 456 :: 		
0x16A6	0xEA4F0191  LSR	R1, R1, #2
;__Lib_MathDouble.c, 457 :: 		
0x16AA	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 458 :: 		
0x16AC	0xBF48    IT	MI
;__Lib_MathDouble.c, 459 :: 		
0x16AE	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 461 :: 		
0x16B0	0x1B5E    SUBS	R6, R3, R5
;__Lib_MathDouble.c, 462 :: 		
0x16B2	0xBF41    ITTTT	MI
;__Lib_MathDouble.c, 463 :: 		
0x16B4	0x460F    MOVMI	R7, R1
;__Lib_MathDouble.c, 464 :: 		
0x16B6	0x4621    MOVMI	R1, R4
;__Lib_MathDouble.c, 465 :: 		
0x16B8	0x463C    MOVMI	R4, R7
;__Lib_MathDouble.c, 466 :: 		
0x16BA	0x4276    RSBMI	R6, R6, #0
;__Lib_MathDouble.c, 467 :: 		
0x16BC	0xBF48    IT	MI
;__Lib_MathDouble.c, 468 :: 		
0x16BE	0x462B    MOVMI	R3, R5
;__Lib_MathDouble.c, 470 :: 		
0x16C0	0x2E19    CMP	R6, #25
;__Lib_MathDouble.c, 471 :: 		
0x16C2	0xBF47    ITTEE	MI
;__Lib_MathDouble.c, 472 :: 		
0x16C4	0xFA44F706  ASRMI	R7, R4, R6
;__Lib_MathDouble.c, 473 :: 		
0x16C8	0x19C9    ADDMI	R1, R1, R7
;__Lib_MathDouble.c, 474 :: 		
0x16CA	0xF04F0800  MOVPL	R8, #0
;__Lib_MathDouble.c, 475 :: 		
0x16CE	0xE003    BPL	__me_skip_sticky
;__Lib_MathDouble.c, 476 :: 		
0x16D0	0xF1C6071C  RSB	R7, R6, #28
;__Lib_MathDouble.c, 477 :: 		
0x16D4	0xFA04F807  LSL	R8, R4, R7
;__Lib_MathDouble.c, 479 :: 		
__me_skip_sticky:
;__Lib_MathDouble.c, 480 :: 		
0x16D8	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 481 :: 		
0x16DA	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 482 :: 		
0x16DC	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 484 :: 		
0x16E0	0xE035    BEQ	__me_lab_end
;__Lib_MathDouble.c, 485 :: 		
0x16E2	0xBF46    ITTE	MI
;__Lib_MathDouble.c, 486 :: 		
0x16E4	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 487 :: 		
0x16E6	0xF04F0701  MOVMI	R7, #1
;__Lib_MathDouble.c, 488 :: 		
0x16EA	0xF04F0700  MOVPL	R7, #0
;__Lib_MathDouble.c, 490 :: 		
__me_loop:
0x16EE	0xF1A30301  SUB	R3, R3, #1
;__Lib_MathDouble.c, 491 :: 		
0x16F2	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 492 :: 		
0x16F4	0xD5FB    BPL	__me_loop
;__Lib_MathDouble.c, 494 :: 		
0x16F6	0xF0110480  ANDS	R4, R1, #128
;__Lib_MathDouble.c, 495 :: 		
0x16FA	0xD00D    BEQ	__me_no_round
;__Lib_MathDouble.c, 496 :: 		
0x16FC	0xF0010520  AND	R5, R1, #32
;__Lib_MathDouble.c, 497 :: 		
0x1700	0xEA480805  ORR	R8, R8, R5, LSL #0
;__Lib_MathDouble.c, 498 :: 		
0x1704	0x3180    ADDS	R1, #128
;__Lib_MathDouble.c, 499 :: 		
0x1706	0xBF28    IT	CS
;__Lib_MathDouble.c, 500 :: 		
0x1708	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 501 :: 		
0x170A	0xF0010440  AND	R4, R1, #64
;__Lib_MathDouble.c, 502 :: 		
0x170E	0xEA580804  ORRS	R8, R8, R4, LSL #0
;__Lib_MathDouble.c, 503 :: 		
0x1712	0xBF08    IT	EQ
;__Lib_MathDouble.c, 504 :: 		
0x1714	0xF4217180  BICEQ	R1, R1, #256
;__Lib_MathDouble.c, 506 :: 		
__me_no_round:
;__Lib_MathDouble.c, 507 :: 		
0x1718	0x1C9B    ADDS	R3, R3, #2
;__Lib_MathDouble.c, 508 :: 		
0x171A	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 509 :: 		
0x171C	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 511 :: 		
0x1720	0xE015    BLE	__me_lab_end
;__Lib_MathDouble.c, 512 :: 		
0x1722	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 513 :: 		
0x1724	0xD20D    BCS	__me_ovfl
;__Lib_MathDouble.c, 515 :: 		
0x1726	0xF02101FF  BIC	R1, R1, #255
;__Lib_MathDouble.c, 516 :: 		
0x172A	0xEA4F0141  LSL	R1, R1, #1
;__Lib_MathDouble.c, 518 :: 		
0x172E	0xEA4F2051  LSR	R0, R1, #9
;__Lib_MathDouble.c, 519 :: 		
0x1732	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 520 :: 		
0x1736	0xEA4070C7  ORR	R0, R0, R7, LSL #31
;__Lib_MathDouble.c, 523 :: 		
0x173A	0xE008    B	__me_lab_end
;__Lib_MathDouble.c, 525 :: 		
__me_ovfl1:
0x173C	0x4610    MOV	R0, R2
;__Lib_MathDouble.c, 526 :: 		
__me_ovfl0:
0x173E	0xEA4F77D0  LSR	R7, R0, #31
;__Lib_MathDouble.c, 527 :: 		
__me_ovfl:
0x1742	0xEA4F77C7  LSL	R7, R7, #31
;__Lib_MathDouble.c, 528 :: 		
0x1746	0x20FF    MOVS	R0, #255
;__Lib_MathDouble.c, 529 :: 		
0x1748	0xEA4F50C0  LSL	R0, R0, #23
;__Lib_MathDouble.c, 530 :: 		
0x174C	0x4338    ORRS	R0, R7
;__Lib_MathDouble.c, 531 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 532 :: 		
0x174E	0xE8BD41FA  POP	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 534 :: 		
L_end__Add_FP:
0x1752	0xB001    ADD	SP, SP, #4
0x1754	0x4770    BX	LR
; end of __Add_FP
_fm_getChannel:
;__fm_driver.c, 621 :: 		uint16_t fm_getChannel( void )
0x1EBC	0xB089    SUB	SP, SP, #36
0x1EBE	0xF8CDE000  STR	LR, [SP, #0]
;__fm_driver.c, 626 :: 		fm_readRegisters( regBuffer );
0x1EC2	0xA801    ADD	R0, SP, #4
0x1EC4	0xF000FB94  BL	_fm_readRegisters+0
;__fm_driver.c, 628 :: 		channel_ = regBuffer[_FM_READ_CHANNEL];
0x1EC8	0xA801    ADD	R0, SP, #4
0x1ECA	0x3012    ADDS	R0, #18
0x1ECC	0x8801    LDRH	R1, [R0, #0]
;__fm_driver.c, 630 :: 		channel_ &= 0x03FF;
0x1ECE	0xF24030FF  MOVW	R0, #1023
0x1ED2	0xEA010000  AND	R0, R1, R0, LSL #0
;__fm_driver.c, 632 :: 		return channel_;
;__fm_driver.c, 633 :: 		}
L_end_fm_getChannel:
0x1ED6	0xF8DDE000  LDR	LR, [SP, #0]
0x1EDA	0xB009    ADD	SP, SP, #36
0x1EDC	0x4770    BX	LR
; end of _fm_getChannel
_WordToStr:
;__Lib_Conversions.c, 114 :: 		
; output start address is: 4 (R1)
; input start address is: 0 (R0)
0x1EE0	0xB081    SUB	SP, SP, #4
0x1EE2	0x460A    MOV	R2, R1
0x1EE4	0xB281    UXTH	R1, R0
; output end address is: 4 (R1)
; input end address is: 0 (R0)
; input start address is: 4 (R1)
; output start address is: 8 (R2)
;__Lib_Conversions.c, 119 :: 		
; len start address is: 0 (R0)
0x1EE6	0x2000    MOVS	R0, #0
; input end address is: 4 (R1)
; output end address is: 8 (R2)
; len end address is: 0 (R0)
0x1EE8	0xB28D    UXTH	R5, R1
0x1EEA	0x4611    MOV	R1, R2
L_WordToStr11:
; len start address is: 0 (R0)
; output start address is: 4 (R1)
; input start address is: 20 (R5)
0x1EEC	0x2805    CMP	R0, #5
0x1EEE	0xD205    BCS	L_WordToStr12
;__Lib_Conversions.c, 120 :: 		
0x1EF0	0x180B    ADDS	R3, R1, R0
0x1EF2	0x2220    MOVS	R2, #32
0x1EF4	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 119 :: 		
0x1EF6	0x1C40    ADDS	R0, R0, #1
0x1EF8	0xB2C0    UXTB	R0, R0
;__Lib_Conversions.c, 120 :: 		
0x1EFA	0xE7F7    B	L_WordToStr11
L_WordToStr12:
;__Lib_Conversions.c, 121 :: 		
0x1EFC	0x180B    ADDS	R3, R1, R0
0x1EFE	0x2200    MOVS	R2, #0
0x1F00	0x701A    STRB	R2, [R3, #0]
0x1F02	0x1E40    SUBS	R0, R0, #1
0x1F04	0xB2C0    UXTB	R0, R0
; output end address is: 4 (R1)
; len end address is: 0 (R0)
;__Lib_Conversions.c, 123 :: 		
L_WordToStr14:
;__Lib_Conversions.c, 124 :: 		
; len start address is: 0 (R0)
; input start address is: 20 (R5)
; output start address is: 4 (R1)
0x1F06	0x180C    ADDS	R4, R1, R0
0x1F08	0x230A    MOVS	R3, #10
0x1F0A	0xFBB5F2F3  UDIV	R2, R5, R3
0x1F0E	0xFB035212  MLS	R2, R3, R2, R5
0x1F12	0xB292    UXTH	R2, R2
0x1F14	0x3230    ADDS	R2, #48
0x1F16	0x7022    STRB	R2, [R4, #0]
;__Lib_Conversions.c, 125 :: 		
0x1F18	0x220A    MOVS	R2, #10
0x1F1A	0xFBB5F2F2  UDIV	R2, R5, R2
0x1F1E	0xB292    UXTH	R2, R2
0x1F20	0xB295    UXTH	R5, R2
; input end address is: 20 (R5)
;__Lib_Conversions.c, 126 :: 		
0x1F22	0xB902    CBNZ	R2, L_WordToStr16
; output end address is: 4 (R1)
; input end address is: 20 (R5)
; len end address is: 0 (R0)
;__Lib_Conversions.c, 127 :: 		
0x1F24	0xE002    B	L_WordToStr15
L_WordToStr16:
;__Lib_Conversions.c, 128 :: 		
; len start address is: 0 (R0)
; input start address is: 20 (R5)
; output start address is: 4 (R1)
0x1F26	0x1E40    SUBS	R0, R0, #1
0x1F28	0xB2C0    UXTB	R0, R0
;__Lib_Conversions.c, 129 :: 		
; output end address is: 4 (R1)
; input end address is: 20 (R5)
; len end address is: 0 (R0)
0x1F2A	0xE7EC    B	L_WordToStr14
L_WordToStr15:
;__Lib_Conversions.c, 130 :: 		
L_end_WordToStr:
0x1F2C	0xB001    ADD	SP, SP, #4
0x1F2E	0x4770    BX	LR
; end of _WordToStr
_FloatToStr:
;__Lib_Conversions.c, 631 :: 		
; str start address is: 4 (R1)
; fnum start address is: 0 (R0)
0x1F30	0xB082    SUB	SP, SP, #8
0x1F32	0xF8CDE000  STR	LR, [SP, #0]
0x1F36	0x4602    MOV	R2, R0
0x1F38	0x460C    MOV	R4, R1
; str end address is: 4 (R1)
; fnum end address is: 0 (R0)
; fnum start address is: 8 (R2)
; str start address is: 16 (R4)
;__Lib_Conversions.c, 633 :: 		
; bpoint start address is: 0 (R0)
0x1F3A	0x2000    MOVS	R0, #0
;__Lib_Conversions.c, 635 :: 		
; dexpon start address is: 4 (R1)
0x1F3C	0x2100    MOVS	R1, #0
0x1F3E	0xB249    SXTB	R1, R1
;__Lib_Conversions.c, 638 :: 		
0x1F40	0x9201    STR	R2, [SP, #4]
; fnum end address is: 8 (R2)
;__Lib_Conversions.c, 639 :: 		
0x1F42	0x9A01    LDR	R2, [SP, #4]
0x1F44	0xF1B23FFF  CMP	R2, #-1
0x1F48	0xD106    BNE	L_FloatToStr117
; bpoint end address is: 0 (R0)
; dexpon end address is: 4 (R1)
;__Lib_Conversions.c, 640 :: 		
0x1F4A	0x4A71    LDR	R2, [PC, #452]
0x1F4C	0x4611    MOV	R1, R2
0x1F4E	0x4620    MOV	R0, R4
; str end address is: 16 (R4)
0x1F50	0xF7FFFB6E  BL	_strcpy+0
;__Lib_Conversions.c, 641 :: 		
0x1F54	0x2003    MOVS	R0, #3
0x1F56	0xE0D7    B	L_end_FloatToStr
;__Lib_Conversions.c, 642 :: 		
L_FloatToStr117:
;__Lib_Conversions.c, 643 :: 		
; str start address is: 16 (R4)
; i start address is: 20 (R5)
; dexpon start address is: 4 (R1)
; bpoint start address is: 0 (R0)
0x1F58	0x2501    MOVS	R5, #1
;__Lib_Conversions.c, 644 :: 		
0x1F5A	0xAA01    ADD	R2, SP, #4
0x1F5C	0x1CD2    ADDS	R2, R2, #3
0x1F5E	0x7812    LDRB	R2, [R2, #0]
0x1F60	0xF0020280  AND	R2, R2, #128
0x1F64	0xB2D2    UXTB	R2, R2
0x1F66	0xB172    CBZ	R2, L__FloatToStr179
;__Lib_Conversions.c, 645 :: 		
0x1F68	0xAA01    ADD	R2, SP, #4
0x1F6A	0x1CD3    ADDS	R3, R2, #3
0x1F6C	0x781A    LDRB	R2, [R3, #0]
0x1F6E	0xF0820280  EOR	R2, R2, #128
0x1F72	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 646 :: 		
0x1F74	0x1C6A    ADDS	R2, R5, #1
; i end address is: 20 (R5)
; i start address is: 12 (R3)
0x1F76	0xB2D3    UXTB	R3, R2
;__Lib_Conversions.c, 647 :: 		
0x1F78	0x222D    MOVS	R2, #45
0x1F7A	0x7022    STRB	R2, [R4, #0]
0x1F7C	0x1C62    ADDS	R2, R4, #1
0x1F7E	0x4614    MOV	R4, R2
; i end address is: 12 (R3)
; str end address is: 16 (R4)
0x1F80	0xB2DE    UXTB	R6, R3
0x1F82	0x46A2    MOV	R10, R4
;__Lib_Conversions.c, 648 :: 		
0x1F84	0xE001    B	L_FloatToStr118
L__FloatToStr179:
;__Lib_Conversions.c, 644 :: 		
0x1F86	0x46A2    MOV	R10, R4
0x1F88	0xB2EE    UXTB	R6, R5
;__Lib_Conversions.c, 648 :: 		
L_FloatToStr118:
;__Lib_Conversions.c, 649 :: 		
; str start address is: 40 (R10)
; i start address is: 24 (R6)
0x1F8A	0x9A01    LDR	R2, [SP, #4]
0x1F8C	0xB932    CBNZ	R2, L_FloatToStr119
; bpoint end address is: 0 (R0)
; dexpon end address is: 4 (R1)
; i end address is: 24 (R6)
;__Lib_Conversions.c, 650 :: 		
0x1F8E	0x4A61    LDR	R2, [PC, #388]
0x1F90	0x4611    MOV	R1, R2
0x1F92	0x4650    MOV	R0, R10
; str end address is: 40 (R10)
0x1F94	0xF7FFFB4C  BL	_strcpy+0
;__Lib_Conversions.c, 651 :: 		
0x1F98	0x2000    MOVS	R0, #0
0x1F9A	0xE0B5    B	L_end_FloatToStr
;__Lib_Conversions.c, 652 :: 		
L_FloatToStr119:
;__Lib_Conversions.c, 653 :: 		
; str start address is: 40 (R10)
; i start address is: 24 (R6)
; dexpon start address is: 4 (R1)
; bpoint start address is: 0 (R0)
0x1F9C	0x9A01    LDR	R2, [SP, #4]
0x1F9E	0xF1B24FFF  CMP	R2, #2139095040
0x1FA2	0xD106    BNE	L_FloatToStr120
; bpoint end address is: 0 (R0)
; dexpon end address is: 4 (R1)
;__Lib_Conversions.c, 654 :: 		
0x1FA4	0x4A5C    LDR	R2, [PC, #368]
0x1FA6	0x4611    MOV	R1, R2
0x1FA8	0x4650    MOV	R0, R10
; str end address is: 40 (R10)
0x1FAA	0xF7FFFB41  BL	_strcpy+0
;__Lib_Conversions.c, 655 :: 		
0x1FAE	0xB2F0    UXTB	R0, R6
; i end address is: 24 (R6)
0x1FB0	0xE0AA    B	L_end_FloatToStr
;__Lib_Conversions.c, 656 :: 		
L_FloatToStr120:
;__Lib_Conversions.c, 664 :: 		
; str start address is: 40 (R10)
; dexpon start address is: 4 (R1)
; bpoint start address is: 0 (R0)
0x1FB2	0xFA5FF980  UXTB	R9, R0
; dexpon end address is: 4 (R1)
; str end address is: 40 (R10)
0x1FB6	0xFA4FF881  SXTB	R8, R1
L_FloatToStr121:
; bpoint end address is: 0 (R0)
; str start address is: 40 (R10)
; dexpon start address is: 32 (R8)
; bpoint start address is: 36 (R9)
0x1FBA	0x9A01    LDR	R2, [SP, #4]
0x1FBC	0xF04F507E  MOV	R0, #1065353216
0x1FC0	0xF7FFFB02  BL	__Compare_FP+0
0x1FC4	0xF2400000  MOVW	R0, #0
0x1FC8	0xDD00    BLE	L__FloatToStr239
0x1FCA	0x2001    MOVS	R0, #1
L__FloatToStr239:
0x1FCC	0xB148    CBZ	R0, L_FloatToStr122
;__Lib_Conversions.c, 665 :: 		
0x1FCE	0x9A01    LDR	R2, [SP, #4]
0x1FD0	0x4852    LDR	R0, [PC, #328]
0x1FD2	0xF7FFFCB9  BL	__Mul_FP+0
0x1FD6	0x9001    STR	R0, [SP, #4]
;__Lib_Conversions.c, 666 :: 		
0x1FD8	0xF1A80801  SUB	R8, R8, #1
0x1FDC	0xFA4FF888  SXTB	R8, R8
;__Lib_Conversions.c, 667 :: 		
0x1FE0	0xE7EB    B	L_FloatToStr121
L_FloatToStr122:
;__Lib_Conversions.c, 672 :: 		
; str end address is: 40 (R10)
; dexpon end address is: 32 (R8)
L_FloatToStr123:
; bpoint end address is: 36 (R9)
; bpoint start address is: 36 (R9)
; dexpon start address is: 32 (R8)
; str start address is: 40 (R10)
0x1FE2	0x9A01    LDR	R2, [SP, #4]
0x1FE4	0x484D    LDR	R0, [PC, #308]
0x1FE6	0xF7FFFAEF  BL	__Compare_FP+0
0x1FEA	0xF2400000  MOVW	R0, #0
0x1FEE	0xDC00    BGT	L__FloatToStr240
0x1FF0	0x2001    MOVS	R0, #1
L__FloatToStr240:
0x1FF2	0xB148    CBZ	R0, L_FloatToStr124
;__Lib_Conversions.c, 673 :: 		
0x1FF4	0x9A01    LDR	R2, [SP, #4]
0x1FF6	0x484A    LDR	R0, [PC, #296]
0x1FF8	0xF7FFFCA6  BL	__Mul_FP+0
0x1FFC	0x9001    STR	R0, [SP, #4]
;__Lib_Conversions.c, 674 :: 		
0x1FFE	0xF1080801  ADD	R8, R8, #1
0x2002	0xFA4FF888  SXTB	R8, R8
;__Lib_Conversions.c, 675 :: 		
0x2006	0xE7EC    B	L_FloatToStr123
L_FloatToStr124:
;__Lib_Conversions.c, 680 :: 		
0x2008	0x9A01    LDR	R2, [SP, #4]
0x200A	0x0052    LSLS	R2, R2, #1
0x200C	0x9201    STR	R2, [SP, #4]
;__Lib_Conversions.c, 689 :: 		
0x200E	0xAA01    ADD	R2, SP, #4
0x2010	0x1CD2    ADDS	R2, R2, #3
0x2012	0x7812    LDRB	R2, [R2, #0]
0x2014	0x3A7F    SUBS	R2, #127
; d start address is: 0 (R0)
0x2016	0xB2D0    UXTB	R0, R2
;__Lib_Conversions.c, 692 :: 		
0x2018	0xAA01    ADD	R2, SP, #4
0x201A	0x1CD3    ADDS	R3, R2, #3
0x201C	0x2201    MOVS	R2, #1
0x201E	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 693 :: 		
0x2020	0x9A01    LDR	R2, [SP, #4]
0x2022	0x4082    LSLS	R2, R0
; d end address is: 0 (R0)
0x2024	0x9201    STR	R2, [SP, #4]
;__Lib_Conversions.c, 694 :: 		
0x2026	0xAA01    ADD	R2, SP, #4
0x2028	0x1CD2    ADDS	R2, R2, #3
0x202A	0x7812    LDRB	R2, [R2, #0]
0x202C	0x3230    ADDS	R2, #48
0x202E	0xF88A2000  STRB	R2, [R10, #0]
0x2032	0xF10A0001  ADD	R0, R10, #1
; str end address is: 40 (R10)
; str start address is: 0 (R0)
;__Lib_Conversions.c, 695 :: 		
0x2036	0xF1B80F01  CMP	R8, #1
0x203A	0xDB06    BLT	L__FloatToStr178
0x203C	0xF1B80F06  CMP	R8, #6
0x2040	0xDC03    BGT	L__FloatToStr177
0x2042	0x4605    MOV	R5, R0
; bpoint end address is: 36 (R9)
0x2044	0xFA5FF189  UXTB	R1, R9
0x2048	0xE003    B	L_FloatToStr127
L__FloatToStr178:
L__FloatToStr177:
;__Lib_Conversions.c, 696 :: 		
0x204A	0x222E    MOVS	R2, #46
0x204C	0x7002    STRB	R2, [R0, #0]
0x204E	0x1C45    ADDS	R5, R0, #1
; str end address is: 0 (R0)
; str start address is: 20 (R5)
;__Lib_Conversions.c, 697 :: 		
; bpoint start address is: 4 (R1)
0x2050	0x2101    MOVS	R1, #1
; str end address is: 20 (R5)
; bpoint end address is: 4 (R1)
;__Lib_Conversions.c, 698 :: 		
L_FloatToStr127:
;__Lib_Conversions.c, 699 :: 		
; bpoint start address is: 4 (R1)
; str start address is: 20 (R5)
; d start address is: 0 (R0)
0x2052	0x2006    MOVS	R0, #6
; dexpon end address is: 32 (R8)
; str end address is: 20 (R5)
; bpoint end address is: 4 (R1)
; d end address is: 0 (R0)
0x2054	0xFA4FF488  SXTB	R4, R8
L_FloatToStr128:
; d start address is: 0 (R0)
; str start address is: 20 (R5)
; bpoint start address is: 4 (R1)
; dexpon start address is: 16 (R4)
0x2058	0xB300    CBZ	R0, L_FloatToStr129
;__Lib_Conversions.c, 700 :: 		
0x205A	0xAA01    ADD	R2, SP, #4
0x205C	0x1CD3    ADDS	R3, R2, #3
0x205E	0x2200    MOVS	R2, #0
0x2060	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 701 :: 		
0x2062	0x9A01    LDR	R2, [SP, #4]
0x2064	0x0093    LSLS	R3, R2, #2
0x2066	0x9A01    LDR	R2, [SP, #4]
0x2068	0x18D2    ADDS	R2, R2, R3
0x206A	0x9201    STR	R2, [SP, #4]
;__Lib_Conversions.c, 702 :: 		
0x206C	0x9A01    LDR	R2, [SP, #4]
0x206E	0x0052    LSLS	R2, R2, #1
0x2070	0x9201    STR	R2, [SP, #4]
;__Lib_Conversions.c, 703 :: 		
0x2072	0xAA01    ADD	R2, SP, #4
0x2074	0x1CD2    ADDS	R2, R2, #3
0x2076	0x7812    LDRB	R2, [R2, #0]
0x2078	0x3230    ADDS	R2, #48
0x207A	0x702A    STRB	R2, [R5, #0]
0x207C	0x1C6D    ADDS	R5, R5, #1
;__Lib_Conversions.c, 704 :: 		
0x207E	0xB951    CBNZ	R1, L__FloatToStr181
;__Lib_Conversions.c, 705 :: 		
0x2080	0x1E62    SUBS	R2, R4, #1
0x2082	0xB252    SXTB	R2, R2
; dexpon end address is: 16 (R4)
; dexpon start address is: 12 (R3)
0x2084	0xB253    SXTB	R3, R2
0x2086	0xB922    CBNZ	R2, L__FloatToStr180
; bpoint end address is: 4 (R1)
;__Lib_Conversions.c, 706 :: 		
0x2088	0x222E    MOVS	R2, #46
0x208A	0x702A    STRB	R2, [R5, #0]
0x208C	0x1C6D    ADDS	R5, R5, #1
;__Lib_Conversions.c, 707 :: 		
; bpoint start address is: 4 (R1)
0x208E	0x2101    MOVS	R1, #1
; str end address is: 20 (R5)
; bpoint end address is: 4 (R1)
;__Lib_Conversions.c, 708 :: 		
0x2090	0xE7FF    B	L_FloatToStr132
L__FloatToStr180:
;__Lib_Conversions.c, 705 :: 		
;__Lib_Conversions.c, 708 :: 		
L_FloatToStr132:
; bpoint start address is: 4 (R1)
; str start address is: 20 (R5)
0x2092	0xB25C    SXTB	R4, R3
; str end address is: 20 (R5)
; bpoint end address is: 4 (R1)
; dexpon end address is: 12 (R3)
0x2094	0xE7FF    B	L_FloatToStr131
L__FloatToStr181:
;__Lib_Conversions.c, 704 :: 		
;__Lib_Conversions.c, 708 :: 		
L_FloatToStr131:
;__Lib_Conversions.c, 699 :: 		
; str start address is: 20 (R5)
; bpoint start address is: 4 (R1)
; dexpon start address is: 16 (R4)
0x2096	0x1E40    SUBS	R0, R0, #1
0x2098	0xB2C0    UXTB	R0, R0
;__Lib_Conversions.c, 709 :: 		
; bpoint end address is: 4 (R1)
; d end address is: 0 (R0)
0x209A	0xE7DD    B	L_FloatToStr128
L_FloatToStr129:
;__Lib_Conversions.c, 710 :: 		
0x209C	0x4629    MOV	R1, R5
; dexpon end address is: 16 (R4)
0x209E	0xB260    SXTB	R0, R4
L_FloatToStr133:
; str end address is: 20 (R5)
; dexpon start address is: 0 (R0)
; str start address is: 4 (R1)
0x20A0	0x1E4A    SUBS	R2, R1, #1
0x20A2	0x7812    LDRB	R2, [R2, #0]
0x20A4	0x2A30    CMP	R2, #48
0x20A6	0xD101    BNE	L_FloatToStr134
;__Lib_Conversions.c, 711 :: 		
0x20A8	0x1E49    SUBS	R1, R1, #1
0x20AA	0xE7F9    B	L_FloatToStr133
L_FloatToStr134:
;__Lib_Conversions.c, 712 :: 		
0x20AC	0x1E4A    SUBS	R2, R1, #1
0x20AE	0x7812    LDRB	R2, [R2, #0]
0x20B0	0x2A2E    CMP	R2, #46
0x20B2	0xD101    BNE	L__FloatToStr182
;__Lib_Conversions.c, 713 :: 		
0x20B4	0x1E49    SUBS	R1, R1, #1
; str end address is: 4 (R1)
0x20B6	0xE7FF    B	L_FloatToStr135
L__FloatToStr182:
;__Lib_Conversions.c, 712 :: 		
;__Lib_Conversions.c, 713 :: 		
L_FloatToStr135:
;__Lib_Conversions.c, 714 :: 		
; str start address is: 4 (R1)
0x20B8	0xB310    CBZ	R0, L__FloatToStr185
;__Lib_Conversions.c, 715 :: 		
0x20BA	0x2265    MOVS	R2, #101
0x20BC	0x700A    STRB	R2, [R1, #0]
0x20BE	0x1C49    ADDS	R1, R1, #1
;__Lib_Conversions.c, 716 :: 		
0x20C0	0x2800    CMP	R0, #0
0x20C2	0xDA06    BGE	L__FloatToStr183
;__Lib_Conversions.c, 717 :: 		
0x20C4	0x222D    MOVS	R2, #45
0x20C6	0x700A    STRB	R2, [R1, #0]
0x20C8	0x1C49    ADDS	R1, R1, #1
;__Lib_Conversions.c, 718 :: 		
0x20CA	0x4242    RSBS	R2, R0, #0
0x20CC	0xB250    SXTB	R0, R2
; dexpon end address is: 0 (R0)
; str end address is: 4 (R1)
0x20CE	0xB243    SXTB	R3, R0
;__Lib_Conversions.c, 719 :: 		
0x20D0	0xE000    B	L_FloatToStr137
L__FloatToStr183:
;__Lib_Conversions.c, 716 :: 		
0x20D2	0xB243    SXTB	R3, R0
;__Lib_Conversions.c, 719 :: 		
L_FloatToStr137:
;__Lib_Conversions.c, 720 :: 		
; dexpon start address is: 12 (R3)
; str start address is: 4 (R1)
; d start address is: 0 (R0)
0x20D4	0xB2D8    UXTB	R0, R3
;__Lib_Conversions.c, 721 :: 		
0x20D6	0xB2DA    UXTB	R2, R3
; dexpon end address is: 12 (R3)
0x20D8	0x2A09    CMP	R2, #9
0x20DA	0xD907    BLS	L__FloatToStr184
;__Lib_Conversions.c, 722 :: 		
0x20DC	0x220A    MOVS	R2, #10
0x20DE	0xFBB0F2F2  UDIV	R2, R0, R2
0x20E2	0xB2D2    UXTB	R2, R2
0x20E4	0x3230    ADDS	R2, #48
0x20E6	0x700A    STRB	R2, [R1, #0]
0x20E8	0x1C49    ADDS	R1, R1, #1
; str end address is: 4 (R1)
0x20EA	0xE7FF    B	L_FloatToStr138
L__FloatToStr184:
;__Lib_Conversions.c, 721 :: 		
;__Lib_Conversions.c, 722 :: 		
L_FloatToStr138:
;__Lib_Conversions.c, 723 :: 		
; str start address is: 4 (R1)
0x20EC	0x230A    MOVS	R3, #10
0x20EE	0xFBB0F2F3  UDIV	R2, R0, R3
0x20F2	0xFB030212  MLS	R2, R3, R2, R0
0x20F6	0xB2D2    UXTB	R2, R2
; d end address is: 0 (R0)
0x20F8	0x3230    ADDS	R2, #48
0x20FA	0x700A    STRB	R2, [R1, #0]
0x20FC	0x1C48    ADDS	R0, R1, #1
; str end address is: 4 (R1)
; str start address is: 0 (R0)
; str end address is: 0 (R0)
;__Lib_Conversions.c, 724 :: 		
0x20FE	0xE000    B	L_FloatToStr136
L__FloatToStr185:
;__Lib_Conversions.c, 714 :: 		
0x2100	0x4608    MOV	R0, R1
;__Lib_Conversions.c, 724 :: 		
L_FloatToStr136:
;__Lib_Conversions.c, 725 :: 		
; str start address is: 0 (R0)
0x2102	0x2200    MOVS	R2, #0
0x2104	0x7002    STRB	R2, [R0, #0]
; str end address is: 0 (R0)
;__Lib_Conversions.c, 726 :: 		
0x2106	0x2000    MOVS	R0, #0
;__Lib_Conversions.c, 727 :: 		
L_end_FloatToStr:
0x2108	0xF8DDE000  LDR	LR, [SP, #0]
0x210C	0xB002    ADD	SP, SP, #8
0x210E	0x4770    BX	LR
0x2110	0x02ED2000  	?lstr1___Lib_Conversions+0
0x2114	0x02992000  	?lstr2___Lib_Conversions+0
0x2118	0x02F12000  	?lstr3___Lib_Conversions+0
0x211C	0x00004120  	#1092616192
0x2120	0xCCCD3DCC  	#1036831949
; end of _FloatToStr
_strcpy:
;__Lib_CString.c, 133 :: 		
; from start address is: 4 (R1)
; to start address is: 0 (R0)
0x1630	0xB081    SUB	SP, SP, #4
0x1632	0x9100    STR	R1, [SP, #0]
0x1634	0x4601    MOV	R1, R0
0x1636	0x9800    LDR	R0, [SP, #0]
; from end address is: 4 (R1)
; to end address is: 0 (R0)
; to start address is: 4 (R1)
; from start address is: 0 (R0)
;__Lib_CString.c, 136 :: 		
; cp start address is: 12 (R3)
0x1638	0x460B    MOV	R3, R1
; cp end address is: 12 (R3)
; to end address is: 4 (R1)
;__Lib_CString.c, 137 :: 		
L_strcpy34:
; cp start address is: 20 (R5)
; cp start address is: 12 (R3)
; from start address is: 0 (R0)
; to start address is: 4 (R1)
0x163A	0x461C    MOV	R4, R3
0x163C	0x1C5A    ADDS	R2, R3, #1
; cp end address is: 12 (R3)
; cp start address is: 20 (R5)
0x163E	0x4615    MOV	R5, R2
; cp end address is: 20 (R5)
0x1640	0x4603    MOV	R3, R0
0x1642	0x1C42    ADDS	R2, R0, #1
0x1644	0x4610    MOV	R0, R2
; from end address is: 0 (R0)
0x1646	0x781A    LDRB	R2, [R3, #0]
0x1648	0x7022    STRB	R2, [R4, #0]
0x164A	0x7822    LDRB	R2, [R4, #0]
0x164C	0xB10A    CBZ	R2, L_strcpy35
; cp end address is: 20 (R5)
; from end address is: 0 (R0)
;__Lib_CString.c, 138 :: 		
; from start address is: 0 (R0)
; cp start address is: 20 (R5)
; cp end address is: 20 (R5)
; from end address is: 0 (R0)
0x164E	0x462B    MOV	R3, R5
0x1650	0xE7F3    B	L_strcpy34
L_strcpy35:
;__Lib_CString.c, 139 :: 		
0x1652	0x4608    MOV	R0, R1
; to end address is: 4 (R1)
;__Lib_CString.c, 140 :: 		
L_end_strcpy:
0x1654	0xB001    ADD	SP, SP, #4
0x1656	0x4770    BX	LR
; end of _strcpy
__Compare_FP:
;__Lib_MathDouble.c, 839 :: 		
0x15C8	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 841 :: 		
0x15CA	0xB510    PUSH	(R4, R14)
;__Lib_MathDouble.c, 843 :: 		
0x15CC	0x4290    CMP	R0, R2
;__Lib_MathDouble.c, 844 :: 		
0x15CE	0xBF08    IT	EQ
;__Lib_MathDouble.c, 846 :: 		
0x15D0	0xE02A    BEQ	__me_lab_end
;__Lib_MathDouble.c, 848 :: 		
0x15D2	0xEA400402  ORR	R4, R0, R2, LSL #0
;__Lib_MathDouble.c, 849 :: 		
0x15D6	0xEA4F0444  LSL	R4, R4, #1
;__Lib_MathDouble.c, 850 :: 		
0x15DA	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 851 :: 		
0x15DC	0xBF08    IT	EQ
;__Lib_MathDouble.c, 853 :: 		
0x15DE	0xE023    BEQ	__me_lab_end
;__Lib_MathDouble.c, 855 :: 		
0x15E0	0x0044    LSLS	R4, R0, #1
;__Lib_MathDouble.c, 856 :: 		
0x15E2	0xD104    BNE	__me_ct2_
;__Lib_MathDouble.c, 858 :: 		
0x15E4	0x4294    CMP	R4, R2
;__Lib_MathDouble.c, 859 :: 		
0x15E6	0xD401    BMI	__me_labop2_pos
;__Lib_MathDouble.c, 860 :: 		
0x15E8	0x1CA4    ADDS	R4, R4, #2
;__Lib_MathDouble.c, 861 :: 		
0x15EA	0x2C01    CMP	R4, #1
;__Lib_MathDouble.c, 862 :: 		
__me_labop2_pos:
;__Lib_MathDouble.c, 864 :: 		
0x15EC	0xE01C    B	__me_lab_end
;__Lib_MathDouble.c, 866 :: 		
__me_ct2_:
0x15EE	0xEA4F0440  LSL	R4, R0, #1
;__Lib_MathDouble.c, 867 :: 		
0x15F2	0xEA4F6414  LSR	R4, R4, #24
;__Lib_MathDouble.c, 868 :: 		
0x15F6	0x2CFF    CMP	R4, #255
;__Lib_MathDouble.c, 869 :: 		
0x15F8	0xD10A    BNE	__me_ct1_
;__Lib_MathDouble.c, 870 :: 		
0x15FA	0xEA4F0442  LSL	R4, R2, #1
;__Lib_MathDouble.c, 871 :: 		
0x15FE	0xEA4F6414  LSR	R4, R4, #24
;__Lib_MathDouble.c, 872 :: 		
0x1602	0x2CFF    CMP	R4, #255
;__Lib_MathDouble.c, 873 :: 		
0x1604	0xD104    BNE	__me_ct1_
;__Lib_MathDouble.c, 875 :: 		
0x1606	0xEA4F74D2  LSR	R4, R2, #31
;__Lib_MathDouble.c, 876 :: 		
0x160A	0xEBB434D0  SUBS	R4, R4, R0, LSR #31
;__Lib_MathDouble.c, 878 :: 		
0x160E	0xE00B    B	__me_lab_end
;__Lib_MathDouble.c, 880 :: 		
__me_ct1_:
0x1610	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 881 :: 		
0x1612	0xD406    BMI	__me_op2_m
;__Lib_MathDouble.c, 883 :: 		
0x1614	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 884 :: 		
0x1616	0xDC02    BGT	__me_labop1_pos
;__Lib_MathDouble.c, 885 :: 		
0x1618	0x2400    MOVS	R4, #0
;__Lib_MathDouble.c, 886 :: 		
0x161A	0x2C01    CMP	R4, #1
;__Lib_MathDouble.c, 888 :: 		
0x161C	0xE004    B	__me_lab_end
;__Lib_MathDouble.c, 889 :: 		
__me_labop1_pos:
;__Lib_MathDouble.c, 890 :: 		
0x161E	0x4290    CMP	R0, R2
;__Lib_MathDouble.c, 892 :: 		
0x1620	0xE002    B	__me_lab_end
;__Lib_MathDouble.c, 893 :: 		
__me_op2_m:
0x1622	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 894 :: 		
0x1624	0xBF48    IT	MI
;__Lib_MathDouble.c, 895 :: 		
0x1626	0x4282    CMPMI	R2, R0
;__Lib_MathDouble.c, 896 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 897 :: 		
0x1628	0xE8BD4010  POP	(R4, R14)
;__Lib_MathDouble.c, 899 :: 		
L_end__Compare_FP:
0x162C	0xB001    ADD	SP, SP, #4
0x162E	0x4770    BX	LR
; end of __Compare_FP
_fm_caseTune:
;Click_FM_STM.c, 138 :: 		void fm_caseTune( )
0x36B0	0xB081    SUB	SP, SP, #4
0x36B2	0xF8CDE000  STR	LR, [SP, #0]
;Click_FM_STM.c, 140 :: 		errorFlag_ = fm_tune( tuneFreq );
0x36B6	0x482E    LDR	R0, [PC, #184]
0x36B8	0x6800    LDR	R0, [R0, #0]
0x36BA	0xF7FEFAB9  BL	_fm_tune+0
0x36BE	0x492D    LDR	R1, [PC, #180]
0x36C0	0x7008    STRB	R0, [R1, #0]
;Click_FM_STM.c, 142 :: 		Delay_ms(100);
0x36C2	0xF644777F  MOVW	R7, #20351
0x36C6	0xF2C00712  MOVT	R7, #18
L_fm_caseTune8:
0x36CA	0x1E7F    SUBS	R7, R7, #1
0x36CC	0xD1FD    BNE	L_fm_caseTune8
0x36CE	0xBF00    NOP
0x36D0	0xBF00    NOP
0x36D2	0xBF00    NOP
0x36D4	0xBF00    NOP
0x36D6	0xBF00    NOP
;Click_FM_STM.c, 144 :: 		fm_endTune( );
0x36D8	0xF7FEFA94  BL	_fm_endTune+0
;Click_FM_STM.c, 146 :: 		Delay_ms(10);
0x36DC	0xF24D47BF  MOVW	R7, #54463
0x36E0	0xF2C00701  MOVT	R7, #1
0x36E4	0xBF00    NOP
0x36E6	0xBF00    NOP
L_fm_caseTune10:
0x36E8	0x1E7F    SUBS	R7, R7, #1
0x36EA	0xD1FD    BNE	L_fm_caseTune10
0x36EC	0xBF00    NOP
0x36EE	0xBF00    NOP
0x36F0	0xBF00    NOP
;Click_FM_STM.c, 148 :: 		if (errorFlag_ == 0)
0x36F2	0x4820    LDR	R0, [PC, #128]
0x36F4	0x7800    LDRB	R0, [R0, #0]
0x36F6	0x2800    CMP	R0, #0
0x36F8	0xD132    BNE	L_fm_caseTune12
;Click_FM_STM.c, 150 :: 		receivedSignalStrengthIndicator = fm_getReceivedSignalStrengthIndicator( );
0x36FA	0xF7FEFDA7  BL	_fm_getReceivedSignalStrengthIndicator+0
0x36FE	0x491E    LDR	R1, [PC, #120]
0x3700	0x8008    STRH	R0, [R1, #0]
;Click_FM_STM.c, 151 :: 		tunedFrequency_ = fm_getChannelFrequency( );
0x3702	0xF7FEFD4F  BL	_fm_getChannelFrequency+0
0x3706	0x491D    LDR	R1, [PC, #116]
0x3708	0x6008    STR	R0, [R1, #0]
;Click_FM_STM.c, 152 :: 		stationFrequency_ = fm_getChannel( );
0x370A	0xF7FEFBD7  BL	_fm_getChannel+0
0x370E	0x491C    LDR	R1, [PC, #112]
0x3710	0x8008    STRH	R0, [R1, #0]
;Click_FM_STM.c, 154 :: 		mikrobus_logWrite( "tune complete", _LOG_LINE );
0x3712	0x481C    LDR	R0, [PC, #112]
0x3714	0x2102    MOVS	R1, #2
0x3716	0xF7FFFECB  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 156 :: 		WordToStr( receivedSignalStrengthIndicator, text );
0x371A	0x4817    LDR	R0, [PC, #92]
0x371C	0x8800    LDRH	R0, [R0, #0]
0x371E	0x491A    LDR	R1, [PC, #104]
0x3720	0xF7FEFBDE  BL	_WordToStr+0
;Click_FM_STM.c, 157 :: 		mikrobus_logWrite( "rssi:", _LOG_TEXT );
0x3724	0x4819    LDR	R0, [PC, #100]
0x3726	0x2101    MOVS	R1, #1
0x3728	0xF7FFFEC2  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 158 :: 		mikrobus_logWrite( text, _LOG_TEXT );
0x372C	0x2101    MOVS	R1, #1
0x372E	0x4816    LDR	R0, [PC, #88]
0x3730	0xF7FFFEBE  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 159 :: 		mikrobus_logWrite( " dBuV", _LOG_LINE );
0x3734	0x4816    LDR	R0, [PC, #88]
0x3736	0x2102    MOVS	R1, #2
0x3738	0xF7FFFEBA  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 161 :: 		FloatToStr( tunedFrequency_, text );
0x373C	0x480F    LDR	R0, [PC, #60]
0x373E	0x6800    LDR	R0, [R0, #0]
0x3740	0x4911    LDR	R1, [PC, #68]
0x3742	0xF7FEFBF5  BL	_FloatToStr+0
;Click_FM_STM.c, 162 :: 		mikrobus_logWrite( "tuned frequency:", _LOG_TEXT );
0x3746	0x4813    LDR	R0, [PC, #76]
0x3748	0x2101    MOVS	R1, #1
0x374A	0xF7FFFEB1  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 163 :: 		mikrobus_logWrite( text, _LOG_TEXT );
0x374E	0x2101    MOVS	R1, #1
0x3750	0x480D    LDR	R0, [PC, #52]
0x3752	0xF7FFFEAD  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 164 :: 		mikrobus_logWrite( " MHz", _LOG_LINE );
0x3756	0x4810    LDR	R0, [PC, #64]
0x3758	0x2102    MOVS	R1, #2
0x375A	0xF7FFFEA9  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 165 :: 		}
0x375E	0xE003    B	L_fm_caseTune13
L_fm_caseTune12:
;Click_FM_STM.c, 168 :: 		mikrobus_logWrite( "frequency not in valid range", _LOG_TEXT );
0x3760	0x480E    LDR	R0, [PC, #56]
0x3762	0x2101    MOVS	R1, #1
0x3764	0xF7FFFEA4  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 169 :: 		}
L_fm_caseTune13:
;Click_FM_STM.c, 170 :: 		}
L_end_fm_caseTune:
0x3768	0xF8DDE000  LDR	LR, [SP, #0]
0x376C	0xB001    ADD	SP, SP, #4
0x376E	0x4770    BX	LR
0x3770	0x029C2000  	_tuneFreq+0
0x3774	0x029B2000  	_errorFlag_+0
0x3778	0x02F62000  	_receivedSignalStrengthIndicator+0
0x377C	0x03502000  	_tunedFrequency_+0
0x3780	0x03082000  	_stationFrequency_+0
0x3784	0x02A02000  	?lstr10_Click_FM_STM+0
0x3788	0x030A2000  	_text+0
0x378C	0x02AE2000  	?lstr11_Click_FM_STM+0
0x3790	0x02B42000  	?lstr12_Click_FM_STM+0
0x3794	0x02BA2000  	?lstr13_Click_FM_STM+0
0x3798	0x02CB2000  	?lstr14_Click_FM_STM+0
0x379C	0x02D02000  	?lstr15_Click_FM_STM+0
; end of _fm_caseTune
_fm_tune:
;__fm_driver.c, 651 :: 		uint8_t fm_tune( float channelFrequency )
; channelFrequency start address is: 0 (R0)
0x1C30	0xB08D    SUB	SP, SP, #52
0x1C32	0xF8CDE000  STR	LR, [SP, #0]
; channelFrequency end address is: 0 (R0)
; channelFrequency start address is: 0 (R0)
;__fm_driver.c, 664 :: 		fm_readRegisters( regBuffer );
0x1C36	0xA902    ADD	R1, SP, #8
0x1C38	0x9001    STR	R0, [SP, #4]
0x1C3A	0x4608    MOV	R0, R1
0x1C3C	0xF000FCD8  BL	_fm_readRegisters+0
0x1C40	0x9801    LDR	R0, [SP, #4]
;__fm_driver.c, 666 :: 		b = regBuffer[ _FM_SYSTEM_CONFIGURATION_2 ];
0x1C42	0xAB02    ADD	R3, SP, #8
0x1C44	0x1D99    ADDS	R1, R3, #6
0x1C46	0x8809    LDRH	R1, [R1, #0]
;__fm_driver.c, 667 :: 		b &= 0x00C0;
0x1C48	0xF00101C0  AND	R1, R1, #192
0x1C4C	0xB289    UXTH	R1, R1
;__fm_driver.c, 668 :: 		b >>= 6;
0x1C4E	0x0989    LSRS	R1, R1, #6
0x1C50	0xB289    UXTH	R1, R1
;__fm_driver.c, 669 :: 		b &= 0x0003;
0x1C52	0xF0010203  AND	R2, R1, #3
0x1C56	0xB292    UXTH	R2, R2
; b start address is: 16 (R4)
0x1C58	0xB294    UXTH	R4, R2
;__fm_driver.c, 671 :: 		s = regBuffer[ _FM_SYSTEM_CONFIGURATION_2 ];
0x1C5A	0x1D99    ADDS	R1, R3, #6
0x1C5C	0x8809    LDRH	R1, [R1, #0]
;__fm_driver.c, 672 :: 		s &= 0x0030;
0x1C5E	0xF0010130  AND	R1, R1, #48
0x1C62	0xB289    UXTH	R1, R1
;__fm_driver.c, 673 :: 		s >>= 4;
0x1C64	0x0909    LSRS	R1, R1, #4
0x1C66	0xB289    UXTH	R1, R1
;__fm_driver.c, 674 :: 		s &= 0x0003;
0x1C68	0xF0010103  AND	R1, R1, #3
; s start address is: 12 (R3)
0x1C6C	0xB28B    UXTH	R3, R1
;__fm_driver.c, 676 :: 		if (b == 0)
0x1C6E	0xB922    CBNZ	R2, L_fm_tune30
; b end address is: 16 (R4)
;__fm_driver.c, 678 :: 		bandLimitDown = 87.5;
0x1C70	0x492B    LDR	R1, [PC, #172]
0x1C72	0x910A    STR	R1, [SP, #40]
;__fm_driver.c, 679 :: 		bandLimitUp = 108;
0x1C74	0x492B    LDR	R1, [PC, #172]
0x1C76	0x910B    STR	R1, [SP, #44]
;__fm_driver.c, 680 :: 		}
0x1C78	0xE00C    B	L_fm_tune31
L_fm_tune30:
;__fm_driver.c, 681 :: 		else if (b == 1)
; b start address is: 16 (R4)
0x1C7A	0x2C01    CMP	R4, #1
0x1C7C	0xD104    BNE	L_fm_tune32
; b end address is: 16 (R4)
;__fm_driver.c, 683 :: 		bandLimitDown = 76.0;
0x1C7E	0x492A    LDR	R1, [PC, #168]
0x1C80	0x910A    STR	R1, [SP, #40]
;__fm_driver.c, 684 :: 		bandLimitUp = 108;
0x1C82	0x4928    LDR	R1, [PC, #160]
0x1C84	0x910B    STR	R1, [SP, #44]
;__fm_driver.c, 685 :: 		}
0x1C86	0xE005    B	L_fm_tune33
L_fm_tune32:
;__fm_driver.c, 686 :: 		else if (b == 2)
; b start address is: 16 (R4)
0x1C88	0x2C02    CMP	R4, #2
0x1C8A	0xD103    BNE	L_fm_tune34
; b end address is: 16 (R4)
;__fm_driver.c, 688 :: 		bandLimitDown = 76.0;
0x1C8C	0x4926    LDR	R1, [PC, #152]
0x1C8E	0x910A    STR	R1, [SP, #40]
;__fm_driver.c, 689 :: 		bandLimitUp = 90;
0x1C90	0x4926    LDR	R1, [PC, #152]
0x1C92	0x910B    STR	R1, [SP, #44]
;__fm_driver.c, 690 :: 		}
L_fm_tune34:
L_fm_tune33:
L_fm_tune31:
;__fm_driver.c, 692 :: 		if (s == 0)
0x1C94	0xB913    CBNZ	R3, L_fm_tune35
; s end address is: 12 (R3)
;__fm_driver.c, 694 :: 		space_ = 0.2;
0x1C96	0x4926    LDR	R1, [PC, #152]
0x1C98	0x910C    STR	R1, [SP, #48]
;__fm_driver.c, 695 :: 		}
0x1C9A	0xE008    B	L_fm_tune36
L_fm_tune35:
;__fm_driver.c, 696 :: 		else if (s == 1)
; s start address is: 12 (R3)
0x1C9C	0x2B01    CMP	R3, #1
0x1C9E	0xD102    BNE	L_fm_tune37
; s end address is: 12 (R3)
;__fm_driver.c, 698 :: 		space_ = 0.1;
0x1CA0	0x4924    LDR	R1, [PC, #144]
0x1CA2	0x910C    STR	R1, [SP, #48]
;__fm_driver.c, 699 :: 		}
0x1CA4	0xE003    B	L_fm_tune38
L_fm_tune37:
;__fm_driver.c, 700 :: 		else if (s == 2)
; s start address is: 12 (R3)
0x1CA6	0x2B02    CMP	R3, #2
0x1CA8	0xD101    BNE	L_fm_tune39
; s end address is: 12 (R3)
;__fm_driver.c, 702 :: 		space_ = 0.05;
0x1CAA	0x4923    LDR	R1, [PC, #140]
0x1CAC	0x910C    STR	R1, [SP, #48]
;__fm_driver.c, 703 :: 		}
L_fm_tune39:
L_fm_tune38:
L_fm_tune36:
;__fm_driver.c, 705 :: 		aux_  = channelFrequency - bandLimitDown;
0x1CAE	0x9A0A    LDR	R2, [SP, #40]
0x1CB0	0xF7FFFDC8  BL	__Sub_FP+0
; channelFrequency end address is: 0 (R0)
;__fm_driver.c, 706 :: 		aux_ /= space_;
0x1CB4	0x9A0C    LDR	R2, [SP, #48]
0x1CB6	0xF7FFFD73  BL	__Div_FP+0
;__fm_driver.c, 708 :: 		channel_ = (uint16_t)(aux_);
0x1CBA	0xF7FFFD4D  BL	__FloatToUnsignedIntegral+0
0x1CBE	0xB280    UXTH	R0, R0
; channel_ start address is: 36 (R9)
0x1CC0	0xFA1FF980  UXTH	R9, R0
;__fm_driver.c, 710 :: 		aux_  = bandLimitUp - bandLimitDown;
0x1CC4	0x9A0A    LDR	R2, [SP, #40]
0x1CC6	0x980B    LDR	R0, [SP, #44]
0x1CC8	0xF7FFFDBC  BL	__Sub_FP+0
;__fm_driver.c, 711 :: 		aux_ /= space_;
0x1CCC	0x9A0C    LDR	R2, [SP, #48]
0x1CCE	0xF7FFFD67  BL	__Div_FP+0
;__fm_driver.c, 713 :: 		channelLimitUp = (uint16_t)(aux_);
0x1CD2	0xF7FFFD41  BL	__FloatToUnsignedIntegral+0
0x1CD6	0xB280    UXTH	R0, R0
;__fm_driver.c, 715 :: 		if (channel_ < channelLimitUp && channel_ > 0)
0x1CD8	0x4581    CMP	R9, R0
0x1CDA	0xD21C    BCS	L__fm_tune78
0x1CDC	0xF1B90F00  CMP	R9, #0
0x1CE0	0xD919    BLS	L__fm_tune77
L__fm_tune76:
;__fm_driver.c, 717 :: 		regBuffer[_FM_CHANNEL] &= 0x0000;
0x1CE2	0xAB02    ADD	R3, SP, #8
0x1CE4	0x1C9A    ADDS	R2, R3, #2
0x1CE6	0x8811    LDRH	R1, [R2, #0]
0x1CE8	0xF0010100  AND	R1, R1, #0
0x1CEC	0x8011    STRH	R1, [R2, #0]
;__fm_driver.c, 718 :: 		regBuffer[_FM_CHANNEL] |= channel_;
0x1CEE	0x1C9A    ADDS	R2, R3, #2
0x1CF0	0x8811    LDRH	R1, [R2, #0]
0x1CF2	0xEA410109  ORR	R1, R1, R9, LSL #0
; channel_ end address is: 36 (R9)
0x1CF6	0x8011    STRH	R1, [R2, #0]
;__fm_driver.c, 720 :: 		fm_setBits( regBuffer, _FM_CHANNEL, _FM_TUNE_MASK, _FM_TUNE_ENABLE );
0x1CF8	0xF64772FF  MOVW	R2, #32767
0x1CFC	0xF2400101  MOVW	R1, #1
0x1D00	0x4618    MOV	R0, R3
0x1D02	0xF2480300  MOVW	R3, #32768
0x1D06	0xF000FDF7  BL	_fm_setBits+0
;__fm_driver.c, 722 :: 		fm_writeRegisters( regBuffer );
0x1D0A	0xA902    ADD	R1, SP, #8
0x1D0C	0x4608    MOV	R0, R1
0x1D0E	0xF000FDFF  BL	_fm_writeRegisters+0
;__fm_driver.c, 724 :: 		return 0;
0x1D12	0x2000    MOVS	R0, #0
0x1D14	0xE000    B	L_end_fm_tune
;__fm_driver.c, 715 :: 		if (channel_ < channelLimitUp && channel_ > 0)
L__fm_tune78:
L__fm_tune77:
;__fm_driver.c, 728 :: 		return 1;
0x1D16	0x2001    MOVS	R0, #1
;__fm_driver.c, 730 :: 		}
L_end_fm_tune:
0x1D18	0xF8DDE000  LDR	LR, [SP, #0]
0x1D1C	0xB00D    ADD	SP, SP, #52
0x1D1E	0x4770    BX	LR
0x1D20	0x000042AF  	#1118765056
0x1D24	0x000042D8  	#1121452032
0x1D28	0x00004298  	#1117257728
0x1D2C	0x000042B4  	#1119092736
0x1D30	0xCCCD3E4C  	#1045220557
0x1D34	0xCCCD3DCC  	#1036831949
0x1D38	0xCCCD3D4C  	#1028443341
; end of _fm_tune
__Sub_FP:
;__Lib_MathDouble.c, 539 :: 		
0x1844	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 541 :: 		
0x1846	0xF0824200  EOR	R2, R2, #-2147483648
;__Lib_MathDouble.c, 542 :: 		
0x184A	0xE92D41FA  PUSH	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 544 :: 		
0x184E	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 545 :: 		
0x1852	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 546 :: 		
0x1856	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 547 :: 		
0x1858	0xD104    BNE	__me_lab1
;__Lib_MathDouble.c, 549 :: 		
0x185A	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 550 :: 		
0x185C	0xBF18    IT	NE
;__Lib_MathDouble.c, 551 :: 		
0x185E	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 553 :: 		
0x1862	0xE06C    B	__me_lab_end
;__Lib_MathDouble.c, 555 :: 		
__me_lab1:
0x1864	0xF0444400  ORR	R4, R4, #-2147483648
;__Lib_MathDouble.c, 557 :: 		
0x1868	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 559 :: 		
0x186A	0xD05F    BEQ	__me_ovfl1
;__Lib_MathDouble.c, 561 :: 		
0x186C	0xEA4F0494  LSR	R4, R4, #2
;__Lib_MathDouble.c, 562 :: 		
0x1870	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 563 :: 		
0x1872	0xBF48    IT	MI
;__Lib_MathDouble.c, 564 :: 		
0x1874	0x4264    RSBMI	R4, R4, #0
;__Lib_MathDouble.c, 566 :: 		
0x1876	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 567 :: 		
0x187A	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 568 :: 		
0x187E	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 569 :: 		
0x1880	0xD105    BNE	__me_lab2
;__Lib_MathDouble.c, 571 :: 		
0x1882	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 572 :: 		
0x1884	0xBF14    ITE	NE
;__Lib_MathDouble.c, 573 :: 		
0x1886	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 574 :: 		
0x188A	0x4610    MOVEQ	R0, R2
;__Lib_MathDouble.c, 576 :: 		
0x188C	0xE057    B	__me_lab_end
;__Lib_MathDouble.c, 578 :: 		
__me_lab2:
0x188E	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 580 :: 		
0x1892	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 581 :: 		
0x1894	0xD04B    BEQ	__me_ovfl0
;__Lib_MathDouble.c, 583 :: 		
0x1896	0xEA4F0191  LSR	R1, R1, #2
;__Lib_MathDouble.c, 584 :: 		
0x189A	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 585 :: 		
0x189C	0xBF48    IT	MI
;__Lib_MathDouble.c, 586 :: 		
0x189E	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 588 :: 		
0x18A0	0x1B5E    SUBS	R6, R3, R5
;__Lib_MathDouble.c, 589 :: 		
0x18A2	0xBF41    ITTTT	MI
;__Lib_MathDouble.c, 590 :: 		
0x18A4	0x460F    MOVMI	R7, R1
;__Lib_MathDouble.c, 591 :: 		
0x18A6	0x4621    MOVMI	R1, R4
;__Lib_MathDouble.c, 592 :: 		
0x18A8	0x463C    MOVMI	R4, R7
;__Lib_MathDouble.c, 593 :: 		
0x18AA	0x4276    RSBMI	R6, R6, #0
;__Lib_MathDouble.c, 594 :: 		
0x18AC	0xBF48    IT	MI
;__Lib_MathDouble.c, 595 :: 		
0x18AE	0x462B    MOVMI	R3, R5
;__Lib_MathDouble.c, 597 :: 		
0x18B0	0x2E19    CMP	R6, #25
;__Lib_MathDouble.c, 598 :: 		
0x18B2	0xBF47    ITTEE	MI
;__Lib_MathDouble.c, 599 :: 		
0x18B4	0xFA44F706  ASRMI	R7, R4, R6
;__Lib_MathDouble.c, 600 :: 		
0x18B8	0x19C9    ADDMI	R1, R1, R7
;__Lib_MathDouble.c, 601 :: 		
0x18BA	0xF04F0800  MOVPL	R8, #0
;__Lib_MathDouble.c, 602 :: 		
0x18BE	0xE003    BPL	__me_skip_sticky
;__Lib_MathDouble.c, 603 :: 		
0x18C0	0xF1C6071C  RSB	R7, R6, #28
;__Lib_MathDouble.c, 604 :: 		
0x18C4	0xFA04F807  LSL	R8, R4, R7
;__Lib_MathDouble.c, 606 :: 		
__me_skip_sticky:
;__Lib_MathDouble.c, 607 :: 		
0x18C8	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 608 :: 		
0x18CA	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 609 :: 		
0x18CC	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 611 :: 		
0x18D0	0xE035    BEQ	__me_lab_end
;__Lib_MathDouble.c, 612 :: 		
0x18D2	0xBF46    ITTE	MI
;__Lib_MathDouble.c, 613 :: 		
0x18D4	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 614 :: 		
0x18D6	0xF04F0701  MOVMI	R7, #1
;__Lib_MathDouble.c, 615 :: 		
0x18DA	0xF04F0700  MOVPL	R7, #0
;__Lib_MathDouble.c, 617 :: 		
__me_loop:
0x18DE	0xF1A30301  SUB	R3, R3, #1
;__Lib_MathDouble.c, 618 :: 		
0x18E2	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 619 :: 		
0x18E4	0xD5FB    BPL	__me_loop
;__Lib_MathDouble.c, 621 :: 		
0x18E6	0xF0110480  ANDS	R4, R1, #128
;__Lib_MathDouble.c, 622 :: 		
0x18EA	0xD00D    BEQ	__me_no_round
;__Lib_MathDouble.c, 623 :: 		
0x18EC	0xF0010520  AND	R5, R1, #32
;__Lib_MathDouble.c, 624 :: 		
0x18F0	0xEA480805  ORR	R8, R8, R5, LSL #0
;__Lib_MathDouble.c, 625 :: 		
0x18F4	0x3180    ADDS	R1, #128
;__Lib_MathDouble.c, 626 :: 		
0x18F6	0xBF28    IT	CS
;__Lib_MathDouble.c, 627 :: 		
0x18F8	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 628 :: 		
0x18FA	0xF0010440  AND	R4, R1, #64
;__Lib_MathDouble.c, 629 :: 		
0x18FE	0xEA580804  ORRS	R8, R8, R4, LSL #0
;__Lib_MathDouble.c, 630 :: 		
0x1902	0xBF08    IT	EQ
;__Lib_MathDouble.c, 631 :: 		
0x1904	0xF4217180  BICEQ	R1, R1, #256
;__Lib_MathDouble.c, 633 :: 		
__me_no_round:
;__Lib_MathDouble.c, 634 :: 		
0x1908	0x1C9B    ADDS	R3, R3, #2
;__Lib_MathDouble.c, 635 :: 		
0x190A	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 636 :: 		
0x190C	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 638 :: 		
0x1910	0xE015    BLE	__me_lab_end
;__Lib_MathDouble.c, 639 :: 		
0x1912	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 640 :: 		
0x1914	0xD20D    BCS	__me_ovfl
;__Lib_MathDouble.c, 642 :: 		
0x1916	0xF02101FF  BIC	R1, R1, #255
;__Lib_MathDouble.c, 643 :: 		
0x191A	0xEA4F0141  LSL	R1, R1, #1
;__Lib_MathDouble.c, 645 :: 		
0x191E	0xEA4F2051  LSR	R0, R1, #9
;__Lib_MathDouble.c, 646 :: 		
0x1922	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 647 :: 		
0x1926	0xEA4070C7  ORR	R0, R0, R7, LSL #31
;__Lib_MathDouble.c, 650 :: 		
0x192A	0xE008    B	__me_lab_end
;__Lib_MathDouble.c, 652 :: 		
__me_ovfl1:
0x192C	0x4610    MOV	R0, R2
;__Lib_MathDouble.c, 653 :: 		
__me_ovfl0:
0x192E	0xEA4F77D0  LSR	R7, R0, #31
;__Lib_MathDouble.c, 654 :: 		
__me_ovfl:
0x1932	0xEA4F77C7  LSL	R7, R7, #31
;__Lib_MathDouble.c, 655 :: 		
0x1936	0x20FF    MOVS	R0, #255
;__Lib_MathDouble.c, 656 :: 		
0x1938	0xEA4F50C0  LSL	R0, R0, #23
;__Lib_MathDouble.c, 657 :: 		
0x193C	0x4338    ORRS	R0, R7
;__Lib_MathDouble.c, 658 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 659 :: 		
0x193E	0xE8BD41FA  POP	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 661 :: 		
L_end__Sub_FP:
0x1942	0xB001    ADD	SP, SP, #4
0x1944	0x4770    BX	LR
; end of __Sub_FP
__Div_FP:
;__Lib_MathDouble.c, 743 :: 		
0x17A0	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 745 :: 		
0x17A2	0xB5FA    PUSH	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 746 :: 		
0x17A4	0xEA900602  EORS	R6, R0, R2, LSL #0
;__Lib_MathDouble.c, 747 :: 		
0x17A8	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 748 :: 		
0x17AA	0xF04F4600  MOVMI	R6, #-2147483648
;__Lib_MathDouble.c, 749 :: 		
0x17AE	0xF04F0600  MOVPL	R6, #0
;__Lib_MathDouble.c, 751 :: 		
0x17B2	0x0201    LSLS	R1, R0, #8
;__Lib_MathDouble.c, 752 :: 		
0x17B4	0x0043    LSLS	R3, R0, #1
;__Lib_MathDouble.c, 753 :: 		
0x17B6	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 754 :: 		
0x17B8	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 755 :: 		
0x17BA	0xF0414100  ORRNE	R1, R1, #-2147483648
;__Lib_MathDouble.c, 757 :: 		
0x17BE	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 759 :: 		
0x17C2	0xE03B    BEQ	__me_lab_end
;__Lib_MathDouble.c, 761 :: 		
0x17C4	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 762 :: 		
0x17C6	0xD035    BEQ	__me_ovfl
;__Lib_MathDouble.c, 764 :: 		
0x17C8	0xEA5F2402  LSLS	R4, R2, #8
;__Lib_MathDouble.c, 765 :: 		
0x17CC	0xEA5F0542  LSLS	R5, R2, #1
;__Lib_MathDouble.c, 766 :: 		
0x17D0	0xEA5F6515  LSRS	R5, R5, #24
;__Lib_MathDouble.c, 767 :: 		
0x17D4	0xBF11    ITEEE	NE
;__Lib_MathDouble.c, 769 :: 		
0x17D6	0xF0444400  ORRNE	R4, R4, #-2147483648
;__Lib_MathDouble.c, 770 :: 		
0x17DA	0xF04F40FF  MOVEQ	R0, #2139095040
;__Lib_MathDouble.c, 771 :: 		
0x17DE	0x4330    ORREQ	R0, R6
;__Lib_MathDouble.c, 773 :: 		
0x17E0	0xE02C    BEQ	__me_lab_end
;__Lib_MathDouble.c, 775 :: 		
0x17E2	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 776 :: 		
0x17E4	0xD026    BEQ	__me_ovfl
;__Lib_MathDouble.c, 778 :: 		
0x17E6	0x1B5B    SUBS	R3, R3, R5
;__Lib_MathDouble.c, 781 :: 		
0x17E8	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 782 :: 		
0x17EA	0x2720    MOVS	R7, #32
;__Lib_MathDouble.c, 783 :: 		
0x17EC	0x0864    LSRS	R4, R4, #1
;__Lib_MathDouble.c, 784 :: 		
0x17EE	0x0849    LSRS	R1, R1, #1
;__Lib_MathDouble.c, 786 :: 		
__me_fdiv_:
;__Lib_MathDouble.c, 788 :: 		
0x17F0	0x42A1    CMP	R1, R4
;__Lib_MathDouble.c, 790 :: 		
0x17F2	0xEB400000  ADC	R0, R0, R0, LSL #0
;__Lib_MathDouble.c, 791 :: 		
0x17F6	0xBF28    IT	CS
;__Lib_MathDouble.c, 792 :: 		
0x17F8	0x1B09    SUBCS	R1, R1, R4
;__Lib_MathDouble.c, 793 :: 		
0x17FA	0x1E7F    SUBS	R7, R7, #1
;__Lib_MathDouble.c, 794 :: 		
0x17FC	0xD004    BEQ	__me_flb1_
;__Lib_MathDouble.c, 795 :: 		
0x17FE	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 796 :: 		
0x1800	0xBF18    IT	NE
;__Lib_MathDouble.c, 797 :: 		
0x1802	0x0049    LSLNE	R1, R1, #1
;__Lib_MathDouble.c, 798 :: 		
0x1804	0xD1F4    BNE	__me_fdiv_
;__Lib_MathDouble.c, 800 :: 		
0x1806	0x40B8    LSLS	R0, R7
;__Lib_MathDouble.c, 802 :: 		
__me_flb1_:
0x1808	0xF0104F00  TST	R0, #-2147483648
;__Lib_MathDouble.c, 803 :: 		
0x180C	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 804 :: 		
0x180E	0x0040    LSLEQ	R0, R0, #1
;__Lib_MathDouble.c, 805 :: 		
0x1810	0xF1B30301  SUBSEQ	R3, R3, #1
;__Lib_MathDouble.c, 807 :: 		
0x1814	0x3080    ADDS	R0, #128
;__Lib_MathDouble.c, 808 :: 		
0x1816	0xBF2C    ITE	CS
;__Lib_MathDouble.c, 809 :: 		
0x1818	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 810 :: 		
0x181A	0x0040    LSLCC	R0, R0, #1
;__Lib_MathDouble.c, 812 :: 		
__me_flb2_:
0x181C	0x337F    ADDS	R3, #127
;__Lib_MathDouble.c, 813 :: 		
0x181E	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 814 :: 		
0x1820	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 816 :: 		
0x1824	0xE00A    BLE	__me_lab_end
;__Lib_MathDouble.c, 818 :: 		
0x1826	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 819 :: 		
0x1828	0xD204    BCS	__me_ovfl
;__Lib_MathDouble.c, 821 :: 		
0x182A	0x0A40    LSRS	R0, R0, #9
;__Lib_MathDouble.c, 822 :: 		
0x182C	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 823 :: 		
0x1830	0x4330    ORRS	R0, R6
;__Lib_MathDouble.c, 826 :: 		
0x1832	0xE003    B	__me_lab_end
;__Lib_MathDouble.c, 828 :: 		
__me_ovfl:
0x1834	0x27FF    MOVS	R7, #255
;__Lib_MathDouble.c, 829 :: 		
0x1836	0x05FF    LSLS	R7, R7, #23
;__Lib_MathDouble.c, 830 :: 		
0x1838	0xEA560007  ORRS	R0, R6, R7, LSL #0
;__Lib_MathDouble.c, 831 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 832 :: 		
0x183C	0xE8BD40FA  POP	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 834 :: 		
L_end__Div_FP:
0x1840	0xB001    ADD	SP, SP, #4
0x1842	0x4770    BX	LR
; end of __Div_FP
__FloatToUnsignedIntegral:
;__Lib_MathDouble.c, 45 :: 		
0x1758	0xB081    SUB	SP, SP, #4
0x175A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_MathDouble.c, 47 :: 		
0x175E	0xB502    PUSH	(R1, R14)
;__Lib_MathDouble.c, 49 :: 		
0x1760	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 50 :: 		
0x1762	0xD502    BPL	__me_label_pos
;__Lib_MathDouble.c, 51 :: 		
0x1764	0xF7FFFA7E  BL	__FloatToSignedIntegral+0
;__Lib_MathDouble.c, 52 :: 		
0x1768	0xE013    B	__me_endLab
;__Lib_MathDouble.c, 55 :: 		
__me_label_pos:
0x176A	0xEA4F0140  LSL	R1, R0, #1
;__Lib_MathDouble.c, 56 :: 		
0x176E	0xEA4F6111  LSR	R1, R1, #24
;__Lib_MathDouble.c, 58 :: 		
0x1772	0x397F    SUBS	R1, #127
;__Lib_MathDouble.c, 59 :: 		
0x1774	0xBF3C    ITT	CC
;__Lib_MathDouble.c, 60 :: 		
0x1776	0xF04F0000  MOVCC	R0, #0
;__Lib_MathDouble.c, 62 :: 		
0x177A	0xE00A    BCC	__me_endLab
;__Lib_MathDouble.c, 64 :: 		
0x177C	0xF1D1011F  RSBS	R1, R1, #31
;__Lib_MathDouble.c, 65 :: 		
0x1780	0xD305    BCC	__me_ovfl
;__Lib_MathDouble.c, 67 :: 		
0x1782	0xEA4F2000  LSL	R0, R0, #8
;__Lib_MathDouble.c, 68 :: 		
0x1786	0xF0404000  ORR	R0, R0, #-2147483648
;__Lib_MathDouble.c, 70 :: 		
0x178A	0x40C8    LSRS	R0, R1
;__Lib_MathDouble.c, 73 :: 		
0x178C	0xE001    B	__me_endLab
;__Lib_MathDouble.c, 75 :: 		
__me_ovfl:
0x178E	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 76 :: 		
0x1790	0x1E40    SUBS	R0, R0, #1
;__Lib_MathDouble.c, 78 :: 		
__me_endLab:
;__Lib_MathDouble.c, 79 :: 		
0x1792	0xE8BD4002  POP	(R1, R14)
;__Lib_MathDouble.c, 82 :: 		
L_end__FloatToUnsignedIntegral:
0x1796	0xF8DDE000  LDR	LR, [SP, #0]
0x179A	0xB001    ADD	SP, SP, #4
0x179C	0x4770    BX	LR
; end of __FloatToUnsignedIntegral
__FloatToSignedIntegral:
;__Lib_MathDouble.c, 4 :: 		
0x0C64	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 6 :: 		
0x0C66	0xB506    PUSH	(R1, R2, R14)
;__Lib_MathDouble.c, 8 :: 		
0x0C68	0xEA4F0240  LSL	R2, R0, #1
;__Lib_MathDouble.c, 9 :: 		
0x0C6C	0xEA4F6212  LSR	R2, R2, #24
;__Lib_MathDouble.c, 11 :: 		
0x0C70	0x3A7F    SUBS	R2, #127
;__Lib_MathDouble.c, 12 :: 		
0x0C72	0xBF44    ITT	MI
;__Lib_MathDouble.c, 13 :: 		
0x0C74	0xF04F0000  MOVMI	R0, #0
;__Lib_MathDouble.c, 15 :: 		
0x0C78	0xE011    BMI	__me_lab_end
;__Lib_MathDouble.c, 17 :: 		
0x0C7A	0xF1D2021F  RSBS	R2, R2, #31
;__Lib_MathDouble.c, 18 :: 		
0x0C7E	0xD909    BLS	__me_ovfl
;__Lib_MathDouble.c, 20 :: 		
0x0C80	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 21 :: 		
0x0C84	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 23 :: 		
0x0C88	0x40D1    LSRS	R1, R2
;__Lib_MathDouble.c, 25 :: 		
0x0C8A	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 26 :: 		
0x0C8C	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 27 :: 		
0x0C8E	0x4248    RSBMI	R0, R1, #0
;__Lib_MathDouble.c, 28 :: 		
0x0C90	0x4608    MOVPL	R0, R1
;__Lib_MathDouble.c, 31 :: 		
0x0C92	0xE004    B	__me_lab_end
;__Lib_MathDouble.c, 33 :: 		
__me_ovfl:
0x0C94	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 34 :: 		
0x0C96	0xF04F4000  MOV	R0, #-2147483648
;__Lib_MathDouble.c, 35 :: 		
0x0C9A	0xBF58    IT	PL
;__Lib_MathDouble.c, 36 :: 		
0x0C9C	0x1E40    SUBPL	R0, R0, #1
;__Lib_MathDouble.c, 37 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 38 :: 		
0x0C9E	0xE8BD4006  POP	(R1, R2, R14)
;__Lib_MathDouble.c, 40 :: 		
L_end__FloatToSignedIntegral:
0x0CA2	0xB001    ADD	SP, SP, #4
0x0CA4	0x4770    BX	LR
; end of __FloatToSignedIntegral
_fm_endTune:
;__fm_driver.c, 732 :: 		void fm_endTune( void )
0x1C04	0xB089    SUB	SP, SP, #36
0x1C06	0xF8CDE000  STR	LR, [SP, #0]
;__fm_driver.c, 736 :: 		fm_readRegisters( regBuffer );
0x1C0A	0xA801    ADD	R0, SP, #4
0x1C0C	0xF000FCF0  BL	_fm_readRegisters+0
;__fm_driver.c, 738 :: 		fm_setBits( regBuffer, _FM_CHANNEL, _FM_TUNE_MASK, _FM_TUNE_DISABLE );
0x1C10	0xA801    ADD	R0, SP, #4
0x1C12	0xF2400300  MOVW	R3, #0
0x1C16	0xF64772FF  MOVW	R2, #32767
0x1C1A	0xF2400101  MOVW	R1, #1
0x1C1E	0xF000FE6B  BL	_fm_setBits+0
;__fm_driver.c, 740 :: 		fm_writeRegisters( regBuffer );
0x1C22	0xA801    ADD	R0, SP, #4
0x1C24	0xF000FE74  BL	_fm_writeRegisters+0
;__fm_driver.c, 741 :: 		}
L_end_fm_endTune:
0x1C28	0xF8DDE000  LDR	LR, [SP, #0]
0x1C2C	0xB009    ADD	SP, SP, #36
0x1C2E	0x4770    BX	LR
; end of _fm_endTune
_fm_caseMemorize:
;Click_FM_STM.c, 172 :: 		void fm_caseMemorize( )
0x2DE8	0xB081    SUB	SP, SP, #4
0x2DEA	0xF8CDE000  STR	LR, [SP, #0]
;Click_FM_STM.c, 174 :: 		switch (memory_)
0x2DEE	0xE040    B	L_fm_caseMemorize14
;Click_FM_STM.c, 176 :: 		case 0 :
L_fm_caseMemorize16:
;Click_FM_STM.c, 178 :: 		station1_ = stationFrequency_;
0x2DF0	0x482D    LDR	R0, [PC, #180]
0x2DF2	0x8801    LDRH	R1, [R0, #0]
0x2DF4	0x482D    LDR	R0, [PC, #180]
0x2DF6	0x8001    STRH	R1, [R0, #0]
;Click_FM_STM.c, 179 :: 		memory_ += 1;
0x2DF8	0x492D    LDR	R1, [PC, #180]
0x2DFA	0x7808    LDRB	R0, [R1, #0]
0x2DFC	0x1C40    ADDS	R0, R0, #1
0x2DFE	0x7008    STRB	R0, [R1, #0]
;Click_FM_STM.c, 181 :: 		mikrobus_logWrite( "station 1 memorized", _LOG_LINE );
0x2E00	0x482C    LDR	R0, [PC, #176]
0x2E02	0x2102    MOVS	R1, #2
0x2E04	0xF000FB54  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 183 :: 		break;
0x2E08	0xE049    B	L_fm_caseMemorize15
;Click_FM_STM.c, 185 :: 		case 1 :
L_fm_caseMemorize17:
;Click_FM_STM.c, 187 :: 		station2_ = stationFrequency_;
0x2E0A	0x4827    LDR	R0, [PC, #156]
0x2E0C	0x8801    LDRH	R1, [R0, #0]
0x2E0E	0x482A    LDR	R0, [PC, #168]
0x2E10	0x8001    STRH	R1, [R0, #0]
;Click_FM_STM.c, 188 :: 		memory_ += 1;
0x2E12	0x4927    LDR	R1, [PC, #156]
0x2E14	0x7808    LDRB	R0, [R1, #0]
0x2E16	0x1C40    ADDS	R0, R0, #1
0x2E18	0x7008    STRB	R0, [R1, #0]
;Click_FM_STM.c, 190 :: 		mikrobus_logWrite( "station 2 memorized", _LOG_LINE );
0x2E1A	0x4828    LDR	R0, [PC, #160]
0x2E1C	0x2102    MOVS	R1, #2
0x2E1E	0xF000FB47  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 192 :: 		break;
0x2E22	0xE03C    B	L_fm_caseMemorize15
;Click_FM_STM.c, 194 :: 		case 2 :
L_fm_caseMemorize18:
;Click_FM_STM.c, 196 :: 		station3_ = stationFrequency_;
0x2E24	0x4820    LDR	R0, [PC, #128]
0x2E26	0x8801    LDRH	R1, [R0, #0]
0x2E28	0x4825    LDR	R0, [PC, #148]
0x2E2A	0x8001    STRH	R1, [R0, #0]
;Click_FM_STM.c, 197 :: 		memory_ += 1;
0x2E2C	0x4920    LDR	R1, [PC, #128]
0x2E2E	0x7808    LDRB	R0, [R1, #0]
0x2E30	0x1C40    ADDS	R0, R0, #1
0x2E32	0x7008    STRB	R0, [R1, #0]
;Click_FM_STM.c, 199 :: 		mikrobus_logWrite( "station 3 memorized", _LOG_LINE );
0x2E34	0x4823    LDR	R0, [PC, #140]
0x2E36	0x2102    MOVS	R1, #2
0x2E38	0xF000FB3A  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 201 :: 		break;
0x2E3C	0xE02F    B	L_fm_caseMemorize15
;Click_FM_STM.c, 203 :: 		case 3 :
L_fm_caseMemorize19:
;Click_FM_STM.c, 205 :: 		station4_ = stationFrequency_;
0x2E3E	0x481A    LDR	R0, [PC, #104]
0x2E40	0x8801    LDRH	R1, [R0, #0]
0x2E42	0x4821    LDR	R0, [PC, #132]
0x2E44	0x8001    STRH	R1, [R0, #0]
;Click_FM_STM.c, 206 :: 		memory_ += 1;
0x2E46	0x491A    LDR	R1, [PC, #104]
0x2E48	0x7808    LDRB	R0, [R1, #0]
0x2E4A	0x1C40    ADDS	R0, R0, #1
0x2E4C	0x7008    STRB	R0, [R1, #0]
;Click_FM_STM.c, 208 :: 		mikrobus_logWrite( "station 4 memorized", _LOG_LINE );
0x2E4E	0x481F    LDR	R0, [PC, #124]
0x2E50	0x2102    MOVS	R1, #2
0x2E52	0xF000FB2D  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 210 :: 		break;
0x2E56	0xE022    B	L_fm_caseMemorize15
;Click_FM_STM.c, 212 :: 		case 4 :
L_fm_caseMemorize20:
;Click_FM_STM.c, 214 :: 		station5_ = stationFrequency_;
0x2E58	0x4813    LDR	R0, [PC, #76]
0x2E5A	0x8801    LDRH	R1, [R0, #0]
0x2E5C	0x481C    LDR	R0, [PC, #112]
0x2E5E	0x8001    STRH	R1, [R0, #0]
;Click_FM_STM.c, 215 :: 		memory_ = 0;
0x2E60	0x2100    MOVS	R1, #0
0x2E62	0x4813    LDR	R0, [PC, #76]
0x2E64	0x7001    STRB	R1, [R0, #0]
;Click_FM_STM.c, 217 :: 		mikrobus_logWrite( "station 5 memorized", _LOG_LINE );
0x2E66	0x481B    LDR	R0, [PC, #108]
0x2E68	0x2102    MOVS	R1, #2
0x2E6A	0xF000FB21  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 219 :: 		break;
0x2E6E	0xE016    B	L_fm_caseMemorize15
;Click_FM_STM.c, 221 :: 		default :
L_fm_caseMemorize21:
;Click_FM_STM.c, 223 :: 		break;
0x2E70	0xE015    B	L_fm_caseMemorize15
;Click_FM_STM.c, 225 :: 		}
L_fm_caseMemorize14:
0x2E72	0x480F    LDR	R0, [PC, #60]
0x2E74	0x7800    LDRB	R0, [R0, #0]
0x2E76	0x2800    CMP	R0, #0
0x2E78	0xF43FAFBA  BEQ	L_fm_caseMemorize16
0x2E7C	0x480C    LDR	R0, [PC, #48]
0x2E7E	0x7800    LDRB	R0, [R0, #0]
0x2E80	0x2801    CMP	R0, #1
0x2E82	0xD0C2    BEQ	L_fm_caseMemorize17
0x2E84	0x480A    LDR	R0, [PC, #40]
0x2E86	0x7800    LDRB	R0, [R0, #0]
0x2E88	0x2802    CMP	R0, #2
0x2E8A	0xD0CB    BEQ	L_fm_caseMemorize18
0x2E8C	0x4808    LDR	R0, [PC, #32]
0x2E8E	0x7800    LDRB	R0, [R0, #0]
0x2E90	0x2803    CMP	R0, #3
0x2E92	0xD0D4    BEQ	L_fm_caseMemorize19
0x2E94	0x4806    LDR	R0, [PC, #24]
0x2E96	0x7800    LDRB	R0, [R0, #0]
0x2E98	0x2804    CMP	R0, #4
0x2E9A	0xD0DD    BEQ	L_fm_caseMemorize20
0x2E9C	0xE7E8    B	L_fm_caseMemorize21
L_fm_caseMemorize15:
;Click_FM_STM.c, 226 :: 		}
L_end_fm_caseMemorize:
0x2E9E	0xF8DDE000  LDR	LR, [SP, #0]
0x2EA2	0xB001    ADD	SP, SP, #4
0x2EA4	0x4770    BX	LR
0x2EA6	0xBF00    NOP
0x2EA8	0x03082000  	_stationFrequency_+0
0x2EAC	0x033C2000  	_station1_+0
0x2EB0	0x005F2000  	_memory_+0
0x2EB4	0x00602000  	?lstr16_Click_FM_STM+0
0x2EB8	0x033E2000  	_station2_+0
0x2EBC	0x00742000  	?lstr17_Click_FM_STM+0
0x2EC0	0x03402000  	_station3_+0
0x2EC4	0x00882000  	?lstr18_Click_FM_STM+0
0x2EC8	0x03422000  	_station4_+0
0x2ECC	0x009C2000  	?lstr19_Click_FM_STM+0
0x2ED0	0x03442000  	_station5_+0
0x2ED4	0x00B02000  	?lstr20_Click_FM_STM+0
; end of _fm_caseMemorize
_fm_caseMute:
;Click_FM_STM.c, 228 :: 		void fm_caseMute( )
0x2FBC	0xB081    SUB	SP, SP, #4
0x2FBE	0xF8CDE000  STR	LR, [SP, #0]
;Click_FM_STM.c, 230 :: 		if (mute_ == 0)
0x2FC2	0x480F    LDR	R0, [PC, #60]
0x2FC4	0x7800    LDRB	R0, [R0, #0]
0x2FC6	0xB948    CBNZ	R0, L_fm_caseMute22
;Click_FM_STM.c, 232 :: 		fm_muteEnable( );
0x2FC8	0xF7FEFEEE  BL	_fm_muteEnable+0
;Click_FM_STM.c, 234 :: 		mikrobus_logWrite( "mute enabled", _LOG_LINE );
0x2FCC	0x480D    LDR	R0, [PC, #52]
0x2FCE	0x2102    MOVS	R1, #2
0x2FD0	0xF000FA6E  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 236 :: 		mute_ = 1;
0x2FD4	0x2101    MOVS	R1, #1
0x2FD6	0x480A    LDR	R0, [PC, #40]
0x2FD8	0x7001    STRB	R1, [R0, #0]
;Click_FM_STM.c, 237 :: 		}
0x2FDA	0xE00C    B	L_fm_caseMute23
L_fm_caseMute22:
;Click_FM_STM.c, 238 :: 		else if (mute_ == 1)
0x2FDC	0x4808    LDR	R0, [PC, #32]
0x2FDE	0x7800    LDRB	R0, [R0, #0]
0x2FE0	0x2801    CMP	R0, #1
0x2FE2	0xD108    BNE	L_fm_caseMute24
;Click_FM_STM.c, 240 :: 		fm_muteDisable( );
0x2FE4	0xF7FEFF1E  BL	_fm_muteDisable+0
;Click_FM_STM.c, 242 :: 		mikrobus_logWrite( "mute disabled", _LOG_LINE );
0x2FE8	0x4807    LDR	R0, [PC, #28]
0x2FEA	0x2102    MOVS	R1, #2
0x2FEC	0xF000FA60  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 244 :: 		mute_ = 0;
0x2FF0	0x2100    MOVS	R1, #0
0x2FF2	0x4803    LDR	R0, [PC, #12]
0x2FF4	0x7001    STRB	R1, [R0, #0]
;Click_FM_STM.c, 245 :: 		}
L_fm_caseMute24:
L_fm_caseMute23:
;Click_FM_STM.c, 246 :: 		}
L_end_fm_caseMute:
0x2FF6	0xF8DDE000  LDR	LR, [SP, #0]
0x2FFA	0xB001    ADD	SP, SP, #4
0x2FFC	0x4770    BX	LR
0x2FFE	0xBF00    NOP
0x3000	0x00432000  	_mute_+0
0x3004	0x00442000  	?lstr21_Click_FM_STM+0
0x3008	0x00512000  	?lstr22_Click_FM_STM+0
; end of _fm_caseMute
_fm_muteEnable:
;__fm_driver.c, 819 :: 		void fm_muteEnable( void )
0x1DA8	0xB089    SUB	SP, SP, #36
0x1DAA	0xF8CDE000  STR	LR, [SP, #0]
;__fm_driver.c, 823 :: 		fm_readRegisters( regBuffer );
0x1DAE	0xA801    ADD	R0, SP, #4
0x1DB0	0xF000FC1E  BL	_fm_readRegisters+0
;__fm_driver.c, 825 :: 		fm_setBits( regBuffer, _FM_POWER_CONFIGURATION, _FM_MUTE_MASK, _FM_MUTE_ENABLE );
0x1DB4	0xA801    ADD	R0, SP, #4
0x1DB6	0xF2400300  MOVW	R3, #0
0x1DBA	0xF64B72FF  MOVW	R2, #49151
0x1DBE	0xF2400100  MOVW	R1, #0
0x1DC2	0xF000FD99  BL	_fm_setBits+0
;__fm_driver.c, 827 :: 		fm_writeRegisters( regBuffer );
0x1DC6	0xA801    ADD	R0, SP, #4
0x1DC8	0xF000FDA2  BL	_fm_writeRegisters+0
;__fm_driver.c, 828 :: 		}
L_end_fm_muteEnable:
0x1DCC	0xF8DDE000  LDR	LR, [SP, #0]
0x1DD0	0xB009    ADD	SP, SP, #36
0x1DD2	0x4770    BX	LR
; end of _fm_muteEnable
_fm_muteDisable:
;__fm_driver.c, 830 :: 		void fm_muteDisable( void )
0x1E24	0xB089    SUB	SP, SP, #36
0x1E26	0xF8CDE000  STR	LR, [SP, #0]
;__fm_driver.c, 834 :: 		fm_readRegisters( regBuffer );
0x1E2A	0xA801    ADD	R0, SP, #4
0x1E2C	0xF000FBE0  BL	_fm_readRegisters+0
;__fm_driver.c, 836 :: 		fm_setBits( regBuffer, _FM_POWER_CONFIGURATION, _FM_MUTE_MASK, _FM_MUTE_DISABLE );
0x1E30	0xA801    ADD	R0, SP, #4
0x1E32	0xF2440300  MOVW	R3, #16384
0x1E36	0xF64B72FF  MOVW	R2, #49151
0x1E3A	0xF2400100  MOVW	R1, #0
0x1E3E	0xF000FD5B  BL	_fm_setBits+0
;__fm_driver.c, 838 :: 		fm_writeRegisters( regBuffer );
0x1E42	0xA801    ADD	R0, SP, #4
0x1E44	0xF000FD64  BL	_fm_writeRegisters+0
;__fm_driver.c, 839 :: 		}
L_end_fm_muteDisable:
0x1E48	0xF8DDE000  LDR	LR, [SP, #0]
0x1E4C	0xB009    ADD	SP, SP, #36
0x1E4E	0x4770    BX	LR
; end of _fm_muteDisable
_fm_caseStation1:
;Click_FM_STM.c, 248 :: 		void fm_caseStation1( )
0x3010	0xB081    SUB	SP, SP, #4
0x3012	0xF8CDE000  STR	LR, [SP, #0]
;Click_FM_STM.c, 250 :: 		fm_tuneChannel( station1_ );
0x3016	0x4827    LDR	R0, [PC, #156]
0x3018	0x8800    LDRH	R0, [R0, #0]
0x301A	0xF7FEFDC9  BL	_fm_tuneChannel+0
;Click_FM_STM.c, 252 :: 		Delay_ms(100);
0x301E	0xF644777F  MOVW	R7, #20351
0x3022	0xF2C00712  MOVT	R7, #18
0x3026	0xBF00    NOP
0x3028	0xBF00    NOP
L_fm_caseStation125:
0x302A	0x1E7F    SUBS	R7, R7, #1
0x302C	0xD1FD    BNE	L_fm_caseStation125
0x302E	0xBF00    NOP
0x3030	0xBF00    NOP
0x3032	0xBF00    NOP
;Click_FM_STM.c, 254 :: 		fm_endTune( );
0x3034	0xF7FEFDE6  BL	_fm_endTune+0
;Click_FM_STM.c, 256 :: 		Delay_ms(10);
0x3038	0xF24D47BF  MOVW	R7, #54463
0x303C	0xF2C00701  MOVT	R7, #1
L_fm_caseStation127:
0x3040	0x1E7F    SUBS	R7, R7, #1
0x3042	0xD1FD    BNE	L_fm_caseStation127
0x3044	0xBF00    NOP
0x3046	0xBF00    NOP
0x3048	0xBF00    NOP
0x304A	0xBF00    NOP
0x304C	0xBF00    NOP
;Click_FM_STM.c, 258 :: 		receivedSignalStrengthIndicator = fm_getReceivedSignalStrengthIndicator( );
0x304E	0xF7FFF8FD  BL	_fm_getReceivedSignalStrengthIndicator+0
0x3052	0x4919    LDR	R1, [PC, #100]
0x3054	0x8008    STRH	R0, [R1, #0]
;Click_FM_STM.c, 259 :: 		channelFrequency_ = fm_getChannelFrequency( );
0x3056	0xF7FFF8A5  BL	_fm_getChannelFrequency+0
0x305A	0x4918    LDR	R1, [PC, #96]
0x305C	0x6008    STR	R0, [R1, #0]
;Click_FM_STM.c, 261 :: 		mikrobus_logWrite( "station 1 tuned", _LOG_LINE );
0x305E	0x4818    LDR	R0, [PC, #96]
0x3060	0x2102    MOVS	R1, #2
0x3062	0xF000FA25  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 263 :: 		WordToStr( receivedSignalStrengthIndicator, text );
0x3066	0x4814    LDR	R0, [PC, #80]
0x3068	0x8800    LDRH	R0, [R0, #0]
0x306A	0x4916    LDR	R1, [PC, #88]
0x306C	0xF7FEFF38  BL	_WordToStr+0
;Click_FM_STM.c, 264 :: 		mikrobus_logWrite( "rssi:", _LOG_TEXT );
0x3070	0x4815    LDR	R0, [PC, #84]
0x3072	0x2101    MOVS	R1, #1
0x3074	0xF000FA1C  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 265 :: 		mikrobus_logWrite( text, _LOG_TEXT );
0x3078	0x2101    MOVS	R1, #1
0x307A	0x4812    LDR	R0, [PC, #72]
0x307C	0xF000FA18  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 266 :: 		mikrobus_logWrite( " dBuV", _LOG_LINE );
0x3080	0x4812    LDR	R0, [PC, #72]
0x3082	0x2102    MOVS	R1, #2
0x3084	0xF000FA14  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 268 :: 		FloatToStr( channelFrequency_, text );
0x3088	0x480C    LDR	R0, [PC, #48]
0x308A	0x6800    LDR	R0, [R0, #0]
0x308C	0x490D    LDR	R1, [PC, #52]
0x308E	0xF7FEFF4F  BL	_FloatToStr+0
;Click_FM_STM.c, 269 :: 		mikrobus_logWrite( "tuned frequency:", _LOG_TEXT );
0x3092	0x480F    LDR	R0, [PC, #60]
0x3094	0x2101    MOVS	R1, #1
0x3096	0xF000FA0B  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 270 :: 		mikrobus_logWrite( text, _LOG_TEXT );
0x309A	0x2101    MOVS	R1, #1
0x309C	0x4809    LDR	R0, [PC, #36]
0x309E	0xF000FA07  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 271 :: 		mikrobus_logWrite( " MHz", _LOG_LINE );
0x30A2	0x480C    LDR	R0, [PC, #48]
0x30A4	0x2102    MOVS	R1, #2
0x30A6	0xF000FA03  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 272 :: 		}
L_end_fm_caseStation1:
0x30AA	0xF8DDE000  LDR	LR, [SP, #0]
0x30AE	0xB001    ADD	SP, SP, #4
0x30B0	0x4770    BX	LR
0x30B2	0xBF00    NOP
0x30B4	0x033C2000  	_station1_+0
0x30B8	0x02F62000  	_receivedSignalStrengthIndicator+0
0x30BC	0x03042000  	_channelFrequency_+0
0x30C0	0x01B82000  	?lstr23_Click_FM_STM+0
0x30C4	0x030A2000  	_text+0
0x30C8	0x01C82000  	?lstr24_Click_FM_STM+0
0x30CC	0x01CE2000  	?lstr25_Click_FM_STM+0
0x30D0	0x01D42000  	?lstr26_Click_FM_STM+0
0x30D4	0x01E52000  	?lstr27_Click_FM_STM+0
; end of _fm_caseStation1
_fm_tuneChannel:
;__fm_driver.c, 635 :: 		void fm_tuneChannel( uint16_t channel_ )
; channel_ start address is: 0 (R0)
0x1BB0	0xB08A    SUB	SP, SP, #40
0x1BB2	0xF8CDE000  STR	LR, [SP, #0]
; channel_ end address is: 0 (R0)
; channel_ start address is: 0 (R0)
;__fm_driver.c, 639 :: 		fm_readRegisters( regBuffer );
0x1BB6	0xA902    ADD	R1, SP, #8
0x1BB8	0xF8AD0004  STRH	R0, [SP, #4]
0x1BBC	0x4608    MOV	R0, R1
0x1BBE	0xF000FD17  BL	_fm_readRegisters+0
0x1BC2	0xF8BD0004  LDRH	R0, [SP, #4]
;__fm_driver.c, 641 :: 		channel_ &= 0x03FF;
0x1BC6	0xF24031FF  MOVW	R1, #1023
0x1BCA	0x4008    ANDS	R0, R1
0x1BCC	0xB280    UXTH	R0, R0
;__fm_driver.c, 643 :: 		regBuffer[_FM_CHANNEL] &= 0x0000;
0x1BCE	0xAB02    ADD	R3, SP, #8
0x1BD0	0x1C9A    ADDS	R2, R3, #2
0x1BD2	0x8811    LDRH	R1, [R2, #0]
0x1BD4	0xF0010100  AND	R1, R1, #0
0x1BD8	0x8011    STRH	R1, [R2, #0]
;__fm_driver.c, 644 :: 		regBuffer[_FM_CHANNEL] |= channel_;
0x1BDA	0x1C9A    ADDS	R2, R3, #2
0x1BDC	0x8811    LDRH	R1, [R2, #0]
0x1BDE	0x4301    ORRS	R1, R0
; channel_ end address is: 0 (R0)
0x1BE0	0x8011    STRH	R1, [R2, #0]
;__fm_driver.c, 646 :: 		fm_setBits( regBuffer, _FM_CHANNEL, _FM_TUNE_MASK, _FM_TUNE_ENABLE );
0x1BE2	0xF64772FF  MOVW	R2, #32767
0x1BE6	0xF2400101  MOVW	R1, #1
0x1BEA	0x4618    MOV	R0, R3
0x1BEC	0xF2480300  MOVW	R3, #32768
0x1BF0	0xF000FE82  BL	_fm_setBits+0
;__fm_driver.c, 648 :: 		fm_writeRegisters( regBuffer );
0x1BF4	0xA902    ADD	R1, SP, #8
0x1BF6	0x4608    MOV	R0, R1
0x1BF8	0xF000FE8A  BL	_fm_writeRegisters+0
;__fm_driver.c, 649 :: 		}
L_end_fm_tuneChannel:
0x1BFC	0xF8DDE000  LDR	LR, [SP, #0]
0x1C00	0xB00A    ADD	SP, SP, #40
0x1C02	0x4770    BX	LR
; end of _fm_tuneChannel
_fm_caseStation2:
;Click_FM_STM.c, 274 :: 		void fm_caseStation2( )
0x2C58	0xB081    SUB	SP, SP, #4
0x2C5A	0xF8CDE000  STR	LR, [SP, #0]
;Click_FM_STM.c, 276 :: 		fm_tuneChannel( station2_ );
0x2C5E	0x4827    LDR	R0, [PC, #156]
0x2C60	0x8800    LDRH	R0, [R0, #0]
0x2C62	0xF7FEFFA5  BL	_fm_tuneChannel+0
;Click_FM_STM.c, 278 :: 		Delay_ms(100);
0x2C66	0xF644777F  MOVW	R7, #20351
0x2C6A	0xF2C00712  MOVT	R7, #18
0x2C6E	0xBF00    NOP
0x2C70	0xBF00    NOP
L_fm_caseStation229:
0x2C72	0x1E7F    SUBS	R7, R7, #1
0x2C74	0xD1FD    BNE	L_fm_caseStation229
0x2C76	0xBF00    NOP
0x2C78	0xBF00    NOP
0x2C7A	0xBF00    NOP
;Click_FM_STM.c, 280 :: 		fm_endTune( );
0x2C7C	0xF7FEFFC2  BL	_fm_endTune+0
;Click_FM_STM.c, 282 :: 		Delay_ms(10);
0x2C80	0xF24D47BF  MOVW	R7, #54463
0x2C84	0xF2C00701  MOVT	R7, #1
L_fm_caseStation231:
0x2C88	0x1E7F    SUBS	R7, R7, #1
0x2C8A	0xD1FD    BNE	L_fm_caseStation231
0x2C8C	0xBF00    NOP
0x2C8E	0xBF00    NOP
0x2C90	0xBF00    NOP
0x2C92	0xBF00    NOP
0x2C94	0xBF00    NOP
;Click_FM_STM.c, 284 :: 		receivedSignalStrengthIndicator = fm_getReceivedSignalStrengthIndicator( );
0x2C96	0xF7FFFAD9  BL	_fm_getReceivedSignalStrengthIndicator+0
0x2C9A	0x4919    LDR	R1, [PC, #100]
0x2C9C	0x8008    STRH	R0, [R1, #0]
;Click_FM_STM.c, 285 :: 		channelFrequency_ = fm_getChannelFrequency( );
0x2C9E	0xF7FFFA81  BL	_fm_getChannelFrequency+0
0x2CA2	0x4918    LDR	R1, [PC, #96]
0x2CA4	0x6008    STR	R0, [R1, #0]
;Click_FM_STM.c, 287 :: 		mikrobus_logWrite( "station 2 tuned", _LOG_LINE );
0x2CA6	0x4818    LDR	R0, [PC, #96]
0x2CA8	0x2102    MOVS	R1, #2
0x2CAA	0xF000FC01  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 289 :: 		WordToStr( receivedSignalStrengthIndicator, text );
0x2CAE	0x4814    LDR	R0, [PC, #80]
0x2CB0	0x8800    LDRH	R0, [R0, #0]
0x2CB2	0x4916    LDR	R1, [PC, #88]
0x2CB4	0xF7FFF914  BL	_WordToStr+0
;Click_FM_STM.c, 290 :: 		mikrobus_logWrite( "rssi:", _LOG_TEXT );
0x2CB8	0x4815    LDR	R0, [PC, #84]
0x2CBA	0x2101    MOVS	R1, #1
0x2CBC	0xF000FBF8  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 291 :: 		mikrobus_logWrite( text, _LOG_TEXT );
0x2CC0	0x2101    MOVS	R1, #1
0x2CC2	0x4812    LDR	R0, [PC, #72]
0x2CC4	0xF000FBF4  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 292 :: 		mikrobus_logWrite( " dBuV", _LOG_LINE );
0x2CC8	0x4812    LDR	R0, [PC, #72]
0x2CCA	0x2102    MOVS	R1, #2
0x2CCC	0xF000FBF0  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 294 :: 		FloatToStr( channelFrequency_, text );
0x2CD0	0x480C    LDR	R0, [PC, #48]
0x2CD2	0x6800    LDR	R0, [R0, #0]
0x2CD4	0x490D    LDR	R1, [PC, #52]
0x2CD6	0xF7FFF92B  BL	_FloatToStr+0
;Click_FM_STM.c, 295 :: 		mikrobus_logWrite( "tuned frequency:", _LOG_TEXT );
0x2CDA	0x480F    LDR	R0, [PC, #60]
0x2CDC	0x2101    MOVS	R1, #1
0x2CDE	0xF000FBE7  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 296 :: 		mikrobus_logWrite( text, _LOG_TEXT );
0x2CE2	0x2101    MOVS	R1, #1
0x2CE4	0x4809    LDR	R0, [PC, #36]
0x2CE6	0xF000FBE3  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 297 :: 		mikrobus_logWrite( " MHz", _LOG_LINE );
0x2CEA	0x480C    LDR	R0, [PC, #48]
0x2CEC	0x2102    MOVS	R1, #2
0x2CEE	0xF000FBDF  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 298 :: 		}
L_end_fm_caseStation2:
0x2CF2	0xF8DDE000  LDR	LR, [SP, #0]
0x2CF6	0xB001    ADD	SP, SP, #4
0x2CF8	0x4770    BX	LR
0x2CFA	0xBF00    NOP
0x2CFC	0x033E2000  	_station2_+0
0x2D00	0x02F62000  	_receivedSignalStrengthIndicator+0
0x2D04	0x03042000  	_channelFrequency_+0
0x2D08	0x01542000  	?lstr28_Click_FM_STM+0
0x2D0C	0x030A2000  	_text+0
0x2D10	0x01642000  	?lstr29_Click_FM_STM+0
0x2D14	0x016A2000  	?lstr30_Click_FM_STM+0
0x2D18	0x01702000  	?lstr31_Click_FM_STM+0
0x2D1C	0x01812000  	?lstr32_Click_FM_STM+0
; end of _fm_caseStation2
_fm_caseStation3:
;Click_FM_STM.c, 300 :: 		void fm_caseStation3( )
0x2AC8	0xB081    SUB	SP, SP, #4
0x2ACA	0xF8CDE000  STR	LR, [SP, #0]
;Click_FM_STM.c, 302 :: 		fm_tuneChannel( station3_ );
0x2ACE	0x4827    LDR	R0, [PC, #156]
0x2AD0	0x8800    LDRH	R0, [R0, #0]
0x2AD2	0xF7FFF86D  BL	_fm_tuneChannel+0
;Click_FM_STM.c, 304 :: 		Delay_ms(100);
0x2AD6	0xF644777F  MOVW	R7, #20351
0x2ADA	0xF2C00712  MOVT	R7, #18
0x2ADE	0xBF00    NOP
0x2AE0	0xBF00    NOP
L_fm_caseStation333:
0x2AE2	0x1E7F    SUBS	R7, R7, #1
0x2AE4	0xD1FD    BNE	L_fm_caseStation333
0x2AE6	0xBF00    NOP
0x2AE8	0xBF00    NOP
0x2AEA	0xBF00    NOP
;Click_FM_STM.c, 306 :: 		fm_endTune( );
0x2AEC	0xF7FFF88A  BL	_fm_endTune+0
;Click_FM_STM.c, 308 :: 		Delay_ms(10);
0x2AF0	0xF24D47BF  MOVW	R7, #54463
0x2AF4	0xF2C00701  MOVT	R7, #1
L_fm_caseStation335:
0x2AF8	0x1E7F    SUBS	R7, R7, #1
0x2AFA	0xD1FD    BNE	L_fm_caseStation335
0x2AFC	0xBF00    NOP
0x2AFE	0xBF00    NOP
0x2B00	0xBF00    NOP
0x2B02	0xBF00    NOP
0x2B04	0xBF00    NOP
;Click_FM_STM.c, 310 :: 		receivedSignalStrengthIndicator = fm_getReceivedSignalStrengthIndicator( );
0x2B06	0xF7FFFBA1  BL	_fm_getReceivedSignalStrengthIndicator+0
0x2B0A	0x4919    LDR	R1, [PC, #100]
0x2B0C	0x8008    STRH	R0, [R1, #0]
;Click_FM_STM.c, 311 :: 		channelFrequency_ = fm_getChannelFrequency( );
0x2B0E	0xF7FFFB49  BL	_fm_getChannelFrequency+0
0x2B12	0x4918    LDR	R1, [PC, #96]
0x2B14	0x6008    STR	R0, [R1, #0]
;Click_FM_STM.c, 313 :: 		mikrobus_logWrite( "station 3 tuned", _LOG_LINE );
0x2B16	0x4818    LDR	R0, [PC, #96]
0x2B18	0x2102    MOVS	R1, #2
0x2B1A	0xF000FCC9  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 315 :: 		WordToStr( receivedSignalStrengthIndicator, text );
0x2B1E	0x4814    LDR	R0, [PC, #80]
0x2B20	0x8800    LDRH	R0, [R0, #0]
0x2B22	0x4916    LDR	R1, [PC, #88]
0x2B24	0xF7FFF9DC  BL	_WordToStr+0
;Click_FM_STM.c, 316 :: 		mikrobus_logWrite( "rssi:", _LOG_TEXT );
0x2B28	0x4815    LDR	R0, [PC, #84]
0x2B2A	0x2101    MOVS	R1, #1
0x2B2C	0xF000FCC0  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 317 :: 		mikrobus_logWrite( text, _LOG_TEXT );
0x2B30	0x2101    MOVS	R1, #1
0x2B32	0x4812    LDR	R0, [PC, #72]
0x2B34	0xF000FCBC  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 318 :: 		mikrobus_logWrite( " dBuV", _LOG_LINE );
0x2B38	0x4812    LDR	R0, [PC, #72]
0x2B3A	0x2102    MOVS	R1, #2
0x2B3C	0xF000FCB8  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 320 :: 		FloatToStr( channelFrequency_, text );
0x2B40	0x480C    LDR	R0, [PC, #48]
0x2B42	0x6800    LDR	R0, [R0, #0]
0x2B44	0x490D    LDR	R1, [PC, #52]
0x2B46	0xF7FFF9F3  BL	_FloatToStr+0
;Click_FM_STM.c, 321 :: 		mikrobus_logWrite( "tuned frequency:", _LOG_TEXT );
0x2B4A	0x480F    LDR	R0, [PC, #60]
0x2B4C	0x2101    MOVS	R1, #1
0x2B4E	0xF000FCAF  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 322 :: 		mikrobus_logWrite( text, _LOG_TEXT );
0x2B52	0x2101    MOVS	R1, #1
0x2B54	0x4809    LDR	R0, [PC, #36]
0x2B56	0xF000FCAB  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 323 :: 		mikrobus_logWrite( " MHz", _LOG_LINE );
0x2B5A	0x480C    LDR	R0, [PC, #48]
0x2B5C	0x2102    MOVS	R1, #2
0x2B5E	0xF000FCA7  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 324 :: 		}
L_end_fm_caseStation3:
0x2B62	0xF8DDE000  LDR	LR, [SP, #0]
0x2B66	0xB001    ADD	SP, SP, #4
0x2B68	0x4770    BX	LR
0x2B6A	0xBF00    NOP
0x2B6C	0x03402000  	_station3_+0
0x2B70	0x02F62000  	_receivedSignalStrengthIndicator+0
0x2B74	0x03042000  	_channelFrequency_+0
0x2B78	0x01222000  	?lstr33_Click_FM_STM+0
0x2B7C	0x030A2000  	_text+0
0x2B80	0x01322000  	?lstr34_Click_FM_STM+0
0x2B84	0x01382000  	?lstr35_Click_FM_STM+0
0x2B88	0x013E2000  	?lstr36_Click_FM_STM+0
0x2B8C	0x014F2000  	?lstr37_Click_FM_STM+0
; end of _fm_caseStation3
_fm_caseStation4:
;Click_FM_STM.c, 326 :: 		void fm_caseStation4( )
0x2B90	0xB081    SUB	SP, SP, #4
0x2B92	0xF8CDE000  STR	LR, [SP, #0]
;Click_FM_STM.c, 328 :: 		fm_tuneChannel( station4_ );
0x2B96	0x4827    LDR	R0, [PC, #156]
0x2B98	0x8800    LDRH	R0, [R0, #0]
0x2B9A	0xF7FFF809  BL	_fm_tuneChannel+0
;Click_FM_STM.c, 330 :: 		Delay_ms(100);
0x2B9E	0xF644777F  MOVW	R7, #20351
0x2BA2	0xF2C00712  MOVT	R7, #18
0x2BA6	0xBF00    NOP
0x2BA8	0xBF00    NOP
L_fm_caseStation437:
0x2BAA	0x1E7F    SUBS	R7, R7, #1
0x2BAC	0xD1FD    BNE	L_fm_caseStation437
0x2BAE	0xBF00    NOP
0x2BB0	0xBF00    NOP
0x2BB2	0xBF00    NOP
;Click_FM_STM.c, 332 :: 		fm_endTune( );
0x2BB4	0xF7FFF826  BL	_fm_endTune+0
;Click_FM_STM.c, 334 :: 		Delay_ms(10);
0x2BB8	0xF24D47BF  MOVW	R7, #54463
0x2BBC	0xF2C00701  MOVT	R7, #1
L_fm_caseStation439:
0x2BC0	0x1E7F    SUBS	R7, R7, #1
0x2BC2	0xD1FD    BNE	L_fm_caseStation439
0x2BC4	0xBF00    NOP
0x2BC6	0xBF00    NOP
0x2BC8	0xBF00    NOP
0x2BCA	0xBF00    NOP
0x2BCC	0xBF00    NOP
;Click_FM_STM.c, 336 :: 		receivedSignalStrengthIndicator = fm_getReceivedSignalStrengthIndicator( );
0x2BCE	0xF7FFFB3D  BL	_fm_getReceivedSignalStrengthIndicator+0
0x2BD2	0x4919    LDR	R1, [PC, #100]
0x2BD4	0x8008    STRH	R0, [R1, #0]
;Click_FM_STM.c, 337 :: 		channelFrequency_ = fm_getChannelFrequency( );
0x2BD6	0xF7FFFAE5  BL	_fm_getChannelFrequency+0
0x2BDA	0x4918    LDR	R1, [PC, #96]
0x2BDC	0x6008    STR	R0, [R1, #0]
;Click_FM_STM.c, 339 :: 		mikrobus_logWrite( "station 4 tuned", _LOG_LINE );
0x2BDE	0x4818    LDR	R0, [PC, #96]
0x2BE0	0x2102    MOVS	R1, #2
0x2BE2	0xF000FC65  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 341 :: 		WordToStr( receivedSignalStrengthIndicator, text );
0x2BE6	0x4814    LDR	R0, [PC, #80]
0x2BE8	0x8800    LDRH	R0, [R0, #0]
0x2BEA	0x4916    LDR	R1, [PC, #88]
0x2BEC	0xF7FFF978  BL	_WordToStr+0
;Click_FM_STM.c, 342 :: 		mikrobus_logWrite( "rssi:", _LOG_TEXT );
0x2BF0	0x4815    LDR	R0, [PC, #84]
0x2BF2	0x2101    MOVS	R1, #1
0x2BF4	0xF000FC5C  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 343 :: 		mikrobus_logWrite( text, _LOG_TEXT );
0x2BF8	0x2101    MOVS	R1, #1
0x2BFA	0x4812    LDR	R0, [PC, #72]
0x2BFC	0xF000FC58  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 344 :: 		mikrobus_logWrite( " dBuV", _LOG_LINE );
0x2C00	0x4812    LDR	R0, [PC, #72]
0x2C02	0x2102    MOVS	R1, #2
0x2C04	0xF000FC54  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 346 :: 		FloatToStr( channelFrequency_, text );
0x2C08	0x480C    LDR	R0, [PC, #48]
0x2C0A	0x6800    LDR	R0, [R0, #0]
0x2C0C	0x490D    LDR	R1, [PC, #52]
0x2C0E	0xF7FFF98F  BL	_FloatToStr+0
;Click_FM_STM.c, 347 :: 		mikrobus_logWrite( "tuned frequency:", _LOG_TEXT );
0x2C12	0x480F    LDR	R0, [PC, #60]
0x2C14	0x2101    MOVS	R1, #1
0x2C16	0xF000FC4B  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 348 :: 		mikrobus_logWrite( text, _LOG_TEXT );
0x2C1A	0x2101    MOVS	R1, #1
0x2C1C	0x4809    LDR	R0, [PC, #36]
0x2C1E	0xF000FC47  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 349 :: 		mikrobus_logWrite( " MHz", _LOG_LINE );
0x2C22	0x480C    LDR	R0, [PC, #48]
0x2C24	0x2102    MOVS	R1, #2
0x2C26	0xF000FC43  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 350 :: 		}
L_end_fm_caseStation4:
0x2C2A	0xF8DDE000  LDR	LR, [SP, #0]
0x2C2E	0xB001    ADD	SP, SP, #4
0x2C30	0x4770    BX	LR
0x2C32	0xBF00    NOP
0x2C34	0x03422000  	_station4_+0
0x2C38	0x02F62000  	_receivedSignalStrengthIndicator+0
0x2C3C	0x03042000  	_channelFrequency_+0
0x2C40	0x01862000  	?lstr38_Click_FM_STM+0
0x2C44	0x030A2000  	_text+0
0x2C48	0x01962000  	?lstr39_Click_FM_STM+0
0x2C4C	0x019C2000  	?lstr40_Click_FM_STM+0
0x2C50	0x01A22000  	?lstr41_Click_FM_STM+0
0x2C54	0x01B32000  	?lstr42_Click_FM_STM+0
; end of _fm_caseStation4
_fm_caseStation5:
;Click_FM_STM.c, 352 :: 		void fm_caseStation5( )
0x2D20	0xB081    SUB	SP, SP, #4
0x2D22	0xF8CDE000  STR	LR, [SP, #0]
;Click_FM_STM.c, 354 :: 		fm_tuneChannel( station5_ );
0x2D26	0x4827    LDR	R0, [PC, #156]
0x2D28	0x8800    LDRH	R0, [R0, #0]
0x2D2A	0xF7FEFF41  BL	_fm_tuneChannel+0
;Click_FM_STM.c, 356 :: 		Delay_ms(100);
0x2D2E	0xF644777F  MOVW	R7, #20351
0x2D32	0xF2C00712  MOVT	R7, #18
0x2D36	0xBF00    NOP
0x2D38	0xBF00    NOP
L_fm_caseStation541:
0x2D3A	0x1E7F    SUBS	R7, R7, #1
0x2D3C	0xD1FD    BNE	L_fm_caseStation541
0x2D3E	0xBF00    NOP
0x2D40	0xBF00    NOP
0x2D42	0xBF00    NOP
;Click_FM_STM.c, 358 :: 		fm_endTune( );
0x2D44	0xF7FEFF5E  BL	_fm_endTune+0
;Click_FM_STM.c, 360 :: 		Delay_ms(10);
0x2D48	0xF24D47BF  MOVW	R7, #54463
0x2D4C	0xF2C00701  MOVT	R7, #1
L_fm_caseStation543:
0x2D50	0x1E7F    SUBS	R7, R7, #1
0x2D52	0xD1FD    BNE	L_fm_caseStation543
0x2D54	0xBF00    NOP
0x2D56	0xBF00    NOP
0x2D58	0xBF00    NOP
0x2D5A	0xBF00    NOP
0x2D5C	0xBF00    NOP
;Click_FM_STM.c, 362 :: 		receivedSignalStrengthIndicator = fm_getReceivedSignalStrengthIndicator( );
0x2D5E	0xF7FFFA75  BL	_fm_getReceivedSignalStrengthIndicator+0
0x2D62	0x4919    LDR	R1, [PC, #100]
0x2D64	0x8008    STRH	R0, [R1, #0]
;Click_FM_STM.c, 363 :: 		channelFrequency_ = fm_getChannelFrequency( );
0x2D66	0xF7FFFA1D  BL	_fm_getChannelFrequency+0
0x2D6A	0x4918    LDR	R1, [PC, #96]
0x2D6C	0x6008    STR	R0, [R1, #0]
;Click_FM_STM.c, 365 :: 		mikrobus_logWrite( "station 5 tuned", _LOG_LINE );
0x2D6E	0x4818    LDR	R0, [PC, #96]
0x2D70	0x2102    MOVS	R1, #2
0x2D72	0xF000FB9D  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 367 :: 		WordToStr( receivedSignalStrengthIndicator, text );
0x2D76	0x4814    LDR	R0, [PC, #80]
0x2D78	0x8800    LDRH	R0, [R0, #0]
0x2D7A	0x4916    LDR	R1, [PC, #88]
0x2D7C	0xF7FFF8B0  BL	_WordToStr+0
;Click_FM_STM.c, 368 :: 		mikrobus_logWrite( "rssi:", _LOG_TEXT );
0x2D80	0x4815    LDR	R0, [PC, #84]
0x2D82	0x2101    MOVS	R1, #1
0x2D84	0xF000FB94  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 369 :: 		mikrobus_logWrite( text, _LOG_TEXT );
0x2D88	0x2101    MOVS	R1, #1
0x2D8A	0x4812    LDR	R0, [PC, #72]
0x2D8C	0xF000FB90  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 370 :: 		mikrobus_logWrite( " dBuV", _LOG_LINE );
0x2D90	0x4812    LDR	R0, [PC, #72]
0x2D92	0x2102    MOVS	R1, #2
0x2D94	0xF000FB8C  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 372 :: 		FloatToStr( channelFrequency_, text );
0x2D98	0x480C    LDR	R0, [PC, #48]
0x2D9A	0x6800    LDR	R0, [R0, #0]
0x2D9C	0x490D    LDR	R1, [PC, #52]
0x2D9E	0xF7FFF8C7  BL	_FloatToStr+0
;Click_FM_STM.c, 373 :: 		mikrobus_logWrite( "tuned frequency:", _LOG_TEXT );
0x2DA2	0x480F    LDR	R0, [PC, #60]
0x2DA4	0x2101    MOVS	R1, #1
0x2DA6	0xF000FB83  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 374 :: 		mikrobus_logWrite( text, _LOG_TEXT );
0x2DAA	0x2101    MOVS	R1, #1
0x2DAC	0x4809    LDR	R0, [PC, #36]
0x2DAE	0xF000FB7F  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 375 :: 		mikrobus_logWrite( " MHz", _LOG_LINE );
0x2DB2	0x480C    LDR	R0, [PC, #48]
0x2DB4	0x2102    MOVS	R1, #2
0x2DB6	0xF000FB7B  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 376 :: 		}
L_end_fm_caseStation5:
0x2DBA	0xF8DDE000  LDR	LR, [SP, #0]
0x2DBE	0xB001    ADD	SP, SP, #4
0x2DC0	0x4770    BX	LR
0x2DC2	0xBF00    NOP
0x2DC4	0x03442000  	_station5_+0
0x2DC8	0x02F62000  	_receivedSignalStrengthIndicator+0
0x2DCC	0x03042000  	_channelFrequency_+0
0x2DD0	0x01EA2000  	?lstr43_Click_FM_STM+0
0x2DD4	0x030A2000  	_text+0
0x2DD8	0x01FA2000  	?lstr44_Click_FM_STM+0
0x2DDC	0x02002000  	?lstr45_Click_FM_STM+0
0x2DE0	0x02062000  	?lstr46_Click_FM_STM+0
0x2DE4	0x02172000  	?lstr47_Click_FM_STM+0
; end of _fm_caseStation5
_fm_caseTuneUp:
;Click_FM_STM.c, 378 :: 		void fm_caseTuneUp( )
0x30D8	0xB081    SUB	SP, SP, #4
0x30DA	0xF8CDE000  STR	LR, [SP, #0]
;Click_FM_STM.c, 380 :: 		errorFlag_ = fm_fineTuneUp( );
0x30DE	0xF7FFFC45  BL	_fm_fineTuneUp+0
0x30E2	0x492B    LDR	R1, [PC, #172]
0x30E4	0x7008    STRB	R0, [R1, #0]
;Click_FM_STM.c, 382 :: 		if (errorFlag_ == 0)
0x30E6	0x2800    CMP	R0, #0
0x30E8	0xD14A    BNE	L_fm_caseTuneUp45
;Click_FM_STM.c, 384 :: 		Delay_ms(100);
0x30EA	0xF644777F  MOVW	R7, #20351
0x30EE	0xF2C00712  MOVT	R7, #18
L_fm_caseTuneUp46:
0x30F2	0x1E7F    SUBS	R7, R7, #1
0x30F4	0xD1FD    BNE	L_fm_caseTuneUp46
0x30F6	0xBF00    NOP
0x30F8	0xBF00    NOP
0x30FA	0xBF00    NOP
0x30FC	0xBF00    NOP
0x30FE	0xBF00    NOP
;Click_FM_STM.c, 386 :: 		fm_endTune( );
0x3100	0xF7FEFD80  BL	_fm_endTune+0
;Click_FM_STM.c, 388 :: 		Delay_ms(10);
0x3104	0xF24D47BF  MOVW	R7, #54463
0x3108	0xF2C00701  MOVT	R7, #1
0x310C	0xBF00    NOP
0x310E	0xBF00    NOP
L_fm_caseTuneUp48:
0x3110	0x1E7F    SUBS	R7, R7, #1
0x3112	0xD1FD    BNE	L_fm_caseTuneUp48
0x3114	0xBF00    NOP
0x3116	0xBF00    NOP
0x3118	0xBF00    NOP
;Click_FM_STM.c, 390 :: 		receivedSignalStrengthIndicator = fm_getReceivedSignalStrengthIndicator( );
0x311A	0xF7FFF897  BL	_fm_getReceivedSignalStrengthIndicator+0
0x311E	0x491D    LDR	R1, [PC, #116]
0x3120	0x8008    STRH	R0, [R1, #0]
;Click_FM_STM.c, 391 :: 		channelFrequency_ = fm_getChannelFrequency( );
0x3122	0xF7FFF83F  BL	_fm_getChannelFrequency+0
0x3126	0x491C    LDR	R1, [PC, #112]
0x3128	0x6008    STR	R0, [R1, #0]
;Click_FM_STM.c, 392 :: 		stationFrequency_ = fm_getChannel( );
0x312A	0xF7FEFEC7  BL	_fm_getChannel+0
0x312E	0x491B    LDR	R1, [PC, #108]
0x3130	0x8008    STRH	R0, [R1, #0]
;Click_FM_STM.c, 394 :: 		mikrobus_logWrite( "tune up", _LOG_LINE );
0x3132	0x481B    LDR	R0, [PC, #108]
0x3134	0x2102    MOVS	R1, #2
0x3136	0xF000F9BB  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 396 :: 		WordToStr( receivedSignalStrengthIndicator, text );
0x313A	0x4816    LDR	R0, [PC, #88]
0x313C	0x8800    LDRH	R0, [R0, #0]
0x313E	0x4919    LDR	R1, [PC, #100]
0x3140	0xF7FEFECE  BL	_WordToStr+0
;Click_FM_STM.c, 397 :: 		mikrobus_logWrite( "rssi:", _LOG_TEXT );
0x3144	0x4818    LDR	R0, [PC, #96]
0x3146	0x2101    MOVS	R1, #1
0x3148	0xF000F9B2  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 398 :: 		mikrobus_logWrite( text, _LOG_TEXT );
0x314C	0x2101    MOVS	R1, #1
0x314E	0x4815    LDR	R0, [PC, #84]
0x3150	0xF000F9AE  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 399 :: 		mikrobus_logWrite( " dBuV", _LOG_LINE );
0x3154	0x4815    LDR	R0, [PC, #84]
0x3156	0x2102    MOVS	R1, #2
0x3158	0xF000F9AA  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 401 :: 		FloatToStr( channelFrequency_, text );
0x315C	0x480E    LDR	R0, [PC, #56]
0x315E	0x6800    LDR	R0, [R0, #0]
0x3160	0x4910    LDR	R1, [PC, #64]
0x3162	0xF7FEFEE5  BL	_FloatToStr+0
;Click_FM_STM.c, 402 :: 		mikrobus_logWrite( "tuned frequency:", _LOG_TEXT );
0x3166	0x4812    LDR	R0, [PC, #72]
0x3168	0x2101    MOVS	R1, #1
0x316A	0xF000F9A1  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 403 :: 		mikrobus_logWrite( text, _LOG_TEXT );
0x316E	0x2101    MOVS	R1, #1
0x3170	0x480C    LDR	R0, [PC, #48]
0x3172	0xF000F99D  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 404 :: 		mikrobus_logWrite( " MHz", _LOG_LINE );
0x3176	0x480F    LDR	R0, [PC, #60]
0x3178	0x2102    MOVS	R1, #2
0x317A	0xF000F999  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 405 :: 		}
0x317E	0xE003    B	L_fm_caseTuneUp50
L_fm_caseTuneUp45:
;Click_FM_STM.c, 408 :: 		mikrobus_logWrite( "upper band limit reached", _LOG_LINE );
0x3180	0x480D    LDR	R0, [PC, #52]
0x3182	0x2102    MOVS	R1, #2
0x3184	0xF000F994  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 409 :: 		}
L_fm_caseTuneUp50:
;Click_FM_STM.c, 410 :: 		}
L_end_fm_caseTuneUp:
0x3188	0xF8DDE000  LDR	LR, [SP, #0]
0x318C	0xB001    ADD	SP, SP, #4
0x318E	0x4770    BX	LR
0x3190	0x029B2000  	_errorFlag_+0
0x3194	0x02F62000  	_receivedSignalStrengthIndicator+0
0x3198	0x03042000  	_channelFrequency_+0
0x319C	0x03082000  	_stationFrequency_+0
0x31A0	0x00002000  	?lstr48_Click_FM_STM+0
0x31A4	0x030A2000  	_text+0
0x31A8	0x00082000  	?lstr49_Click_FM_STM+0
0x31AC	0x000E2000  	?lstr50_Click_FM_STM+0
0x31B0	0x00142000  	?lstr51_Click_FM_STM+0
0x31B4	0x00252000  	?lstr52_Click_FM_STM+0
0x31B8	0x002A2000  	?lstr53_Click_FM_STM+0
; end of _fm_caseTuneUp
_fm_fineTuneUp:
;__fm_driver.c, 841 :: 		uint8_t fm_fineTuneUp( void )
0x296C	0xB08D    SUB	SP, SP, #52
0x296E	0xF8CDE000  STR	LR, [SP, #0]
;__fm_driver.c, 855 :: 		fm_readRegisters( regBuffer );
0x2972	0xA801    ADD	R0, SP, #4
0x2974	0xF7FFFE3C  BL	_fm_readRegisters+0
;__fm_driver.c, 857 :: 		b = regBuffer[ _FM_SYSTEM_CONFIGURATION_2 ];
0x2978	0xA901    ADD	R1, SP, #4
0x297A	0x1D88    ADDS	R0, R1, #6
0x297C	0x8800    LDRH	R0, [R0, #0]
;__fm_driver.c, 858 :: 		b &= 0x00C0;
0x297E	0xF00000C0  AND	R0, R0, #192
0x2982	0xB280    UXTH	R0, R0
;__fm_driver.c, 859 :: 		b >>= 6;
0x2984	0x0980    LSRS	R0, R0, #6
0x2986	0xB280    UXTH	R0, R0
;__fm_driver.c, 860 :: 		b &= 0x0003;
0x2988	0xF0000203  AND	R2, R0, #3
0x298C	0xB292    UXTH	R2, R2
; b start address is: 12 (R3)
0x298E	0xB293    UXTH	R3, R2
;__fm_driver.c, 862 :: 		s = regBuffer[ _FM_SYSTEM_CONFIGURATION_2 ];
0x2990	0x1D88    ADDS	R0, R1, #6
0x2992	0x8800    LDRH	R0, [R0, #0]
;__fm_driver.c, 863 :: 		s &= 0x0030;
0x2994	0xF0000030  AND	R0, R0, #48
0x2998	0xB280    UXTH	R0, R0
;__fm_driver.c, 864 :: 		s >>= 4;
0x299A	0x0900    LSRS	R0, R0, #4
0x299C	0xB280    UXTH	R0, R0
;__fm_driver.c, 865 :: 		s &= 0x0003;
0x299E	0xF0000003  AND	R0, R0, #3
; s start address is: 16 (R4)
0x29A2	0xB284    UXTH	R4, R0
;__fm_driver.c, 867 :: 		currentChannel  = regBuffer[_FM_READ_CHANNEL];
0x29A4	0xF2010012  ADDW	R0, R1, #18
0x29A8	0x8801    LDRH	R1, [R0, #0]
;__fm_driver.c, 868 :: 		currentChannel &= 0x03FF;
0x29AA	0xF24030FF  MOVW	R0, #1023
0x29AE	0xEA010000  AND	R0, R1, R0, LSL #0
; currentChannel start address is: 4 (R1)
0x29B2	0xB281    UXTH	R1, R0
;__fm_driver.c, 870 :: 		if (b == 0)
0x29B4	0xB922    CBNZ	R2, L_fm_fineTuneUp48
; b end address is: 12 (R3)
;__fm_driver.c, 872 :: 		bandLimitDown = 87.5;
0x29B6	0x482D    LDR	R0, [PC, #180]
0x29B8	0x900A    STR	R0, [SP, #40]
;__fm_driver.c, 873 :: 		bandLimitUp = 108;
0x29BA	0x482D    LDR	R0, [PC, #180]
0x29BC	0x900B    STR	R0, [SP, #44]
;__fm_driver.c, 874 :: 		}
0x29BE	0xE00C    B	L_fm_fineTuneUp49
L_fm_fineTuneUp48:
;__fm_driver.c, 875 :: 		else if (b == 1)
; b start address is: 12 (R3)
0x29C0	0x2B01    CMP	R3, #1
0x29C2	0xD104    BNE	L_fm_fineTuneUp50
; b end address is: 12 (R3)
;__fm_driver.c, 877 :: 		bandLimitDown = 76.0;
0x29C4	0x482B    LDR	R0, [PC, #172]
0x29C6	0x900A    STR	R0, [SP, #40]
;__fm_driver.c, 878 :: 		bandLimitUp = 108;
0x29C8	0x4829    LDR	R0, [PC, #164]
0x29CA	0x900B    STR	R0, [SP, #44]
;__fm_driver.c, 879 :: 		}
0x29CC	0xE005    B	L_fm_fineTuneUp51
L_fm_fineTuneUp50:
;__fm_driver.c, 880 :: 		else if (b == 2)
; b start address is: 12 (R3)
0x29CE	0x2B02    CMP	R3, #2
0x29D0	0xD103    BNE	L_fm_fineTuneUp52
; b end address is: 12 (R3)
;__fm_driver.c, 882 :: 		bandLimitDown = 76.0;
0x29D2	0x4828    LDR	R0, [PC, #160]
0x29D4	0x900A    STR	R0, [SP, #40]
;__fm_driver.c, 883 :: 		bandLimitUp = 90;
0x29D6	0x4828    LDR	R0, [PC, #160]
0x29D8	0x900B    STR	R0, [SP, #44]
;__fm_driver.c, 884 :: 		}
L_fm_fineTuneUp52:
L_fm_fineTuneUp51:
L_fm_fineTuneUp49:
;__fm_driver.c, 886 :: 		if (s == 0)
0x29DA	0xB92C    CBNZ	R4, L_fm_fineTuneUp53
; s end address is: 16 (R4)
;__fm_driver.c, 888 :: 		space_ = 0.2;
0x29DC	0x4827    LDR	R0, [PC, #156]
0x29DE	0x900C    STR	R0, [SP, #48]
;__fm_driver.c, 889 :: 		increment = 1;
0x29E0	0x2001    MOVS	R0, #1
0x29E2	0xF8AD0024  STRH	R0, [SP, #36]
;__fm_driver.c, 890 :: 		}
0x29E6	0xE00E    B	L_fm_fineTuneUp54
L_fm_fineTuneUp53:
;__fm_driver.c, 891 :: 		else if (s == 1)
; s start address is: 16 (R4)
0x29E8	0x2C01    CMP	R4, #1
0x29EA	0xD105    BNE	L_fm_fineTuneUp55
; s end address is: 16 (R4)
;__fm_driver.c, 893 :: 		space_ = 0.1;
0x29EC	0x4824    LDR	R0, [PC, #144]
0x29EE	0x900C    STR	R0, [SP, #48]
;__fm_driver.c, 894 :: 		increment = 1;
0x29F0	0x2001    MOVS	R0, #1
0x29F2	0xF8AD0024  STRH	R0, [SP, #36]
;__fm_driver.c, 895 :: 		}
0x29F6	0xE006    B	L_fm_fineTuneUp56
L_fm_fineTuneUp55:
;__fm_driver.c, 896 :: 		else if (s == 2)
; s start address is: 16 (R4)
0x29F8	0x2C02    CMP	R4, #2
0x29FA	0xD104    BNE	L_fm_fineTuneUp57
; s end address is: 16 (R4)
;__fm_driver.c, 898 :: 		space_ = 0.05;
0x29FC	0x4821    LDR	R0, [PC, #132]
0x29FE	0x900C    STR	R0, [SP, #48]
;__fm_driver.c, 899 :: 		increment = 2;
0x2A00	0x2002    MOVS	R0, #2
0x2A02	0xF8AD0024  STRH	R0, [SP, #36]
;__fm_driver.c, 900 :: 		}
L_fm_fineTuneUp57:
L_fm_fineTuneUp56:
L_fm_fineTuneUp54:
;__fm_driver.c, 902 :: 		channel_ = currentChannel + increment;
0x2A06	0xF8BD0024  LDRH	R0, [SP, #36]
0x2A0A	0x1808    ADDS	R0, R1, R0
; currentChannel end address is: 4 (R1)
; channel_ start address is: 36 (R9)
0x2A0C	0xFA1FF980  UXTH	R9, R0
;__fm_driver.c, 904 :: 		aux_  = bandLimitUp - bandLimitDown;
0x2A10	0x9A0A    LDR	R2, [SP, #40]
0x2A12	0x980B    LDR	R0, [SP, #44]
0x2A14	0xF7FEFF16  BL	__Sub_FP+0
;__fm_driver.c, 905 :: 		aux_ /= space_;
0x2A18	0x9A0C    LDR	R2, [SP, #48]
0x2A1A	0xF7FEFEC1  BL	__Div_FP+0
;__fm_driver.c, 907 :: 		channelLimitUp = (uint16_t)(aux_);
0x2A1E	0xF7FEFE9B  BL	__FloatToUnsignedIntegral+0
0x2A22	0xB280    UXTH	R0, R0
;__fm_driver.c, 909 :: 		if (channel_ < channelLimitUp && channel_ > 0)
0x2A24	0x4581    CMP	R9, R0
0x2A26	0xD21B    BCS	L__fm_fineTuneUp81
0x2A28	0xF1B90F00  CMP	R9, #0
0x2A2C	0xD918    BLS	L__fm_fineTuneUp80
L__fm_fineTuneUp79:
;__fm_driver.c, 911 :: 		regBuffer[_FM_CHANNEL] &= 0x0000;
0x2A2E	0xAA01    ADD	R2, SP, #4
0x2A30	0x1C91    ADDS	R1, R2, #2
0x2A32	0x8808    LDRH	R0, [R1, #0]
0x2A34	0xF0000000  AND	R0, R0, #0
0x2A38	0x8008    STRH	R0, [R1, #0]
;__fm_driver.c, 912 :: 		regBuffer[_FM_CHANNEL] |= channel_;
0x2A3A	0x1C91    ADDS	R1, R2, #2
0x2A3C	0x8808    LDRH	R0, [R1, #0]
0x2A3E	0xEA400009  ORR	R0, R0, R9, LSL #0
; channel_ end address is: 36 (R9)
0x2A42	0x8008    STRH	R0, [R1, #0]
;__fm_driver.c, 914 :: 		fm_setBits( regBuffer, _FM_CHANNEL, _FM_TUNE_MASK, _FM_TUNE_ENABLE );
0x2A44	0xF2480300  MOVW	R3, #32768
0x2A48	0xF2400101  MOVW	R1, #1
0x2A4C	0x4610    MOV	R0, R2
0x2A4E	0xF64772FF  MOVW	R2, #32767
0x2A52	0xF7FFFF51  BL	_fm_setBits+0
;__fm_driver.c, 916 :: 		fm_writeRegisters( regBuffer );
0x2A56	0xA801    ADD	R0, SP, #4
0x2A58	0xF7FFFF5A  BL	_fm_writeRegisters+0
;__fm_driver.c, 918 :: 		return 0;
0x2A5C	0x2000    MOVS	R0, #0
0x2A5E	0xE000    B	L_end_fm_fineTuneUp
;__fm_driver.c, 909 :: 		if (channel_ < channelLimitUp && channel_ > 0)
L__fm_fineTuneUp81:
L__fm_fineTuneUp80:
;__fm_driver.c, 922 :: 		return 1;
0x2A60	0x2001    MOVS	R0, #1
;__fm_driver.c, 924 :: 		}
L_end_fm_fineTuneUp:
0x2A62	0xF8DDE000  LDR	LR, [SP, #0]
0x2A66	0xB00D    ADD	SP, SP, #52
0x2A68	0x4770    BX	LR
0x2A6A	0xBF00    NOP
0x2A6C	0x000042AF  	#1118765056
0x2A70	0x000042D8  	#1121452032
0x2A74	0x00004298  	#1117257728
0x2A78	0x000042B4  	#1119092736
0x2A7C	0xCCCD3E4C  	#1045220557
0x2A80	0xCCCD3DCC  	#1036831949
0x2A84	0xCCCD3D4C  	#1028443341
; end of _fm_fineTuneUp
_fm_caseTuneDown:
;Click_FM_STM.c, 412 :: 		void fm_caseTuneDown( )
0x2ED8	0xB081    SUB	SP, SP, #4
0x2EDA	0xF8CDE000  STR	LR, [SP, #0]
;Click_FM_STM.c, 414 :: 		errorFlag_ = fm_fineTuneDown( );
0x2EDE	0xF7FFF9C5  BL	_fm_fineTuneDown+0
0x2EE2	0x492B    LDR	R1, [PC, #172]
0x2EE4	0x7008    STRB	R0, [R1, #0]
;Click_FM_STM.c, 416 :: 		if (errorFlag_ == 0)
0x2EE6	0x2800    CMP	R0, #0
0x2EE8	0xD14A    BNE	L_fm_caseTuneDown51
;Click_FM_STM.c, 418 :: 		Delay_ms(100);
0x2EEA	0xF644777F  MOVW	R7, #20351
0x2EEE	0xF2C00712  MOVT	R7, #18
L_fm_caseTuneDown52:
0x2EF2	0x1E7F    SUBS	R7, R7, #1
0x2EF4	0xD1FD    BNE	L_fm_caseTuneDown52
0x2EF6	0xBF00    NOP
0x2EF8	0xBF00    NOP
0x2EFA	0xBF00    NOP
0x2EFC	0xBF00    NOP
0x2EFE	0xBF00    NOP
;Click_FM_STM.c, 420 :: 		fm_endTune( );
0x2F00	0xF7FEFE80  BL	_fm_endTune+0
;Click_FM_STM.c, 422 :: 		Delay_ms(10);
0x2F04	0xF24D47BF  MOVW	R7, #54463
0x2F08	0xF2C00701  MOVT	R7, #1
0x2F0C	0xBF00    NOP
0x2F0E	0xBF00    NOP
L_fm_caseTuneDown54:
0x2F10	0x1E7F    SUBS	R7, R7, #1
0x2F12	0xD1FD    BNE	L_fm_caseTuneDown54
0x2F14	0xBF00    NOP
0x2F16	0xBF00    NOP
0x2F18	0xBF00    NOP
;Click_FM_STM.c, 424 :: 		receivedSignalStrengthIndicator = fm_getReceivedSignalStrengthIndicator( );
0x2F1A	0xF7FFF997  BL	_fm_getReceivedSignalStrengthIndicator+0
0x2F1E	0x491D    LDR	R1, [PC, #116]
0x2F20	0x8008    STRH	R0, [R1, #0]
;Click_FM_STM.c, 425 :: 		channelFrequency_ = fm_getChannelFrequency( );
0x2F22	0xF7FFF93F  BL	_fm_getChannelFrequency+0
0x2F26	0x491C    LDR	R1, [PC, #112]
0x2F28	0x6008    STR	R0, [R1, #0]
;Click_FM_STM.c, 426 :: 		stationFrequency_ = fm_getChannel( );
0x2F2A	0xF7FEFFC7  BL	_fm_getChannel+0
0x2F2E	0x491B    LDR	R1, [PC, #108]
0x2F30	0x8008    STRH	R0, [R1, #0]
;Click_FM_STM.c, 428 :: 		mikrobus_logWrite( "tune up", _LOG_LINE );
0x2F32	0x481B    LDR	R0, [PC, #108]
0x2F34	0x2102    MOVS	R1, #2
0x2F36	0xF000FABB  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 430 :: 		WordToStr( receivedSignalStrengthIndicator, text );
0x2F3A	0x4816    LDR	R0, [PC, #88]
0x2F3C	0x8800    LDRH	R0, [R0, #0]
0x2F3E	0x4919    LDR	R1, [PC, #100]
0x2F40	0xF7FEFFCE  BL	_WordToStr+0
;Click_FM_STM.c, 431 :: 		mikrobus_logWrite( "rssi:", _LOG_TEXT );
0x2F44	0x4818    LDR	R0, [PC, #96]
0x2F46	0x2101    MOVS	R1, #1
0x2F48	0xF000FAB2  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 432 :: 		mikrobus_logWrite( text, _LOG_TEXT );
0x2F4C	0x2101    MOVS	R1, #1
0x2F4E	0x4815    LDR	R0, [PC, #84]
0x2F50	0xF000FAAE  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 433 :: 		mikrobus_logWrite( " dBuV", _LOG_LINE );
0x2F54	0x4815    LDR	R0, [PC, #84]
0x2F56	0x2102    MOVS	R1, #2
0x2F58	0xF000FAAA  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 435 :: 		FloatToStr( channelFrequency_, text );
0x2F5C	0x480E    LDR	R0, [PC, #56]
0x2F5E	0x6800    LDR	R0, [R0, #0]
0x2F60	0x4910    LDR	R1, [PC, #64]
0x2F62	0xF7FEFFE5  BL	_FloatToStr+0
;Click_FM_STM.c, 436 :: 		mikrobus_logWrite( "tuned frequency:", _LOG_TEXT );
0x2F66	0x4812    LDR	R0, [PC, #72]
0x2F68	0x2101    MOVS	R1, #1
0x2F6A	0xF000FAA1  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 437 :: 		mikrobus_logWrite( text, _LOG_TEXT );
0x2F6E	0x2101    MOVS	R1, #1
0x2F70	0x480C    LDR	R0, [PC, #48]
0x2F72	0xF000FA9D  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 438 :: 		mikrobus_logWrite( " MHz", _LOG_LINE );
0x2F76	0x480F    LDR	R0, [PC, #60]
0x2F78	0x2102    MOVS	R1, #2
0x2F7A	0xF000FA99  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 439 :: 		}
0x2F7E	0xE003    B	L_fm_caseTuneDown56
L_fm_caseTuneDown51:
;Click_FM_STM.c, 442 :: 		mikrobus_logWrite( "lower band limit reached", _LOG_LINE );
0x2F80	0x480D    LDR	R0, [PC, #52]
0x2F82	0x2102    MOVS	R1, #2
0x2F84	0xF000FA94  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 443 :: 		}
L_fm_caseTuneDown56:
;Click_FM_STM.c, 444 :: 		}
L_end_fm_caseTuneDown:
0x2F88	0xF8DDE000  LDR	LR, [SP, #0]
0x2F8C	0xB001    ADD	SP, SP, #4
0x2F8E	0x4770    BX	LR
0x2F90	0x029B2000  	_errorFlag_+0
0x2F94	0x02F62000  	_receivedSignalStrengthIndicator+0
0x2F98	0x03042000  	_channelFrequency_+0
0x2F9C	0x03082000  	_stationFrequency_+0
0x2FA0	0x00DF2000  	?lstr54_Click_FM_STM+0
0x2FA4	0x030A2000  	_text+0
0x2FA8	0x00E72000  	?lstr55_Click_FM_STM+0
0x2FAC	0x00ED2000  	?lstr56_Click_FM_STM+0
0x2FB0	0x00F32000  	?lstr57_Click_FM_STM+0
0x2FB4	0x01042000  	?lstr58_Click_FM_STM+0
0x2FB8	0x01092000  	?lstr59_Click_FM_STM+0
; end of _fm_caseTuneDown
_fm_fineTuneDown:
;__fm_driver.c, 926 :: 		uint8_t fm_fineTuneDown( void )
0x226C	0xB08D    SUB	SP, SP, #52
0x226E	0xF8CDE000  STR	LR, [SP, #0]
;__fm_driver.c, 940 :: 		fm_readRegisters( regBuffer );
0x2272	0xA801    ADD	R0, SP, #4
0x2274	0xF000F9BC  BL	_fm_readRegisters+0
;__fm_driver.c, 942 :: 		b = regBuffer[ _FM_SYSTEM_CONFIGURATION_2 ];
0x2278	0xA901    ADD	R1, SP, #4
0x227A	0x1D88    ADDS	R0, R1, #6
0x227C	0x8800    LDRH	R0, [R0, #0]
;__fm_driver.c, 943 :: 		b &= 0x00C0;
0x227E	0xF00000C0  AND	R0, R0, #192
0x2282	0xB280    UXTH	R0, R0
;__fm_driver.c, 944 :: 		b >>= 6;
0x2284	0x0980    LSRS	R0, R0, #6
0x2286	0xB280    UXTH	R0, R0
;__fm_driver.c, 945 :: 		b &= 0x0003;
0x2288	0xF0000203  AND	R2, R0, #3
0x228C	0xB292    UXTH	R2, R2
; b start address is: 12 (R3)
0x228E	0xB293    UXTH	R3, R2
;__fm_driver.c, 947 :: 		s = regBuffer[ _FM_SYSTEM_CONFIGURATION_2 ];
0x2290	0x1D88    ADDS	R0, R1, #6
0x2292	0x8800    LDRH	R0, [R0, #0]
;__fm_driver.c, 948 :: 		s &= 0x0030;
0x2294	0xF0000030  AND	R0, R0, #48
0x2298	0xB280    UXTH	R0, R0
;__fm_driver.c, 949 :: 		s >>= 4;
0x229A	0x0900    LSRS	R0, R0, #4
0x229C	0xB280    UXTH	R0, R0
;__fm_driver.c, 950 :: 		s &= 0x0003;
0x229E	0xF0000003  AND	R0, R0, #3
; s start address is: 16 (R4)
0x22A2	0xB284    UXTH	R4, R0
;__fm_driver.c, 952 :: 		currentChannel  = regBuffer[_FM_READ_CHANNEL];
0x22A4	0xF2010012  ADDW	R0, R1, #18
0x22A8	0x8801    LDRH	R1, [R0, #0]
;__fm_driver.c, 953 :: 		currentChannel &= 0x03FF;
0x22AA	0xF24030FF  MOVW	R0, #1023
0x22AE	0xEA010000  AND	R0, R1, R0, LSL #0
; currentChannel start address is: 4 (R1)
0x22B2	0xB281    UXTH	R1, R0
;__fm_driver.c, 955 :: 		if (b == 0)
0x22B4	0xB922    CBNZ	R2, L_fm_fineTuneDown62
; b end address is: 12 (R3)
;__fm_driver.c, 957 :: 		bandLimitDown = 87.5;
0x22B6	0x482D    LDR	R0, [PC, #180]
0x22B8	0x900A    STR	R0, [SP, #40]
;__fm_driver.c, 958 :: 		bandLimitUp = 108;
0x22BA	0x482D    LDR	R0, [PC, #180]
0x22BC	0x900B    STR	R0, [SP, #44]
;__fm_driver.c, 959 :: 		}
0x22BE	0xE00C    B	L_fm_fineTuneDown63
L_fm_fineTuneDown62:
;__fm_driver.c, 960 :: 		else if (b == 1)
; b start address is: 12 (R3)
0x22C0	0x2B01    CMP	R3, #1
0x22C2	0xD104    BNE	L_fm_fineTuneDown64
; b end address is: 12 (R3)
;__fm_driver.c, 962 :: 		bandLimitDown = 76.0;
0x22C4	0x482B    LDR	R0, [PC, #172]
0x22C6	0x900A    STR	R0, [SP, #40]
;__fm_driver.c, 963 :: 		bandLimitUp = 108;
0x22C8	0x4829    LDR	R0, [PC, #164]
0x22CA	0x900B    STR	R0, [SP, #44]
;__fm_driver.c, 964 :: 		}
0x22CC	0xE005    B	L_fm_fineTuneDown65
L_fm_fineTuneDown64:
;__fm_driver.c, 965 :: 		else if (b == 2)
; b start address is: 12 (R3)
0x22CE	0x2B02    CMP	R3, #2
0x22D0	0xD103    BNE	L_fm_fineTuneDown66
; b end address is: 12 (R3)
;__fm_driver.c, 967 :: 		bandLimitDown = 76.0;
0x22D2	0x4828    LDR	R0, [PC, #160]
0x22D4	0x900A    STR	R0, [SP, #40]
;__fm_driver.c, 968 :: 		bandLimitUp = 90;
0x22D6	0x4828    LDR	R0, [PC, #160]
0x22D8	0x900B    STR	R0, [SP, #44]
;__fm_driver.c, 969 :: 		}
L_fm_fineTuneDown66:
L_fm_fineTuneDown65:
L_fm_fineTuneDown63:
;__fm_driver.c, 971 :: 		if (s == 0)
0x22DA	0xB92C    CBNZ	R4, L_fm_fineTuneDown67
; s end address is: 16 (R4)
;__fm_driver.c, 973 :: 		space_ = 0.2;
0x22DC	0x4827    LDR	R0, [PC, #156]
0x22DE	0x900C    STR	R0, [SP, #48]
;__fm_driver.c, 974 :: 		increment = 1;
0x22E0	0x2001    MOVS	R0, #1
0x22E2	0xF8AD0024  STRH	R0, [SP, #36]
;__fm_driver.c, 975 :: 		}
0x22E6	0xE00E    B	L_fm_fineTuneDown68
L_fm_fineTuneDown67:
;__fm_driver.c, 976 :: 		else if (s == 1)
; s start address is: 16 (R4)
0x22E8	0x2C01    CMP	R4, #1
0x22EA	0xD105    BNE	L_fm_fineTuneDown69
; s end address is: 16 (R4)
;__fm_driver.c, 978 :: 		space_ = 0.1;
0x22EC	0x4824    LDR	R0, [PC, #144]
0x22EE	0x900C    STR	R0, [SP, #48]
;__fm_driver.c, 979 :: 		increment = 1;
0x22F0	0x2001    MOVS	R0, #1
0x22F2	0xF8AD0024  STRH	R0, [SP, #36]
;__fm_driver.c, 980 :: 		}
0x22F6	0xE006    B	L_fm_fineTuneDown70
L_fm_fineTuneDown69:
;__fm_driver.c, 981 :: 		else if (s == 2)
; s start address is: 16 (R4)
0x22F8	0x2C02    CMP	R4, #2
0x22FA	0xD104    BNE	L_fm_fineTuneDown71
; s end address is: 16 (R4)
;__fm_driver.c, 983 :: 		space_ = 0.05;
0x22FC	0x4821    LDR	R0, [PC, #132]
0x22FE	0x900C    STR	R0, [SP, #48]
;__fm_driver.c, 984 :: 		increment = 2;
0x2300	0x2002    MOVS	R0, #2
0x2302	0xF8AD0024  STRH	R0, [SP, #36]
;__fm_driver.c, 985 :: 		}
L_fm_fineTuneDown71:
L_fm_fineTuneDown70:
L_fm_fineTuneDown68:
;__fm_driver.c, 987 :: 		channel_ = currentChannel - increment;
0x2306	0xF8BD0024  LDRH	R0, [SP, #36]
0x230A	0x1A08    SUB	R0, R1, R0
; currentChannel end address is: 4 (R1)
; channel_ start address is: 36 (R9)
0x230C	0xFA1FF980  UXTH	R9, R0
;__fm_driver.c, 989 :: 		aux_  = bandLimitUp - bandLimitDown;
0x2310	0x9A0A    LDR	R2, [SP, #40]
0x2312	0x980B    LDR	R0, [SP, #44]
0x2314	0xF7FFFA96  BL	__Sub_FP+0
;__fm_driver.c, 990 :: 		aux_ /= space_;
0x2318	0x9A0C    LDR	R2, [SP, #48]
0x231A	0xF7FFFA41  BL	__Div_FP+0
;__fm_driver.c, 992 :: 		channelLimitUp = (uint16_t)(aux_);
0x231E	0xF7FFFA1B  BL	__FloatToUnsignedIntegral+0
0x2322	0xB280    UXTH	R0, R0
;__fm_driver.c, 994 :: 		if (channel_ < channelLimitUp && channel_ > 0)
0x2324	0x4581    CMP	R9, R0
0x2326	0xD21B    BCS	L__fm_fineTuneDown84
0x2328	0xF1B90F00  CMP	R9, #0
0x232C	0xD918    BLS	L__fm_fineTuneDown83
L__fm_fineTuneDown82:
;__fm_driver.c, 996 :: 		regBuffer[_FM_CHANNEL] &= 0x0000;
0x232E	0xAA01    ADD	R2, SP, #4
0x2330	0x1C91    ADDS	R1, R2, #2
0x2332	0x8808    LDRH	R0, [R1, #0]
0x2334	0xF0000000  AND	R0, R0, #0
0x2338	0x8008    STRH	R0, [R1, #0]
;__fm_driver.c, 997 :: 		regBuffer[_FM_CHANNEL] |= channel_;
0x233A	0x1C91    ADDS	R1, R2, #2
0x233C	0x8808    LDRH	R0, [R1, #0]
0x233E	0xEA400009  ORR	R0, R0, R9, LSL #0
; channel_ end address is: 36 (R9)
0x2342	0x8008    STRH	R0, [R1, #0]
;__fm_driver.c, 999 :: 		fm_setBits( regBuffer, _FM_CHANNEL, _FM_TUNE_MASK, _FM_TUNE_ENABLE );
0x2344	0xF2480300  MOVW	R3, #32768
0x2348	0xF2400101  MOVW	R1, #1
0x234C	0x4610    MOV	R0, R2
0x234E	0xF64772FF  MOVW	R2, #32767
0x2352	0xF000FAD1  BL	_fm_setBits+0
;__fm_driver.c, 1001 :: 		fm_writeRegisters( regBuffer );
0x2356	0xA801    ADD	R0, SP, #4
0x2358	0xF000FADA  BL	_fm_writeRegisters+0
;__fm_driver.c, 1003 :: 		return 0;
0x235C	0x2000    MOVS	R0, #0
0x235E	0xE000    B	L_end_fm_fineTuneDown
;__fm_driver.c, 994 :: 		if (channel_ < channelLimitUp && channel_ > 0)
L__fm_fineTuneDown84:
L__fm_fineTuneDown83:
;__fm_driver.c, 1007 :: 		return 1;
0x2360	0x2001    MOVS	R0, #1
;__fm_driver.c, 1009 :: 		}
L_end_fm_fineTuneDown:
0x2362	0xF8DDE000  LDR	LR, [SP, #0]
0x2366	0xB00D    ADD	SP, SP, #52
0x2368	0x4770    BX	LR
0x236A	0xBF00    NOP
0x236C	0x000042AF  	#1118765056
0x2370	0x000042D8  	#1121452032
0x2374	0x00004298  	#1117257728
0x2378	0x000042B4  	#1119092736
0x237C	0xCCCD3E4C  	#1045220557
0x2380	0xCCCD3DCC  	#1036831949
0x2384	0xCCCD3D4C  	#1028443341
; end of _fm_fineTuneDown
_fm_caseWrongCommand:
;Click_FM_STM.c, 446 :: 		void fm_caseWrongCommand( )
0x2AAC	0xB081    SUB	SP, SP, #4
0x2AAE	0xF8CDE000  STR	LR, [SP, #0]
;Click_FM_STM.c, 448 :: 		mikrobus_logWrite( "wrong command", _LOG_LINE );
0x2AB2	0x4804    LDR	R0, [PC, #16]
0x2AB4	0x2102    MOVS	R1, #2
0x2AB6	0xF000FCFB  BL	_mikrobus_logWrite+0
;Click_FM_STM.c, 449 :: 		}
L_end_fm_caseWrongCommand:
0x2ABA	0xF8DDE000  LDR	LR, [SP, #0]
0x2ABE	0xB001    ADD	SP, SP, #4
0x2AC0	0x4770    BX	LR
0x2AC2	0xBF00    NOP
0x2AC4	0x028B2000  	?lstr60_Click_FM_STM+0
; end of _fm_caseWrongCommand
__Lib_System_105_107_InitialSetUpRCCRCC2:
;__Lib_System_105_107.c, 383 :: 		
0x3B84	0xB081    SUB	SP, SP, #4
0x3B86	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_105_107.c, 386 :: 		
; ulRCC_CR start address is: 8 (R2)
0x3B8A	0x4A46    LDR	R2, [PC, #280]
;__Lib_System_105_107.c, 387 :: 		
; ulRCC_CFGR start address is: 12 (R3)
0x3B8C	0x4B46    LDR	R3, [PC, #280]
;__Lib_System_105_107.c, 388 :: 		
; ulRCC_CFGR2 start address is: 16 (R4)
0x3B8E	0x4C47    LDR	R4, [PC, #284]
;__Lib_System_105_107.c, 389 :: 		
; Fosc_kHz start address is: 4 (R1)
0x3B90	0x4947    LDR	R1, [PC, #284]
;__Lib_System_105_107.c, 396 :: 		
0x3B92	0xF64B3080  MOVW	R0, #48000
0x3B96	0x4281    CMP	R1, R0
0x3B98	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC232
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_105_107.c, 397 :: 		
0x3B9A	0x4846    LDR	R0, [PC, #280]
0x3B9C	0x6800    LDR	R0, [R0, #0]
0x3B9E	0xF0400102  ORR	R1, R0, #2
0x3BA2	0x4844    LDR	R0, [PC, #272]
0x3BA4	0x6001    STR	R1, [R0, #0]
0x3BA6	0xE011    B	L___Lib_System_105_107_InitialSetUpRCCRCC233
L___Lib_System_105_107_InitialSetUpRCCRCC232:
;__Lib_System_105_107.c, 398 :: 		
; Fosc_kHz start address is: 4 (R1)
0x3BA8	0xF64550C0  MOVW	R0, #24000
0x3BAC	0x4281    CMP	R1, R0
0x3BAE	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC234
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_105_107.c, 399 :: 		
0x3BB0	0x4840    LDR	R0, [PC, #256]
0x3BB2	0x6800    LDR	R0, [R0, #0]
0x3BB4	0xF0400101  ORR	R1, R0, #1
0x3BB8	0x483E    LDR	R0, [PC, #248]
0x3BBA	0x6001    STR	R1, [R0, #0]
0x3BBC	0xE006    B	L___Lib_System_105_107_InitialSetUpRCCRCC235
L___Lib_System_105_107_InitialSetUpRCCRCC234:
;__Lib_System_105_107.c, 401 :: 		
0x3BBE	0x483D    LDR	R0, [PC, #244]
0x3BC0	0x6801    LDR	R1, [R0, #0]
0x3BC2	0xF06F0007  MVN	R0, #7
0x3BC6	0x4001    ANDS	R1, R0
0x3BC8	0x483A    LDR	R0, [PC, #232]
0x3BCA	0x6001    STR	R1, [R0, #0]
L___Lib_System_105_107_InitialSetUpRCCRCC235:
L___Lib_System_105_107_InitialSetUpRCCRCC233:
;__Lib_System_105_107.c, 403 :: 		
0x3BCC	0xF7FFFEA6  BL	__Lib_System_105_107_SystemClockSetDefault+0
;__Lib_System_105_107.c, 405 :: 		
0x3BD0	0x4839    LDR	R0, [PC, #228]
0x3BD2	0x6003    STR	R3, [R0, #0]
;__Lib_System_105_107.c, 406 :: 		
0x3BD4	0x4839    LDR	R0, [PC, #228]
0x3BD6	0x6004    STR	R4, [R0, #0]
; ulRCC_CFGR2 end address is: 16 (R4)
;__Lib_System_105_107.c, 407 :: 		
0x3BD8	0x4839    LDR	R0, [PC, #228]
0x3BDA	0xEA020100  AND	R1, R2, R0, LSL #0
0x3BDE	0x4839    LDR	R0, [PC, #228]
0x3BE0	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 409 :: 		
0x3BE2	0xF0020001  AND	R0, R2, #1
0x3BE6	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC253
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x3BE8	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 410 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC237:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x3BEA	0x4836    LDR	R0, [PC, #216]
0x3BEC	0x6800    LDR	R0, [R0, #0]
0x3BEE	0xF0000002  AND	R0, R0, #2
0x3BF2	0x2800    CMP	R0, #0
0x3BF4	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC238
;__Lib_System_105_107.c, 411 :: 		
0x3BF6	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC237
L___Lib_System_105_107_InitialSetUpRCCRCC238:
;__Lib_System_105_107.c, 412 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x3BF8	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC236
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC253:
;__Lib_System_105_107.c, 409 :: 		
0x3BFA	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 412 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC236:
;__Lib_System_105_107.c, 414 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x3BFC	0xF4023080  AND	R0, R2, #65536
0x3C00	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC254
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
0x3C02	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 415 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC240:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x3C04	0x482F    LDR	R0, [PC, #188]
0x3C06	0x6800    LDR	R0, [R0, #0]
0x3C08	0xF4003000  AND	R0, R0, #131072
0x3C0C	0x2800    CMP	R0, #0
0x3C0E	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC241
;__Lib_System_105_107.c, 416 :: 		
0x3C10	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC240
L___Lib_System_105_107_InitialSetUpRCCRCC241:
;__Lib_System_105_107.c, 417 :: 		
; ulRCC_CR end address is: 8 (R2)
0x3C12	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC239
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC254:
;__Lib_System_105_107.c, 414 :: 		
0x3C14	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 417 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC239:
;__Lib_System_105_107.c, 419 :: 		
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x3C16	0xF0025080  AND	R0, R2, #268435456
0x3C1A	0xB168    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC255
;__Lib_System_105_107.c, 420 :: 		
0x3C1C	0x4829    LDR	R0, [PC, #164]
0x3C1E	0x6800    LDR	R0, [R0, #0]
0x3C20	0xF0405180  ORR	R1, R0, #268435456
0x3C24	0x4827    LDR	R0, [PC, #156]
0x3C26	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
;__Lib_System_105_107.c, 421 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC243:
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x3C28	0x4826    LDR	R0, [PC, #152]
0x3C2A	0x6800    LDR	R0, [R0, #0]
0x3C2C	0xF0005000  AND	R0, R0, #536870912
0x3C30	0x2800    CMP	R0, #0
0x3C32	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC244
;__Lib_System_105_107.c, 422 :: 		
0x3C34	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC243
L___Lib_System_105_107_InitialSetUpRCCRCC244:
;__Lib_System_105_107.c, 423 :: 		
; ulRCC_CR end address is: 8 (R2)
0x3C36	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC242
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC255:
;__Lib_System_105_107.c, 419 :: 		
;__Lib_System_105_107.c, 423 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC242:
;__Lib_System_105_107.c, 425 :: 		
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x3C38	0xF0026080  AND	R0, R2, #67108864
0x3C3C	0xB178    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC256
;__Lib_System_105_107.c, 426 :: 		
0x3C3E	0x4821    LDR	R0, [PC, #132]
0x3C40	0x6800    LDR	R0, [R0, #0]
0x3C42	0xF0406180  ORR	R1, R0, #67108864
0x3C46	0x481F    LDR	R0, [PC, #124]
0x3C48	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x3C4A	0x4611    MOV	R1, R2
0x3C4C	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 427 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC246:
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x3C4E	0x481D    LDR	R0, [PC, #116]
0x3C50	0x6800    LDR	R0, [R0, #0]
0x3C52	0xF0006000  AND	R0, R0, #134217728
0x3C56	0x2800    CMP	R0, #0
0x3C58	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC247
;__Lib_System_105_107.c, 428 :: 		
0x3C5A	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC246
L___Lib_System_105_107_InitialSetUpRCCRCC247:
;__Lib_System_105_107.c, 429 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x3C5C	0xE001    B	L___Lib_System_105_107_InitialSetUpRCCRCC245
; ulRCC_CR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC256:
;__Lib_System_105_107.c, 425 :: 		
0x3C5E	0x4611    MOV	R1, R2
0x3C60	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 429 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC245:
;__Lib_System_105_107.c, 431 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x3C62	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x3C66	0xB170    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC257
;__Lib_System_105_107.c, 432 :: 		
0x3C68	0x4816    LDR	R0, [PC, #88]
0x3C6A	0x6800    LDR	R0, [R0, #0]
0x3C6C	0xF0407180  ORR	R1, R0, #16777216
0x3C70	0x4814    LDR	R0, [PC, #80]
0x3C72	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x3C74	0x4611    MOV	R1, R2
;__Lib_System_105_107.c, 433 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC249:
; ulRCC_CFGR start address is: 4 (R1)
0x3C76	0x4813    LDR	R0, [PC, #76]
0x3C78	0x6800    LDR	R0, [R0, #0]
0x3C7A	0xF0007000  AND	R0, R0, #33554432
0x3C7E	0xB900    CBNZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC250
;__Lib_System_105_107.c, 434 :: 		
0x3C80	0xE7F9    B	L___Lib_System_105_107_InitialSetUpRCCRCC249
L___Lib_System_105_107_InitialSetUpRCCRCC250:
;__Lib_System_105_107.c, 435 :: 		
0x3C82	0x460A    MOV	R2, R1
0x3C84	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC248
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC257:
;__Lib_System_105_107.c, 431 :: 		
;__Lib_System_105_107.c, 435 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC248:
;__Lib_System_105_107.c, 439 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC251:
; ulRCC_CFGR start address is: 8 (R2)
0x3C86	0x480C    LDR	R0, [PC, #48]
0x3C88	0x6800    LDR	R0, [R0, #0]
0x3C8A	0xF000010C  AND	R1, R0, #12
0x3C8E	0x0090    LSLS	R0, R2, #2
0x3C90	0xF000000C  AND	R0, R0, #12
0x3C94	0x4281    CMP	R1, R0
0x3C96	0xD000    BEQ	L___Lib_System_105_107_InitialSetUpRCCRCC252
;__Lib_System_105_107.c, 440 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x3C98	0xE7F5    B	L___Lib_System_105_107_InitialSetUpRCCRCC251
L___Lib_System_105_107_InitialSetUpRCCRCC252:
;__Lib_System_105_107.c, 441 :: 		
L_end_InitialSetUpRCCRCC2:
0x3C9A	0xF8DDE000  LDR	LR, [SP, #0]
0x3C9E	0xB001    ADD	SP, SP, #4
0x3CA0	0x4770    BX	LR
0x3CA2	0xBF00    NOP
0x3CA4	0x00810501  	#83951745
0x3CA8	0x8402001D  	#1934338
0x3CAC	0x06440001  	#67140
0x3CB0	0x19400001  	#72000
0x3CB4	0x20004002  	FLASH_ACR+0
0x3CB8	0x10044002  	RCC_CFGR+0
0x3CBC	0x102C4002  	RCC_CFGR2+0
0x3CC0	0xFFFF000F  	#1048575
0x3CC4	0x10004002  	RCC_CR+0
; end of __Lib_System_105_107_InitialSetUpRCCRCC2
__Lib_System_105_107_SystemClockSetDefault:
;__Lib_System_105_107.c, 356 :: 		
0x391C	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 359 :: 		
0x391E	0x4815    LDR	R0, [PC, #84]
0x3920	0x6800    LDR	R0, [R0, #0]
0x3922	0xF0400101  ORR	R1, R0, #1
0x3926	0x4813    LDR	R0, [PC, #76]
0x3928	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 362 :: 		
0x392A	0x4913    LDR	R1, [PC, #76]
0x392C	0x4813    LDR	R0, [PC, #76]
0x392E	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 365 :: 		
0x3930	0x4810    LDR	R0, [PC, #64]
0x3932	0x6801    LDR	R1, [R0, #0]
0x3934	0x4812    LDR	R0, [PC, #72]
0x3936	0x4001    ANDS	R1, R0
0x3938	0x480E    LDR	R0, [PC, #56]
0x393A	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 368 :: 		
0x393C	0x480D    LDR	R0, [PC, #52]
0x393E	0x6801    LDR	R1, [R0, #0]
0x3940	0xF46F2080  MVN	R0, #262144
0x3944	0x4001    ANDS	R1, R0
0x3946	0x480B    LDR	R0, [PC, #44]
0x3948	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 371 :: 		
0x394A	0x480C    LDR	R0, [PC, #48]
0x394C	0x6801    LDR	R1, [R0, #0]
0x394E	0xF46F00FE  MVN	R0, #8323072
0x3952	0x4001    ANDS	R1, R0
0x3954	0x4809    LDR	R0, [PC, #36]
0x3956	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 374 :: 		
0x3958	0x4806    LDR	R0, [PC, #24]
0x395A	0x6801    LDR	R1, [R0, #0]
0x395C	0xF06F50A0  MVN	R0, #335544320
0x3960	0x4001    ANDS	R1, R0
0x3962	0x4804    LDR	R0, [PC, #16]
0x3964	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 377 :: 		
0x3966	0xF04F0100  MOV	R1, #0
0x396A	0x4806    LDR	R0, [PC, #24]
0x396C	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 381 :: 		
L_end_SystemClockSetDefault:
0x396E	0xB001    ADD	SP, SP, #4
0x3970	0x4770    BX	LR
0x3972	0xBF00    NOP
0x3974	0x10004002  	RCC_CR+0
0x3978	0x0000F0FF  	#-251723776
0x397C	0x10044002  	RCC_CFGR+0
0x3980	0xFFFFFEF6  	#-17367041
0x3984	0x102C4002  	RCC_CFGR2+0
; end of __Lib_System_105_107_SystemClockSetDefault
__Lib_System_105_107_InitialSetUpFosc:
;__Lib_System_105_107.c, 443 :: 		
0x3B50	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 444 :: 		
0x3B52	0x4902    LDR	R1, [PC, #8]
0x3B54	0x4802    LDR	R0, [PC, #8]
0x3B56	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 445 :: 		
L_end_InitialSetUpFosc:
0x3B58	0xB001    ADD	SP, SP, #4
0x3B5A	0x4770    BX	LR
0x3B5C	0x19400001  	#72000
0x3B60	0x03742000  	___System_CLOCK_IN_KHZ+0
; end of __Lib_System_105_107_InitialSetUpFosc
___GenExcept:
;__Lib_System_105_107.c, 307 :: 		
0x3B48	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 308 :: 		
L___GenExcept28:
0x3B4A	0xE7FE    B	L___GenExcept28
;__Lib_System_105_107.c, 309 :: 		
L_end___GenExcept:
0x3B4C	0xB001    ADD	SP, SP, #4
0x3B4E	0x4770    BX	LR
; end of ___GenExcept
0x41F8	0xB500    PUSH	(R14)
0x41FA	0xF8DFB034  LDR	R11, [PC, #52]
0x41FE	0xF8DFA034  LDR	R10, [PC, #52]
0x4202	0xF8DFC034  LDR	R12, [PC, #52]
0x4206	0xF7FFFBBF  BL	14728
0x420A	0xF8DFB030  LDR	R11, [PC, #48]
0x420E	0xF8DFA030  LDR	R10, [PC, #48]
0x4212	0xF8DFC030  LDR	R12, [PC, #48]
0x4216	0xF7FFFBB7  BL	14728
0x421A	0xF8DFB02C  LDR	R11, [PC, #44]
0x421E	0xF8DFA02C  LDR	R10, [PC, #44]
0x4222	0xF8DFC02C  LDR	R12, [PC, #44]
0x4226	0xF7FFFBAF  BL	14728
0x422A	0xBD00    POP	(R15)
0x422C	0x4770    BX	LR
0x422E	0xBF00    NOP
0x4230	0x00002000  	#536870912
0x4234	0x029B2000  	#536871579
0x4238	0x3CC80000  	#15560
0x423C	0x029C2000  	#536871580
0x4240	0x02F52000  	#536871669
0x4244	0x41740000  	#16756
0x4248	0x02F82000  	#536871672
0x424C	0x03042000  	#536871684
0x4250	0x41E00000  	#16864
0x42B0	0xB500    PUSH	(R14)
0x42B2	0xF8DFB010  LDR	R11, [PC, #16]
0x42B6	0xF8DFA010  LDR	R10, [PC, #16]
0x42BA	0xF7FFFBED  BL	15000
0x42BE	0xBD00    POP	(R15)
0x42C0	0x4770    BX	LR
0x42C2	0xBF00    NOP
0x42C4	0x00002000  	#536870912
0x42C8	0x03982000  	#536871832
;__Lib_System_105_107.c,448 :: __Lib_System_105_107_ADCPrescTable [4]
0x14C4	0x08060402 ;__Lib_System_105_107_ADCPrescTable+0
; end of __Lib_System_105_107_ADCPrescTable
;Click_FM_STM.c,3 :: __FM_I2C_CFG [4]
0x1D3C	0x000186A0 ;__FM_I2C_CFG+0
; end of __FM_I2C_CFG
;Click_FM_STM.c,0 :: ?ICS?lstr48_Click_FM_STM [8]
0x3CC8	0x656E7574 ;?ICS?lstr48_Click_FM_STM+0
0x3CCC	0x00707520 ;?ICS?lstr48_Click_FM_STM+4
; end of ?ICS?lstr48_Click_FM_STM
;Click_FM_STM.c,0 :: ?ICS?lstr49_Click_FM_STM [6]
0x3CD0	0x69737372 ;?ICS?lstr49_Click_FM_STM+0
0x3CD4	0x003A ;?ICS?lstr49_Click_FM_STM+4
; end of ?ICS?lstr49_Click_FM_STM
;Click_FM_STM.c,0 :: ?ICS?lstr50_Click_FM_STM [6]
0x3CD6	0x75426420 ;?ICS?lstr50_Click_FM_STM+0
0x3CDA	0x0056 ;?ICS?lstr50_Click_FM_STM+4
; end of ?ICS?lstr50_Click_FM_STM
;,0 :: _initBlock_5 [22]
; Containing: ?ICS?lstr51_Click_FM_STM [17]
;             ?ICS?lstr52_Click_FM_STM [5]
0x3CDC	0x656E7574 ;_initBlock_5+0 : ?ICS?lstr51_Click_FM_STM at 0x3CDC
0x3CE0	0x72662064 ;_initBlock_5+4
0x3CE4	0x65757165 ;_initBlock_5+8
0x3CE8	0x3A79636E ;_initBlock_5+12
0x3CEC	0x484D2000 ;_initBlock_5+16 : ?ICS?lstr52_Click_FM_STM at 0x3CED
0x3CF0	0x007A ;_initBlock_5+20
; end of _initBlock_5
;,0 :: _initBlock_6 [26]
; Containing: ?ICS?lstr53_Click_FM_STM [25]
;             ?ICS_mute_ [1]
0x3CF2	0x65707075 ;_initBlock_6+0 : ?ICS?lstr53_Click_FM_STM at 0x3CF2
0x3CF6	0x61622072 ;_initBlock_6+4
0x3CFA	0x6C20646E ;_initBlock_6+8
0x3CFE	0x74696D69 ;_initBlock_6+12
0x3D02	0x61657220 ;_initBlock_6+16
0x3D06	0x64656863 ;_initBlock_6+20
0x3D0A	0x0000 ;_initBlock_6+24 : ?ICS_mute_ at 0x3D0B
; end of _initBlock_6
;,0 :: _initBlock_7 [28]
; Containing: ?ICS?lstr21_Click_FM_STM [13]
;             ?ICS?lstr22_Click_FM_STM [14]
;             ?ICS_memory_ [1]
0x3D0C	0x6574756D ;_initBlock_7+0 : ?ICS?lstr21_Click_FM_STM at 0x3D0C
0x3D10	0x616E6520 ;_initBlock_7+4
0x3D14	0x64656C62 ;_initBlock_7+8
0x3D18	0x74756D00 ;_initBlock_7+12 : ?ICS?lstr22_Click_FM_STM at 0x3D19
0x3D1C	0x69642065 ;_initBlock_7+16
0x3D20	0x6C626173 ;_initBlock_7+20
0x3D24	0x00006465 ;_initBlock_7+24 : ?ICS_memory_ at 0x3D27
; end of _initBlock_7
;Click_FM_STM.c,0 :: ?ICS?lstr16_Click_FM_STM [20]
0x3D28	0x74617473 ;?ICS?lstr16_Click_FM_STM+0
0x3D2C	0x206E6F69 ;?ICS?lstr16_Click_FM_STM+4
0x3D30	0x656D2031 ;?ICS?lstr16_Click_FM_STM+8
0x3D34	0x69726F6D ;?ICS?lstr16_Click_FM_STM+12
0x3D38	0x0064657A ;?ICS?lstr16_Click_FM_STM+16
; end of ?ICS?lstr16_Click_FM_STM
;Click_FM_STM.c,0 :: ?ICS?lstr17_Click_FM_STM [20]
0x3D3C	0x74617473 ;?ICS?lstr17_Click_FM_STM+0
0x3D40	0x206E6F69 ;?ICS?lstr17_Click_FM_STM+4
0x3D44	0x656D2032 ;?ICS?lstr17_Click_FM_STM+8
0x3D48	0x69726F6D ;?ICS?lstr17_Click_FM_STM+12
0x3D4C	0x0064657A ;?ICS?lstr17_Click_FM_STM+16
; end of ?ICS?lstr17_Click_FM_STM
;Click_FM_STM.c,0 :: ?ICS?lstr18_Click_FM_STM [20]
0x3D50	0x74617473 ;?ICS?lstr18_Click_FM_STM+0
0x3D54	0x206E6F69 ;?ICS?lstr18_Click_FM_STM+4
0x3D58	0x656D2033 ;?ICS?lstr18_Click_FM_STM+8
0x3D5C	0x69726F6D ;?ICS?lstr18_Click_FM_STM+12
0x3D60	0x0064657A ;?ICS?lstr18_Click_FM_STM+16
; end of ?ICS?lstr18_Click_FM_STM
;Click_FM_STM.c,0 :: ?ICS?lstr19_Click_FM_STM [20]
0x3D64	0x74617473 ;?ICS?lstr19_Click_FM_STM+0
0x3D68	0x206E6F69 ;?ICS?lstr19_Click_FM_STM+4
0x3D6C	0x656D2034 ;?ICS?lstr19_Click_FM_STM+8
0x3D70	0x69726F6D ;?ICS?lstr19_Click_FM_STM+12
0x3D74	0x0064657A ;?ICS?lstr19_Click_FM_STM+16
; end of ?ICS?lstr19_Click_FM_STM
;Click_FM_STM.c,0 :: ?ICS?lstr20_Click_FM_STM [20]
0x3D78	0x74617473 ;?ICS?lstr20_Click_FM_STM+0
0x3D7C	0x206E6F69 ;?ICS?lstr20_Click_FM_STM+4
0x3D80	0x656D2035 ;?ICS?lstr20_Click_FM_STM+8
0x3D84	0x69726F6D ;?ICS?lstr20_Click_FM_STM+12
0x3D88	0x0064657A ;?ICS?lstr20_Click_FM_STM+16
; end of ?ICS?lstr20_Click_FM_STM
;,0 :: _initBlock_13 [2]
; Containing: ?ICS_volumeLevel_ [1]
;             ?ICS_snrThreshold_ [1]
0x3D8C	0x040A ;_initBlock_13+0 : ?ICS_volumeLevel_ at 0x3D8C : ?ICS_snrThreshold_ at 0x3D8D
; end of _initBlock_13
;Click_FM_STM.c,0 :: ?ICS_seekThreshold_ [2]
0x3D8E	0x0019 ;?ICS_seekThreshold_+0
; end of ?ICS_seekThreshold_
;,0 :: _initBlock_15 [60]
; Containing: ?ICS_impulseDetectionThreshold_ [1]
;             ?ICS?lstr62_Click_FM_STM [22]
;             ?ICS?lstr54_Click_FM_STM [8]
;             ?ICS?lstr55_Click_FM_STM [6]
;             ?ICS?lstr56_Click_FM_STM [6]
;             ?ICS?lstr57_Click_FM_STM [17]
0x3D90	0x70706108 ;_initBlock_15+0 : ?ICS_impulseDetectionThreshold_ at 0x3D90 : ?ICS?lstr62_Click_FM_STM at 0x3D91
0x3D94	0x6163696C ;_initBlock_15+4
0x3D98	0x6E6F6974 ;_initBlock_15+8
0x3D9C	0x696E6920 ;_initBlock_15+12
0x3DA0	0x6F642074 ;_initBlock_15+16
0x3DA4	0x7400656E ;_initBlock_15+20 : ?ICS?lstr54_Click_FM_STM at 0x3DA7
0x3DA8	0x20656E75 ;_initBlock_15+24
0x3DAC	0x72007075 ;_initBlock_15+28 : ?ICS?lstr55_Click_FM_STM at 0x3DAF
0x3DB0	0x3A697373 ;_initBlock_15+32
0x3DB4	0x42642000 ;_initBlock_15+36 : ?ICS?lstr56_Click_FM_STM at 0x3DB5
0x3DB8	0x74005675 ;_initBlock_15+40 : ?ICS?lstr57_Click_FM_STM at 0x3DBB
0x3DBC	0x64656E75 ;_initBlock_15+44
0x3DC0	0x65726620 ;_initBlock_15+48
0x3DC4	0x6E657571 ;_initBlock_15+52
0x3DC8	0x003A7963 ;_initBlock_15+56
; end of _initBlock_15
;,0 :: _initBlock_16 [30]
; Containing: ?ICS?lstr58_Click_FM_STM [5]
;             ?ICS?lstr59_Click_FM_STM [25]
0x3DCC	0x7A484D20 ;_initBlock_16+0 : ?ICS?lstr58_Click_FM_STM at 0x3DCC
0x3DD0	0x776F6C00 ;_initBlock_16+4 : ?ICS?lstr59_Click_FM_STM at 0x3DD1
0x3DD4	0x62207265 ;_initBlock_16+8
0x3DD8	0x20646E61 ;_initBlock_16+12
0x3DDC	0x696D696C ;_initBlock_16+16
0x3DE0	0x65722074 ;_initBlock_16+20
0x3DE4	0x65686361 ;_initBlock_16+24
0x3DE8	0x0064 ;_initBlock_16+28
; end of _initBlock_16
;Click_FM_STM.c,0 :: ?ICS?lstr33_Click_FM_STM [16]
0x3DEA	0x74617473 ;?ICS?lstr33_Click_FM_STM+0
0x3DEE	0x206E6F69 ;?ICS?lstr33_Click_FM_STM+4
0x3DF2	0x75742033 ;?ICS?lstr33_Click_FM_STM+8
0x3DF6	0x0064656E ;?ICS?lstr33_Click_FM_STM+12
; end of ?ICS?lstr33_Click_FM_STM
;Click_FM_STM.c,0 :: ?ICS?lstr34_Click_FM_STM [6]
0x3DFA	0x69737372 ;?ICS?lstr34_Click_FM_STM+0
0x3DFE	0x003A ;?ICS?lstr34_Click_FM_STM+4
; end of ?ICS?lstr34_Click_FM_STM
;Click_FM_STM.c,0 :: ?ICS?lstr35_Click_FM_STM [6]
0x3E00	0x75426420 ;?ICS?lstr35_Click_FM_STM+0
0x3E04	0x0056 ;?ICS?lstr35_Click_FM_STM+4
; end of ?ICS?lstr35_Click_FM_STM
;,0 :: _initBlock_20 [22]
; Containing: ?ICS?lstr36_Click_FM_STM [17]
;             ?ICS?lstr37_Click_FM_STM [5]
0x3E06	0x656E7574 ;_initBlock_20+0 : ?ICS?lstr36_Click_FM_STM at 0x3E06
0x3E0A	0x72662064 ;_initBlock_20+4
0x3E0E	0x65757165 ;_initBlock_20+8
0x3E12	0x3A79636E ;_initBlock_20+12
0x3E16	0x484D2000 ;_initBlock_20+16 : ?ICS?lstr37_Click_FM_STM at 0x3E17
0x3E1A	0x007A ;_initBlock_20+20
; end of _initBlock_20
;Click_FM_STM.c,0 :: ?ICS?lstr28_Click_FM_STM [16]
0x3E1C	0x74617473 ;?ICS?lstr28_Click_FM_STM+0
0x3E20	0x206E6F69 ;?ICS?lstr28_Click_FM_STM+4
0x3E24	0x75742032 ;?ICS?lstr28_Click_FM_STM+8
0x3E28	0x0064656E ;?ICS?lstr28_Click_FM_STM+12
; end of ?ICS?lstr28_Click_FM_STM
;Click_FM_STM.c,0 :: ?ICS?lstr29_Click_FM_STM [6]
0x3E2C	0x69737372 ;?ICS?lstr29_Click_FM_STM+0
0x3E30	0x003A ;?ICS?lstr29_Click_FM_STM+4
; end of ?ICS?lstr29_Click_FM_STM
;Click_FM_STM.c,0 :: ?ICS?lstr30_Click_FM_STM [6]
0x3E32	0x75426420 ;?ICS?lstr30_Click_FM_STM+0
0x3E36	0x0056 ;?ICS?lstr30_Click_FM_STM+4
; end of ?ICS?lstr30_Click_FM_STM
;,0 :: _initBlock_24 [22]
; Containing: ?ICS?lstr31_Click_FM_STM [17]
;             ?ICS?lstr32_Click_FM_STM [5]
0x3E38	0x656E7574 ;_initBlock_24+0 : ?ICS?lstr31_Click_FM_STM at 0x3E38
0x3E3C	0x72662064 ;_initBlock_24+4
0x3E40	0x65757165 ;_initBlock_24+8
0x3E44	0x3A79636E ;_initBlock_24+12
0x3E48	0x484D2000 ;_initBlock_24+16 : ?ICS?lstr32_Click_FM_STM at 0x3E49
0x3E4C	0x007A ;_initBlock_24+20
; end of _initBlock_24
;Click_FM_STM.c,0 :: ?ICS?lstr38_Click_FM_STM [16]
0x3E4E	0x74617473 ;?ICS?lstr38_Click_FM_STM+0
0x3E52	0x206E6F69 ;?ICS?lstr38_Click_FM_STM+4
0x3E56	0x75742034 ;?ICS?lstr38_Click_FM_STM+8
0x3E5A	0x0064656E ;?ICS?lstr38_Click_FM_STM+12
; end of ?ICS?lstr38_Click_FM_STM
;Click_FM_STM.c,0 :: ?ICS?lstr39_Click_FM_STM [6]
0x3E5E	0x69737372 ;?ICS?lstr39_Click_FM_STM+0
0x3E62	0x003A ;?ICS?lstr39_Click_FM_STM+4
; end of ?ICS?lstr39_Click_FM_STM
;Click_FM_STM.c,0 :: ?ICS?lstr40_Click_FM_STM [6]
0x3E64	0x75426420 ;?ICS?lstr40_Click_FM_STM+0
0x3E68	0x0056 ;?ICS?lstr40_Click_FM_STM+4
; end of ?ICS?lstr40_Click_FM_STM
;,0 :: _initBlock_28 [22]
; Containing: ?ICS?lstr41_Click_FM_STM [17]
;             ?ICS?lstr42_Click_FM_STM [5]
0x3E6A	0x656E7574 ;_initBlock_28+0 : ?ICS?lstr41_Click_FM_STM at 0x3E6A
0x3E6E	0x72662064 ;_initBlock_28+4
0x3E72	0x65757165 ;_initBlock_28+8
0x3E76	0x3A79636E ;_initBlock_28+12
0x3E7A	0x484D2000 ;_initBlock_28+16 : ?ICS?lstr42_Click_FM_STM at 0x3E7B
0x3E7E	0x007A ;_initBlock_28+20
; end of _initBlock_28
;Click_FM_STM.c,0 :: ?ICS?lstr23_Click_FM_STM [16]
0x3E80	0x74617473 ;?ICS?lstr23_Click_FM_STM+0
0x3E84	0x206E6F69 ;?ICS?lstr23_Click_FM_STM+4
0x3E88	0x75742031 ;?ICS?lstr23_Click_FM_STM+8
0x3E8C	0x0064656E ;?ICS?lstr23_Click_FM_STM+12
; end of ?ICS?lstr23_Click_FM_STM
;Click_FM_STM.c,0 :: ?ICS?lstr24_Click_FM_STM [6]
0x3E90	0x69737372 ;?ICS?lstr24_Click_FM_STM+0
0x3E94	0x003A ;?ICS?lstr24_Click_FM_STM+4
; end of ?ICS?lstr24_Click_FM_STM
;Click_FM_STM.c,0 :: ?ICS?lstr25_Click_FM_STM [6]
0x3E96	0x75426420 ;?ICS?lstr25_Click_FM_STM+0
0x3E9A	0x0056 ;?ICS?lstr25_Click_FM_STM+4
; end of ?ICS?lstr25_Click_FM_STM
;,0 :: _initBlock_32 [22]
; Containing: ?ICS?lstr26_Click_FM_STM [17]
;             ?ICS?lstr27_Click_FM_STM [5]
0x3E9C	0x656E7574 ;_initBlock_32+0 : ?ICS?lstr26_Click_FM_STM at 0x3E9C
0x3EA0	0x72662064 ;_initBlock_32+4
0x3EA4	0x65757165 ;_initBlock_32+8
0x3EA8	0x3A79636E ;_initBlock_32+12
0x3EAC	0x484D2000 ;_initBlock_32+16 : ?ICS?lstr27_Click_FM_STM at 0x3EAD
0x3EB0	0x007A ;_initBlock_32+20
; end of _initBlock_32
;Click_FM_STM.c,0 :: ?ICS?lstr43_Click_FM_STM [16]
0x3EB2	0x74617473 ;?ICS?lstr43_Click_FM_STM+0
0x3EB6	0x206E6F69 ;?ICS?lstr43_Click_FM_STM+4
0x3EBA	0x75742035 ;?ICS?lstr43_Click_FM_STM+8
0x3EBE	0x0064656E ;?ICS?lstr43_Click_FM_STM+12
; end of ?ICS?lstr43_Click_FM_STM
;Click_FM_STM.c,0 :: ?ICS?lstr44_Click_FM_STM [6]
0x3EC2	0x69737372 ;?ICS?lstr44_Click_FM_STM+0
0x3EC6	0x003A ;?ICS?lstr44_Click_FM_STM+4
; end of ?ICS?lstr44_Click_FM_STM
;Click_FM_STM.c,0 :: ?ICS?lstr45_Click_FM_STM [6]
0x3EC8	0x75426420 ;?ICS?lstr45_Click_FM_STM+0
0x3ECC	0x0056 ;?ICS?lstr45_Click_FM_STM+4
; end of ?ICS?lstr45_Click_FM_STM
;,0 :: _initBlock_36 [22]
; Containing: ?ICS?lstr46_Click_FM_STM [17]
;             ?ICS?lstr47_Click_FM_STM [5]
0x3ECE	0x656E7574 ;_initBlock_36+0 : ?ICS?lstr46_Click_FM_STM at 0x3ECE
0x3ED2	0x72662064 ;_initBlock_36+4
0x3ED6	0x65757165 ;_initBlock_36+8
0x3EDA	0x3A79636E ;_initBlock_36+12
0x3EDE	0x484D2000 ;_initBlock_36+16 : ?ICS?lstr47_Click_FM_STM at 0x3EDF
0x3EE2	0x007A ;_initBlock_36+20
; end of _initBlock_36
;Click_FM_STM.c,0 :: ?ICS?lstr3_Click_FM_STM [12]
0x3EE4	0x756C6F76 ;?ICS?lstr3_Click_FM_STM+0
0x3EE8	0x6420656D ;?ICS?lstr3_Click_FM_STM+4
0x3EEC	0x006E776F ;?ICS?lstr3_Click_FM_STM+8
; end of ?ICS?lstr3_Click_FM_STM
;,0 :: _initBlock_38 [56]
; Containing: ?ICS?lstr4_Click_FM_STM [11]
;             ?ICS?lstr5_Click_FM_STM [14]
;             ?ICS?lstr6_Click_FM_STM [6]
;             ?ICS?lstr7_Click_FM_STM [6]
;             ?ICS?lstr8_Click_FM_STM [19]
0x3EF0	0x756C6F76 ;_initBlock_38+0 : ?ICS?lstr4_Click_FM_STM at 0x3EF0
0x3EF4	0x6D20656D ;_initBlock_38+4
0x3EF8	0x73006E69 ;_initBlock_38+8 : ?ICS?lstr5_Click_FM_STM at 0x3EFB
0x3EFC	0x69746174 ;_initBlock_38+12
0x3F00	0x66206E6F ;_initBlock_38+16
0x3F04	0x646E756F ;_initBlock_38+20
0x3F08	0x73737200 ;_initBlock_38+24 : ?ICS?lstr6_Click_FM_STM at 0x3F09
0x3F0C	0x20003A69 ;_initBlock_38+28 : ?ICS?lstr7_Click_FM_STM at 0x3F0F
0x3F10	0x56754264 ;_initBlock_38+32
0x3F14	0x61686300 ;_initBlock_38+36 : ?ICS?lstr8_Click_FM_STM at 0x3F15
0x3F18	0x6C656E6E ;_initBlock_38+40
0x3F1C	0x65726620 ;_initBlock_38+44
0x3F20	0x6E657571 ;_initBlock_38+48
0x3F24	0x003A7963 ;_initBlock_38+52
; end of _initBlock_38
;,0 :: _initBlock_39 [26]
; Containing: ?ICS?lstr9_Click_FM_STM [5]
;             ?ICS?lstr1_Click_FM_STM [10]
;             ?ICS?lstr2_Click_FM_STM [11]
0x3F28	0x7A484D20 ;_initBlock_39+0 : ?ICS?lstr9_Click_FM_STM at 0x3F28
0x3F2C	0x6C6F7600 ;_initBlock_39+4 : ?ICS?lstr1_Click_FM_STM at 0x3F2D
0x3F30	0x20656D75 ;_initBlock_39+8
0x3F34	0x76007075 ;_initBlock_39+12 : ?ICS?lstr2_Click_FM_STM at 0x3F37
0x3F38	0x6D756C6F ;_initBlock_39+16
0x3F3C	0x616D2065 ;_initBlock_39+20
0x3F40	0x0078 ;_initBlock_39+24
; end of _initBlock_39
;,0 :: _initBlock_40 [33]
; Containing: ?ICS?lstr61_Click_FM_STM [17]
;             ?ICS?lstr60_Click_FM_STM [14]
;             ?ICS?lstr2___Lib_Conversions [2]
0x3F42	0x74737973 ;_initBlock_40+0 : ?ICS?lstr61_Click_FM_STM at 0x3F42
0x3F46	0x69206D65 ;_initBlock_40+4
0x3F4A	0x2074696E ;_initBlock_40+8
0x3F4E	0x656E6F64 ;_initBlock_40+12
0x3F52	0x6F727700 ;_initBlock_40+16 : ?ICS?lstr60_Click_FM_STM at 0x3F53
0x3F56	0x6320676E ;_initBlock_40+20
0x3F5A	0x616D6D6F ;_initBlock_40+24
0x3F5E	0x3000646E ;_initBlock_40+28 : ?ICS?lstr2___Lib_Conversions at 0x3F61
0x3F62	0x00 ;_initBlock_40+32
; end of _initBlock_40
;__Lib_GPIO_32F10x_Defs.c,726 :: __GPIO_MODULE_USART3_PD89 [108]
0x3F64	0x00000038 ;__GPIO_MODULE_USART3_PD89+0
0x3F68	0x00000039 ;__GPIO_MODULE_USART3_PD89+4
0x3F6C	0xFFFFFFFF ;__GPIO_MODULE_USART3_PD89+8
0x3F70	0x00000000 ;__GPIO_MODULE_USART3_PD89+12
0x3F74	0x00000000 ;__GPIO_MODULE_USART3_PD89+16
0x3F78	0x00000000 ;__GPIO_MODULE_USART3_PD89+20
0x3F7C	0x00000000 ;__GPIO_MODULE_USART3_PD89+24
0x3F80	0x00000000 ;__GPIO_MODULE_USART3_PD89+28
0x3F84	0x00000000 ;__GPIO_MODULE_USART3_PD89+32
0x3F88	0x00000000 ;__GPIO_MODULE_USART3_PD89+36
0x3F8C	0x00000000 ;__GPIO_MODULE_USART3_PD89+40
0x3F90	0x00000000 ;__GPIO_MODULE_USART3_PD89+44
0x3F94	0x00000000 ;__GPIO_MODULE_USART3_PD89+48
0x3F98	0x00000818 ;__GPIO_MODULE_USART3_PD89+52
0x3F9C	0x00000018 ;__GPIO_MODULE_USART3_PD89+56
0x3FA0	0x00000000 ;__GPIO_MODULE_USART3_PD89+60
0x3FA4	0x00000000 ;__GPIO_MODULE_USART3_PD89+64
0x3FA8	0x00000000 ;__GPIO_MODULE_USART3_PD89+68
0x3FAC	0x00000000 ;__GPIO_MODULE_USART3_PD89+72
0x3FB0	0x00000000 ;__GPIO_MODULE_USART3_PD89+76
0x3FB4	0x00000000 ;__GPIO_MODULE_USART3_PD89+80
0x3FB8	0x00000000 ;__GPIO_MODULE_USART3_PD89+84
0x3FBC	0x00000000 ;__GPIO_MODULE_USART3_PD89+88
0x3FC0	0x00000000 ;__GPIO_MODULE_USART3_PD89+92
0x3FC4	0x00000000 ;__GPIO_MODULE_USART3_PD89+96
0x3FC8	0x00000000 ;__GPIO_MODULE_USART3_PD89+100
0x3FCC	0x08140030 ;__GPIO_MODULE_USART3_PD89+104
; end of __GPIO_MODULE_USART3_PD89
;__Lib_GPIO_32F10x_Defs.c,696 :: __GPIO_MODULE_USART1_PA9_10 [108]
0x3FD0	0x00000009 ;__GPIO_MODULE_USART1_PA9_10+0
0x3FD4	0x0000000A ;__GPIO_MODULE_USART1_PA9_10+4
0x3FD8	0xFFFFFFFF ;__GPIO_MODULE_USART1_PA9_10+8
0x3FDC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+12
0x3FE0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+16
0x3FE4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+20
0x3FE8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+24
0x3FEC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+28
0x3FF0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+32
0x3FF4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+36
0x3FF8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+40
0x3FFC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+44
0x4000	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+48
0x4004	0x00000818 ;__GPIO_MODULE_USART1_PA9_10+52
0x4008	0x00000018 ;__GPIO_MODULE_USART1_PA9_10+56
0x400C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+60
0x4010	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+64
0x4014	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+68
0x4018	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+72
0x401C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+76
0x4020	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+80
0x4024	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+84
0x4028	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+88
0x402C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+92
0x4030	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+96
0x4034	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+100
0x4038	0x00000004 ;__GPIO_MODULE_USART1_PA9_10+104
; end of __GPIO_MODULE_USART1_PA9_10
;__Lib_GPIO_32F10x_Defs.c,711 :: __GPIO_MODULE_USART2_PD56 [108]
0x403C	0x00000035 ;__GPIO_MODULE_USART2_PD56+0
0x4040	0x00000036 ;__GPIO_MODULE_USART2_PD56+4
0x4044	0xFFFFFFFF ;__GPIO_MODULE_USART2_PD56+8
0x4048	0x00000000 ;__GPIO_MODULE_USART2_PD56+12
0x404C	0x00000000 ;__GPIO_MODULE_USART2_PD56+16
0x4050	0x00000000 ;__GPIO_MODULE_USART2_PD56+20
0x4054	0x00000000 ;__GPIO_MODULE_USART2_PD56+24
0x4058	0x00000000 ;__GPIO_MODULE_USART2_PD56+28
0x405C	0x00000000 ;__GPIO_MODULE_USART2_PD56+32
0x4060	0x00000000 ;__GPIO_MODULE_USART2_PD56+36
0x4064	0x00000000 ;__GPIO_MODULE_USART2_PD56+40
0x4068	0x00000000 ;__GPIO_MODULE_USART2_PD56+44
0x406C	0x00000000 ;__GPIO_MODULE_USART2_PD56+48
0x4070	0x00000818 ;__GPIO_MODULE_USART2_PD56+52
0x4074	0x00000018 ;__GPIO_MODULE_USART2_PD56+56
0x4078	0x00000000 ;__GPIO_MODULE_USART2_PD56+60
0x407C	0x00000000 ;__GPIO_MODULE_USART2_PD56+64
0x4080	0x00000000 ;__GPIO_MODULE_USART2_PD56+68
0x4084	0x00000000 ;__GPIO_MODULE_USART2_PD56+72
0x4088	0x00000000 ;__GPIO_MODULE_USART2_PD56+76
0x408C	0x00000000 ;__GPIO_MODULE_USART2_PD56+80
0x4090	0x00000000 ;__GPIO_MODULE_USART2_PD56+84
0x4094	0x00000000 ;__GPIO_MODULE_USART2_PD56+88
0x4098	0x00000000 ;__GPIO_MODULE_USART2_PD56+92
0x409C	0x00000000 ;__GPIO_MODULE_USART2_PD56+96
0x40A0	0x00000000 ;__GPIO_MODULE_USART2_PD56+100
0x40A4	0x08000008 ;__GPIO_MODULE_USART2_PD56+104
; end of __GPIO_MODULE_USART2_PD56
;__Lib_GPIO_32F10x_Defs.c,680 :: __GPIO_MODULE_I2C1_PB67 [108]
0x40A8	0x00000016 ;__GPIO_MODULE_I2C1_PB67+0
0x40AC	0x00000017 ;__GPIO_MODULE_I2C1_PB67+4
0x40B0	0xFFFFFFFF ;__GPIO_MODULE_I2C1_PB67+8
0x40B4	0x00000000 ;__GPIO_MODULE_I2C1_PB67+12
0x40B8	0x00000000 ;__GPIO_MODULE_I2C1_PB67+16
0x40BC	0x00000000 ;__GPIO_MODULE_I2C1_PB67+20
0x40C0	0x00000000 ;__GPIO_MODULE_I2C1_PB67+24
0x40C4	0x00000000 ;__GPIO_MODULE_I2C1_PB67+28
0x40C8	0x00000000 ;__GPIO_MODULE_I2C1_PB67+32
0x40CC	0x00000000 ;__GPIO_MODULE_I2C1_PB67+36
0x40D0	0x00000000 ;__GPIO_MODULE_I2C1_PB67+40
0x40D4	0x00000000 ;__GPIO_MODULE_I2C1_PB67+44
0x40D8	0x00000000 ;__GPIO_MODULE_I2C1_PB67+48
0x40DC	0x00000828 ;__GPIO_MODULE_I2C1_PB67+52
0x40E0	0x00000828 ;__GPIO_MODULE_I2C1_PB67+56
0x40E4	0x00000000 ;__GPIO_MODULE_I2C1_PB67+60
0x40E8	0x00000000 ;__GPIO_MODULE_I2C1_PB67+64
0x40EC	0x00000000 ;__GPIO_MODULE_I2C1_PB67+68
0x40F0	0x00000000 ;__GPIO_MODULE_I2C1_PB67+72
0x40F4	0x00000000 ;__GPIO_MODULE_I2C1_PB67+76
0x40F8	0x00000000 ;__GPIO_MODULE_I2C1_PB67+80
0x40FC	0x00000000 ;__GPIO_MODULE_I2C1_PB67+84
0x4100	0x00000000 ;__GPIO_MODULE_I2C1_PB67+88
0x4104	0x00000000 ;__GPIO_MODULE_I2C1_PB67+92
0x4108	0x00000000 ;__GPIO_MODULE_I2C1_PB67+96
0x410C	0x00000000 ;__GPIO_MODULE_I2C1_PB67+100
0x4110	0x00000002 ;__GPIO_MODULE_I2C1_PB67+104
; end of __GPIO_MODULE_I2C1_PB67
;easymx_v7_STM32F107VC.c,47 :: __MIKROBUS1_GPIO [96]
0x4114	0x00001AB5 ;__MIKROBUS1_GPIO+0
0x4118	0x00001AC1 ;__MIKROBUS1_GPIO+4
0x411C	0x00001B15 ;__MIKROBUS1_GPIO+8
0x4120	0x00001B09 ;__MIKROBUS1_GPIO+12
0x4124	0x00001AFD ;__MIKROBUS1_GPIO+16
0x4128	0x00001B39 ;__MIKROBUS1_GPIO+20
0x412C	0x00001B2D ;__MIKROBUS1_GPIO+24
0x4130	0x00001B21 ;__MIKROBUS1_GPIO+28
0x4134	0x00001AF1 ;__MIKROBUS1_GPIO+32
0x4138	0x00001AA9 ;__MIKROBUS1_GPIO+36
0x413C	0x00001AE5 ;__MIKROBUS1_GPIO+40
0x4140	0x00001AD9 ;__MIKROBUS1_GPIO+44
0x4144	0xFFFFFFFF ;__MIKROBUS1_GPIO+48
0x4148	0xFFFFFFFF ;__MIKROBUS1_GPIO+52
0x414C	0xFFFFFFFF ;__MIKROBUS1_GPIO+56
0x4150	0xFFFFFFFF ;__MIKROBUS1_GPIO+60
0x4154	0xFFFFFFFF ;__MIKROBUS1_GPIO+64
0x4158	0xFFFFFFFF ;__MIKROBUS1_GPIO+68
0x415C	0xFFFFFFFF ;__MIKROBUS1_GPIO+72
0x4160	0xFFFFFFFF ;__MIKROBUS1_GPIO+76
0x4164	0xFFFFFFFF ;__MIKROBUS1_GPIO+80
0x4168	0xFFFFFFFF ;__MIKROBUS1_GPIO+84
0x416C	0xFFFFFFFF ;__MIKROBUS1_GPIO+88
0x4170	0xFFFFFFFF ;__MIKROBUS1_GPIO+92
; end of __MIKROBUS1_GPIO
;Click_FM_STM.c,0 :: ?ICS_tuneFreq [4]
0x4174	0x42D60000 ;?ICS_tuneFreq+0
; end of ?ICS_tuneFreq
;Click_FM_STM.c,0 :: ?ICS?lstr10_Click_FM_STM [14]
0x4178	0x656E7574 ;?ICS?lstr10_Click_FM_STM+0
0x417C	0x6D6F6320 ;?ICS?lstr10_Click_FM_STM+4
0x4180	0x74656C70 ;?ICS?lstr10_Click_FM_STM+8
0x4184	0x0065 ;?ICS?lstr10_Click_FM_STM+12
; end of ?ICS?lstr10_Click_FM_STM
;Click_FM_STM.c,0 :: ?ICS?lstr11_Click_FM_STM [6]
0x4186	0x69737372 ;?ICS?lstr11_Click_FM_STM+0
0x418A	0x003A ;?ICS?lstr11_Click_FM_STM+4
; end of ?ICS?lstr11_Click_FM_STM
;Click_FM_STM.c,0 :: ?ICS?lstr12_Click_FM_STM [6]
0x418C	0x75426420 ;?ICS?lstr12_Click_FM_STM+0
0x4190	0x0056 ;?ICS?lstr12_Click_FM_STM+4
; end of ?ICS?lstr12_Click_FM_STM
;,0 :: _initBlock_50 [22]
; Containing: ?ICS?lstr13_Click_FM_STM [17]
;             ?ICS?lstr14_Click_FM_STM [5]
0x4192	0x656E7574 ;_initBlock_50+0 : ?ICS?lstr13_Click_FM_STM at 0x4192
0x4196	0x72662064 ;_initBlock_50+4
0x419A	0x65757165 ;_initBlock_50+8
0x419E	0x3A79636E ;_initBlock_50+12
0x41A2	0x484D2000 ;_initBlock_50+16 : ?ICS?lstr14_Click_FM_STM at 0x41A3
0x41A6	0x007A ;_initBlock_50+20
; end of _initBlock_50
;,0 :: _initBlock_51 [53]
; Containing: ?ICS?lstr15_Click_FM_STM [29]
;             ?ICS?lstr1___Lib_Conversions [4]
;             ?ICS?lstr3___Lib_Conversions [4]
;             APBAHBPrescTable [16]
0x41A8	0x71657266 ;_initBlock_51+0 : ?ICS?lstr15_Click_FM_STM at 0x41A8
0x41AC	0x636E6575 ;_initBlock_51+4
0x41B0	0x6F6E2079 ;_initBlock_51+8
0x41B4	0x6E692074 ;_initBlock_51+12
0x41B8	0x6C617620 ;_initBlock_51+16
0x41BC	0x72206469 ;_initBlock_51+20
0x41C0	0x65676E61 ;_initBlock_51+24
0x41C4	0x4E614E00 ;_initBlock_51+28 : ?ICS?lstr1___Lib_Conversions at 0x41C5
0x41C8	0x464E4900 ;_initBlock_51+32 : ?ICS?lstr3___Lib_Conversions at 0x41C9
0x41CC	0x00000000 ;_initBlock_51+36 : APBAHBPrescTable at 0x41CD
0x41D0	0x03020100 ;_initBlock_51+40
0x41D4	0x03020104 ;_initBlock_51+44
0x41D8	0x08070604 ;_initBlock_51+48
0x41DC	0x09 ;_initBlock_51+52
; end of _initBlock_51
;__Lib_I2C_12.c,0 :: ?ICS__Lib_I2C_12__I2C1_TIMEOUT [4]
0x41E0	0x00000000 ;?ICS__Lib_I2C_12__I2C1_TIMEOUT+0
; end of ?ICS__Lib_I2C_12__I2C1_TIMEOUT
;__Lib_I2C_12.c,0 :: ?ICS__Lib_I2C_12__I2C2_TIMEOUT [4]
0x41E4	0x00000000 ;?ICS__Lib_I2C_12__I2C2_TIMEOUT+0
; end of ?ICS__Lib_I2C_12__I2C2_TIMEOUT
;__Lib_I2C_12.c,0 :: ?ICS__Lib_I2C_12__I2Cx_TIMEOUT [4]
0x41E8	0x00000000 ;?ICS__Lib_I2C_12__I2Cx_TIMEOUT+0
; end of ?ICS__Lib_I2C_12__I2Cx_TIMEOUT
;easymx_v7_STM32F107VC.c,15 :: __MIKROBUS1_I2C [12]
0x41EC	0x00000CA9 ;__MIKROBUS1_I2C+0
0x41F0	0x00000CF1 ;__MIKROBUS1_I2C+4
0x41F4	0x00000D75 ;__MIKROBUS1_I2C+8
; end of __MIKROBUS1_I2C
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0150      [26]    _I2Cx_Get_Status
0x016C      [24]    _I2Cx_Is_Idle
0x0184      [12]    _Get_Fosc_kHz
0x0190     [152]    __Lib_GPIO_32F10x_GPIO_Configure_Pin
0x0228     [144]    __Lib_I2C_12_I2Cx_Wait_For_Idle
0x02B8      [36]    _ChekXForEvent
0x02DC      [22]    __Lib_UART_123_45_UARTx_Read
0x02F4     [408]    _I2Cx_Write
0x048C     [272]    _GPIO_Alternate_Function_Enable
0x059C    [1116]    _I2Cx_Read
0x09F8     [168]    _RCC_GetClocksFrequency
0x0AA0     [204]    _I2Cx_Start
0x0B6C     [140]    _GPIO_Clk_Enable
0x0BF8      [12]    __Lib_UART_123_45_UARTx_Data_Ready
0x0C04      [12]    __Lib_UART_123_45_UARTx_Tx_Idle
0x0C10      [24]    _UART1_Data_Ready
0x0C28      [24]    _UART1_Tx_Idle
0x0C40      [36]    _I2C2_Write
0x0C64      [66]    __FloatToSignedIntegral
0x0CA8      [24]    _I2C1_Start
0x0CC0      [24]    _UART1_Read
0x0CD8      [24]    _I2C2_Start
0x0CF0      [36]    _I2C1_Write
0x0D14      [24]    _UART2_Read
0x0D2C      [24]    _UART5_Read
0x0D44      [24]    _UART4_Tx_Idle
0x0D5C      [24]    _UART4_Data_Ready
0x0D74      [36]    _I2C1_Read
0x0D98      [24]    _UART5_Tx_Idle
0x0DB0      [24]    _UART5_Data_Ready
0x0DC8      [24]    _UART4_Read
0x0DE0      [24]    _UART3_Read
0x0DF8      [24]    _UART2_Tx_Idle
0x0E10      [24]    _UART2_Data_Ready
0x0E28      [24]    _UART3_Tx_Idle
0x0E40      [36]    _I2C2_Read
0x0E64      [24]    _UART3_Data_Ready
0x0E7C     [500]    _GPIO_Config
0x1070      [30]    __Lib_UART_123_45_UARTx_Write
0x1090     [412]    _I2Cx_Init_Advanced
0x122C     [580]    __Lib_UART_123_45_UARTx_Init_Advanced
0x1470      [44]    __fm_driver_hal_i2cStart
0x149C      [40]    _UART2_Init_Advanced
0x14C8      [24]    _Delay_10ms
0x14E0      [12]    easymx_v7_STM32F107VC__setSDA_2
0x14EC      [40]    _UART3_Init_Advanced
0x1514      [40]    _UART1_Init_Advanced
0x153C      [28]    _UART3_Write
0x1558      [28]    _UART4_Write
0x1574      [28]    _UART2_Write
0x1590      [28]    _UART1_Write
0x15AC      [28]    _UART5_Write
0x15C8     [104]    __Compare_FP
0x1630      [40]    _strcpy
0x1658     [254]    __Add_FP
0x1758      [70]    __FloatToUnsignedIntegral
0x17A0     [164]    __Div_FP
0x1844     [258]    __Sub_FP
0x1948     [138]    __Mul_FP
0x19D4      [36]    __fm_driver_hal_i2cRead
0x19F8      [28]    _GPIO_Digital_Output
0x1A14      [28]    _I2C1_Init_Advanced
0x1A30      [44]    __UnsignedIntegralToFloat
0x1A5C      [40]    __fm_driver_hal_i2cWrite
0x1A84      [24]    _GPIO_Digital_Input
0x1A9C      [12]    easymx_v7_STM32F107VC__setSCL_2
0x1AA8      [12]    easymx_v7_STM32F107VC__setTX_1
0x1AB4      [12]    easymx_v7_STM32F107VC__setAN_1
0x1AC0      [12]    easymx_v7_STM32F107VC__setRST_1
0x1ACC      [12]    easymx_v7_STM32F107VC__setAN_2
0x1AD8      [12]    easymx_v7_STM32F107VC__setSDA_1
0x1AE4      [12]    easymx_v7_STM32F107VC__setSCL_1
0x1AF0      [12]    easymx_v7_STM32F107VC__setRX_1
0x1AFC      [12]    easymx_v7_STM32F107VC__setMISO_1
0x1B08      [12]    easymx_v7_STM32F107VC__setSCK_1
0x1B14      [12]    easymx_v7_STM32F107VC__setCS_1
0x1B20      [12]    easymx_v7_STM32F107VC__setINT_1
0x1B2C      [12]    easymx_v7_STM32F107VC__setPWM_1
0x1B38      [12]    easymx_v7_STM32F107VC__setMOSI_1
0x1B44      [12]    easymx_v7_STM32F107VC__setMOSI_2
0x1B50      [12]    easymx_v7_STM32F107VC__setMISO_2
0x1B5C      [12]    easymx_v7_STM32F107VC__setSCK_2
0x1B68      [12]    easymx_v7_STM32F107VC__setINT_2
0x1B74      [12]    easymx_v7_STM32F107VC__setRX_2
0x1B80      [12]    easymx_v7_STM32F107VC__setPWM_2
0x1B8C      [12]    easymx_v7_STM32F107VC__setCS_2
0x1B98      [12]    easymx_v7_STM32F107VC__setTX_2
0x1BA4      [12]    easymx_v7_STM32F107VC__setRST_2
0x1BB0      [84]    _fm_tuneChannel
0x1C04      [44]    _fm_endTune
0x1C30     [268]    _fm_tune
0x1D40      [24]    _Delay_1sec
0x1D58      [80]    _fm_volumeUp
0x1DA8      [44]    _fm_muteEnable
0x1DD4      [80]    _fm_volumeDown
0x1E24      [44]    _fm_muteDisable
0x1E50      [56]    __fm_driver_hal_gpioMap
0x1E88      [52]    __fm_driver_fm_modeSelect
0x1EBC      [34]    _fm_getChannel
0x1EE0      [80]    _WordToStr
0x1F30     [500]    _FloatToStr
0x2124      [44]    _fm_seek
0x2150      [40]    __fm_driver_hal_i2cMap
0x2178      [44]    _fm_endSeek
0x21A4     [168]    _fm_getChannelFrequency
0x224C      [32]    _fm_getReceivedSignalStrengthIndicator
0x226C     [284]    _fm_fineTuneDown
0x2388      [56]    easymx_v7_STM32F107VC__log_init1
0x23C0      [32]    easymx_v7_STM32F107VC__i2cInit_2
0x23E0     [440]    easymx_v7_STM32F107VC__gpioInit_2
0x2598      [32]    easymx_v7_STM32F107VC__i2cInit_1
0x25B8      [56]    easymx_v7_STM32F107VC__log_init2
0x25F0     [168]    _fm_readRegisters
0x2698      [24]    _Delay_100ms
0x26B0      [32]    easymx_v7_STM32F107VC__log_write
0x26D0      [56]    easymx_v7_STM32F107VC__log_initUartA
0x2708      [56]    easymx_v7_STM32F107VC__log_initUartB
0x2740     [440]    easymx_v7_STM32F107VC__gpioInit_1
0x28F8      [22]    _fm_setBits
0x2910      [92]    _fm_writeRegisters
0x296C     [284]    _fm_fineTuneUp
0x2A88      [36]    _fm_i2cDriverInit
0x2AAC      [28]    _fm_caseWrongCommand
0x2AC8     [200]    _fm_caseStation3
0x2B90     [200]    _fm_caseStation4
0x2C58     [200]    _fm_caseStation2
0x2D20     [200]    _fm_caseStation5
0x2DE8     [240]    _fm_caseMemorize
0x2ED8     [228]    _fm_caseTuneDown
0x2FBC      [80]    _fm_caseMute
0x3010     [200]    _fm_caseStation1
0x30D8     [228]    _fm_caseTuneUp
0x31BC      [70]    _fm_setVolume
0x3204     [458]    _fm_basicSettings
0x33D0      [70]    _fm_setSeekThreshold
0x3418      [80]    _fm_setSnrThreshold
0x3468      [70]    _mikrobus_logInit
0x34B0     [112]    _mikrobus_logWrite
0x3520      [66]    _mikrobus_gpioInit
0x3564      [48]    _mikrobus_i2cInit
0x3594      [74]    _fm_setSeekImpulseDetectionThreshold
0x35E0     [204]    _fm_caseSeek
0x36B0     [240]    _fm_caseTune
0x37A0     [144]    _fm_powerup
0x3830      [56]    _fm_casePlus
0x3868      [56]    _fm_caseMinus
0x38A0     [124]    _applicationInit
0x391C     [108]    __Lib_System_105_107_SystemClockSetDefault
0x3988      [20]    ___CC2DW
0x399C     [252]    _applicationTask
0x3A98      [58]    ___FillZeros
0x3AD8     [112]    _systemInit
0x3B48       [8]    ___GenExcept
0x3B50      [20]    __Lib_System_105_107_InitialSetUpFosc
0x3B64      [32]    _main
0x3B84     [324]    __Lib_System_105_107_InitialSetUpRCCRCC2
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x20000000       [8]    ?lstr48_Click_FM_STM
0x20000008       [6]    ?lstr49_Click_FM_STM
0x2000000E       [6]    ?lstr50_Click_FM_STM
0x20000014      [17]    ?lstr51_Click_FM_STM
0x20000025       [5]    ?lstr52_Click_FM_STM
0x2000002A      [25]    ?lstr53_Click_FM_STM
0x20000043       [1]    _mute_
0x20000044      [13]    ?lstr21_Click_FM_STM
0x20000051      [14]    ?lstr22_Click_FM_STM
0x2000005F       [1]    _memory_
0x20000060      [20]    ?lstr16_Click_FM_STM
0x20000074      [20]    ?lstr17_Click_FM_STM
0x20000088      [20]    ?lstr18_Click_FM_STM
0x2000009C      [20]    ?lstr19_Click_FM_STM
0x200000B0      [20]    ?lstr20_Click_FM_STM
0x200000C4       [1]    _volumeLevel_
0x200000C5       [1]    _snrThreshold_
0x200000C6       [2]    _seekThreshold_
0x200000C8       [1]    _impulseDetectionThreshold_
0x200000C9      [22]    ?lstr62_Click_FM_STM
0x200000DF       [8]    ?lstr54_Click_FM_STM
0x200000E7       [6]    ?lstr55_Click_FM_STM
0x200000ED       [6]    ?lstr56_Click_FM_STM
0x200000F3      [17]    ?lstr57_Click_FM_STM
0x20000104       [5]    ?lstr58_Click_FM_STM
0x20000109      [25]    ?lstr59_Click_FM_STM
0x20000122      [16]    ?lstr33_Click_FM_STM
0x20000132       [6]    ?lstr34_Click_FM_STM
0x20000138       [6]    ?lstr35_Click_FM_STM
0x2000013E      [17]    ?lstr36_Click_FM_STM
0x2000014F       [5]    ?lstr37_Click_FM_STM
0x20000154      [16]    ?lstr28_Click_FM_STM
0x20000164       [6]    ?lstr29_Click_FM_STM
0x2000016A       [6]    ?lstr30_Click_FM_STM
0x20000170      [17]    ?lstr31_Click_FM_STM
0x20000181       [5]    ?lstr32_Click_FM_STM
0x20000186      [16]    ?lstr38_Click_FM_STM
0x20000196       [6]    ?lstr39_Click_FM_STM
0x2000019C       [6]    ?lstr40_Click_FM_STM
0x200001A2      [17]    ?lstr41_Click_FM_STM
0x200001B3       [5]    ?lstr42_Click_FM_STM
0x200001B8      [16]    ?lstr23_Click_FM_STM
0x200001C8       [6]    ?lstr24_Click_FM_STM
0x200001CE       [6]    ?lstr25_Click_FM_STM
0x200001D4      [17]    ?lstr26_Click_FM_STM
0x200001E5       [5]    ?lstr27_Click_FM_STM
0x200001EA      [16]    ?lstr43_Click_FM_STM
0x200001FA       [6]    ?lstr44_Click_FM_STM
0x20000200       [6]    ?lstr45_Click_FM_STM
0x20000206      [17]    ?lstr46_Click_FM_STM
0x20000217       [5]    ?lstr47_Click_FM_STM
0x2000021C      [12]    ?lstr3_Click_FM_STM
0x20000228      [11]    ?lstr4_Click_FM_STM
0x20000233      [14]    ?lstr5_Click_FM_STM
0x20000241       [6]    ?lstr6_Click_FM_STM
0x20000247       [6]    ?lstr7_Click_FM_STM
0x2000024D      [19]    ?lstr8_Click_FM_STM
0x20000260       [5]    ?lstr9_Click_FM_STM
0x20000265      [10]    ?lstr1_Click_FM_STM
0x2000026F      [11]    ?lstr2_Click_FM_STM
0x2000027A      [17]    ?lstr61_Click_FM_STM
0x2000028B      [14]    ?lstr60_Click_FM_STM
0x20000299       [2]    ?lstr2___Lib_Conversions
0x2000029B       [1]    _errorFlag_
0x2000029C       [4]    _tuneFreq
0x200002A0      [14]    ?lstr10_Click_FM_STM
0x200002AE       [6]    ?lstr11_Click_FM_STM
0x200002B4       [6]    ?lstr12_Click_FM_STM
0x200002BA      [17]    ?lstr13_Click_FM_STM
0x200002CB       [5]    ?lstr14_Click_FM_STM
0x200002D0      [29]    ?lstr15_Click_FM_STM
0x200002ED       [4]    ?lstr1___Lib_Conversions
0x200002F1       [4]    ?lstr3___Lib_Conversions
0x200002F5       [1]    _dataReady_
0x200002F6       [2]    _receivedSignalStrengthIndicator
0x200002F8       [4]    __Lib_I2C_12__I2C1_TIMEOUT
0x200002FC       [4]    __Lib_I2C_12__I2C2_TIMEOUT
0x20000300       [4]    __Lib_I2C_12__I2Cx_TIMEOUT
0x20000304       [4]    _channelFrequency_
0x20000308       [2]    _stationFrequency_
0x2000030A      [50]    _text
0x2000033C       [2]    _station1_
0x2000033E       [2]    _station2_
0x20000340       [2]    _station3_
0x20000342       [2]    _station4_
0x20000344       [2]    _station5_
0x20000346       [1]    _receivedData_
0x20000347       [1]    __fm_driver__slaveAddress
0x20000348       [4]    _UART_Rdy_Ptr
0x2000034C       [4]    _UART_Rd_Ptr
0x20000350       [4]    _tunedFrequency_
0x20000354       [4]    _logger
0x20000358       [4]    __fm_driver_fp_i2cWrite
0x2000035C       [4]    __fm_driver_fp_i2cRead
0x20000360       [4]    __fm_driver_fp_i2cStart
0x20000364       [4]    __fm_driver_hal_gpio_anGet
0x20000368       [4]    __fm_driver_hal_gpio_intGet
0x2000036C       [4]    __fm_driver_hal_gpio_csSet
0x20000370       [4]    __fm_driver_hal_gpio_rstSet
0x20000374       [4]    ___System_CLOCK_IN_KHZ
0x20000378       [4]    _I2Cx_Timeout_Ptr
0x2000037C       [4]    _I2C1_Timeout_Ptr
0x20000380       [4]    _I2C2_Timeout_Ptr
0x20000384       [4]    _I2C_Start_Ptr
0x20000388       [4]    _I2C_Read_Ptr
0x2000038C       [4]    _I2C_Write_Ptr
0x20000390       [4]    _UART_Wr_Ptr
0x20000394       [4]    _UART_Tx_Idle_Ptr
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x14C4       [4]    __Lib_System_105_107_ADCPrescTable
0x1D3C       [4]    __FM_I2C_CFG
0x3CC8       [8]    ?ICS?lstr48_Click_FM_STM
0x3CD0       [6]    ?ICS?lstr49_Click_FM_STM
0x3CD6       [6]    ?ICS?lstr50_Click_FM_STM
0x3CDC      [17]    ?ICS?lstr51_Click_FM_STM
0x3CED       [5]    ?ICS?lstr52_Click_FM_STM
0x3CF2      [25]    ?ICS?lstr53_Click_FM_STM
0x3D0B       [1]    ?ICS_mute_
0x3D0C      [13]    ?ICS?lstr21_Click_FM_STM
0x3D19      [14]    ?ICS?lstr22_Click_FM_STM
0x3D27       [1]    ?ICS_memory_
0x3D28      [20]    ?ICS?lstr16_Click_FM_STM
0x3D3C      [20]    ?ICS?lstr17_Click_FM_STM
0x3D50      [20]    ?ICS?lstr18_Click_FM_STM
0x3D64      [20]    ?ICS?lstr19_Click_FM_STM
0x3D78      [20]    ?ICS?lstr20_Click_FM_STM
0x3D8C       [1]    ?ICS_volumeLevel_
0x3D8D       [1]    ?ICS_snrThreshold_
0x3D8E       [2]    ?ICS_seekThreshold_
0x3D90       [1]    ?ICS_impulseDetectionThreshold_
0x3D91      [22]    ?ICS?lstr62_Click_FM_STM
0x3DA7       [8]    ?ICS?lstr54_Click_FM_STM
0x3DAF       [6]    ?ICS?lstr55_Click_FM_STM
0x3DB5       [6]    ?ICS?lstr56_Click_FM_STM
0x3DBB      [17]    ?ICS?lstr57_Click_FM_STM
0x3DCC       [5]    ?ICS?lstr58_Click_FM_STM
0x3DD1      [25]    ?ICS?lstr59_Click_FM_STM
0x3DEA      [16]    ?ICS?lstr33_Click_FM_STM
0x3DFA       [6]    ?ICS?lstr34_Click_FM_STM
0x3E00       [6]    ?ICS?lstr35_Click_FM_STM
0x3E06      [17]    ?ICS?lstr36_Click_FM_STM
0x3E17       [5]    ?ICS?lstr37_Click_FM_STM
0x3E1C      [16]    ?ICS?lstr28_Click_FM_STM
0x3E2C       [6]    ?ICS?lstr29_Click_FM_STM
0x3E32       [6]    ?ICS?lstr30_Click_FM_STM
0x3E38      [17]    ?ICS?lstr31_Click_FM_STM
0x3E49       [5]    ?ICS?lstr32_Click_FM_STM
0x3E4E      [16]    ?ICS?lstr38_Click_FM_STM
0x3E5E       [6]    ?ICS?lstr39_Click_FM_STM
0x3E64       [6]    ?ICS?lstr40_Click_FM_STM
0x3E6A      [17]    ?ICS?lstr41_Click_FM_STM
0x3E7B       [5]    ?ICS?lstr42_Click_FM_STM
0x3E80      [16]    ?ICS?lstr23_Click_FM_STM
0x3E90       [6]    ?ICS?lstr24_Click_FM_STM
0x3E96       [6]    ?ICS?lstr25_Click_FM_STM
0x3E9C      [17]    ?ICS?lstr26_Click_FM_STM
0x3EAD       [5]    ?ICS?lstr27_Click_FM_STM
0x3EB2      [16]    ?ICS?lstr43_Click_FM_STM
0x3EC2       [6]    ?ICS?lstr44_Click_FM_STM
0x3EC8       [6]    ?ICS?lstr45_Click_FM_STM
0x3ECE      [17]    ?ICS?lstr46_Click_FM_STM
0x3EDF       [5]    ?ICS?lstr47_Click_FM_STM
0x3EE4      [12]    ?ICS?lstr3_Click_FM_STM
0x3EF0      [11]    ?ICS?lstr4_Click_FM_STM
0x3EFB      [14]    ?ICS?lstr5_Click_FM_STM
0x3F09       [6]    ?ICS?lstr6_Click_FM_STM
0x3F0F       [6]    ?ICS?lstr7_Click_FM_STM
0x3F15      [19]    ?ICS?lstr8_Click_FM_STM
0x3F28       [5]    ?ICS?lstr9_Click_FM_STM
0x3F2D      [10]    ?ICS?lstr1_Click_FM_STM
0x3F37      [11]    ?ICS?lstr2_Click_FM_STM
0x3F42      [17]    ?ICS?lstr61_Click_FM_STM
0x3F53      [14]    ?ICS?lstr60_Click_FM_STM
0x3F61       [2]    ?ICS?lstr2___Lib_Conversions
0x3F64     [108]    __GPIO_MODULE_USART3_PD89
0x3FD0     [108]    __GPIO_MODULE_USART1_PA9_10
0x403C     [108]    __GPIO_MODULE_USART2_PD56
0x40A8     [108]    __GPIO_MODULE_I2C1_PB67
0x4114      [96]    __MIKROBUS1_GPIO
0x4174       [4]    ?ICS_tuneFreq
0x4178      [14]    ?ICS?lstr10_Click_FM_STM
0x4186       [6]    ?ICS?lstr11_Click_FM_STM
0x418C       [6]    ?ICS?lstr12_Click_FM_STM
0x4192      [17]    ?ICS?lstr13_Click_FM_STM
0x41A3       [5]    ?ICS?lstr14_Click_FM_STM
0x41A8      [29]    ?ICS?lstr15_Click_FM_STM
0x41C5       [4]    ?ICS?lstr1___Lib_Conversions
0x41C9       [4]    ?ICS?lstr3___Lib_Conversions
0x41CD      [16]    __Lib_System_105_107_APBAHBPrescTable
0x41E0       [4]    ?ICS__Lib_I2C_12__I2C1_TIMEOUT
0x41E4       [4]    ?ICS__Lib_I2C_12__I2C2_TIMEOUT
0x41E8       [4]    ?ICS__Lib_I2C_12__I2Cx_TIMEOUT
0x41EC      [12]    __MIKROBUS1_I2C
